{"version":3,"sources":["webpack:///./src/apps/ART/services/adherence_service.ts","webpack:///./src/utils/Arrays.ts","webpack:///./src/apps/ART/services/lab_order_service.ts","webpack:///./src/services/person_attributes_service.ts","webpack:///./src/services/patient_registration_service.ts","webpack:///./src/services/relations_service.ts","webpack:///./src/apps/ART/services/htn_service.ts","webpack:///./src/apps/EMC/Components/tables/VisitsSummary.vue?f66c","webpack:///./src/services/patient_lab_result_service.ts","webpack:///./src/apps/EMC/utils/form.ts","webpack:///./src/apps/ART/services/stock_service.ts","webpack:///./src/apps/ART/services/dispensation_service.ts","webpack:///./src/apps/ART/services/reception_service.ts","webpack:///./src/services/drug_order_service.ts","webpack:///./src/utils/ActionSheetHelpers/VoidReason.ts","webpack:///./src/components/DataViews/DrillTableModal.vue?e567","webpack:///./src/components/DataViews/DrillTableModal.vue","webpack:///./src/components/DataViews/DrillTableModal.vue?7a9b","webpack:///./src/apps/ART/services/appointment_service.ts","webpack:///./src/apps/EMC/views/Mastercard.vue?3a3f","webpack:///./src/apps/EMC/Components/tables/VisitsSummary.vue?1e68","webpack:///./src/apps/EMC/Components/modals/ViralLoadResult.vue?d4f6","webpack:///./src/apps/EMC/Components/modals/ViralLoadResult.vue","webpack:///./src/apps/EMC/Components/modals/ViralLoadResult.vue?887d","webpack:///./src/apps/EMC/Components/modals/OutcomeStatus.vue?3ff5","webpack:///./src/apps/EMC/Components/tables/OutcomesTable.vue?74aa","webpack:///./src/apps/EMC/Components/tables/OutcomesTable.vue","webpack:///./src/apps/EMC/Components/tables/OutcomesTable.vue?e442","webpack:///./src/apps/EMC/Components/EnrollmentForm.vue?9722","webpack:///./src/apps/EMC/Components/EnrollmentForm.vue","webpack:///./src/apps/EMC/Components/EnrollmentForm.vue?4be1","webpack:///./src/apps/EMC/Components/OutcomeForm.vue?f994","webpack:///./src/apps/EMC/Components/OutcomeForm.vue","webpack:///./src/apps/EMC/Components/OutcomeForm.vue?6644","webpack:///./src/apps/EMC/Components/modals/OutcomeStatus.vue","webpack:///./src/apps/EMC/Components/modals/OutcomeStatus.vue?0dcc","webpack:///./src/apps/EMC/Components/modals/PatientVisit.vue?9b8c","webpack:///./src/services/patient_observation_service.ts","webpack:///./src/apps/EMC/Components/modals/PatientVisit.vue","webpack:///./src/apps/EMC/Components/modals/PatientVisit.vue?f13b","webpack:///./src/apps/EMC/Components/tables/VisitsSummary.vue","webpack:///./src/apps/EMC/Components/tables/VisitsSummary.vue?f28b","webpack:///./src/apps/EMC/Components/InformationHeader.vue?9ef7","webpack:///./src/apps/EMC/Components/InformationHeader.vue","webpack:///./src/apps/EMC/Components/InformationHeader.vue?d582","webpack:///./src/apps/EMC/Components/modals/PatientDemographics.vue?28d4","webpack:///./src/apps/EMC/Components/modals/PatientDemographics.vue","webpack:///./src/apps/EMC/Components/modals/PatientDemographics.vue?9f15","webpack:///./src/apps/EMC/Components/modals/GuardianDemographics.vue?a42e","webpack:///./src/apps/EMC/Components/modals/GuardianDemographics.vue","webpack:///./src/apps/EMC/Components/modals/GuardianDemographics.vue?dad6","webpack:///./src/apps/EMC/Components/modals/ArvNumber.vue?964d","webpack:///./src/apps/EMC/Components/modals/ArvNumber.vue","webpack:///./src/apps/EMC/Components/modals/ArvNumber.vue?5f12","webpack:///./src/apps/EMC/views/Mastercard.vue","webpack:///./src/apps/EMC/views/Mastercard.vue?94de","webpack:///./src/apps/ART/services/vitals_service.ts","webpack:///./src/apps/EMC/interfaces/emc_event.ts","webpack:///./src/services/person_service.ts","webpack:///./src/apps/EMC/Components/InformationHeader.vue?387e","webpack:///./src/utils/modal.ts","webpack:///./src/apps/ART/services/prescription_service.ts","webpack:///./src/apps/EMC/Components/modals/PatientVisit.vue?ab4d"],"names":["AdherenceService","AppEncounterService","constructor","patientID","providerID","super","_defineProperty","this","lastDrugs","lastReceiptDate","optimiseHangingPills","date","Date","setDate","getDate","d","HisDate","toStandardHisFormat","drugs","getJson","isEmpty","reduce","receiptDate","drug","order","start_date","htnDrugs","BPManagementService","htnDrugReferences","map","drug_id","filter","includes","lastPillCounts","getPreviousDrugPillCount","quantity","getReceiptDate","getLastDrugs","receivedDrugsBefore","buildPillCountObs","orderId","pillCount","buildValueNumber","programID","drugId","adherence","concept","getConceptID","getSessionDate","isAdherenceGood","calculateAdherence","given","pills","expected","Math","round","calculateExpected","equivalentDailyDose","startDate","frequency","timeUnit","daysGone","calcTimeElapsed","parseFloat","toString","date1","dayjs","diff","calculateUnaccountedOrMissed","actual","exp","uniqueBy","arr","iteratee","Map","Boolean","item","uniqueKey","Array","isArray","k","join","values","swapAdjacentItems","index","length","Error","sortBy","prop","sortOrder","sort","a","b","LabOrderService","PersonAttributeService","Service","attributes","postJson","PatientRegistrationService","personId","getPersonID","setPersonID","personID","person","personAttributes","createPerson","createPersonAttributes","patient","createPatient","printPatient","updatePerson","PersonService","update","data","create","person_id","ProgramService","PatientPrintoutService","printNidLbl","RelationsService","relationID","reason","void","guardianID","curRelationID","newRelationTypeID","voidRelation","createRelation","patientA","patientB","relationType","HTN_SESSION_KEY","sbp","dbp","bpTrail","firstRecentGrade","secondRecentGrade","Object","bp","getBpGrade","getSystolicBp","ObservationService","getFirstValueNumber","getDiastolicBp","query","getFirstValueCoded","drugID","state","getDrugs","HCZ","drugName","amount","current","selected","isChecked","dispensed","expectedRemaining","notes","Enalapril","remaining","Amlodipine","Atenolol","PatientLabResultService","patientId","testTypeID","resultDate","testID","createLabResult","measures","encounterID","getTestID","getTestTypeID","setTestTypeID","test","setResultDate","setTestID","getTestsWithoutResults","OrderService","getOrders","status","getTestIndicators","async","isValidForm","form","key","required","value","error","validation","payload","label","errs","every","resolveFormValues","underscoreKeys","formData","computedFormData","fKey","toUnderscores","computedValue","resolveObs","obs","tag","accum","cur","concat","push","Promise","all","optionsToGroupObs","conceptName","options","buildGroupValueCoded","option","submitForm","callback","showloader","loader","show","toastWarning","console","hide","StockService","stock","pharm","current_quantity","DRUG_PACK_SIZES","DispensationService","drugHistory","currentDrugOrder","useDrugManagement","setIsDrugManagementEnabled","isEnabled","ART_PROP","drugManagementEnabled","getDrugHistory","getCurrentOrder","buildDispensations","tabs","totalPacks","dispensations","i","saveDispensations","getProgramID","DrugOrderService","getDrugOrderHistory","e","warn","getDrugOrders","fetchAvailableDrugStock","getDrugPackSizes","calcCompletePack","units","drugOrderBarcodes","barcodes","parseInt","completePack","ReceptionService","sitePrefix","getSitePrefix","GLOBAL_PROP","createArvNumber","identifier","buildArvNumber","arv","orders","pageSize","params","popVoidReason","size","modal","optionsActionSheet","name","slot","color","role","selection","action","_hoisted_1","_hoisted_2","render","_ctx","_cache","$props","$setup","$data","$options","_component_ion_title","_resolveComponent","_component_ion_toolbar","_component_ion_header","_component_his_basic_table","_component_text_skeloton","_component_ion_content","_component_ion_button","_component_ion_footer","_openBlock","_createElementBlock","_Fragment","_createVNode","default","_withCtx","_createTextVNode","_toDisplayString","title","_","ready","columns","rows","onClick","closeModal","defineComponent","components","HisBasicTable","IonHeader","IonToolbar","IonContent","IonFooter","IonButton","TextSkeloton","props","type","String","onRows","Function","watch","func","immediate","deep","methods","modalController","dismiss","__exports__","AppointmentService","paginate","_component_information_header","_component_ion_col","_component_ion_row","_component_visits_summary","_component_ion_grid","isReady","_createBlock","class","guardians","artStartDate","onUpdateARVNumber","updateARVNumber","onAddGuardian","addGuardian","onUpdatePatient","updateDemographics","_createCommentVNode","_withScopeId","n","_pushScopeId","_popScopeId","_createElementVNode","_component_ion_icon","_component_ion_card_title","_component_ion_card_header","_component_report_table","_component_ion_card_content","_component_ion_card","style","_renderList","actionButtons","btn","icon","config","tableConfig","_component_DateInput","_component_SelectInput","_component_NumberInput","_component_ion_label","_component_ion_checkbox","_component_ion_item","modelValue","orderDate","$event","minDate","birthdate","maxDate","today","reasons","specimenConcept","specimens","modifier","modifiers","result","min","ldl","resetResults","saveResults","IonTitle","IonLabel","IonGrid","IonRow","IonCol","IonCheckbox","IonItem","DateInput","SelectInput","NumberInput","setup","ref","toOptions","format","STANDARD_DATE_FORMAT","getBirthdate","reactive","isValid","placeholder","setSessionDate","orderService","getID","vlConceptId","ConceptService","encounter","createEncounter","formattedOrders","buildLabOrders","saveOrdersArray","encounter_id","resultService","tests","id","resultEnc","resetSessionDate","EventBus","emit","EmcEvents","RELOAD_LATEST_VL_RESULT","RELOAD_PATIENT_VISIT_DATA","alertConfirmation","ON_CLEAR","isLDL","undefined","disabled","onMounted","getSpecimens","specimen","_component_ion_badge","_component_enrollment_form","_component_outcome_form","_component_outcomes_table","enrollmentStatus","isEnrolled","outcomes","enrollDate","onSaveOutcome","saveOutcome","_normalizeStyle","minHeight","totalStates","_ctx$program","patientStates","program","patient_states","onVoidOutcome","voidOutcome","patientProgram","onEnrollProgram","enrollProgram","voidProgram","_component_data_table","TableRowActions","DataTable","emits","path","formatter","v","DISPLAY_DATE_FORMAT","showSearchField","showSubmitButton","computed","stateId","row","patient_state_id","onReset","_component_text_input","dateEnrolled","isTransferredOut","nextFacility","asyncOptions","getFacilities","transferOutReasons","specifyOther","otherReason","onSave","TextInput","facility","StandardValidations","_form$status","_form$status$value","_form$reason","_form$reason$value","_form$status$value2","_form$reason2","_form$reason2$value","IonBadge","OutcomesTable","EnrollmentForm","OutcomeForm","toStandardHisDisplayFormat","PatientProgramService","_program$value$patien","_program$value","_program$value$patien2","setStateDate","setStateId","finalReason","transferOutEncounter","other","updateState","toastSuccess","setProgramDate","_program$value2","setPatientProgramId","patient_program_id","_program$value3","voidState","splice","programs","getPrograms","find","l","date_enrolled","states","getProgramOutcomes","program_workflow_state_id","_component_yes_no_input","_component_multi_column_view","visitDate","weight","showHeightField","isOnActiveTBTreatment","height","tbStatus","tbStatuses","isOnTBTreatment","tbTreatmentStartDate","tbTreatmentPeriod","isFemale","isPregnant","inline","isBreastfeeding","hasContraindications","items","contraIndications","numberOfColumns","entries","entry","lines","hasSideEffects","sideEffects","regimen","regimens","totalArvsGiven","totalCPTGiven","tbMed","tbMeds","hasGiven6H","hasGivenRFP","totalIPTGiven","totalRFPGiven","hasGiven3HP","total3HPGiven","totalPyridoxineGiven","patientPresent","guardianPresent","prevDrugs","nextAppointmentDate","drugRunOutDate","onClear","onSubmit","PatientObservationService","Patientservice","getFirstObs","value_coded","match","obsInValidPeriod","getFirstObsDatetime","getLastValueCoded","getConceptName","getLastValueNumber","weights","getAll","value_numeric","obs_datetime","value_text","value_datetime","getAllDrugOrders","Number","MAX_SAFE_INTEGER","getFirstValueText","getWhoStage","YesNoInput","MultiColumnView","vitals","VitalsService","consultations","ConsultationService","prescription","PrescriptionService","dispensation","reception","appointment","prevHeight","getAge","validator","buildValueCoded","buildValueDate","isNumber","_form$tbMed$value","_form$tbMed$value2","_form$tbMed$value3","_form$tbMed$value4","_form$tbMed$value5","validateSeries","some","x","period","getRegimens","onTB","unknownReg","regs","RegimenService","getRegimensByWeight","keys","isPresent","newWeight","calculateMinDuration","totalGiven","am","noon","pm","remainingDrugs","duration","add","checkForActiveTB","_form$tbMed$value6","_form$tbMed$value7","_form$tbMed$value8","_form$tbStatus$value","previousTBStatus","getFirstValueDatetime","timeElapsed","buildBmiObs","bmi","BMIService","calculateBMI","buildFpmObs","getFamilyPlanningMethods","forEach","method","getTbSymptomsObs","getConceptsByCategory","toDrugOrder","calculateEquivalentDosage","calculateDosage","getInstructions","drug_name","_formData$tbMed","vitalsObs","bmiObs","saveObservationList","consultationObs","drugOrders","arvDrugs","getRegimenExtras","iptRegimens","pyridoxine","INH","rfpRegimens","threeHPRegimens","createDrugOrder","drug_inventory_id","order_id","qty","flat","receptionObs","adherenceObs","equivalent_daily_dose","adh","buildAdherenceObs","appointmentObs","RELOAD_STAGING_INFORMATION","getRecentHeight","recentWeight","getRecentWeight","getLastDrugsReceived","concept_id","ReportTable","IonCard","IonCardHeader","IonCardTitle","IonCardContent","showIndex","tableCssTheme","PatientVisit","OutcomeStatus","ViralLoadResult","table","thTxt","formatVisitDate","monthsElapsed","drill","component","DrillTableModalVue","cssClass","componentProps","present","showDrugsDispensed","showSideEffects","removeEncounters","activeRows","encounters","EncounterService","getEncounters","voidEncounter","buildRows","getPatientVisits","then","dates","getCurrentProgramInformation","nextAppointment","pregnant","breastfeeding","vlResult","outcome","nDate","vlObs","td","getCachedConceptName","tdLink","side_effects","pills_dispensed","tdBtn","on","width","display","justifyContent","_hoisted_3","_hoisted_4","_hoisted_5","_component_ion_list","patientInfo","button","clickable","onClickHandler","initWeight","initHeight","initBmi","initTBStatus","breastFeedingAtInitiation","pregnantAtInitiation","receivedART","agreesToFollowUp","reasonForStartingART","hivTestDate","hivTestPlace","stagingCondition","latestVLResult","whoSTage","_item$other","getDobAndAgeAtInitiation","dob","ageAtInitiation","setLatestVLResult","force","ApiStore","invalidate","get","results","rs","r","t","c","value_modifier","getArvNumber","getNationalID","getGivenName","getFamilyName","toGenderString","getGender","getCurrentVillage","getClosestLandmark","getPhoneNumber","router","setHIVTestDate","getHIVTestDate","setStagingInfo","getInitialWeight","getInitialHeight","getInitialBMI","getInitialTBStatus","hasPregnancyAtARTInitiation","breastFeedingAtARTInitiation","everReceivedART","getReasonForStartingART","getHIVTestLocation","getStagingCondition","_component_ion_buttons","_component_TextInput","givenName","middleName","familyName","allowEstimation","estimationLabel","onIsEstimated","estimate","isBirthdateEstimated","gender","genderOptions","cellPhoneNumber","allowUnknown","homeVillage","getVillagesByName","allowCustom","landmark","getLandmarks","onFinish","patientService","isName","getMiddleName","phone","Validation","isMWPhoneNumber","resolveAddress","_village$other","address","village","TA","traditional_authority_id","LocationService","getTraditionalAuthorityById","district","getDistrictByID","district_id","updatedPatient","assign","RELOAD_PATIENT_DATA","guardian","registrationService","registerGuardian","guardianId","RELOAD_GUARDIAN_DATA","arvNumber","prefix","hasValidARVNumber","voidARV","split","isNumberErr","patients","findByOtherID","confirm","voidARVNumber","log","VisitsSummary","InformationHeader","route","useRoute","setPatient","patientData","findByID","setPatientGuardian","relationship","RelationshipService","getGuardianDetails","relationshipType","PatientDemographics","attribute","GuardianDemographicsVue","ARVNumberVue","_patient$value","getARTStartDate","isNotEmptyandNumber","vital","isNotEmptyandFloat","_vital$other","checkMinMax","val","max","p","_val$other","_val$other2","validateAll","j","mergeErrors","errors","holder","element","isValidBPReading","isValidBP","bpSystolic","bpDiastolic","emptyErrors","minErrors","putJson","names","given_name","family_name","backdropDismiss","m","onWillDismiss","AdverseEffectsCategories","nextVisitInterval","fastTrack","regimenExtras","fastTrackMedications","hangingPills","medicationOrders","treatmentState","contraindications","tptPrescriptionCount","lastSideEffectDate","setNextVisitInterval","getHangingPills","getMedicationOrders","getTptPrescriptionCount","getLastSideEffectDate","getContraindications","getSideEffects","getPatientRegimens","getARVs","getCustomIngridients","getFastTrackMedications","getTreatmentState","isFastTrack","medicationOrdersAvailable","shouldPrescribeArvs","arvs","getCachedConceptID","shouldPrescribeExtras","extras","extrasAvailable","getRegimenStarterpack","regimenCode","patientWeight","contraindication","getObs","o","drugInduced","value_drug","res","count","yes","meds","toDate","_o$order","_o$order$drug_order","drug_order","withDosages","dosage","getDrugDosages","req","findAndGroupDrugSideEffects","allSideEffects","calculatePillsPerDay","estimatePackSize","pillsPerDay","packSize","packs","roundedPacks","morningTabs","eveningTabs","dose","calculateDateFromInterval","dateObj","getDrugPackSize","pack_size","toOrderObj","response","saveValueTextObs","reasonForSwitch"],"mappings":"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","file":"js/chunk-0944803c.66ff1007.js","sourcesContent":["import { AppEncounterService } from \"@/services/app_encounter_service\"\nimport { DrugInterface } from \"@/interfaces/Drug\"\nimport HisDate from \"@/utils/Date\"\nimport { isEmpty } from \"lodash\"\nimport { BPManagementService } from \"./htn_service\"\nimport dayjs from \"dayjs\"\n\nexport class AdherenceService extends AppEncounterService {\n    lastDrugs: Array<DrugInterface>\n    lastReceiptDate: string\n    constructor(patientID: number, providerID: number) {\n        super(patientID, 68, providerID) //TODO: Use encounter type reference name\n        this.lastDrugs = []\n        this.lastReceiptDate = ''\n    }\n\n    async loadPreviousDrugs(optimiseHangingPills=false) {\n        const date = new Date(this.date)\n        date.setDate(date.getDate() - 1) // we don't want current date to count\n        const d = (date: string | Date) => HisDate.toStandardHisFormat(date)\n        const drugs = await AppEncounterService.getJson(\n            `patients/${this.patientID}/drugs_received`, { date: d(date) }\n        )\n        if (!isEmpty(drugs)) {\n            this.lastReceiptDate = drugs.reduce((receiptDate: string | null,  drug: any) => {\n                return !receiptDate || (new Date(d(drug.order.start_date)) > new Date(receiptDate))\n                    ?  d(drug.order.start_date)\n                    : receiptDate\n            }, null)\n            const htnDrugs = BPManagementService.htnDrugReferences().map((d: any) => d.drug_id)\n            this.lastDrugs = drugs.filter((drug: DrugInterface) => \n                !htnDrugs.includes(drug.drug['drug_id']) && d(drug.order.start_date) === this.lastReceiptDate\n            )\n            if (optimiseHangingPills) {\n                const lastPillCounts: Record<number, number> = (await this.getPreviousDrugPillCount()) || {}\n                this.lastDrugs = this.lastDrugs.map((d: DrugInterface) => {\n                    if (lastPillCounts[d.drug.drug_id] && d.quantity) {\n                        d.quantity += lastPillCounts[d.drug.drug_id]\n                    }\n                    return d\n                })\n            }\n        }\n    }\n\n    getReceiptDate() { return this.lastReceiptDate }\n\n    getLastDrugs() { return this.lastDrugs }\n\n    receivedDrugsBefore() { return !isEmpty(this.lastDrugs) }\n\n    buildPillCountObs(orderId: number, pillCount: number) {\n        return this.buildValueNumber('Number of tablets brought to clinic', pillCount, null, orderId)\n    }\n    \n    getPreviousDrugPillCount() {\n        return AppEncounterService.getJson('last_drugs_pill_count', {\n            'patient_id': this.patientID,\n            'program_id': this.programID,\n            'date': this.lastReceiptDate\n        })\n    }\n\n    async buildAdherenceObs(orderId: number, drugId: number, adherence: number) {\n        const concept = await AppEncounterService.getConceptID('Drug adherence', true)\n        return {\n            'concept_id': concept,\n            'value_numeric': adherence,\n            'value_drug': drugId,\n            'value_modifier': '%',\n            'order_id': orderId,\n            'person_id': this.patientID,\n            'obs_datetime': AppEncounterService.getSessionDate()\n        }\n    }\n\n    isAdherenceGood(adherence: number) {\n        return adherence >= 95 && adherence <= 105\n    }\n\n    calculateAdherence(given: number, pills: number, expected: number) {\n        return Math.round(100 * (given - pills) / (given - expected));\n    }\n\n    calculateExpected(\n        given: number, \n        equivalentDailyDose: number, \n        startDate: string, \n        frequency: 'QOD' | 'QW'\n    ) {\n        const timeUnit = frequency === 'QW' ? 'week' : 'day'\n        const daysGone = this.calcTimeElapsed(startDate, timeUnit);\n        return (given - (daysGone * parseFloat(equivalentDailyDose.toString())));\n    }\n\n    calcTimeElapsed(date1: string, timeUnit: 'week' | 'day') {\n        // Consider this example: 2022-01-28 to 2022-01-01 diff is supposed to give us a difference of 28 days. \n        // However, dayjs calculates it as a difference of 27 days. Adding a one to correct this issue for a better calculation\n        return dayjs(HisDate.toStandardHisFormat(this.date)).diff(HisDate.toStandardHisFormat(date1), timeUnit) + 1\n    }\n\n    calculateUnaccountedOrMissed(expected: string, actual: string) {\n        const exp = (parseFloat(expected) - parseFloat(actual));\n        return (exp < 0 ? ((exp * -1) + ' missed') : (exp + ' unacc'));\n    }\n}\n","import { isEmpty } from \"lodash\";\n\n/**\n * A function that remove duplicates from an array\n * \n * @param arr list of items with possible duplicates\n * @param iteratee a key or list of keys to be used to remove duplicates\n * @returns list of unique items\n */\nexport function uniqueBy(arr: any[], iteratee: string | string[]) {\n  return [...new Map(arr.filter(Boolean).map(item => {\n    const uniqueKey = Array.isArray(iteratee) \n      ? iteratee.map(k => item[k]).join('_')\n      : item[iteratee]\n    return [uniqueKey, item]\n  })).values()]\n}\n\n/**\n * Swap two adjacent items in an array\n * \n * @param arr list of items \n * @param index position of the first item to be swapped\n * @returns \n */\nexport function swapAdjacentItems<T = any>(arr: Array<T>, index: number) {\n  if (index < 0 || index >= arr.length - 1) {\n    throw new Error(\"Invalid index or no adjacent items to swap.\");\n  }\n\n  [arr[index], arr[index + 1]] = [arr[index + 1], arr[index]]\n  return arr\n}\n\ntype SortOrder = \"asc\" | \"desc\";\ntype ObjArray = Array<Record<string, any>>;\n\n/**\n * Sorts an array of objects based on a specified property and order.\n *\n * @param arr - The array of objects to be sorted.\n * @param prop - The property by which to sort the objects.\n * @param order - Optional sorting order (\"asc\" for ascending, \"desc\" for descending). default is \"asc\"\n * @returns The sorted array of objects.\n */\nexport function sortBy(arr: ObjArray, prop: string, order?: SortOrder) {\n  if(isEmpty(arr)) return arr;\n  const sortOrder = order === \"desc\" ? -1 : 1;\n  return arr.sort((a, b) => {\n    if (a[prop] > b[prop]) return 1 * sortOrder;\n    if (a[prop] < b[prop]) return -1 * sortOrder;\n    return 0;\n  })\n}","import { AppEncounterService } from \"@/services/app_encounter_service\";\nexport class LabOrderService extends AppEncounterService {\n  constructor(patientID: number, providerID: number) {\n    super(patientID, 57, providerID);\n  }\n}","import { Service } from \"./service\"\n\nexport interface NewAttribute {\n    person_id: number;\n    person_attribute_type_id: number;\n    value: number | string;\n}\n\nexport class PersonAttributeService extends Service { \n    constructor() {\n        super()\n    }\n\n    static create(attributes: Array<NewAttribute>) { \n        return super.postJson('/person_attributes', attributes) \n    }\n}\n","import { Service } from \"./service\"\nimport { ProgramService } from \"@/services/program_service\";\nimport { Person } from \"@/interfaces/person\"\nimport { PersonService } from \"@/services/person_service\"\nimport { PersonAttributeService } from '@/services/person_attributes_service'\nimport { PatientPrintoutService } from \"@/services/patient_printout_service\";\n\nexport class PatientRegistrationService extends Service {\n    personId: number\n    constructor() {\n        super()\n        this.personId = 0\n    }\n\n    getPersonID() {\n        return this.personId\n    }\n\n    setPersonID(personID: number) {\n        this.personId = personID\n    }\n\n    async registerPatient(person: any, personAttributes: any) {\n        await this.createPerson(person)\n        await this.createPersonAttributes(personAttributes)\n        const patient = await this.createPatient()\n        await this.printPatient()\n        return patient\n    }\n\n    async registerGuardian(person: any) {\n        return this.createPerson(person)\n    }\n\n    updatePerson(person: any) {\n       return new PersonService(person).update(this.personId)\n    }\n\n    async createPerson(person: any) {\n        const data: Person = await new PersonService(person).create()\n        this.personId = data.person_id\n        return data\n    }\n\n    createPatient() {\n        return ProgramService.createPatient(this.personId)\n    }\n\n    async createPersonAttributes(attributes: Array<any>) {\n        for(const index in attributes) {\n            await PersonAttributeService.create({\n                ...attributes[index],\n                'person_id': this.personId\n            })\n        }\n    }\n\n    printPatient() {\n        return new PatientPrintoutService(this.personId).printNidLbl()\n    }\n}\n","import { Service } from \"./service\";\n\nexport class RelationsService extends Service {\n    constructor() {\n        super()\n    }\n\n    static voidRelation(patientID: number, relationID: number, reason: string) {\n\t\treturn Service.void(`people/${patientID}/relationships/${relationID}`, { reason })\n\t}\n\n    static async amendRelation(patientID: number, guardianID: number, curRelationID: number, newRelationTypeID: number) {\n        await RelationsService.voidRelation(patientID, curRelationID,\n            'Updating guardian relationship'\n        )\n        return RelationsService.createRelation(\n            patientID, guardianID, newRelationTypeID\n        )\n    }\n\n    static getRelations() {\n        return super.getJson('types/relationships')\n    }\n\n    static createRelation(patientA: number, patientB: number, relationType: number) {\n        return super.postJson(`people/${patientA}/relationships`, {\n            'relationship_type_id': relationType,\n            'relation_id': patientB\n        })\n    }\n}\n","import { AppEncounterService } from \"@/services/app_encounter_service\"\nimport { ObservationService } from \"@/services/observation_service\"\n\nexport enum HTN_SESSION_KEY {\n  Prescription = \"htnPrescription\"\n}\n\nexport class BPManagementService extends AppEncounterService {\n    constructor(patientID: number, providerID: number) {\n      super(patientID, 48, providerID) //TODO: Use encounter type reference name'\n    }\n\n    static getBpGrade(sbp: number, dbp: number) {\n      if ((sbp < 140) && (dbp < 90)) {\n        return \"normal\"\n      }\n      else if ((sbp >= 140 && sbp < 160) || (dbp >= 100 && dbp < 110)) {\n        return \"grade 1\"\n      }\n      else if ((sbp >= 180 && dbp > 110) || sbp >= 180) {\n        return \"grade 3\"\n      }\n      else if ((sbp >= 160 && sbp < 180) || (dbp >= 110)) {\n        return \"grade 2\"\n      }\n      return 'N/A'\n    }\n\n    /**\n     * BP is normointensive if two most recent consecutive tests are normal\n     * @param bpTrail \n     * @returns\n    */\n    static isBpNormotensive(bpTrail: any) {\n      const [ firstRecentGrade, secondRecentGrade ] = Object.values(bpTrail)\n        .sort((a: any, b: any) => a.date < b.date ? 1 : 0)\n        .map((bp: any) => this.getBpGrade(bp.sbp, bp.dbp))\n      return firstRecentGrade === 'normal' && secondRecentGrade === 'normal'\n    }\n\n    getSystolicBp() {\n      return ObservationService.getFirstValueNumber(this.patientID, 'Systolic blood pressure')\n    }\n\n    getDiastolicBp() {\n      return ObservationService.getFirstValueNumber(this.patientID, 'Diastolic blood pressure')\n    }\n\n    async onBpDrugs() {\n      const query = await ObservationService.getFirstValueCoded(this.patientID, 'Treatment status')\n      return query ? query === 'Yes' : false\n    }\n  \n    async getBPTrail() {\n      return await AppEncounterService.getJson(`/patients/${this.patientID}/bp_trail`);\n    }\n    async getCurrentDrugs() {\n      return await AppEncounterService.getJson(`/patients/${this.patientID}/current_bp_drugs`);\n    }\n    async getLastDrugs() {\n      return await AppEncounterService.getJson(`/patients/${this.patientID}/last_bp_drugs_dispensation`);\n    }\n    async getAdherence(drugID: number, pills: number) {\n      return await AppEncounterService.postJson(`/patients/${this.patientID}/remaining_bp_drugs`, {\n        'drug_id': drugID,\n        pills: pills\n      });\n    }\n    async enrollPatient(state: any) {\n      return await AppEncounterService.postJson(`/patients/${this.patientID}/update_or_create_htn_state`, state);\n    }\n    static htnDrugReferences() {\n      return [\n        { \n          'drug_id': 275,\n          'drug_name': \"HCZ (25mg tablet)\",\n          'units': 'tab(s)',\n          'am': 0,\n          'noon': 0,\n          'pm': 1,\n          'frequency': 'Daily (QOD)'\n        },\n        {\n          'drug_id': 942,\n          'drug_name': \"Enalapril (5mg tablet)\",\n          'units': 'tab(s)',\n          'am': 0,\n          'noon': 0,\n          'pm': 1,\n          'frequency': 'Daily (QOD)'\n        },\n        {\n          'drug_id': 943,\n          'drug_name': \"Enalapril (10mg tablet)\",\n          'units': 'tab(s)',\n          'am': 0,\n          'noon': 0,\n          'pm': 1,\n          'frequency': 'Daily (QOD)'\n        },\n        {\n          'drug_id': 558,\n          'drug_name': \"Amlodipine (5mg tablet)\",\n          'units': 'tab(s)',\n          'am': 0,\n          'noon': 0,\n          'pm': 1,\n          'frequency': 'Daily (QOD)'\n        },\n        {\n          'drug_id': 559,\n          'drug_name': \"Amlodipine (10mg tablet)\",\n          'units': 'tab(s)',\n          'am': 0,\n          'noon': 0,\n          'pm': 1,\n          'frequency': 'Daily (QOD)'\n        },\n        {\n          'drug_id': 117,\n          'drug_name': \"Atenolol (50mg tablet)\",\n          'units': 'tab(s)',\n          'am': 0,\n          'noon': 0,\n          'pm': 1,\n          'frequency': 'Daily (QOD)'\n        },\n        {\n          'drug_id': 11,\n          'drug_name': \"Atenolol(100mg tablet)\",\n          'units': 'tab(s)',\n          'am': 0,\n          'noon': 0,\n          'pm': 1,\n          'frequency': 'Daily (QOD)'\n        }\n      ]\n    }\n    getDrugs() {\n        return {\n        HCZ: {\n          drugs: [\n            {\n              drugName: \"HCZ (25mg tablet)\",\n              drugID: 275,\n              amount: '25mg',\n              current: false,\n              selected: false,\n              isChecked: false,\n              dispensed: null,\n              expectedRemaining: null,\n              adherence: null,\n            },\n          ],\n          selected: null,\n          notes: [],\n        },\n        Enalapril: {\n          drugs: [\n            {\n              drugName: \"Enalapril (5mg tablet)\",\n              drugID: 942,\n              amount: '5mg',\n              current: false,\n              selected: false,\n              isChecked: false,\n              dispensed: null,\n              expectedRemaining: null,\n              adherence: null,\n              remaining: null,\n            },\n            {\n              drugName: \"Enalapril (10mg tablet)\",\n              drugID: 943,\n              amount: '10mg',\n              current: false,\n              selected: false,\n              isChecked: false,\n              dispensed: null,\n              expectedRemaining: null,\n              adherence: null,\n              remaining: null,\n            },\n          ],\n          selected: null,\n          notes: [],\n        },\n        Amlodipine: {\n          drugs: [\n            {\n              drugName: \"Amlodipine (5mg tablet)\",\n              drugID: 558,\n              amount: '5mg',\n              current: false,\n              selected: false,\n              isChecked: false,\n              dispensed: null,\n              expectedRemaining: null,\n              adherence: null,\n              remaining: null,\n            },\n            {\n              drugName: \"Amlodipine (10mg tablet)\",\n              drugID: 559,\n              amount: '10mg',\n              current: false,\n              selected: false,\n              isChecked: false,\n              dispensed: null,\n              expectedRemaining: null,\n              adherence: null,\n              remaining: null,\n            },\n          ],\n          selected: null,\n          notes: [],\n        },\n        Atenolol: {\n          drugs: [\n            {\n              drugName: \"Atenolol (50mg tablet)\",\n              drugID: 117,\n              amount: '50mg',\n              current: false,\n              selected: false,\n              isChecked: false,\n              dispensed: null,\n              expectedRemaining: null,\n              adherence: null,\n              remaining: null,\n            },\n            {\n              drugName: \"Atenolol(100mg tablet)\",\n              drugID: 11,\n              amount: '100mg',\n              current: false,\n              selected: false,\n              isChecked: false,\n              dispensed: null,\n              expectedRemaining: null,\n              adherence: null,\n              remaining: null,\n            },\n          ],\n          selected: null,\n          notes: [],\n        },\n      }\n    }\n}","export * from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./VisitsSummary.vue?vue&type=style&index=0&id=4936bde9&scoped=true&lang=css\"","import { OrderService } from '@/services/order_service'\nimport { AppEncounterService } from './app_encounter_service';\n\nexport class PatientLabResultService extends AppEncounterService {\n    patientID: number;\n    testTypeID: number;\n    resultDate: string;\n    testID: number;\n    constructor(patientId: number) {\n        super(patientId, 57)\n        this.patientID = patientId\n        this.testTypeID = -1\n        this.resultDate = ''\n        this.testID = -1\n    }\n\n    createLabResult(measures: Array<any>) {\n        return AppEncounterService.postJson(`lab/tests/${this.testID}/results`, {\n            'encounter_id': this.encounterID,\n            date: this.resultDate,\n            measures\n        })\n    }\n\n    getTestID() {\n        return this.testID\n    }\n\n    getTestTypeID() {\n        return this.testTypeID\n    }\n\n    setTestTypeID(test: number) {\n        this.testTypeID = test\n    }\n\n    setResultDate(date: string) {\n        this.resultDate = date\n    }\n\n    setTestID(test: number) {\n        this.testID = test\n    }   \n\n    getTestsWithoutResults() {\n        return OrderService.getOrders(this.patientID, {\n            status: 'drawn'\n        })\n    }\n\n    getTestIndicators() {\n      return OrderService.getJson(\n        `lab/test_result_indicators`, {\n        'test_type_id': this.testTypeID\n      })\n    }\n\n    \n}\n","import { ObsValue, ObservationService } from \"@/services/observation_service\"\nimport { DTForm } from \"../interfaces/dt_form_field\"\nimport { Option } from \"@/components/Forms/FieldInterface\";\nimport { toUnderscores } from \"@/utils/Strs\";\nimport { isEmpty } from \"lodash\";\nimport { loader } from \"@/utils/loader\";\nimport { toastWarning } from '@/utils/Alerts';\n\nexport async function isValidForm (form: DTForm) {\n  for (const key in form) {\n    if (form[key].required && isEmpty(form[key].value)) {\n      form[key].error = \"This field is required\";\n      continue;\n    }\n    if(typeof form[key].validation !== 'function') {\n      form[key].error = ''\n      continue\n    }\n    const payload = typeof form[key].value === 'object'\n        ? form[key].value\n        : { label: form[key].value, value: form[key].value }\n\n    const errs = await form[key].validation!(payload as Option, form)\n    if(errs && errs.length > 0) {\n      form[key].error = errs.toString()\n    } else {\n      form[key].error = ''\n    }       \n  }\n  return Object.values(form).every(({ error }) => !error)\n}\n\nexport function resolveFormValues(form: DTForm, underscoreKeys = false) {\n  const formData: any = {}\n  const computedFormData: any = {}\n  for (const key in form) {\n    if(form[key].value) {\n      const fKey = underscoreKeys ? toUnderscores(key) : key\n      formData[fKey] = form[key].value\n      if(typeof form[key].computedValue === 'function') {\n        computedFormData[fKey] = form[key].computedValue!(form[key].value, form)\n      }\n    }\n  }\n  return { formData, computedFormData }\n}\n\nexport function resolveObs (obs: any, tag=''): Promise<ObsValue[]> {\n  const values: any = Object.values(obs)\n    .filter((d: any) => d && (d.tag === tag || tag === ''))\n    .reduce((accum: any, cur: any) => { \n      const data = cur.obs ? cur.obs : cur\n      if (Array.isArray(data)) {\n        accum = accum.concat(data)\n      } else {\n          accum.push(data)\n      }\n      return accum\n    }, [])\n  return Promise.all(values)\n}\n\nexport function optionsToGroupObs (conceptName: string, options: Option[]) {\n  return Promise.all(options.map(async (option) => {\n    return ObservationService.buildGroupValueCoded(conceptName, option.label, option.isChecked ? 'Yes' : 'No')\n  }))\n}\n\ntype SubmitFormCallback = (formData: Record<string, any>, computedData: Record<string, any>) => Promise<void> | void\ninterface SubmitOptios {\n  showloader?: boolean;\n  underscoreKeys?: boolean;\n}\n\nexport async function submitForm (form: DTForm, callback: SubmitFormCallback, options?: SubmitOptios) {\n  if(!await isValidForm(form)) return\n  const showloader = options?.showloader || false\n  try {\n    if (showloader) await loader.show()\n    const {formData, computedFormData} = resolveFormValues(form, options?.underscoreKeys)\n    await callback(formData, computedFormData)\n  } catch (error) {\n    toastWarning(`${error}`)\n    console.error(error)\n  } finally {\n    if(showloader) await loader.hide()\n  }\n}","import { Service } from \"@/services/service\";\n\nexport class StockService extends Service {\n    constructor() {\n        super()\n    }\n\n    static async fetchAvailableDrugStock(drugId: number) {\n        const stock = await this.getJson('pharmacy/items', { 'drug_id': drugId })\n        if (stock && stock.length > 0) {\n            return stock.reduce((accum: number, pharm: any) => accum + pharm.current_quantity, 0);\n        }\n    }\n}\n","import { AppEncounterService } from \"@/services/app_encounter_service\";\nimport { DrugOrderService } from \"@/services/drug_order_service\";\nimport { StockService } from \"./stock_service\";\nimport ART_PROP from '@/apps/ART/art_global_props';\n// ripped from old ART system\nexport const DRUG_PACK_SIZES: Record<string, any> = {\n    '11': [ 30 ],\n    '21': [ 25 ],\n    '22': [ 60 ],\n    '24': [ 30, 60, 90, 100 ],\n    '30': [ 90 ],\n    '39': [ 60 ],\n    '73': [ 120 ],\n    '74': [ 60 ],\n    '76': [ 1000 ],\n    '297': [ 30, 60, 90 ],\n    '576': [ 30, 60, 90 ],\n    '613': [ 60 ],\n    '731': [ 60 ],\n    '732': [ 60 ],\n    '733': [ 60 ],\n    '734': [ 30 ],\n    '735': [ 30 ],\n    '736': [ 60 ],\n    '738': [ 60 ],\n    '931': [ 12, 30, 60 ],\n    '932': [ 30 ],\n    '954': [ 60 ],\n    '963': [ 30, 60, 90 ],\n    '968': [ 60 ],\n    '969': [ 30 ],\n    '971': [ 30,60,90 ],\n    '976': [ 60 ],\n    '977': [ 30 ],\n    '982': [ 30 ],\n    '983': [ 30, 90 ],\n    '1039': [ 30,60,90 ],\n    '1043': [ 60 ],\n    '1044': [ 30],\n    '1056': [ 24 ],\n    '1216': [3, 6, 8, 12]\n}\n\nexport class DispensationService extends AppEncounterService {\n    drugHistory: Array<any>;\n    currentDrugOrder: Array<any>;\n    useDrugManagement: boolean; \n    constructor(patientID: number, providerID: number) {\n        super(patientID, 54, providerID)\n        this.drugHistory = []\n        this.currentDrugOrder = []\n        this.useDrugManagement = false\n    }\n\n    setIsDrugManagementEnabled(isEnabled: boolean) {\n        this.useDrugManagement = isEnabled\n    }\n\n    async loadDrugManagementEnabled() {\n        this.useDrugManagement = await ART_PROP.drugManagementEnabled()\n    }\n\n    getDrugHistory() {\n        return this.drugHistory\n    }\n\n    getCurrentOrder() {\n        return this.currentDrugOrder\n    }\n\n    buildDispensations(orderId: number, tabs: number, totalPacks: number) {\n        const dispensations = []\n        for(let i=0; i < totalPacks; i++) {\n            dispensations.push({\n                'drug_order_id': orderId,\n                date: this.date,\n                quantity: (tabs / totalPacks)\n            })\n        }\n        return dispensations\n    }\n\n    saveDispensations(dispensations: Array<any>) {\n        return AppEncounterService.postJson('/dispensations', { \n            dispensations, \n            'program_id': AppEncounterService.getProgramID()\n        })\n    }\n\n    async voidOrder(orderId: number) {\n        return AppEncounterService.void(`/dispensations/${orderId}`, {})\n    }\n\n    async loadDrugHistory() {\n        try {\n            this.drugHistory = (await DrugOrderService.getDrugOrderHistory(this.patientID))||[]\n        } catch (e) {\n            console.warn(e)\n        }\n    }\n\n    async loadCurrentDrugOrder() {\n        this.currentDrugOrder = (await DrugOrderService.getDrugOrders(this.patientID))||[]\n        if (!this.useDrugManagement) return\n        for(const order of this.currentDrugOrder) {\n            order['available_stock'] = await StockService.fetchAvailableDrugStock(order.drug.drug_id)\n        }\n    }\n\n    getDrugPackSizes(drugId: number) {\n        if (drugId in DRUG_PACK_SIZES) {\n            return DRUG_PACK_SIZES[drugId]\n        }\n        return [30, 60, 90]\n    }\n\n    // Ripped from old ART system for backwards compatibility purposes\n    calcCompletePack(drug: any, units: number) {\n        //sorting in an ascending order by tabs\n        const drugOrderBarcodes = drug.barcodes.sort((a: any, b: any) => a.tabs - b.tabs); \n        if (drugOrderBarcodes.length == 0 || units == 0.0) return units;\n        for (const i in drugOrderBarcodes) {\n            const { tabs } = drugOrderBarcodes[i]\n            if (parseInt(tabs) >= units) return tabs;\n        }\n        const completePack = parseInt(drugOrderBarcodes[drugOrderBarcodes.length - 1].tabs)\n        return completePack\n    }\n}\n","import { AppEncounterService } from \"@/services/app_encounter_service\"\nimport { ProgramService } from \"@/services/program_service\";\nimport GLOBAL_PROP from \"@/apps/GLOBAL_APP/global_prop\";\n\nexport class ReceptionService extends AppEncounterService {\n    sitePrefix: string\n    constructor(patientID: number, providerID: number) {\n        super(patientID, 51, providerID) //TODO: Use encounter type reference name'\n        this.sitePrefix = ''\n    }\n\n    getSitePrefix() {\n        return this.sitePrefix\n    }\n\n    async loadSitePrefix() {\n        this.sitePrefix = await GLOBAL_PROP.sitePrefix();\n    }\n\n    createArvNumber(identifier: string) {\n        return ProgramService.postJson(\"/patient_identifiers/\", {\n            'patient_id': this.patientID,  \n            'identifier_type': 4,\n            identifier,\n        })\n    }\n\n    buildArvNumber(arv: number) {\n        return `${this.sitePrefix}-ARV-${arv}`    \n    }\n}\n","import { DrugOrderInterface } from \"@/interfaces/DrugOrder\";\nimport { Service } from \"./service\";\n\nexport class DrugOrderService extends Service {\n    constructor() {\n        super()\n    }\n\n    static create(orders: DrugOrderInterface) {\n        return this.postJson('drug_orders', orders)\n    }\n\n    static updateDispensationOrders(orders: any) {\n        return this.postJson('dispensations', {\n            'program_id': this.getProgramID(),\n            dispensations: orders.map((order: any) => ({\n                'date': this.getSessionDate(),\n                'drug_order_id': order['order_id'],\n                'quantity': order['quantity']\n            }))\n        })\n    }\n\n    static getDrugOrderHistory(patientID: number) {\n        return this.getJson('drug_orders', { 'patient_id': patientID })\n    }\n\n    static getDrugOrders(patientID: number) {\n        return this.getJson('drug_orders', {\n            'patient_id': patientID,\n            'date': this.getSessionDate(),\n            'program_id': this.getProgramID()\n        })\n    }\n\n    static getAllDrugOrders(patientID: number, pageSize=1000) {\n        return this.getJson('drug_orders', {\n            'patient_id': patientID,\n            'program_id': Service.getProgramID(),\n            'page_size': pageSize\n        })\n    }\n\n    static getLastDrugsReceived(patientID: number) {\n        return this.getJson(`patients/${patientID}/last_drugs_received`, {\n            'date': this.getSessionDate(),\n            'program_id': this.getProgramID()\n        })\n    }\n\n    static getDrugDosages(patientID: number, drugID: number, date=this.getSessionDate()) {\n        const params = { 'drug_id': drugID, 'date': date }\n        return this.getJson(`programs/${this.getProgramID()}/patients/${patientID}/drug_doses`, params)\n    }\n\n    static getOrderByPatient(patientId: number, params: any) {\n        return this.getJson('/drug_orders', {\n            'patient_id': patientId,\n            'program_id': this.getProgramID(),\n            ...params\n        })\n    }\n\n}","import { optionsActionSheet } from '@/utils/ActionSheets'\n\nexport default async function popVoidReason(callback: Function, size = 'action-sheet-modal') {\n    const modal = await optionsActionSheet(\n        'Are you sure you want to void record?',\n        'Please specify reason for voiding this record',\n        [\n          'Mistake/ Wrong Entry',\n          'Duplicate',\n          'System Error' \n        ],\n        [\n            { name: 'Cancel', slot:'start'},\n            { name: 'Void', color: 'danger', slot:'end', role: 'action'}\n        ],\n        '',\n        size\n    )\n    if (modal.selection && modal.action === 'Void') {\n        await callback(modal.selection)\n    }\n}\n","import { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment } from \"vue\"\n\nconst _hoisted_1 = { key: 0 }\nconst _hoisted_2 = { key: 1 }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ion_title = _resolveComponent(\"ion-title\")!\n  const _component_ion_toolbar = _resolveComponent(\"ion-toolbar\")!\n  const _component_ion_header = _resolveComponent(\"ion-header\")!\n  const _component_his_basic_table = _resolveComponent(\"his-basic-table\")!\n  const _component_text_skeloton = _resolveComponent(\"text-skeloton\")!\n  const _component_ion_content = _resolveComponent(\"ion-content\")!\n  const _component_ion_button = _resolveComponent(\"ion-button\")!\n  const _component_ion_footer = _resolveComponent(\"ion-footer\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(_component_ion_header, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_title, null, {\n              default: _withCtx(() => [\n                _createTextVNode(_toDisplayString(_ctx.title), 1)\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_content, null, {\n      default: _withCtx(() => [\n        (_ctx.ready)\n          ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n              _createVNode(_component_his_basic_table, {\n                columns: _ctx.columns,\n                rows: _ctx.rows\n              }, null, 8, [\"columns\", \"rows\"])\n            ]))\n          : (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [\n              _createVNode(_component_text_skeloton)\n            ]))\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_footer, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_button, {\n              color: \"danger\",\n              onClick: _ctx.closeModal,\n              slot: \"end\"\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\" Close \")\n              ]),\n              _: 1\n            }, 8, [\"onClick\"])\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    })\n  ], 64))\n}","\nimport { defineComponent, PropType } from \"vue\";\nimport HisBasicTable from \"./HisBasicTable.vue\";\nimport { modalController } from \"@ionic/vue\";\nimport TextSkeloton from \"@/components/TextSkeleton.vue\"\nimport {\n  IonHeader, \n  IonToolbar, \n  IonContent, \n  IonFooter, \n  IonButton\n} from \"@ionic/vue\"\nexport default defineComponent({\n  components: { \n    HisBasicTable,\n    IonHeader, \n    IonToolbar, \n    IonContent, \n    IonFooter, \n    IonButton,\n    TextSkeloton\n  },\n  props: {\n    title: {\n      type: String,\n      required: true,\n    },\n    columns: {\n      type: Object as PropType<string[]>,\n      required: true,\n    },\n    onRows: {\n      type: Function,\n      required: true,\n    },\n  },\n  data: () => ({\n    rows: [] as Array<any>,\n    ready: false,\n  }),\n  watch: {\n    onRows: {\n      async handler(func: Function) {\n        if (func) {\n          this.rows = await func();\n          this.ready = true;\n        }\n      },\n      immediate: true,\n      deep: true,\n    },\n  },\n  methods: {\n    async closeModal() {\n      await modalController.dismiss({});\n    },\n  },\n});\n","import { render } from \"./DrillTableModal.vue?vue&type=template&id=0cd2f14a&ts=true\"\nimport script from \"./DrillTableModal.vue?vue&type=script&lang=ts\"\nexport * from \"./DrillTableModal.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/projects/malawi-emr/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { AppEncounterService } from \"@/services/app_encounter_service\";\n\nexport class AppointmentService extends AppEncounterService {\n  constructor(patientID: number, providerID: number) {\n    super(patientID, 7, providerID);\n  }\n\n  async getNextAppointment() {\n    return AppEncounterService.getJson(`/programs/${this.programID}/patients/${this.patientID}/next_appointment_date`, {date: this.date})\n  }\n  \n  static async getDailiyAppointments(date: any) {\n    const programID = AppEncounterService.getProgramID();\n    return AppEncounterService.getJson(`/programs/${programID}/booked_appointments`, {date: date, paginate: false})\n  }\n\n}","import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, withCtx as _withCtx, createVNode as _createVNode } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_information_header = _resolveComponent(\"information-header\")!\n  const _component_ion_col = _resolveComponent(\"ion-col\")!\n  const _component_ion_row = _resolveComponent(\"ion-row\")!\n  const _component_visits_summary = _resolveComponent(\"visits-summary\")!\n  const _component_ion_grid = _resolveComponent(\"ion-grid\")!\n\n  return (_ctx.isReady)\n    ? (_openBlock(), _createBlock(_component_ion_grid, {\n        key: 0,\n        class: \"ion-no-margin ion-no-padding\"\n      }, {\n        default: _withCtx(() => [\n          _createVNode(_component_ion_row, null, {\n            default: _withCtx(() => [\n              _createVNode(_component_ion_col, { size: \"12\" }, {\n                default: _withCtx(() => [\n                  (_ctx.patient)\n                    ? (_openBlock(), _createBlock(_component_information_header, {\n                        key: 0,\n                        patient: _ctx.patient,\n                        guardians: _ctx.guardians,\n                        artStartDate: _ctx.artStartDate,\n                        onUpdateARVNumber: _ctx.updateARVNumber,\n                        onAddGuardian: _ctx.addGuardian,\n                        onUpdatePatient: _ctx.updateDemographics\n                      }, null, 8, [\"patient\", \"guardians\", \"artStartDate\", \"onUpdateARVNumber\", \"onAddGuardian\", \"onUpdatePatient\"]))\n                    : _createCommentVNode(\"\", true)\n                ]),\n                _: 1\n              })\n            ]),\n            _: 1\n          }),\n          _createVNode(_component_ion_row, null, {\n            default: _withCtx(() => [\n              _createVNode(_component_ion_col, null, {\n                default: _withCtx(() => [\n                  (_ctx.patient)\n                    ? (_openBlock(), _createBlock(_component_visits_summary, {\n                        key: 0,\n                        patient: _ctx.patient,\n                        startDate: _ctx.artStartDate\n                      }, null, 8, [\"patient\", \"startDate\"]))\n                    : _createCommentVNode(\"\", true)\n                ]),\n                _: 1\n              })\n            ]),\n            _: 1\n          })\n        ]),\n        _: 1\n      }))\n    : _createCommentVNode(\"\", true)\n}","import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, withCtx as _withCtx, createVNode as _createVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-4936bde9\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", { class: \"title\" }, \"Summary of Visits\", -1))\nconst _hoisted_2 = { class: \"ion-float-right ion-margin-end ion-margin-bottom\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ion_icon = _resolveComponent(\"ion-icon\")!\n  const _component_ion_button = _resolveComponent(\"ion-button\")!\n  const _component_ion_card_title = _resolveComponent(\"ion-card-title\")!\n  const _component_ion_card_header = _resolveComponent(\"ion-card-header\")!\n  const _component_report_table = _resolveComponent(\"report-table\")!\n  const _component_ion_card_content = _resolveComponent(\"ion-card-content\")!\n  const _component_ion_card = _resolveComponent(\"ion-card\")!\n\n  return (_openBlock(), _createBlock(_component_ion_card, {\n    class: \"his-card\",\n    style: {\"padding\":\"0 !important\"}\n  }, {\n    default: _withCtx(() => [\n      _createVNode(_component_ion_card_header, null, {\n        default: _withCtx(() => [\n          _createVNode(_component_ion_card_title, null, {\n            default: _withCtx(() => [\n              _hoisted_1,\n              _createElementVNode(\"span\", _hoisted_2, [\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.actionButtons, (btn) => {\n                  return (_openBlock(), _createBlock(_component_ion_button, {\n                    key: btn.label,\n                    onClick: btn.action,\n                    color: btn.color || 'primary'\n                  }, {\n                    default: _withCtx(() => [\n                      (btn.icon)\n                        ? (_openBlock(), _createBlock(_component_ion_icon, {\n                            key: 0,\n                            icon: btn.icon,\n                            class: \"ion-margin-right\"\n                          }, null, 8, [\"icon\"]))\n                        : _createCommentVNode(\"\", true),\n                      _createTextVNode(\" \" + _toDisplayString(btn.label), 1)\n                    ]),\n                    _: 2\n                  }, 1032, [\"onClick\", \"color\"]))\n                }), 128))\n              ])\n            ]),\n            _: 1\n          })\n        ]),\n        _: 1\n      }),\n      _createVNode(_component_ion_card_content, {\n        class: \"ion-no-padding\",\n        style: {\"min-height\":\"45vh\"}\n      }, {\n        default: _withCtx(() => [\n          _createVNode(_component_report_table, {\n            rows: _ctx.rows,\n            columns: _ctx.columns,\n            config: _ctx.tableConfig\n          }, null, 8, [\"rows\", \"columns\", \"config\"])\n        ]),\n        _: 1\n      })\n    ]),\n    _: 1\n  }))\n}","import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ion_title = _resolveComponent(\"ion-title\")!\n  const _component_ion_toolbar = _resolveComponent(\"ion-toolbar\")!\n  const _component_ion_header = _resolveComponent(\"ion-header\")!\n  const _component_DateInput = _resolveComponent(\"DateInput\")!\n  const _component_ion_col = _resolveComponent(\"ion-col\")!\n  const _component_SelectInput = _resolveComponent(\"SelectInput\")!\n  const _component_NumberInput = _resolveComponent(\"NumberInput\")!\n  const _component_ion_row = _resolveComponent(\"ion-row\")!\n  const _component_ion_label = _resolveComponent(\"ion-label\")!\n  const _component_ion_checkbox = _resolveComponent(\"ion-checkbox\")!\n  const _component_ion_item = _resolveComponent(\"ion-item\")!\n  const _component_ion_grid = _resolveComponent(\"ion-grid\")!\n  const _component_ion_content = _resolveComponent(\"ion-content\")!\n  const _component_ion_button = _resolveComponent(\"ion-button\")!\n  const _component_ion_footer = _resolveComponent(\"ion-footer\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(_component_ion_header, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_title, null, {\n              default: _withCtx(() => [\n                _createTextVNode(\"Viral Load Results\")\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_content, { class: \"ion-padding\" }, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_grid, { style: {\"width\":\"100%\"} }, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_row, null, {\n              default: _withCtx(() => [\n                _createVNode(_component_ion_col, {\n                  size: \"12\",\n                  class: \"ion-margin-vertical\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_DateInput, {\n                      modelValue: _ctx.form.orderDate,\n                      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((_ctx.form.orderDate) = $event)),\n                      form: _ctx.form,\n                      minDate: _ctx.birthdate,\n                      maxDate: _ctx.today\n                    }, null, 8, [\"modelValue\", \"form\", \"minDate\", \"maxDate\"])\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ion_col, {\n                  size: \"6\",\n                  class: \"ion-margin-vertical\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_SelectInput, {\n                      modelValue: _ctx.form.reason,\n                      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((_ctx.form.reason) = $event)),\n                      options: _ctx.reasons\n                    }, null, 8, [\"modelValue\", \"options\"])\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ion_col, {\n                  size: \"6\",\n                  class: \"ion-margin-vertical\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_SelectInput, {\n                      modelValue: _ctx.form.specimenConcept,\n                      \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((_ctx.form.specimenConcept) = $event)),\n                      options: _ctx.specimens\n                    }, null, 8, [\"modelValue\", \"options\"])\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ion_col, {\n                  size: \"12\",\n                  class: \"ion-margin-vertical\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_DateInput, {\n                      modelValue: _ctx.form.resultDate,\n                      \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((_ctx.form.resultDate) = $event)),\n                      form: _ctx.form,\n                      minDate: _ctx.form.orderDate.value,\n                      \"max-date\": _ctx.today\n                    }, null, 8, [\"modelValue\", \"form\", \"minDate\", \"max-date\"])\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ion_col, {\n                  size: \"6\",\n                  class: \"ion-margin-vertical\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_SelectInput, {\n                      modelValue: _ctx.form.modifier,\n                      \"onUpdate:modelValue\": _cache[4] || (_cache[4] = ($event: any) => ((_ctx.form.modifier) = $event)),\n                      options: _ctx.modifiers\n                    }, null, 8, [\"modelValue\", \"options\"])\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ion_col, {\n                  size: \"6\",\n                  class: \"ion-margin-vertical\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_NumberInput, {\n                      modelValue: _ctx.form.result,\n                      \"onUpdate:modelValue\": _cache[5] || (_cache[5] = ($event: any) => ((_ctx.form.result) = $event)),\n                      form: _ctx.form,\n                      min: 1\n                    }, null, 8, [\"modelValue\", \"form\"])\n                  ]),\n                  _: 1\n                })\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_ion_row, { class: \"ion-margin-top\" }, {\n              default: _withCtx(() => [\n                _createVNode(_component_ion_col, { size: \"12\" }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_ion_label, { class: \"ion-padding-vertical bold\" }, {\n                      default: _withCtx(() => [\n                        _createTextVNode(\"Other Results Options: \")\n                      ]),\n                      _: 1\n                    }),\n                    _createVNode(_component_ion_item, null, {\n                      default: _withCtx(() => [\n                        _createVNode(_component_ion_label, null, {\n                          default: _withCtx(() => [\n                            _createTextVNode(\"LDL\")\n                          ]),\n                          _: 1\n                        }),\n                        _createVNode(_component_ion_checkbox, {\n                          slot: \"start\",\n                          modelValue: _ctx.ldl,\n                          \"onUpdate:modelValue\": _cache[6] || (_cache[6] = ($event: any) => ((_ctx.ldl) = $event))\n                        }, null, 8, [\"modelValue\"])\n                      ]),\n                      _: 1\n                    })\n                  ]),\n                  _: 1\n                })\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_footer, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_button, {\n              color: \"primary\",\n              onClick: _cache[7] || (_cache[7] = ($event: any) => (_ctx.modal.hide())),\n              slot: \"end\"\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\"Close\")\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_ion_button, {\n              color: \"warning\",\n              onClick: _ctx.resetResults,\n              slot: \"end\"\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\"Reset\")\n              ]),\n              _: 1\n            }, 8, [\"onClick\"]),\n            _createVNode(_component_ion_button, {\n              color: \"success\",\n              onClick: _ctx.saveResults,\n              slot: \"end\"\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\"Save\")\n              ]),\n              _: 1\n            }, 8, [\"onClick\"])\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    })\n  ], 64))\n}","\nimport { defineComponent, onMounted, PropType, reactive, ref, watch } from \"vue\";\nimport { \n  IonCol, \n  IonGrid, \n  IonRow, \n  IonContent, \n  IonFooter, \n  IonHeader, \n  IonTitle, \n  IonToolbar, \n  IonButton, \n  IonLabel, \n  IonCheckbox,\n  IonItem\n} from \"@ionic/vue\";\nimport { DTForm } from \"../../interfaces/dt_form_field\";\nimport { Patientservice } from \"@/services/patient_service\";\nimport DateInput from \"../inputs/DateInput.vue\";\nimport SelectInput from \"../inputs/SelectInput.vue\";\nimport NumberInput from \"../inputs/NumberInput.vue\";\nimport dayjs from \"dayjs\";\nimport { toOptions } from \"../../utils/DTFormElements\";\nimport { OrderService } from \"@/services/order_service\";\nimport { LabOrderService } from \"@/apps/ART/services/lab_order_service\";\nimport { Option } from \"@/components/Forms/FieldInterface\";\nimport { ConceptName } from \"@/interfaces/conceptName\";\nimport { submitForm } from \"../../utils/form\";\nimport { PatientLabResultService } from \"@/services/patient_lab_result_service\";\nimport { ConceptService } from \"@/services/concept_service\";\nimport EventBus from \"@/utils/EventBus\";\nimport { EmcEvents } from \"../../interfaces/emc_event\";\nimport { modal } from \"@/utils/modal\";\nimport { alertConfirmation } from \"@/utils/Alerts\";\nimport { STANDARD_DATE_FORMAT } from \"@/utils/Date\";\n\nexport default defineComponent({\n  components: {\n    IonContent,\n    IonFooter,\n    IonHeader,\n    IonTitle,\n    IonToolbar,\n    IonButton,\n    IonLabel,\n    IonGrid,\n    IonRow,\n    IonCol,\n    IonCheckbox,\n    IonItem,\n    DateInput,\n    SelectInput,\n    NumberInput,\n  },\n  props: {\n    patient: {\n      type: Object as PropType<Patientservice>,\n      required: true\n    },\n  },\n  setup(props) {\n    const ldl = ref(false);\n    const modifiers = toOptions(['=', '>', '<', '>=', '<=']);\n    const reasons = toOptions([\n      \"Routine\", \n      \"Targeted\", \n      \"Confirmatory\", \n      \"Stat\", \n      \"Repeat / Missing\",\n      \"Follow up after Low Level Viremia\",\n      \"Follow up after High Viral Load\"\n    ])\n    const specimens = ref<Option[]>([])\n    const today = dayjs().format(STANDARD_DATE_FORMAT)\n    const birthdate = dayjs(props.patient.getBirthdate()).format(STANDARD_DATE_FORMAT)\n\n    const form = reactive<DTForm>({\n      orderDate: {\n        value: '',\n        label: 'Order Date',\n        required: true,\n        validation: async (date) => {\n          if (!dayjs(date.value).isValid()) {\n            return ['Invalid date'];\n          }\n          if(new Date(date.value) > new Date(today)) {\n            return ['Order date cannot be in the future'];\n          }\n          if(new Date(date.value) < new Date(birthdate)) {\n            return ['Order date cannot be before patient\\'s date of birth'];\n          }\n          return null\n        }\n      },\n      resultDate: {\n        value: '',\n        label: 'Result Date',\n        required: true,\n        validation: async (date, form) => {\n          if (!dayjs(date.value).isValid()) {\n            return ['Invalid date'];\n          }\n          if(new Date(date.value) > new Date(today)) {\n            return ['Result date cannot be in the future'];\n          }\n          if(new Date(date.value) < new Date(form.orderDate.value)) {\n            return ['Result date cannot be before order date'];\n          }\n          return null\n        }\n      },\n      specimenConcept: {\n        value: '',\n        label: 'Specimen',\n        placeholder: 'Select a specimen',\n        required: true,\n      },\n      modifier: {\n        value: '',\n        label: 'Modifier',\n        placeholder: 'Select a modifier',\n        required: true,\n      },\n      reason: {\n        value: '',\n        label: 'Reason',\n        placeholder: 'Select a reason',\n        required: true,\n      },\n      result: {\n        value: '',\n        label: 'Result Value',\n        placeholder: 'Enter a result value',\n        required: true,\n      }\n    });\n\n    const saveResults = async () => submitForm(form, async (formData) => {\n      await LabOrderService.setSessionDate(formData.orderDate)\n      const orderService = new LabOrderService(props.patient.getID(), -1)\n      const vlConceptId = await ConceptService.getConceptID(\"HIV viral load\")\n      const encounter = await orderService.createEncounter();\n      if(!encounter) throw new Error('Unable to create lab order encounter');\n      const formattedOrders  = await OrderService.buildLabOrders(encounter, [{\n        'specimenConcept': formData.specimenConcept.value,\n        'reason': formData.reason.value,\n        'concept_id': vlConceptId\n      }]);\n      const orders = await  OrderService.saveOrdersArray(encounter.encounter_id, formattedOrders);\n      if(!orders) throw new Error('Unable to save lab orders');\n\n      await PatientLabResultService.setSessionDate(formData.resultDate)\n      const resultService = new PatientLabResultService(props.patient.getID())\n      resultService.setTestID(orders[0].tests[0].id)\n      resultService.setResultDate(formData.resultDate)\n      const resultEnc = await resultService.createEncounter()\n      if(!resultEnc) throw new Error(\"Unable to create lab result encounter\")\n      await resultService.createLabResult([{\n        \"indicator\": {\n          \"concept_id\": vlConceptId,\n        },\n        \"value\": ldl.value ? \"LDL\" : parseInt(formData.result),\n        \"value_modifier\": ldl.value ? \"=\" : formData.modifier.value,\n        \"value_type\": ldl.value ? \"text\" : \"numeric\"\n      }])\n\n      await PatientLabResultService.resetSessionDate()\n      await modal.hide()\n      EventBus.emit(EmcEvents.RELOAD_LATEST_VL_RESULT)\n      EventBus.emit(EmcEvents.RELOAD_PATIENT_VISIT_DATA)\n    })\n\n    const resetResults = async () => {\n      if((await alertConfirmation(\"Are you sure you want to clear all fields?\"))){\n        ldl.value = false\n        for(const key in form) {\n          form[key].value = '';\n          form[key].error = ''\n        }\n        EventBus.emit(EmcEvents.ON_CLEAR);\n      }\n    };\n\n    watch(ldl, (isLDL) => {\n      if(isLDL) {\n        form.modifier.value = \"\";\n        form.result.value = undefined;\n        form.modifier.error = ''\n        form.result.error = ''\n      }\n      form.modifier.disabled = isLDL;\n      form.modifier.required = !isLDL;\n      form.result.disabled = isLDL;\n      form.result.required = !isLDL;\n    });\n\n    onMounted(async () => {\n      specimens.value = (await OrderService.getSpecimens(\"HIV viral load\"))\n        .map((specimen: ConceptName) => ({\n          label: specimen.name,\n          value: specimen['concept_id']\n        })\n      )\n    })\n\n    return {\n      today,\n      birthdate,\n      form,\n      modifiers,\n      reasons,\n      specimens,\n      ldl,\n      modal,\n      resetResults,\n      saveResults,\n    };\n  },\n})\n","import { render } from \"./ViralLoadResult.vue?vue&type=template&id=1784043e&ts=true\"\nimport script from \"./ViralLoadResult.vue?vue&type=script&lang=ts\"\nexport * from \"./ViralLoadResult.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/projects/malawi-emr/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, normalizeStyle as _normalizeStyle, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ion_title = _resolveComponent(\"ion-title\")!\n  const _component_ion_toolbar = _resolveComponent(\"ion-toolbar\")!\n  const _component_ion_header = _resolveComponent(\"ion-header\")!\n  const _component_ion_badge = _resolveComponent(\"ion-badge\")!\n  const _component_ion_col = _resolveComponent(\"ion-col\")!\n  const _component_ion_row = _resolveComponent(\"ion-row\")!\n  const _component_enrollment_form = _resolveComponent(\"enrollment-form\")!\n  const _component_outcome_form = _resolveComponent(\"outcome-form\")!\n  const _component_outcomes_table = _resolveComponent(\"outcomes-table\")!\n  const _component_ion_grid = _resolveComponent(\"ion-grid\")!\n  const _component_ion_content = _resolveComponent(\"ion-content\")!\n  const _component_ion_button = _resolveComponent(\"ion-button\")!\n  const _component_ion_footer = _resolveComponent(\"ion-footer\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(_component_ion_header, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_title, null, {\n              default: _withCtx(() => [\n                _createTextVNode(\"Patient Outcomes\")\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_content, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_grid, { style: {\"width\":\"100%\"} }, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_row, null, {\n              default: _withCtx(() => [\n                _createVNode(_component_ion_col, null, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_ion_badge, {\n                      color: \"lightblue\",\n                      class: \"ion-padding\",\n                      style: {\"width\":\"100%\"},\n                      disabled: \"\"\n                    }, {\n                      default: _withCtx(() => [\n                        _createTextVNode(_toDisplayString(_ctx.enrollmentStatus), 1)\n                      ]),\n                      _: 1\n                    })\n                  ]),\n                  _: 1\n                })\n              ]),\n              _: 1\n            }),\n            (!_ctx.isEnrolled)\n              ? (_openBlock(), _createBlock(_component_ion_row, {\n                  key: 0,\n                  class: \"his-card\",\n                  style: {\"margin-bottom\":\".4rem\"}\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_ion_col, { size: \"12\" }, {\n                      default: _withCtx(() => [\n                        _createVNode(_component_enrollment_form, {\n                          patientProgram: _ctx.patientProgram,\n                          birthdate: _ctx.birthdate,\n                          onEnrollProgram: _ctx.enrollProgram\n                        }, null, 8, [\"patientProgram\", \"birthdate\", \"onEnrollProgram\"])\n                      ]),\n                      _: 1\n                    })\n                  ]),\n                  _: 1\n                }))\n              : (_openBlock(), _createElementBlock(_Fragment, { key: 1 }, [\n                  (_ctx.outcomes)\n                    ? (_openBlock(), _createBlock(_component_ion_row, {\n                        key: 0,\n                        class: \"his-card\",\n                        style: {\"margin-bottom\":\".4rem\"}\n                      }, {\n                        default: _withCtx(() => [\n                          _createVNode(_component_outcome_form, {\n                            \"date-enrolled\": _ctx.enrollDate,\n                            birthdate: _ctx.birthdate,\n                            outcomes: _ctx.outcomes,\n                            onSaveOutcome: _ctx.saveOutcome\n                          }, null, 8, [\"date-enrolled\", \"birthdate\", \"outcomes\", \"onSaveOutcome\"])\n                        ]),\n                        _: 1\n                      }))\n                    : _createCommentVNode(\"\", true),\n                  _createVNode(_component_ion_row, {\n                    class: \"his-card\",\n                    style: _normalizeStyle([{\"padding\":\"0 !important\"}, { minHeight: _ctx.totalStates ? '0' : '30vh'}])\n                  }, {\n                    default: _withCtx(() => [\n                      _createVNode(_component_ion_col, {\n                        size: \"12\",\n                        class: \"ion-no-padding\"\n                      }, {\n                        default: _withCtx(() => [\n                          _createVNode(_component_outcomes_table, {\n                            patientStates: _ctx.program?.patient_states,\n                            onVoidOutcome: _ctx.voidOutcome\n                          }, null, 8, [\"patientStates\", \"onVoidOutcome\"])\n                        ]),\n                        _: 1\n                      })\n                    ]),\n                    _: 1\n                  }, 8, [\"style\"])\n                ], 64))\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_footer, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_button, {\n              color: \"primary\",\n              onClick: _cache[0] || (_cache[0] = ($event: any) => (_ctx.modal.hide())),\n              slot: \"end\"\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\"Close\")\n              ]),\n              _: 1\n            }),\n            (_ctx.isEnrolled)\n              ? (_openBlock(), _createBlock(_component_ion_button, {\n                  key: 0,\n                  color: \"danger\",\n                  onClick: _ctx.voidProgram,\n                  slot: \"end\"\n                }, {\n                  default: _withCtx(() => [\n                    _createTextVNode(\"Void Program\")\n                  ]),\n                  _: 1\n                }, 8, [\"onClick\"]))\n              : _createCommentVNode(\"\", true)\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    })\n  ], 64))\n}","import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"ion-padding-horizontal ion-margin-vertical bold ion-margin-top\" }, \"Previous Outcomes\", -1)\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_data_table = _resolveComponent(\"data-table\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _hoisted_1,\n    _createVNode(_component_data_table, {\n      rows: _ctx.rows,\n      columns: _ctx.columns,\n      config: _ctx.tableConfig,\n      \"row-actions-buttons\": _ctx.TableRowActions,\n      color: \"custom\"\n    }, null, 8, [\"rows\", \"columns\", \"config\", \"row-actions-buttons\"])\n  ], 64))\n}","\nimport { computed, defineComponent, PropType } from \"vue\";\nimport { alertConfirmation } from \"@/utils/Alerts\";\nimport dayjs from \"dayjs\";\nimport { DISPLAY_DATE_FORMAT } from \"@/utils/Date\";\nimport { DataTable, RowActionButtonInterface, TableColumnInterface, TableConfigInterface } from '@uniquedj95/vtable'\n\nexport default defineComponent({\n  name: \"OutcomesTable\",\n  props: {\n    patientStates: {\n      type: Array as PropType<Array<any>>,\n      required: true\n    },\n  },\n  components: {\n    DataTable,\n  },\n  emits: [\"voidOutcome\"],\n  setup(props, { emit }) {\n    const columns: TableColumnInterface[] = [\n      { path: 'name', label: \"Outcome\"},\n      { path: 'start_date', label: \"Start Date\", formatter: (v) => dayjs(v).format(DISPLAY_DATE_FORMAT) },\n      { path: 'end_date', label: \"End Date\", formatter: (v) => dayjs(v).format(DISPLAY_DATE_FORMAT) },\n    ];\n\n    const tableConfig: TableConfigInterface = {\n      showSearchField: false,\n      showSubmitButton: false\n    }\n\n    const rows = computed<any[]>(() => props.patientStates.map((state: any, index: number) => ({\n      ...state,\n      index\n    })));\n\n    const TableRowActions: RowActionButtonInterface[] = [\n      { label: \"void\", color: 'danger', action: async (row) => {\n        if((await alertConfirmation(\"Are you sure you want to void this outcome?\"))){\n          emit(\"voidOutcome\", {stateId: row.patient_state_id, index: row.index});\n        }\n      }}\n    ]\n\n    return {\n      rows,\n      columns,\n      tableConfig,\n      TableRowActions,\n    };\n  }\n})\n","import { render } from \"./OutcomesTable.vue?vue&type=template&id=eb2cc154&ts=true\"\nimport script from \"./OutcomesTable.vue?vue&type=script&lang=ts\"\nexport * from \"./OutcomesTable.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/projects/malawi-emr/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_DateInput = _resolveComponent(\"DateInput\")!\n  const _component_ion_col = _resolveComponent(\"ion-col\")!\n  const _component_ion_button = _resolveComponent(\"ion-button\")!\n  const _component_ion_row = _resolveComponent(\"ion-row\")!\n  const _component_ion_grid = _resolveComponent(\"ion-grid\")!\n\n  return (_openBlock(), _createBlock(_component_ion_grid, null, {\n    default: _withCtx(() => [\n      _createVNode(_component_ion_row, null, {\n        default: _withCtx(() => [\n          _createVNode(_component_ion_col, { size: \"12\" }, {\n            default: _withCtx(() => [\n              _createVNode(_component_DateInput, {\n                modelValue: _ctx.form.date,\n                \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((_ctx.form.date) = $event)),\n                form: _ctx.form,\n                minDate: _ctx.birthdate,\n                \"max-date\": _ctx.today\n              }, null, 8, [\"modelValue\", \"form\", \"minDate\", \"max-date\"])\n            ]),\n            _: 1\n          }),\n          _createVNode(_component_ion_col, null, {\n            default: _withCtx(() => [\n              _createVNode(_component_ion_button, {\n                color: \"warning\",\n                onClick: _ctx.onReset\n              }, {\n                default: _withCtx(() => [\n                  _createTextVNode(\"Reset\")\n                ]),\n                _: 1\n              }, 8, [\"onClick\"]),\n              _createVNode(_component_ion_button, {\n                color: \"success\",\n                onClick: _ctx.enrollProgram\n              }, {\n                default: _withCtx(() => [\n                  _createTextVNode(\"Enroll\")\n                ]),\n                _: 1\n              }, 8, [\"onClick\"])\n            ]),\n            _: 1\n          })\n        ]),\n        _: 1\n      })\n    ]),\n    _: 1\n  }))\n}","\nimport { alertConfirmation } from \"@/utils/Alerts\";\nimport EventBus from \"@/utils/EventBus\";\nimport { IonGrid, IonRow, IonCol, IonButton } from \"@ionic/vue\";\nimport dayjs from \"dayjs\";\nimport { defineComponent, reactive } from \"vue\";\nimport { DTForm } from \"../interfaces/dt_form_field\";\nimport { EmcEvents } from \"../interfaces/emc_event\";\nimport { submitForm } from \"../utils/form\";\nimport DateInput from \"./inputs/DateInput.vue\";\n\nexport default defineComponent({\n  name: \"EnrollmentForm\",\n  components: {\n    DateInput,\n    IonGrid,\n    IonRow,\n    IonCol,\n    IonButton,\n  },\n  props: [\"birthdate\"],\n  emits: [\"enrollProgram\"],\n  setup(props, { emit }) {\n    const today = dayjs().format(\"YYYY-MM-DD\");\n    const form = reactive<DTForm>({\n      date: {\n        value: \"\",\n        label: \"Date of Enrollment\",\n        required: true,\n        validation: async (date) => {\n          if(new Date(date.value) < new Date(props.birthdate)) return [\"Date of enrollment cannot be before date of birth\"]\n          if(new Date(date.value) > new Date(today)) return [\"Date of enrollment cannot be in the future\"]\n          return null\n        }\n      },\n    })\n\n    const onReset = async () => {\n      if((await alertConfirmation(\"Are you sure you want to clear all fields\"))){\n        form.date.value = \"\";\n        form.date.error = \"\";\n        EventBus.emit(EmcEvents.ON_CLEAR)\n      }\n    }\n\n    const enrollProgram = async () => submitForm(form, ({ date }) => emit(\"enrollProgram\", date))\n\n    return {\n      form,\n      today,\n      onReset,\n      enrollProgram,\n    }\n  }\n})\n","import { render } from \"./EnrollmentForm.vue?vue&type=template&id=4068b4a6&ts=true\"\nimport script from \"./EnrollmentForm.vue?vue&type=script&lang=ts\"\nexport * from \"./EnrollmentForm.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/projects/malawi-emr/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode } from \"vue\"\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Add New Outcome\", -1)\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ion_col = _resolveComponent(\"ion-col\")!\n  const _component_DateInput = _resolveComponent(\"DateInput\")!\n  const _component_SelectInput = _resolveComponent(\"SelectInput\")!\n  const _component_text_input = _resolveComponent(\"text-input\")!\n  const _component_ion_button = _resolveComponent(\"ion-button\")!\n  const _component_ion_row = _resolveComponent(\"ion-row\")!\n  const _component_ion_grid = _resolveComponent(\"ion-grid\")!\n\n  return (_openBlock(), _createBlock(_component_ion_grid, null, {\n    default: _withCtx(() => [\n      _createVNode(_component_ion_row, null, {\n        default: _withCtx(() => [\n          _createVNode(_component_ion_col, { size: \"12\" }, {\n            default: _withCtx(() => [\n              _hoisted_1\n            ]),\n            _: 1\n          }),\n          _createVNode(_component_ion_col, {\n            size: \"6\",\n            class: \"ion-margin-top-vertical\"\n          }, {\n            default: _withCtx(() => [\n              _createVNode(_component_DateInput, {\n                modelValue: _ctx.form.date,\n                \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((_ctx.form.date) = $event)),\n                form: _ctx.form,\n                minDate: _ctx.dateEnrolled,\n                \"max-date\": _ctx.today\n              }, null, 8, [\"modelValue\", \"form\", \"minDate\", \"max-date\"])\n            ]),\n            _: 1\n          }),\n          _createVNode(_component_ion_col, {\n            size: \"6\",\n            class: \"ion-margin-top-vertical\"\n          }, {\n            default: _withCtx(() => [\n              _createVNode(_component_SelectInput, {\n                modelValue: _ctx.form.status,\n                \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((_ctx.form.status) = $event)),\n                form: _ctx.form,\n                options: _ctx.outcomes\n              }, null, 8, [\"modelValue\", \"form\", \"options\"])\n            ]),\n            _: 1\n          }),\n          (_ctx.isTransferredOut)\n            ? (_openBlock(), _createElementBlock(_Fragment, { key: 0 }, [\n                _createVNode(_component_ion_col, {\n                  size: \"6\",\n                  class: \"ion-margin-top-vertical\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_SelectInput, {\n                      modelValue: _ctx.form.nextFacility,\n                      \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((_ctx.form.nextFacility) = $event)),\n                      form: _ctx.form,\n                      asyncOptions: _ctx.getFacilities\n                    }, null, 8, [\"modelValue\", \"form\", \"asyncOptions\"])\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ion_col, {\n                  size: \"6\",\n                  class: \"ion-margin-top-vertical\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_SelectInput, {\n                      modelValue: _ctx.form.reason,\n                      \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((_ctx.form.reason) = $event)),\n                      form: _ctx.form,\n                      options: _ctx.transferOutReasons\n                    }, null, 8, [\"modelValue\", \"form\", \"options\"])\n                  ]),\n                  _: 1\n                }),\n                (_ctx.specifyOther)\n                  ? (_openBlock(), _createBlock(_component_ion_col, {\n                      key: 0,\n                      size: \"12\",\n                      class: \"ion-margin-top-vertical\"\n                    }, {\n                      default: _withCtx(() => [\n                        _createVNode(_component_text_input, {\n                          modelValue: _ctx.form.otherReason,\n                          \"onUpdate:modelValue\": _cache[4] || (_cache[4] = ($event: any) => ((_ctx.form.otherReason) = $event)),\n                          form: _ctx.form\n                        }, null, 8, [\"modelValue\", \"form\"])\n                      ]),\n                      _: 1\n                    }))\n                  : _createCommentVNode(\"\", true)\n              ], 64))\n            : _createCommentVNode(\"\", true),\n          _createVNode(_component_ion_col, {\n            size: \"12\",\n            class: \"ion-margin-top\"\n          }, {\n            default: _withCtx(() => [\n              _createVNode(_component_ion_button, {\n                color: \"warning\",\n                onClick: _ctx.onReset\n              }, {\n                default: _withCtx(() => [\n                  _createTextVNode(\"Reset\")\n                ]),\n                _: 1\n              }, 8, [\"onClick\"]),\n              _createVNode(_component_ion_button, {\n                color: \"success\",\n                onClick: _ctx.onSave\n              }, {\n                default: _withCtx(() => [\n                  _createTextVNode(\"Save\")\n                ]),\n                _: 1\n              }, 8, [\"onClick\"])\n            ]),\n            _: 1\n          })\n        ]),\n        _: 1\n      })\n    ]),\n    _: 1\n  }))\n}","\nimport { IonGrid, IonRow, IonCol, IonButton } from \"@ionic/vue\";\nimport dayjs from \"dayjs\";\nimport { computed, defineComponent, PropType, reactive } from \"vue\";\nimport { DTForm } from \"../interfaces/dt_form_field\";\nimport { submitForm } from \"../utils/form\";\nimport DateInput from \"./inputs/DateInput.vue\";\nimport SelectInput from \"./inputs/SelectInput.vue\";\nimport TextInput from \"./inputs/TextInput.vue\";\nimport StandardValidations from \"@/components/Forms/validations/StandardValidations\";\nimport { Option } from \"@/components/Forms/FieldInterface\";\nimport { getFacilities } from \"@/utils/HisFormHelpers/LocationFieldOptions\";\nimport { DISPLAY_DATE_FORMAT } from \"@/utils/Date\";\nimport EventBus from \"@/utils/EventBus\";\nimport { EmcEvents } from \"../interfaces/emc_event\";\nimport { alertConfirmation } from \"@/utils/Alerts\";\nimport { transferOutReasons } from \"../utils/DTFormElements\"\n\nexport default defineComponent({\n  name: \"OutcomeForm\",\n  props: {\n    outcomes: {\n      type: Array as PropType<Option[]>,\n      required: true,\n    },\n    dateEnrolled: {\n      type: String,\n      required: true\n    },\n    birthdate: {\n      type: String,\n      required: true\n    }\n  },\n  components: {\n    DateInput,\n    IonGrid,\n    IonRow,\n    IonCol,\n    IonButton,\n    SelectInput,\n    TextInput,\n  },\n  emits: [\"saveOutcome\"],\n  setup(props, { emit }) {\n    const today = dayjs().format(\"YYYY-MM-DD\");\n    const form = reactive<DTForm>({\n      date: {\n        value: \"\",\n        label: \"Outcome Date\",\n        required: true,\n        validation: async (date) => {\n          if(new Date(date.value) < new Date(props.birthdate)) return [`Outcome date cannot be before date of birth - ${dayjs(props.birthdate).format(DISPLAY_DATE_FORMAT)}` ]\n          if(new Date(date.value) < new Date(props.dateEnrolled)) return [`Outcome date cannot be before enrollment date- ${dayjs(props.dateEnrolled).format(DISPLAY_DATE_FORMAT)}`]\n          return null\n        }\n      },\n      status: {\n        value: \"\",\n        label: \"Outcome\",\n        required: true,\n      },\n      nextFacility: {\n        value: \"\",\n        label: \"Next Facility\",\n        validation: async (facility, form) => {\n          return form.status.value.label === \"Patient transferred out\" && \n            StandardValidations.required(facility);\n        }\n      },\n      reason: {\n        value: \"\",\n        label: \"Reason for transfer out\",\n        validation: async (reason, form) => {\n          return form.status.value.label === \"Patient transferred out\" && \n            StandardValidations.required(reason);\n        }\n      },\n      otherReason: {\n        value: \"\",\n        label: \"Other reason for transfer out\",\n        placeholder: \"Specify other reason for transfer out\",\n        validation: async (reason, form) => {\n          return form.status?.value?.label === \"Patient transferred out\" && \n            form.reason?.value?.label === \"Other\" &&\n            StandardValidations.required(reason);\n        }\n      },\n    })\n\n    const isTransferredOut = computed(() => form.status.value?.label === \"Patient transferred out\");\n    const specifyOther = computed(() => form.reason?.value?.label === \"Other\")\n\n    const onReset = async () => {\n      if((await alertConfirmation(\"are you sure you want to clear all fields\"))) {\n        for (const key in form) {\n          form[key].value = '';\n          form[key].error = '';\n        }\n        EventBus.emit(EmcEvents.ON_CLEAR)\n      }\n    }\n\n    const onSave = () => submitForm(form, data => emit(\"saveOutcome\", {\n      ...data, \n      isTransferredOut: isTransferredOut.value \n    }))\n\n    return {\n      form,\n      today,\n      isTransferredOut,\n      specifyOther,\n      onSave,\n      onReset,\n      getFacilities,\n      transferOutReasons\n    }\n  }\n})\n","import { render } from \"./OutcomeForm.vue?vue&type=template&id=ea0b263a&ts=true\"\nimport script from \"./OutcomeForm.vue?vue&type=script&lang=ts\"\nexport * from \"./OutcomeForm.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/projects/malawi-emr/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","\nimport { computed, defineComponent, onMounted, PropType, ref } from \"vue\";\nimport { \n  IonCol, \n  IonGrid, \n  IonRow, \n  IonContent, \n  IonFooter, \n  IonHeader, \n  IonTitle, \n  IonToolbar, \n  IonButton,\n  IonBadge,\n} from \"@ionic/vue\";\nimport { toastSuccess } from \"@/utils/Alerts\";\nimport { PatientProgramService } from \"@/services/patient_program_service\";\nimport { isEmpty } from \"lodash\";\nimport HisDate from \"@/utils/Date\";\nimport { Option } from \"@/components/Forms/FieldInterface\";\nimport OutcomesTable from \"../tables/OutcomesTable.vue\";\nimport EnrollmentForm from \"../EnrollmentForm.vue\";\nimport OutcomeForm from \"../OutcomeForm.vue\";\nimport { modal } from \"@/utils/modal\";\nimport EventBus from \"@/utils/EventBus\";\nimport { EmcEvents } from \"../../interfaces/emc_event\";\nimport { Patientservice } from \"@/services/patient_service\";\n\nexport default defineComponent({\n  components: {\n    IonContent,\n    IonFooter,\n    IonHeader,\n    IonTitle,\n    IonToolbar,\n    IonButton,\n    IonGrid,\n    IonRow,\n    IonCol,\n    IonBadge,\n    OutcomesTable,\n    EnrollmentForm,\n    OutcomeForm,\n  },\n  props: {\n    patient: {\n      type: Object as PropType<Patientservice>,\n      required: true\n    },\n  },\n  setup(props) {\n    const { toStandardHisDisplayFormat, toStandardHisFormat } = HisDate\n    const patientProgram = new PatientProgramService(props.patient.getID());\n    const birthdate = computed(() => toStandardHisFormat(props.patient.getBirthdate()))\n    const program = ref<Record<string, any>>();\n    const isEnrolled = computed(() => !isEmpty(program.value));\n    const enrollDate = ref('');\n    const outcomes = ref<Option[]>();\n    const totalStates = computed(() => program.value?.patient_states?.length ?? 0);\n    const enrollmentStatus = computed(() => isEnrolled.value && enrollDate.value \n      ? `Patient enrolled in this porgram on ${ toStandardHisDisplayFormat(enrollDate.value) }`\n      : 'Patient is not enrolled in this program'\n    );\n\n    const saveOutcome = async ({ date, status, nextFacility, reason, otherReason, isTransferredOut}: any) => {\n      patientProgram.setStateDate(date);\n      patientProgram.setStateId(status.value);\n      if(isTransferredOut) {\n        const finalReason = reason.value !== 'Other' ? reason.value : otherReason\n        await patientProgram.transferOutEncounter(nextFacility.other, finalReason);\n      }\n      await patientProgram.updateState();\n      await toastSuccess('Outcome saved successfully', 1000);\n      await modal.hide();\n      EventBus.emit(EmcEvents.RELOAD_PATIENT_VISIT_DATA);\n    }\n\n    const enrollProgram = async (date: string) => {\n      patientProgram.setProgramDate(date);\n      await patientProgram.enrollProgram();\n      await toastSuccess(\"Program enrolled successfully\", 1000);\n      await modal.hide();\n      EventBus.emit(EmcEvents.RELOAD_PATIENT_VISIT_DATA);\n    }\n\n    const voidProgram = async () => {\n      patientProgram.setPatientProgramId(program.value?.patient_program_id ||  -1);\n      await patientProgram.voidProgram('duplicate / system error');\n      await toastSuccess('Patient voided from program successfully', 1000);\n      await modal.hide();\n      EventBus.emit(EmcEvents.RELOAD_PATIENT_VISIT_DATA);\n    }\n\n    const voidOutcome = async ({stateId, index}: any) => {\n      patientProgram.setStateId(stateId);\n      await patientProgram.voidState('duplicate / system error');\n      toastSuccess('Outcome voided successfully');\n      program.value?.patient_states.splice(index, 1);\n      EventBus.emit(EmcEvents.RELOAD_PATIENT_VISIT_DATA);\n    }\n\n    onMounted (async () => {\n      const programs = await patientProgram.getPrograms();\n      program.value = programs.find((l: any) => l.program.name === \"HIV PROGRAM\");\n      if(program.value) {\n        enrollDate.value = program.value.date_enrolled;\n        const states= await patientProgram.getProgramOutcomes();\n        outcomes.value = states.map((state: any) => ({\n          label: state.name,\n          value: state.program_workflow_state_id,\n          other: state\n        }));\n      }\n    });\n\n    return {\n      modal,\n      patientProgram,\n      isEnrolled,\n      enrollDate,\n      birthdate,\n      enrollmentStatus,\n      outcomes,\n      program,\n      totalStates,\n      toStandardHisDisplayFormat,\n      saveOutcome,\n      enrollProgram,\n      voidProgram,\n      voidOutcome,\n    };\n  },\n})\n","import { render } from \"./OutcomeStatus.vue?vue&type=template&id=4300ba6d&ts=true\"\nimport script from \"./OutcomeStatus.vue?vue&type=script&lang=ts\"\nexport * from \"./OutcomeStatus.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/projects/malawi-emr/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, createElementBlock as _createElementBlock, renderList as _renderList, toDisplayString as _toDisplayString } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ion_title = _resolveComponent(\"ion-title\")!\n  const _component_ion_toolbar = _resolveComponent(\"ion-toolbar\")!\n  const _component_ion_header = _resolveComponent(\"ion-header\")!\n  const _component_DateInput = _resolveComponent(\"DateInput\")!\n  const _component_ion_col = _resolveComponent(\"ion-col\")!\n  const _component_NumberInput = _resolveComponent(\"NumberInput\")!\n  const _component_SelectInput = _resolveComponent(\"SelectInput\")!\n  const _component_yes_no_input = _resolveComponent(\"yes-no-input\")!\n  const _component_ion_label = _resolveComponent(\"ion-label\")!\n  const _component_ion_checkbox = _resolveComponent(\"ion-checkbox\")!\n  const _component_ion_item = _resolveComponent(\"ion-item\")!\n  const _component_multi_column_view = _resolveComponent(\"multi-column-view\")!\n  const _component_ion_row = _resolveComponent(\"ion-row\")!\n  const _component_ion_grid = _resolveComponent(\"ion-grid\")!\n  const _component_ion_content = _resolveComponent(\"ion-content\")!\n  const _component_ion_button = _resolveComponent(\"ion-button\")!\n  const _component_ion_footer = _resolveComponent(\"ion-footer\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(_component_ion_header, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_title, null, {\n              default: _withCtx(() => [\n                _createTextVNode(\"Patient Visit\")\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_content, { class: \"ion-padding\" }, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_grid, { style: {\"width\":\"100%\"} }, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_row, null, {\n              default: _withCtx(() => [\n                _createVNode(_component_ion_col, {\n                  size: \"6\",\n                  class: \"ion-margin-vertical\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_DateInput, {\n                      modelValue: _ctx.form.visitDate,\n                      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((_ctx.form.visitDate) = $event)),\n                      form: _ctx.form,\n                      minDate: _ctx.birthdate,\n                      maxDate: _ctx.today\n                    }, null, 8, [\"modelValue\", \"form\", \"minDate\", \"maxDate\"])\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ion_col, {\n                  size: \"6\",\n                  class: \"ion-margin-vertical\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_NumberInput, {\n                      modelValue: _ctx.form.weight,\n                      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((_ctx.form.weight) = $event)),\n                      form: _ctx.form,\n                      min: 1\n                    }, null, 8, [\"modelValue\", \"form\"])\n                  ]),\n                  _: 1\n                }),\n                (_ctx.showHeightField)\n                  ? (_openBlock(), _createBlock(_component_ion_col, {\n                      key: 0,\n                      size: _ctx.isOnActiveTBTreatment ? '12' : '6',\n                      class: \"ion-margin-vertical\"\n                    }, {\n                      default: _withCtx(() => [\n                        _createVNode(_component_NumberInput, {\n                          modelValue: _ctx.form.height,\n                          \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((_ctx.form.height) = $event)),\n                          form: _ctx.form,\n                          min: 1\n                        }, null, 8, [\"modelValue\", \"form\"])\n                      ]),\n                      _: 1\n                    }, 8, [\"size\"]))\n                  : _createCommentVNode(\"\", true),\n                (!_ctx.isOnActiveTBTreatment)\n                  ? (_openBlock(), _createBlock(_component_ion_col, {\n                      key: 1,\n                      class: \"ion-margin-vertical\",\n                      size: _ctx.showHeightField ? '6' : '12'\n                    }, {\n                      default: _withCtx(() => [\n                        _createVNode(_component_SelectInput, {\n                          modelValue: _ctx.form.tbStatus,\n                          \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((_ctx.form.tbStatus) = $event)),\n                          options: _ctx.tbStatuses\n                        }, null, 8, [\"modelValue\", \"options\"])\n                      ]),\n                      _: 1\n                    }, 8, [\"size\"]))\n                  : _createCommentVNode(\"\", true),\n                (_ctx.isOnTBTreatment)\n                  ? (_openBlock(), _createElementBlock(_Fragment, { key: 2 }, [\n                      _createVNode(_component_ion_col, {\n                        size: \"6\",\n                        class: \"ion-margin-vertical\"\n                      }, {\n                        default: _withCtx(() => [\n                          _createVNode(_component_DateInput, {\n                            modelValue: _ctx.form.tbTreatmentStartDate,\n                            \"onUpdate:modelValue\": _cache[4] || (_cache[4] = ($event: any) => ((_ctx.form.tbTreatmentStartDate) = $event)),\n                            form: _ctx.form,\n                            minDate: _ctx.birthdate,\n                            maxDate: _ctx.today\n                          }, null, 8, [\"modelValue\", \"form\", \"minDate\", \"maxDate\"])\n                        ]),\n                        _: 1\n                      }),\n                      _createVNode(_component_ion_col, {\n                        size: \"6\",\n                        class: \"ion-margin-vertical\"\n                      }, {\n                        default: _withCtx(() => [\n                          _createVNode(_component_NumberInput, {\n                            modelValue: _ctx.form.tbTreatmentPeriod,\n                            \"onUpdate:modelValue\": _cache[5] || (_cache[5] = ($event: any) => ((_ctx.form.tbTreatmentPeriod) = $event)),\n                            form: _ctx.form,\n                            min: 1\n                          }, null, 8, [\"modelValue\", \"form\"])\n                        ]),\n                        _: 1\n                      })\n                    ], 64))\n                  : _createCommentVNode(\"\", true),\n                (_ctx.isFemale)\n                  ? (_openBlock(), _createElementBlock(_Fragment, { key: 3 }, [\n                      _createVNode(_component_ion_col, {\n                        size: \"6\",\n                        class: \"ion-margin-vertical\"\n                      }, {\n                        default: _withCtx(() => [\n                          _createVNode(_component_yes_no_input, {\n                            modelValue: _ctx.form.isPregnant,\n                            \"onUpdate:modelValue\": _cache[6] || (_cache[6] = ($event: any) => ((_ctx.form.isPregnant) = $event)),\n                            inline: \"\"\n                          }, null, 8, [\"modelValue\"])\n                        ]),\n                        _: 1\n                      }),\n                      _createVNode(_component_ion_col, {\n                        size: \"6\",\n                        class: \"ion-margin-vertical\"\n                      }, {\n                        default: _withCtx(() => [\n                          _createVNode(_component_yes_no_input, {\n                            modelValue: _ctx.form.isBreastfeeding,\n                            \"onUpdate:modelValue\": _cache[7] || (_cache[7] = ($event: any) => ((_ctx.form.isBreastfeeding) = $event)),\n                            inline: \"\"\n                          }, null, 8, [\"modelValue\"])\n                        ]),\n                        _: 1\n                      })\n                    ], 64))\n                  : _createCommentVNode(\"\", true),\n                _createVNode(_component_ion_col, {\n                  size: \"6\",\n                  class: \"ion-margin-vertical\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_yes_no_input, {\n                      modelValue: _ctx.form.hasContraindications,\n                      \"onUpdate:modelValue\": _cache[8] || (_cache[8] = ($event: any) => ((_ctx.form.hasContraindications) = $event)),\n                      inline: \"\"\n                    }, null, 8, [\"modelValue\"]),\n                    (_ctx.hasContraindications)\n                      ? (_openBlock(), _createBlock(_component_multi_column_view, {\n                          key: 0,\n                          items: _ctx.contraIndications,\n                          numberOfColumns: 2\n                        }, {\n                          default: _withCtx(({ entries }) => [\n                            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(entries, (entry) => {\n                              return (_openBlock(), _createBlock(_component_ion_item, {\n                                lines: \"none\",\n                                key: entry.value\n                              }, {\n                                default: _withCtx(() => [\n                                  _createVNode(_component_ion_label, null, {\n                                    default: _withCtx(() => [\n                                      _createTextVNode(_toDisplayString(entry.label), 1)\n                                    ]),\n                                    _: 2\n                                  }, 1024),\n                                  _createVNode(_component_ion_checkbox, {\n                                    slot: \"start\",\n                                    modelValue: entry.isChecked,\n                                    \"onUpdate:modelValue\": ($event: any) => ((entry.isChecked) = $event)\n                                  }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"])\n                                ]),\n                                _: 2\n                              }, 1024))\n                            }), 128))\n                          ]),\n                          _: 1\n                        }, 8, [\"items\"]))\n                      : _createCommentVNode(\"\", true)\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ion_col, {\n                  class: \"ion-padding-start\",\n                  size: \"6\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_yes_no_input, {\n                      modelValue: _ctx.form.hasSideEffects,\n                      \"onUpdate:modelValue\": _cache[9] || (_cache[9] = ($event: any) => ((_ctx.form.hasSideEffects) = $event)),\n                      inline: \"\"\n                    }, null, 8, [\"modelValue\"]),\n                    (_ctx.hasSideEffects)\n                      ? (_openBlock(), _createBlock(_component_multi_column_view, {\n                          key: 0,\n                          items: _ctx.sideEffects,\n                          numberOfColumns: 2\n                        }, {\n                          default: _withCtx(({ entries }) => [\n                            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(entries, (entry) => {\n                              return (_openBlock(), _createBlock(_component_ion_item, {\n                                lines: \"none\",\n                                key: entry.value\n                              }, {\n                                default: _withCtx(() => [\n                                  _createVNode(_component_ion_label, null, {\n                                    default: _withCtx(() => [\n                                      _createTextVNode(_toDisplayString(entry.label), 1)\n                                    ]),\n                                    _: 2\n                                  }, 1024),\n                                  _createVNode(_component_ion_checkbox, {\n                                    slot: \"start\",\n                                    modelValue: entry.isChecked,\n                                    \"onUpdate:modelValue\": ($event: any) => ((entry.isChecked) = $event)\n                                  }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"])\n                                ]),\n                                _: 2\n                              }, 1024))\n                            }), 128))\n                          ]),\n                          _: 1\n                        }, 8, [\"items\"]))\n                      : _createCommentVNode(\"\", true)\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ion_col, {\n                  size: \"6\",\n                  class: \"ion-margin-vertical\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_SelectInput, {\n                      modelValue: _ctx.form.regimen,\n                      \"onUpdate:modelValue\": _cache[10] || (_cache[10] = ($event: any) => ((_ctx.form.regimen) = $event)),\n                      options: _ctx.regimens\n                    }, null, 8, [\"modelValue\", \"options\"])\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ion_col, {\n                  size: \"6\",\n                  class: \"ion-margin-vertical\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_NumberInput, {\n                      modelValue: _ctx.form.totalArvsGiven,\n                      \"onUpdate:modelValue\": _cache[11] || (_cache[11] = ($event: any) => ((_ctx.form.totalArvsGiven) = $event)),\n                      form: _ctx.form,\n                      min: 1\n                    }, null, 8, [\"modelValue\", \"form\"])\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ion_col, {\n                  size: \"6\",\n                  class: \"ion-margin-vertical\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_NumberInput, {\n                      modelValue: _ctx.form.totalCPTGiven,\n                      \"onUpdate:modelValue\": _cache[12] || (_cache[12] = ($event: any) => ((_ctx.form.totalCPTGiven) = $event)),\n                      form: _ctx.form,\n                      min: 1\n                    }, null, 8, [\"modelValue\", \"form\"])\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ion_col, {\n                  size: \"6\",\n                  class: \"ion-margin-vertical\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_SelectInput, {\n                      modelValue: _ctx.form.tbMed,\n                      \"onUpdate:modelValue\": _cache[13] || (_cache[13] = ($event: any) => ((_ctx.form.tbMed) = $event)),\n                      options: _ctx.tbMeds\n                    }, null, 8, [\"modelValue\", \"options\"])\n                  ]),\n                  _: 1\n                }),\n                (_ctx.hasGiven6H || _ctx.hasGivenRFP)\n                  ? (_openBlock(), _createBlock(_component_ion_col, {\n                      key: 4,\n                      size: \"6\"\n                    }, {\n                      default: _withCtx(() => [\n                        _createVNode(_component_NumberInput, {\n                          modelValue: _ctx.form.totalIPTGiven,\n                          \"onUpdate:modelValue\": _cache[14] || (_cache[14] = ($event: any) => ((_ctx.form.totalIPTGiven) = $event)),\n                          form: _ctx.form,\n                          min: 1\n                        }, null, 8, [\"modelValue\", \"form\"])\n                      ]),\n                      _: 1\n                    }))\n                  : _createCommentVNode(\"\", true),\n                (_ctx.hasGivenRFP)\n                  ? (_openBlock(), _createBlock(_component_ion_col, {\n                      key: 5,\n                      size: \"6\"\n                    }, {\n                      default: _withCtx(() => [\n                        _createVNode(_component_NumberInput, {\n                          modelValue: _ctx.form.totalRFPGiven,\n                          \"onUpdate:modelValue\": _cache[15] || (_cache[15] = ($event: any) => ((_ctx.form.totalRFPGiven) = $event)),\n                          form: _ctx.form,\n                          min: 1\n                        }, null, 8, [\"modelValue\", \"form\"])\n                      ]),\n                      _: 1\n                    }))\n                  : _createCommentVNode(\"\", true),\n                (_ctx.hasGiven3HP)\n                  ? (_openBlock(), _createBlock(_component_ion_col, {\n                      key: 6,\n                      size: \"6\"\n                    }, {\n                      default: _withCtx(() => [\n                        _createVNode(_component_NumberInput, {\n                          modelValue: _ctx.form.total3HPGiven,\n                          \"onUpdate:modelValue\": _cache[16] || (_cache[16] = ($event: any) => ((_ctx.form.total3HPGiven) = $event)),\n                          form: _ctx.form,\n                          min: 1\n                        }, null, 8, [\"modelValue\", \"form\"])\n                      ]),\n                      _: 1\n                    }))\n                  : _createCommentVNode(\"\", true),\n                (_ctx.hasGiven3HP || _ctx.hasGivenRFP || _ctx.hasGiven6H)\n                  ? (_openBlock(), _createBlock(_component_ion_col, {\n                      key: 7,\n                      size: \"6\"\n                    }, {\n                      default: _withCtx(() => [\n                        _createVNode(_component_NumberInput, {\n                          modelValue: _ctx.form.totalPyridoxineGiven,\n                          \"onUpdate:modelValue\": _cache[17] || (_cache[17] = ($event: any) => ((_ctx.form.totalPyridoxineGiven) = $event)),\n                          form: _ctx.form,\n                          min: 1\n                        }, null, 8, [\"modelValue\", \"form\"])\n                      ]),\n                      _: 1\n                    }))\n                  : _createCommentVNode(\"\", true),\n                _createVNode(_component_ion_col, {\n                  size: \"6\",\n                  class: \"ion-margin-vertical\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_yes_no_input, {\n                      modelValue: _ctx.form.patientPresent,\n                      \"onUpdate:modelValue\": _cache[18] || (_cache[18] = ($event: any) => ((_ctx.form.patientPresent) = $event)),\n                      inline: \"\",\n                      disabled: _ctx.form.patientPresent.disabled\n                    }, null, 8, [\"modelValue\", \"disabled\"])\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ion_col, {\n                  size: \"6\",\n                  class: \"ion-margin-vertical\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_yes_no_input, {\n                      modelValue: _ctx.form.guardianPresent,\n                      \"onUpdate:modelValue\": _cache[19] || (_cache[19] = ($event: any) => ((_ctx.form.guardianPresent) = $event)),\n                      inline: \"\"\n                    }, null, 8, [\"modelValue\"])\n                  ]),\n                  _: 1\n                }),\n                (_ctx.prevDrugs.length > 0)\n                  ? (_openBlock(), _createBlock(_component_ion_col, {\n                      key: 8,\n                      size: \"6\",\n                      class: \"ion-margin-vertical\"\n                    }, {\n                      default: _withCtx(() => [\n                        _createVNode(_component_NumberInput, {\n                          modelValue: _ctx.form.pillCount,\n                          \"onUpdate:modelValue\": _cache[20] || (_cache[20] = ($event: any) => ((_ctx.form.pillCount) = $event)),\n                          form: _ctx.form,\n                          min: 1\n                        }, null, 8, [\"modelValue\", \"form\"])\n                      ]),\n                      _: 1\n                    }))\n                  : _createCommentVNode(\"\", true),\n                _createVNode(_component_ion_col, {\n                  size: _ctx.prevDrugs.length > 0 ? '6' : '12',\n                  class: \"ion-margin-vertical\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_DateInput, {\n                      modelValue: _ctx.form.nextAppointmentDate,\n                      \"onUpdate:modelValue\": _cache[21] || (_cache[21] = ($event: any) => ((_ctx.form.nextAppointmentDate) = $event)),\n                      form: _ctx.form,\n                      minDate: _ctx.form.visitDate.value,\n                      maxDate: _ctx.drugRunOutDate\n                    }, null, 8, [\"modelValue\", \"form\", \"minDate\", \"maxDate\"])\n                  ]),\n                  _: 1\n                }, 8, [\"size\"])\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_footer, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_button, {\n              color: \"primary\",\n              onClick: _cache[22] || (_cache[22] = ($event: any) => (_ctx.modal.hide())),\n              slot: \"end\"\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\"Close\")\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_ion_button, {\n              color: \"warning\",\n              onClick: _ctx.onClear,\n              slot: \"end\"\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\"Reset\")\n              ]),\n              _: 1\n            }, 8, [\"onClick\"]),\n            _createVNode(_component_ion_button, {\n              color: \"success\",\n              onClick: _ctx.onSubmit,\n              slot: \"end\"\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\"Save\")\n              ]),\n              _: 1\n            }, 8, [\"onClick\"])\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    })\n  ], 64))\n}","import { Patient } from '@/interfaces/patient';\nimport { ObservationService } from './observation_service';\nimport { Service } from \"@/services/service\"\nimport HisDate from \"@/utils/Date\"\nimport { Observation } from \"@/interfaces/observation\"\nimport { Patientservice } from '@/services/patient_service';\nimport { DrugOrderService } from './drug_order_service';\nimport { isEmpty } from 'lodash';\n\nexport class PatientObservationService extends Patientservice {\n  constructor(patient: Patient) {\n    super(patient)\n  }\n\n  async isPregnant() {\n    const obs = await ObservationService.getFirstObs(this.getID(), 'Is patient pregnant')\n    return obs && (obs.value_coded.match(/Yes/i) ? true : false)\n      && ObservationService.obsInValidPeriod(obs)\n  }\n\n  async hasPregnancyObsToday() {\n    const date = await ObservationService.getFirstObsDatetime(this.getID(), 'Is patient pregnant')\n    return date && HisDate.toStandardHisFormat(date) === Service.getSessionDate() && this.isFemale()\n  }\n\n  async hasPregnancyAtARTInitiation() {\n    const obs = await ObservationService.getLastValueCoded(this.getID(), \"Is patient pregnant\")\n    return obs && await ObservationService.getConceptName(obs)\n  }\n\n  async breastFeedingAtARTInitiation() {\n    const obs = await ObservationService.getLastValueCoded(this.getID(), \"Is patient breast feeding\")\n    return obs && await ObservationService.getConceptName(obs)\n  }\n\n  async getInitialWeight() {\n    return ObservationService.getLastValueNumber(this.getID(), \"weight\")\n  }\n\n  async getRecentWeight() {\n    return ObservationService.getFirstValueNumber(this.getID(), \"weight\") || -1\n  }\n\n  async getInitialHeight() {\n    return ObservationService.getLastValueNumber(this.getID(), \"Height\")\n  }\n\n  async getInitialTBStatus() {\n    const obs = await ObservationService.getLastValueCoded(this.getID(), \"TB Status at Initiation\")\n    if (obs) return ObservationService.getConceptName(obs)\n  }\n\n  async getRecentHeight() {\n    return ObservationService.getFirstValueNumber(this.getID(), \"Height\") || -1\n  }\n\n  async getWeightHistory() {\n    try {\n      const weights = await ObservationService.getAll(this.getID(), 'weight')\n      return weights.map((obs: Observation) => ({\n        weight: obs.value_numeric, date: obs.obs_datetime\n      }))\n    } catch (e) {\n      console.warn(e)\n      return []\n    }\n  }\n  async getCompleteTBTherapyHistory() {\n    const data = await ObservationService.getAll(this.getID(), 'TB treatment history')\n    return data.filter((data: any) => {\n      return data.value_text.match(/Complete/i);\n    });\n  }\n\n  async getInitialBMI() {\n    return ObservationService.getLastValueNumber(this.getID(), \"BMI\")\n  }\n\n  async everReceivedART() {\n    return ObservationService.getFirstValueCoded(this.getID(), \"Ever received ART\")\n  }\n\n  async agreesToFollowUp() {\n    return ObservationService.getFirstValueCoded(this.getID(), \"Agrees to followup\")\n  }\n\n  async getHIVTestDate() {\n    const obs = await ObservationService.getFirstObs(this.getID(), \"Confirmatory HIV test date\")\n    if (obs && obs.value_datetime) return obs.value_datetime\n    if (obs && obs.value_text) return obs.value_text\n    return null\n  }\n\n  async getARTStartDate() {\n    const obs = await ObservationService.getFirstObs(this.getID(), \"Date ART started\")\n    if (obs && obs.value_datetime) return obs.value_datetime\n    if (obs && obs.value_text) return obs.value_text\n    const orders = await DrugOrderService.getAllDrugOrders(this.getID(), Number.MAX_SAFE_INTEGER);\n    if(!isEmpty(orders)){\n      return orders[0].order['start_date']\n    }\n    return null\n  }\n\n  async getHIVTestLocation() {\n    return ObservationService.getFirstValueText(\n      this.getID(),\n      \"Confirmatory HIV test location\"\n    )\n  }\n\n  async getReasonForStartingART() {\n    return ObservationService.getFirstValueCoded(this.getID(), \"Reason for ART eligibility\")\n  }\n\n  async getStagingCondition() {\n    return ObservationService.getFirstValueCoded(this.getID(), \"Who stages criteria present\")\n  }\n    \n  getWhoStage() {\n    return ObservationService.getFirstValueCoded(this.getID(), \"Who stage\")\n  }\n}","\nimport { computed, defineComponent, onMounted, PropType, reactive, ref, watch } from \"vue\";\nimport { \n  IonCol, \n  IonGrid, \n  IonRow,  \n  IonContent, \n  IonFooter, \n  IonHeader, \n  IonTitle, \n  IonToolbar, \n  IonButton, \n  IonLabel,\n  IonCheckbox,\nIonItem,\n} from \"@ionic/vue\";\nimport { alertConfirmation, toastSuccess } from \"@/utils/Alerts\";\nimport isEmpty from \"lodash/isEmpty\";\nimport { Option } from \"@/components/Forms/FieldInterface\";\nimport YesNoInput from \"../inputs/YesNoInput.vue\";\nimport SelectInput from \"../inputs/SelectInput.vue\";\nimport DateInput from \"../inputs/DateInput.vue\";\nimport NumberInput from \"../inputs/NumberInput.vue\";\nimport { ConceptService } from \"@/services/concept_service\";\nimport MultiColumnView from \"@/components/containers/MultiColumnView.vue\";\nimport { PatientObservationService } from \"@/services/patient_observation_service\";\nimport { RegimenService } from \"@/services/regimen_service\";\nimport { DrugOrderService } from \"@/services/drug_order_service\";\nimport { VitalsService } from \"@/apps/ART/services/vitals_service\";\nimport StandardValidations from \"@/components/Forms/validations/StandardValidations\";\nimport { ConsultationService } from \"@/apps/ART/services/consultation_service\";\nimport { ReceptionService } from \"@/apps/ART/services/reception_service\";\nimport { AdherenceService } from \"@/apps/ART/services/adherence_service\";\nimport { AppointmentService } from \"@/apps/ART/services/appointment_service\";\nimport { PrescriptionService } from \"@/apps/ART/services/prescription_service\";\nimport dayjs from \"dayjs\";\nimport { ObsValue } from \"@/services/observation_service\";\nimport { BMIService } from \"@/services/bmi_service\";\nimport { DispensationService } from \"@/apps/ART/services/dispensation_service\";\nimport { DTForm } from \"../../interfaces/dt_form_field\";\nimport { optionsToGroupObs, resolveObs, submitForm } from \"../../utils/form\";\nimport { toOptions } from \"../../utils/DTFormElements\";\nimport { modal } from \"@/utils/modal\";\nimport { EmcEvents } from \"../../interfaces/emc_event\";\nimport EventBus from \"@/utils/EventBus\";\nimport { uniqueBy } from \"@/utils/Arrays\";\nimport { DISPLAY_DATE_FORMAT, STANDARD_DATE_FORMAT } from \"@/utils/Date\";\nimport { ARVDrug } from \"@/interfaces/Drug\";\n\nexport default defineComponent({\n  components: {\n    IonContent,\n    IonFooter,\n    IonHeader,\n    IonTitle,\n    IonToolbar,\n    IonButton,\n    IonItem,\n    IonLabel,\n    IonGrid,\n    IonRow,\n    IonCol,\n    IonCheckbox,\n    SelectInput,\n    NumberInput,\n    DateInput,\n    YesNoInput,\n    MultiColumnView,\n  },\n  props: {\n    patient: {\n      type: Object as PropType<PatientObservationService>,\n      required: true\n    },\n  },\n  setup(props) {\n    const patientId = computed(() => props.patient.getID())\n    const vitals = new VitalsService(patientId.value, -1)\n    const consultations = new ConsultationService(patientId.value, -1)\n    const prescription = new PrescriptionService(patientId.value, -1)\n    const dispensation = new DispensationService(patientId.value, -1)\n    const reception = new ReceptionService(patientId.value, -1)\n    const adherence = new AdherenceService(patientId.value, -1)\n    const appointment = new AppointmentService(patientId.value, -1)\n    const prevHeight = ref<number>()\n    const regimens = ref<Option[]>([])\n    const contraIndications = ref<Option[]>([]);\n    const sideEffects = ref<Option[]>([]);\n    const prevDrugs = ref<any[]>([]);\n    const showHeightField = computed(() => !(prevHeight.value && props.patient.getAge() > 18))\n    const isFemale = computed(() => props.patient.isFemale())\n    const drugRunOutDate = ref<string>('');\n    const today = dayjs().format(STANDARD_DATE_FORMAT);\n    const birthdate = dayjs(props.patient.getBirthdate()).format(STANDARD_DATE_FORMAT);\n    const isOnActiveTBTreatment = ref(false)\n    \n    const form = reactive<DTForm>({\n      visitDate: {\n        value: dayjs().format('YYYY-MM-DD') as string | undefined,\n        label: \"Visit Date\",\n        required: true,\n        validation: async (date: Option) => {\n          if(new Date(date.value) > new Date(today)) {\n            return [\"Visit date cannot be after today's date\"]\n          }\n          if(new Date(date.value) < new Date(birthdate)) {\n            return [\"Visit date cannot be before patient's birth date\"]\n          }\n          return null\n        }\n      },\n      weight: {\n        value: undefined as number | undefined,\n        label: \"Weight\",\n        required: true,\n        computedValue: (weight: number) => ({\n          tag: 'vitals',\n          obs: vitals.buildValueNumber('Weight', weight)\n        }),\n        validation: (weight: Option, form: any) => {\n          if ((isEmpty(weight) || !weight.value) && form.patientPresent.value === 'No') {\n            return null\n          } \n          return vitals.validator({...weight, label: 'Weight'})\n        } \n      },\n      height: {\n        value: undefined as number | undefined,\n        label: \"Height\",\n        computedValue: (height: number) => ({\n          tag: 'vitals',\n          obs: vitals.buildValueNumber('Height', height)\n        }),\n        validation: (height: Option) => {\n          if(!showHeightField.value || ((isEmpty(height) || !height.value) && form.patientPresent.value === 'No')) {\n            return null\n          }\n          return vitals.validator({...height, label: 'Height'})\n        }\n      },\n      isPregnant: {\n        value: undefined as \"Yes\" | \"No\"  | undefined,\n        label: 'Is the patient pregnant?',\n        computedValue: (isPregnant: \"Yes\" | \"No\") => ({\n          tag: 'consultation',\n          obs: consultations.buildValueCoded('Is patient pregnant', isPregnant)\n        }),\n        validation: async (state: Option) => isFemale.value && StandardValidations.required(state)\n      },\n      isBreastfeeding: {\n        value: undefined as \"Yes\" | \"No\"  | undefined,\n        label: 'Is the patient breastfeeding?',\n        computedValue: (isBreastfeeding: \"Yes\" | \"No\") => ({\n          tag: 'consultation',\n          obs: consultations.buildValueCoded('Is patient breast feeding', isBreastfeeding)\n        }),\n        validation: async (state: Option) => isFemale.value && StandardValidations.required(state)\n      },\n      nextAppointmentDate: {\n        value: undefined as string | undefined,\n        label: \"Next Appointment Date\",\n        required: true,\n        computedValue: (nextAppointmentDate: string) => ({\n          tag: 'appointment',\n          obs: appointment.buildValueDate('Appointment date', nextAppointmentDate)\n        }),\n        validation: async (date, form) => {\n          if(new Date(date.value) < new Date(form.visitDate.value)) {\n            return [\"Appointment date cannot be before visit date\"]\n          }\n          if(new Date(date.value) > new Date(drugRunOutDate.value)) {\n            return [\"Appointment date cannot be after drug run out date\"]\n          }\n          return null\n        }\n      },\n      patientPresent: {\n        value: undefined as \"Yes\" | \"No\"  | undefined,\n        label: 'Is the patient present?',\n        required: true,\n        computedValue: (patientPresent: \"Yes\" | \"No\") => ({\n          tag: 'reception',\n          obs: reception.buildValueCoded('Patient present', patientPresent)\n        }),\n      },\n      guardianPresent: {\n        value: undefined as \"Yes\" | \"No\"  | undefined,\n        label: 'Is the guardian present?',\n        required: true,\n        computedValue: (guardianPresent: \"Yes\" | \"No\") => ({\n          tag: 'reception',\n          obs: reception.buildValueCoded('Guardian present', guardianPresent)\n        }),\n      },\n      pillCount: {\n        value: undefined as number  | undefined,\n        label: \"Pill Count\",\n        required: prevDrugs.value.length > 0,\n        validation: async (pills: Option) => prevDrugs.value.length > 0 && StandardValidations.isNumber(pills)\n      },\n      regimen: {\n        value: undefined as string | undefined,\n        label: \"Regimen\",\n        placeholder: \"Select a regimen\",\n        computedValue: () => ({\n          tag: 'consultation',\n          obs: prescription.buildValueCoded(\"Medication orders\", \"Antiretroviral drugs\")\n        }),\n      },\n      totalCPTGiven: {\n        value: undefined as number  | undefined,\n        label: \"Total CPT Given\",\n        computedValue: () => ({\n          tag: 'consultation',\n          obs: prescription.buildValueCoded(\"Medication orders\", \"CPT\")\n        }),\n      },\n      totalIPTGiven: {\n        value: undefined as number  | undefined,\n        label: \"Total IPT Given\",\n        computedValue: () => ({\n          tag: 'consultation',\n          obs: prescription.buildValueCoded(\"Medication orders\", \"INH\")\n        }),\n        validation: async (drugs: Option, form: any) => {\n          return (form.tbMed.value?.label === '6H' || form.tbMed.value?.label === '3HP (RFP + INH)') && \n            StandardValidations.isNumber(drugs)\n        }\n      },\n      totalRFPGiven: {\n        value: undefined as number  | undefined,\n        label: \"Total RFP Given\",\n        computedValue: () => ({\n          tag: 'consultation',\n          obs: prescription.buildValueCoded(\"Medication orders\", \"3HP (RFP + INH)\")\n        }),\n        validation: async (drugs: Option, form: any) => {\n          return form.tbMed.value?.label === '3HP (RFP + INH)' && \n            StandardValidations.isNumber(drugs)\n        }\n      },\n      total3HPGiven: {\n        value: undefined as number  | undefined,\n        label: \"Total 3HP Given\",\n        computedValue: () => ({\n          tag: 'consultation',\n          obs: prescription.buildValueCoded(\"Medication orders\", \"INH 300 / RFP 300 (3HP)\")\n        }),\n        validation: async (drugs: Option, form: any) => {\n          return form.tbMed.value?.label === '3HP (INH 300 / RFP 300)' && \n            StandardValidations.isNumber(drugs)\n        }\n      },\n      totalArvsGiven: {\n        value: undefined as number  | undefined,\n        label: \"Total ARVs Given\",\n        validation: async (drugs: Option, form: any) => !isEmpty(form.regimen.value) && StandardValidations.isNumber(drugs)\n      },\n      totalPyridoxineGiven: {\n        value: undefined as number  | undefined,\n        label: \"Total Pyridoxine Given\",\n        validation: async (amount: Option, form: any) => form.tbMed.value?.label && StandardValidations.isNumber(amount)\n      },\n      tbMed: {\n        value: undefined as Option | undefined,\n        label: \"TPT Medication\",\n        placeholder: \"Select a TPT medication\",\n      },\n      hasContraindications: {\n        value: \"No\",\n        label: \"Has Side Effects / Contraindications ?\",\n        validation: async (state: Option) => StandardValidations.validateSeries([\n          ()  => StandardValidations.required(state),\n          () => {\n            if(state.value === \"No\" || contraIndications.value.some(x => x.isChecked)) return null\n            return [\"Please select at least one side effect\"]\n          }\n        ])\n      },\n      hasSideEffects: {\n        value: \"No\",\n        label: \"Has Other Side Effects ?\",\n        validation: async (state: Option) => StandardValidations.validateSeries([\n          ()  => StandardValidations.required(state),\n          () => {\n            if(state.value === \"No\" || sideEffects.value.some(x => x.isChecked)) return null\n            return [\"Please select at least one side effect\"]\n          }\n        ])\n      },\n      tbStatus: {\n        value: undefined as Option | undefined,\n        label: \"TB Status\",\n        computedValue: (status: Option) => ({\n          tag: 'consultation',\n          obs: consultations.buildValueCoded('TB Status', status.value)\n        }),\n        validation: async (state) => !isOnActiveTBTreatment.value && StandardValidations.required(state)\n      },\n      tbTreatmentStartDate: {\n        value: \"\" as string | undefined,\n        label: \"TB treatment start date\",\n        validation: async (date: Option) => {\n          if(!isOnActiveTBTreatment.value) {\n            if(new Date(date.value) > new Date(today)) {\n              return [\"TB treatment start date cannot be after today's date\"]\n            }\n            if(new Date(date.value) < new Date(birthdate)) {\n              return [\"TB treatment start date cannot be before patient's birth date\"]\n            }\n          }\n          return null\n        },\n        computedValue: (date: string) => ({\n          tag: \"consultation\",\n          obs: consultations.buildValueDate(\"TB treatment start date\", date)\n        })\n      },\n      tbTreatmentPeriod: {\n        value: undefined as number  | undefined,\n        label: \"TB treatment period (months)\",\n        computedValue: (period: number) => ({\n          tag: \"consultation\",\n          obs: consultations.buildValueNumber(\"TB treatment period\", period)\n        })\n      },\n    })\n\n    const getRegimens = async (weight: number, onTB?: boolean): Promise<Option[]> => {\n      const unknownReg = {\n        label: \"Unkown\",\n        value: \"Unkown\",\n        other: [{\n          \"drug_id\": 1046,\n          \"drug_name\": \"Unknown ARV\",\n          \"am\": 1,\n          \"pm\": 0,\n          \"units\": \"\",\n          \"frequency\":\t\"Daily (QOD)\"\n        }]\n      }      \n      const regs = await RegimenService.getRegimensByWeight(weight, onTB)\n      if(isEmpty(regs)) return [unknownReg]\n      return Object.keys(regs).map(key => ({\n        label: key, \n        value: key, \n        other: regs[key] \n      })).concat([unknownReg])\n    }\n\n    watch(form.patientPresent, isPresent => {\n      if(isPresent.value === \"No\") {\n        form.weight.required = false\n        form.weight.error = \"\"\n        form.guardianPresent.value = \"Yes\"\n      } else {\n        form.weight.required = true\n      }\n    })\n\n    watch(form.guardianPresent, isPresent => {\n      if(isPresent.value === \"No\") {\n        form.patientPresent.value = \"Yes\"\n      }\n    })\n\n    watch([() => form.weight.value, () => form.tbStatus.value], async ([newWeight, tbStatus]) => {\n      form.regimen.value = ''\n      const onTB = !isEmpty(tbStatus) && !tbStatus.label.match(/TB Not Suspected/i)\n      if(newWeight) {\n        regimens.value = await getRegimens(form.weight.value, onTB)\n        form.patientPresent.value = \"Yes\"\n        form.patientPresent.disabled = true\n      } else if(!newWeight) {\n        form.patientPresent.value = undefined\n        form.patientPresent.disabled = false\n      }\n      form.tbMed.disabled = onTB || isOnActiveTBTreatment.value\n    })\n\n    const calculateMinDuration = (totalGiven: number, drugs: Array<ARVDrug>) => {\n      return Math.min(...drugs.map(drug => totalGiven / (drug.am + drug.noon + drug.pm) || 1))\n    }\n\n    watch([() => form.totalArvsGiven.value, () => form.pillCount.value], () => {\n      const remainingDrugs = parseInt(form.pillCount.value) || 0\n      const duration = calculateMinDuration(form.totalArvsGiven.value, form.regimen.value.other)\n      drugRunOutDate.value = dayjs(form.visitDate.value).add(duration + remainingDrugs, 'days').format(STANDARD_DATE_FORMAT)\n      form.nextAppointmentDate.label = `Next Appointment Date (Drug run out date: ${dayjs(drugRunOutDate.value).format(DISPLAY_DATE_FORMAT)})`\n      form.nextAppointmentDate.value = drugRunOutDate.value\n    })\n\n    watch(() => form.visitDate.value, () => checkForActiveTB())\n\n    const hasGiven3HP = computed(() => form.tbMed.value?.label === '3HP (INH 300 / RFP 300)')\n    const hasGivenRFP = computed(() => form.tbMed.value?.label === '3HP (RFP + INH)')\n    const hasGiven6H = computed(() => form.tbMed.value?.label === '6H')\n    const hasContraindications = computed(() => form.hasContraindications.value === 'Yes')\n    const hasSideEffects = computed(() => form.hasSideEffects.value === 'Yes')\n    const isOnTBTreatment = computed(() => /Confirmed TB on treatment/i.test(form.tbStatus.value?.label))    \n\n    const tbStatuses = toOptions([\n      'Confirmed TB Not on treatment', \n      'Confirmed TB on treatment', \n      'TB Not Suspected',\n      'TB Suspected'\n    ]);\n\n    const tbMeds = toOptions(['6H', '3HP (RFP + INH)', '3HP (INH 300 / RFP 300)'])\n\n    const checkForActiveTB = async () => {\n      await PatientObservationService.setSessionDate(form.visitDate.value);\n      consultations.setDate(form.visitDate.value);\n      isOnActiveTBTreatment.value = false;\n      const previousTBStatus = await consultations.getFirstValueCoded(\"TB status\");\n      if(/Confirmed TB on treatment/i.test(previousTBStatus)) {\n        const tbTreatmentStartDate = await consultations.getFirstValueDatetime(\"TB treatment start date\")\n        const tbTreatmentPeriod = (await consultations.getFirstValueNumber(\"TB treatment period\")) || 6\n        if(tbTreatmentStartDate) {\n          const timeElapsed = dayjs(form.visitDate.value).diff(tbTreatmentStartDate, 'months');\n          isOnActiveTBTreatment.value = timeElapsed <= tbTreatmentPeriod;\n        }\n      }\n    }\n\n    const buildBmiObs = async (formData: any): Promise<ObsValue> => {\n      const height = formData.height || prevHeight.value\n      const bmi = BMIService.calculateBMI(formData.weight, height)\n      return vitals.buildValueNumber('BMI', bmi)\n    }\n\n    const buildFpmObs = async () => {\n      const obs: ObsValue[] = [\n        await consultations.buildValueCoded('Patient using family planning', 'No')\n      ]\n      const methods = consultations.getFamilyPlanningMethods()\n      methods.forEach(async (method) => {\n        obs.push(await consultations.buildValueCoded(method, \"No\"))\n      })\n      return obs\n    }\n\n    const getTbSymptomsObs = async () => {\n      return Promise.all(ConceptService.getConceptsByCategory(\"tb_symptom\", true).map(async (concept) => {\n        return consultations.buildGroupValueCoded(concept.name, concept.name, \"No\")\n      }))\n    }\n\n    const toDrugOrder = (drug: ARVDrug, quantity: number, duration: number, startDate: string) => {\n      return {\n        \"drug_inventory_id\": drug.drug_id,\n        \"equivalent_daily_dose\": prescription.calculateEquivalentDosage(drug.am, drug.pm),\n        \"dose\": prescription.calculateDosage(drug.am, drug.pm),\n        'start_date': startDate,\n        \"auto_expire_date\": dayjs(startDate).add(duration, 'days').format('YYYY-MM-DD'), \n        \"units\": drug.units,\n        \"qty\": quantity,\n        \"frequency\": drug.frequency,\n        \"instructions\": prescription.getInstructions(drug.drug_name, drug.am, drug.pm, drug.units),\n      }\n    }\n\n    const onSubmit = async () => {\n      await PatientObservationService.setSessionDate(form.visitDate.value)\n      vitals.setDate(form.visitDate.value)\n      consultations.setDate(form.visitDate.value)\n      prescription.setDate(form.visitDate.value)\n      reception.setDate(form.visitDate.value)\n      adherence.setDate(form.visitDate.value)\n      appointment.setDate(form.visitDate.value)\n      dispensation.setDate(form.visitDate.value)\n      await submitForm (form, async (formData, computedFormData) => {\n        await vitals.createEncounter()\n        const vitalsObs = await resolveObs(computedFormData, 'vitals')\n        if (!isEmpty(vitalsObs)) {\n          const bmiObs = await buildBmiObs(formData)\n          await vitals.saveObservationList([...vitalsObs, bmiObs])\n        }\n        \n        await consultations.createEncounter()\n        let consultationObs = await resolveObs(computedFormData, 'consultation')\n        consultationObs = [...consultationObs, ...(await optionsToGroupObs(\"Malawi ART side effects\", contraIndications.value))]\n        consultationObs = [...consultationObs, ...(await getTbSymptomsObs())]\n        if(hasSideEffects.value) consultationObs = [...consultationObs, ...(await optionsToGroupObs(\"Other side effect\", sideEffects.value))  ]\n        if(isFemale.value) consultationObs = [...consultationObs, ...(await buildFpmObs())]\n        await consultations.saveObservationList(consultationObs)\n\n        await prescription.createEncounter()\n        const drugOrders: any[] = []\n        let duration = 0\n        if(!isEmpty(formData.regimen) && formData.totalArvsGiven) {\n          const arvDrugs: any[] = formData.regimen.other\n          duration = calculateMinDuration(formData.totalArvsGiven, arvDrugs);\n          arvDrugs.forEach((drug: any) => drugOrders.push(\n            toDrugOrder(drug, formData.totalArvsGiven, duration, formData.visitDate)\n          ))\n        }\n\n        if(formData.totalCPTGiven) {\n          uniqueBy((await RegimenService.getRegimenExtras('Cotrimoxazole', formData.weight)), 'concept_name')\n          .filter((drug: any) => drug.frequency === 'Daily (QOD)')\n          .forEach((drug: any) => drugOrders.push(toDrugOrder(drug, formData.totalCPTGiven, duration, formData.visitDate)))\n        }\n\n        if(formData.tbMed?.value) {\n          const iptRegimens = uniqueBy((await RegimenService.getRegimenExtras('INH', formData.weight)), ['concept_name', 'frequency'])\n          const pyridoxine = iptRegimens.find((d: any) => d['concept_name'] === 'Pyridoxine')\n\n          if(pyridoxine && formData.totalPyridoxineGiven) {\n            drugOrders.push(toDrugOrder(pyridoxine, formData.totalPyridoxineGiven, duration, formData.visitDate))\n          }\n\n          if(formData.totalIPTGiven) {\n            const INH = iptRegimens.find((drug: any) =>  drug['concept_name'] === \"Isoniazid\" && (\n              (hasGiven6H.value && drug.frequency === 'Daily (QOD)') || \n              (hasGivenRFP.value && drug.frequency === 'Weekly (QW)')\n            ))\n            drugOrders.push(toDrugOrder(INH, formData.totalIPTGiven, duration, formData.visitDate))\n          }\n\n          if(formData.totalRFPGiven && hasGivenRFP.value) {\n            const rfpRegimens = await RegimenService.getRegimenExtras('Rifapentine', formData.weight)\n            if(rfpRegimens.length) drugOrders.push(toDrugOrder(rfpRegimens[0], formData.totalRFPGiven, duration, formData.visitDate))\n          }\n\n          if(formData.total3HPGiven && hasGiven3HP.value) {\n            const threeHPRegimens = await RegimenService.getRegimenExtras('INH / RFP', formData.weight)\n            drugOrders.push(toDrugOrder(threeHPRegimens[0], formData.total3HPGiven, duration, formData.visitDate))\n          }\n        }\n\n        const orders: any[] = await prescription.createDrugOrder(drugOrders)\n        const dispensations = orders.map(order => {\n          const drug = drugOrders.find(drug => drug.drug_inventory_id === order.drug_inventory_id)\n          return dispensation.buildDispensations(order.order_id, drug.qty, 1)\n        })\n        await dispensation.saveDispensations(dispensations.flat(1))\n\n        await reception.createEncounter()\n        const receptionObs = await resolveObs(computedFormData, 'reception')\n        await reception.saveObservationList(receptionObs)\n\n        if(prevDrugs.value.length > 0) {\n          await adherence.createEncounter()\n          const adherenceObs = await Promise.all(prevDrugs.value.map(async (drug: any) => {\n            const expected = adherence.calculateExpected(drug.quantity, drug.equivalent_daily_dose, drug.order.start_date, drug.frequency)\n            const adh = adherence.calculateAdherence(drug.quantity, formData.pillCount, expected)\n            return [\n              await adherence.buildAdherenceObs(drug.order_id, drug.drug_inventory_id, adh),\n              await adherence.buildPillCountObs(drug.order_id, formData.pillCount)\n            ]\n          }))\n          await adherence.saveObservationList(adherenceObs.flat(1))\n        }\n\n        await appointment.createEncounter()\n        const appointmentObs = await resolveObs(computedFormData, 'appointment')\n        await appointment.saveObservationList(appointmentObs)\n        await toastSuccess('Patient visit saved successfully')\n\n        await PatientObservationService.resetSessionDate()\n\n        await modal.hide()\n        EventBus.emit(EmcEvents.RELOAD_PATIENT_VISIT_DATA);\n        EventBus.emit(EmcEvents.RELOAD_STAGING_INFORMATION);\n      })\n    }\n\n    const onClear = async () => {\n      if((await alertConfirmation('Are you sure you want to clear all fields?'))) {\n        for(const key in form) {\n          form[key].value = ''\n          form[key].error = ''\n          form[key].disabled = false;\n        }\n        EventBus.emit(EmcEvents.ON_CLEAR);\n      }\n    }\n\n    onMounted (async () => {\n      await checkForActiveTB();\n      prevHeight.value = await props.patient.getRecentHeight()\n      const recentWeight = await props.patient.getRecentWeight()\n      if (recentWeight) regimens.value = await getRegimens(recentWeight)\n      prevDrugs.value = await DrugOrderService.getLastDrugsReceived(props.patient.getID())\n      form.pillCount.required = prevDrugs.value.length > 0\n      contraIndications.value = ConceptService\n        .getConceptsByCategory(\"contraindication\", true)\n        .map(concept => ({\n          value: concept.concept_id,\n          label: concept.name,\n          other: concept\n        }));\n      sideEffects.value = ConceptService\n        .getConceptsByCategory(\"side_effect\", true)\n        .map(concept => ({\n          value: concept.concept_id,\n          label: concept.name,\n          other: concept\n        }));\n    });\n\n    return {\n      today,\n      form,\n      regimens,\n      contraIndications,\n      sideEffects,\n      tbStatuses,\n      tbMeds,\n      hasGiven3HP,\n      hasGivenRFP,\n      hasGiven6H,\n      showHeightField,\n      isFemale,\n      modal,\n      hasContraindications,\n      hasSideEffects,\n      prevDrugs,\n      drugRunOutDate,\n      birthdate,\n      onSubmit,\n      onClear,\n      isOnTBTreatment,\n      isOnActiveTBTreatment,\n    };\n  },\n})\n","import { render } from \"./PatientVisit.vue?vue&type=template&id=e5850f36&scoped=true&ts=true\"\nimport script from \"./PatientVisit.vue?vue&type=script&lang=ts\"\nexport * from \"./PatientVisit.vue?vue&type=script&lang=ts\"\n\nimport \"./PatientVisit.vue?vue&type=style&index=0&id=e5850f36&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/daniel/projects/malawi-emr/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-e5850f36\"]])\n\nexport default __exports__","\nimport DrillTableModalVue from '@/components/DataViews/DrillTableModal.vue';\nimport table, { ColumnInterface, RowInterface } from '@/components/DataViews/tables/ReportDataTable';\nimport ReportTable from \"@/components/DataViews/tables/ReportDataTable.vue\"\nimport { EncounterService } from '@/services/encounter_service';\nimport { ObservationService } from '@/services/observation_service';\nimport { Patientservice } from '@/services/patient_service';\nimport { ProgramService } from '@/services/program_service';\nimport popVoidReason from '@/utils/ActionSheetHelpers/VoidReason';\nimport HisDate from \"@/utils/Date\";\nimport { IonButton, IonCard, IonCardContent, IonCardHeader, IonCardTitle, modalController } from '@ionic/vue';\nimport dayjs from 'dayjs';\nimport { computed, defineComponent, onMounted, PropType, reactive, ref } from 'vue';\nimport ViralLoadResult from '@/apps/EMC/Components/modals/ViralLoadResult.vue';\nimport OutcomeStatus from '@/apps/EMC/Components/modals/OutcomeStatus.vue';\nimport PatientVisit from '@/apps/EMC/Components/modals/PatientVisit.vue';\nimport { PatientObservationService } from '@/services/patient_observation_service';\nimport EventBus from '@/utils/EventBus';\nimport { EmcEvents } from '../../interfaces/emc_event';\nimport { modal } from '@/utils/modal';\nimport { ConceptService } from '@/services/concept_service';\nimport { isEmpty } from 'lodash';\n\ninterface ActionButtonInterface {\n  label: string;\n  icon?: string;\n  action: () => any;\n  color?: string;\n}\n\nexport default defineComponent({\n  props: {\n    patient: {\n      type: Object as PropType<PatientObservationService>,\n      required: true\n    },\n    startDate:{\n      type: String,\n      required: true\n    },\n  },\n  components: {\n    ReportTable,\n    IonCard,\n    IonCardHeader,\n    IonCardTitle,\n    IonCardContent,\n    IonButton,\n  },\n  setup(props) {\n    const rows = ref<RowInterface[][]>([])\n    const patientId = computed(() => props.patient.getID());\n    const tableConfig = reactive({\n      showIndex: false,\n      tableCssTheme: \"emc-datatable-theme\"\n    })\n\n    const actionButtons = ref<ActionButtonInterface[]>([\n      {\n        label: \"Add Visit\",\n        action: async () => modal.show(PatientVisit, { \n          patient: props.patient \n        })\n      },\n      {\n        label: \"Update Outcome\",\n        action:async () => modal.show(OutcomeStatus, {\n          patient: props.patient,\n        })\n      },\n      {\n        label: \"Enter VL Results\",\n        action: async () => modal.show(ViralLoadResult, {\n          patient: props.patient,\n        })\n      }\n    ])\n\n    const columns = ref<ColumnInterface[][]>([[\n      table.thTxt('Visit Date'),\n      table.thTxt(\"Given To\"),\n      table.thTxt('Weight (Kg)'),\n      table.thTxt('Height (cm)'),\n      table.thTxt('BMI'),\n      table.thTxt('Preg'),\n      table.thTxt('B/F'),\n      table.thTxt('TB STATUS'),\n      table.thTxt('Side Effects'),\n      table.thTxt('ART Regimen'),\n      table.thTxt('Next Appointment'),\n      table.thTxt('Outcome'),\n      table.thTxt('Viral Load'),\n      table.thTxt('Void Visit')\n    ]])\n\n    const formatVisitDate = (date: string) => {\n      const monthsElapsed = props.startDate !== \"N/A\" \n          ? '(' + dayjs(date).diff(props.startDate, 'months') + 'M)' \n          : ''\n      return `${HisDate.toStandardHisDisplayFormat(date)} ${monthsElapsed}`\n    }\n\n    const drill = async (rows: string[][], title: string, columns = [] as string[]) => {\n      if(isEmpty(rows)) return \n      const modal = await modalController.create({\n        component: DrillTableModalVue,\n        cssClass: \"custom-modal\",\n        componentProps: { title, columns, onRows: () => rows },\n      });\n      await modal.present();\n    }\n\n    const showDrugsDispensed = async (drugs = [] as any[], date: string) => {\n      const columns = ['DRUG NAME', 'QUANTITY', 'UNITS' ]\n      const rows = drugs.map((drug: any) => [drug[0], drug[1], 'tab(s)' ])\n      const title = `Drugs dispensed on ${HisDate.toStandardHisDisplayFormat(date)}`\n      return drill(rows, title, columns)\n    }\n\n    const showSideEffects = async (sideEffects = [] as any[], date: string) => {\n      const title = `Side Effects Noted on ${HisDate.toStandardHisDisplayFormat(date)}`\n      const rows = sideEffects.map((e: any) => [e]);\n      return drill(rows, title)\n    }\n\n    const removeEncounters = async (date: string, index: number, activeRows: any[]) => {\n      popVoidReason(async (reason: string) => {\n        const encounters = await EncounterService.getEncounters(patientId.value, {date});\n        encounters.forEach(async (encounter: any) => {\n          await EncounterService.voidEncounter(encounter.encounter_id, reason);\n        })\n        activeRows.splice(index, 1);\n      }, 'small-modal');\n    } \n\n    const buildRows = () => {\n      Patientservice.getPatientVisits(patientId.value, true).then(async (dates) => {\n        rows.value = []\n        for (const date of dates) {\n          const data =  await ProgramService.getCurrentProgramInformation(patientId.value,  date)\n          let nextAppointment = '';\n          let pregnant = '';\n          let breastfeeding = '';\n          let vlResult = ''\n\n          if (data.outcome !== 'Defaulted') {\n            const nDate = await ObservationService.getFirstValueDatetime(patientId.value, 'appointment date', date);\n            if(nDate) nextAppointment = HisDate.toStandardHisDisplayFormat(nDate)\n            pregnant = await ObservationService.getFirstValueCoded(patientId.value, 'Is patient pregnant', date);\n            breastfeeding = await ObservationService.getFirstValueCoded(patientId.value, 'Is patient breast feeding', date);\n            if(data['viral_load'] === 'N/A') {\n              const vlObs = await ObservationService.getFirstObs(patientId.value, \"HIV viral load\", date)\n              if(vlObs && vlObs.value_text && vlObs.value_numeric) {\n                vlResult = vlObs.value_numeric === 1 ? \"LDL\" : vlObs.value_text + vlObs.value_numeric.toString()\n              }\n            } else {\n              vlResult = data['viral_load']\n            }\n          }\n          data && rows.value.push([\n            table.td(formatVisitDate(date)),\n            table.td(data['visit_by'].match(/Unk/i) ? \"\" : data['visit_by']),\n            table.td(data.outcome === 'Defaulted' ? '' : data.weight),\n            table.td(data.outcome === 'Defaulted' ? '' : data.height),\n            table.td(data.outcome === 'Defaulted' ? '' : data.bmi),\n            table.td(pregnant || ''),\n            table.td(breastfeeding ||''),\n            table.td(data['tb_status'].match(/Unknown/i) || data.outcome === 'Defaulted' ? '' : (await ConceptService.getCachedConceptName(data['tb_status'])) || ''),\n            table.tdLink(data['side_effects'].length ? 'Yes' : data.outcome !== 'Defaulted' ? 'No' : '', () => showSideEffects(data.side_effects, date)),\n            table.tdLink(data.outcome === 'Defaulted' ? '' : data.regimen, () => showDrugsDispensed(data.pills_dispensed, date)),\n            table.td(nextAppointment || ''),\n            table.td(data.outcome.match(/Unk/i) ? \"\" : data.outcome),\n            table.td(vlResult),\n            table.tdBtn('X', (index: number, activeRows: any[]) => removeEncounters(date, index, activeRows), {}, 'danger')\n          ])\n        }\n      });\n    }\n\n    EventBus.on(EmcEvents.RELOAD_PATIENT_VISIT_DATA, () => buildRows())\n\n    onMounted(() => {\n      buildRows()\n    })\n\n    return {\n      actionButtons,\n      tableConfig,\n      columns,\n      rows,\n    }\n  },\n})\n","import { render } from \"./VisitsSummary.vue?vue&type=template&id=4936bde9&scoped=true&ts=true\"\nimport script from \"./VisitsSummary.vue?vue&type=script&lang=ts\"\nexport * from \"./VisitsSummary.vue?vue&type=script&lang=ts\"\n\nimport \"./VisitsSummary.vue?vue&type=style&index=0&id=4936bde9&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/daniel/projects/malawi-emr/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4936bde9\"]])\n\nexport default __exports__","import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock, createVNode as _createVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-0eefb168\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { style: {width: '100%', display: 'flex', justifyContent: 'space-between'} }\nconst _hoisted_2 = { key: 0 }\nconst _hoisted_3 = { key: 1 }\nconst _hoisted_4 = { key: 2 }\nconst _hoisted_5 = { key: 3 }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ion_item = _resolveComponent(\"ion-item\")!\n  const _component_ion_list = _resolveComponent(\"ion-list\")!\n  const _component_multi_column_view = _resolveComponent(\"multi-column-view\")!\n\n  return (_openBlock(), _createBlock(_component_multi_column_view, {\n    items: _ctx.patientInfo,\n    numberOfColumns: 3\n  }, {\n    default: _withCtx(({entries}) => [\n      _createVNode(_component_ion_list, { class: \"his-card ion-margin-end\" }, {\n        default: _withCtx(() => [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(entries, (option, i) => {\n            return (_openBlock(), _createBlock(_component_ion_item, {\n              key: i,\n              lines: i === entries.length - 1 ? 'none': '',\n              button: _ctx.clickable(option),\n              onClick: ($event: any) => (_ctx.onClickHandler(option))\n            }, {\n              default: _withCtx(() => [\n                _createElementVNode(\"div\", _hoisted_1, [\n                  (option.label)\n                    ? (_openBlock(), _createElementBlock(\"span\", _hoisted_2, _toDisplayString(option.label) + \": \", 1))\n                    : (_openBlock(), _createElementBlock(\"span\", _hoisted_3)),\n                  (_ctx.clickable(option))\n                    ? (_openBlock(), _createElementBlock(\"span\", _hoisted_4, [\n                        _createElementVNode(\"a\", null, [\n                          _createElementVNode(\"b\", null, _toDisplayString(option.value || 'N/A'), 1)\n                        ])\n                      ]))\n                    : (_openBlock(), _createElementBlock(\"span\", _hoisted_5, [\n                        _createElementVNode(\"b\", null, _toDisplayString(option.value || 'N/A'), 1)\n                      ]))\n                ])\n              ]),\n              _: 2\n            }, 1032, [\"lines\", \"button\", \"onClick\"]))\n          }), 128))\n        ]),\n        _: 2\n      }, 1024)\n    ]),\n    _: 1\n  }, 8, [\"items\"]))\n}","\nimport { computed, defineComponent, onMounted, PropType, ref } from 'vue'\nimport MultiColumnView from \"@/components/containers/MultiColumnView.vue\";\nimport { PatientObservationService } from '@/services/patient_observation_service';\nimport HisDate from \"@/utils/Date\";\nimport dayjs from 'dayjs';\nimport { isEmpty } from 'lodash';\nimport router from '@/router';\nimport ApiStore from '@/composables/ApiStore';\nimport EventBus from '@/utils/EventBus';\nimport { EmcEvents } from '../interfaces/emc_event';\nimport { toGenderString } from '@/utils/Strs';\nimport { OrderService } from '@/services/order_service';\n\ninterface InfoItem {\n  label: string;\n  value: string | number;\n  other?: {\n    onClickHandler: () => Promise<void> | void;\n  };\n}\n\nexport default defineComponent({\n  components: {\n    MultiColumnView\n  },\n  props: {\n    patient: {\n      type: Object as PropType<PatientObservationService>,\n      required: true,\n    },\n    artStartDate: {\n      type: String,\n      required: true,\n    },\n    guardians: {\n      type: String,\n      default: '',\n    }\n  },\n  emits: ['updatePatient','updateARVNumber', 'addGuardian'],\n  setup(props, { emit }) {\n    const initWeight = ref(0)\n    const initHeight = ref(0)\n    const initBmi = ref(0)\n    const initTBStatus = ref('')\n    const breastFeedingAtInitiation = ref('')\n    const pregnantAtInitiation = ref('')\n    const receivedART = ref('')\n    const agreesToFollowUp = ref('')\n    const reasonForStartingART = ref('')\n    const hivTestDate = ref('')\n    const hivTestPlace = ref('')\n    const stagingCondition = ref('')\n    const latestVLResult = ref('')\n    const whoSTage = ref('')\n\n    const clickable = (item: InfoItem) => {\n      return item.other && typeof item.other.onClickHandler === 'function';\n    }\n\n    const onClickHandler = async (item: InfoItem) => {\n      if(clickable(item)){\n        await item.other?.onClickHandler()\n      }\n    }\n\n    const getDobAndAgeAtInitiation = () => {\n      const dob = props.patient.getBirthdate()\n      const ageAtInitiation = props.artStartDate !== \"N/A\" \n        ? dayjs(props.artStartDate).diff(dob, \"years\")\n        : ''\n      \n      return `${HisDate.toStandardHisDisplayFormat(dob)} (${ageAtInitiation})`\n    }\n\n    const setLatestVLResult = (force = false) => {\n      if(force) ApiStore.invalidate('PATIENT_LAB_ORDERS')\n      ApiStore.get('PATIENT_LAB_ORDERS', { patientID: props.patient.getID() }).then(orders => {\n        const results = orders.reduce((rs: any[], order: any) => {\n        const r = order.tests\n          .filter((t: any) => t.name.match(/hiv/i) && !isEmpty(t.result))\n          .map((t: any) => t.result);\n          return rs.concat(r.reduce((a: any, c: any) => a.concat(c), []));\n        }, [])\n        .sort((a: any, b: any) => new Date(a.date) > new Date(b.date) ? -1 : 1);\n        latestVLResult.value = isEmpty(results) \n          ? '' \n          : `${results[0].value_modifier}${results[0].value} (${HisDate.toStandardHisDisplayFormat(results[0].date)})`;\n      });\n    }\n\n    const patientInfo = computed(() => [\n      { label: \"ARV Number\", value: props.patient.getArvNumber(), other: {\n        onClickHandler: () => emit('updateARVNumber')\n      }},\n      { label: \"National Patient ID\", value: props.patient.getNationalID() },\n      { label: \"Name\", value: props.patient.getGivenName() + \" \" + props.patient.getFamilyName(), other: {\n        onClickHandler: () =>   emit('updatePatient', 'given_name')\n      }},\n      { label: \"DOB and Age at Initiation\", value: getDobAndAgeAtInitiation(), other: {\n          onClickHandler: () => emit('updatePatient', 'birthdate')\n      }},\n      {\n        label: \"Sex\",\n        value: toGenderString(props.patient.getGender()),\n        other: {\n          onClickHandler: () => {\n            emit('updatePatient', 'gender')\n          }\n        },\n      },\n      {\n        label: \"Location\",\n        value: props.patient.getCurrentVillage(),\n        other: {\n          onClickHandler: () => {\n            emit('updatePatient', 'home_village')\n          }\n        },\n      },\n      { \n        label: \"Landmark\", \n        value: props.patient.getClosestLandmark(),\n        other: {\n          onClickHandler: () => {\n            emit('updatePatient', 'landmarks')\n          }\n        },\n      },\n      { \n        label: \"Phone Number\", \n        value: props.patient.getPhoneNumber(),\n        other: {\n          onClickHandler: () => {\n            emit('updatePatient', 'phone_number')\n          }\n        },\n      },\n      {\n        label: \"Guardian\",\n        value: props.guardians ? props.guardians : \"add\",\n        other: {\n          ...(isEmpty(props.guardians) \n            ? {\n                onClickHandler: () => {\n                  emit('addGuardian')\n                }\n              } \n            : {}\n          ),\n        },\n      },\n      { label: \"Agrees to follow up\", value: agreesToFollowUp.value, other: {\n        onClickHandler: () => router.push(`/emc/registration/${props.patient.getID()}/false`)\n      }},\n      { label: \"Date of starting first line ARV Regimen\", value: props.artStartDate, other: {\n        onClickHandler: () => router.push(`/emc/registration/${props.patient.getID()}/false`)\n      }},\n      { label: \"Initial Weight (KG)\", value: initWeight.value, other: {\n        onClickHandler: () => router.push(`/emc/registration/${props.patient.getID()}/false`)\n      }},\n      { label: \"Initial Height (CM)\", value: initHeight.value, other: {\n        onClickHandler: () => router.push(`/emc/registration/${props.patient.getID()}/false`)\n      }},\n      { label: \"Initial BMI\", value: initBmi.value, other: {\n        onClickHandler: () => router.push(`/emc/registration/${props.patient.getID()}/false`)\n      }},\n      { label: \"Initial TB Status\", value: initTBStatus.value, other: {\n        onClickHandler: () => router.push(`/emc/registration/${props.patient.getID()}/false`)\n      }},\n      { label: \"Pregnant at Initiation\", value: pregnantAtInitiation.value, other: {\n        onClickHandler: () => router.push(`/emc/registration/${props.patient.getID()}/false`)\n      }},\n      { label: \"Breastfeeding at Initiation\", value: breastFeedingAtInitiation.value, other: {\n        onClickHandler: () => router.push(`/emc/registration/${props.patient.getID()}/false`)\n      }},\n      { label: \"Latest VL Result and Result Date\", value:  latestVLResult.value },\n      { label: \"TI\", value: receivedART.value, other: {\n        onClickHandler: () => router.push(`/emc/registration/${props.patient.getID()}/false`)\n      }},\n      { label: \"HIV test place\", value: hivTestPlace.value, other: {\n        onClickHandler: () => router.push(`/emc/registration/${props.patient.getID()}/false`)\n      }},\n      {  label: \"HIV test date\", value: hivTestDate.value, other: {\n        onClickHandler: () => router.push(`/emc/registration/${props.patient.getID()}/false`)\n      }},\n      { label: \"WHO stage\", value: whoSTage.value, other: {\n        onClickHandler: () => router.push(`/emc/registration/${props.patient.getID()}/false`)\n      }},\n      { label: \"Reason for starting ART\", value: reasonForStartingART.value, other: {\n        onClickHandler: () => router.push(`/emc/registration/${props.patient.getID()}/false`)\n      }},\n      { label: \"Staging codition\", value: stagingCondition.value, other: {\n        onClickHandler: () => router.push(`/emc/registration/${props.patient.getID()}/false`)\n      }},\n    ])\n\n    const setHIVTestDate = async () => {\n      const date = await props.patient.getHIVTestDate()\n      if(date) hivTestDate.value = HisDate.toStandardHisDisplayFormat(date)\n    }\n\n    const setStagingInfo = () => {\n      props.patient.getInitialWeight().then(v => initWeight.value = v)\n      props.patient.getInitialHeight().then(v => initHeight.value = v)\n      props.patient.getInitialBMI().then(v => initBmi.value = v)\n      props.patient.getInitialTBStatus().then(v => initTBStatus.value = v)\n      props.patient.hasPregnancyAtARTInitiation().then(v => pregnantAtInitiation.value = v)\n      props.patient.breastFeedingAtARTInitiation().then(v => breastFeedingAtInitiation.value = v)\n      props.patient.everReceivedART().then(v => receivedART.value = v)\n      props.patient.agreesToFollowUp().then(v => agreesToFollowUp.value = v)\n      props.patient.getReasonForStartingART().then(v => reasonForStartingART.value = v)\n      props.patient.getHIVTestLocation().then(v => hivTestPlace.value = v)\n      props.patient.getStagingCondition().then(v => stagingCondition.value = v)\n      props.patient.getWhoStage().then(v => whoSTage.value = v)\n      setHIVTestDate()\n    }\n\n   onMounted(() => {\n    setStagingInfo();\n    setLatestVLResult();\n    EventBus.on(EmcEvents.RELOAD_LATEST_VL_RESULT,  () =>  setLatestVLResult(true))\n    EventBus.on(EmcEvents.RELOAD_STAGING_INFORMATION, () => setStagingInfo())\n   })\n\n    return {\n      patientInfo,\n      onClickHandler,\n      clickable,\n    }\n  },\n})\n","import { render } from \"./InformationHeader.vue?vue&type=template&id=0eefb168&scoped=true&ts=true\"\nimport script from \"./InformationHeader.vue?vue&type=script&lang=ts\"\nexport * from \"./InformationHeader.vue?vue&type=script&lang=ts\"\n\nimport \"./InformationHeader.vue?vue&type=style&index=0&id=0eefb168&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/daniel/projects/malawi-emr/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-0eefb168\"]])\n\nexport default __exports__","import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ion_title = _resolveComponent(\"ion-title\")!\n  const _component_ion_icon = _resolveComponent(\"ion-icon\")!\n  const _component_ion_button = _resolveComponent(\"ion-button\")!\n  const _component_ion_buttons = _resolveComponent(\"ion-buttons\")!\n  const _component_ion_toolbar = _resolveComponent(\"ion-toolbar\")!\n  const _component_ion_header = _resolveComponent(\"ion-header\")!\n  const _component_TextInput = _resolveComponent(\"TextInput\")!\n  const _component_ion_col = _resolveComponent(\"ion-col\")!\n  const _component_DateInput = _resolveComponent(\"DateInput\")!\n  const _component_SelectInput = _resolveComponent(\"SelectInput\")!\n  const _component_ion_row = _resolveComponent(\"ion-row\")!\n  const _component_ion_grid = _resolveComponent(\"ion-grid\")!\n  const _component_ion_content = _resolveComponent(\"ion-content\")!\n  const _component_ion_footer = _resolveComponent(\"ion-footer\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(_component_ion_header, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_title, null, {\n              default: _withCtx(() => [\n                _createTextVNode(\"Edit Patient Demographics\")\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_ion_buttons, { slot: \"end\" }, {\n              default: _withCtx(() => [\n                _createVNode(_component_ion_button, {\n                  onClick: _cache[0] || (_cache[0] = ($event: any) => (_ctx.modal.hide()))\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_ion_icon, {\n                      slot: \"icon-only\",\n                      name: \"close\"\n                    })\n                  ]),\n                  _: 1\n                })\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_content, { class: \"ion-padding\" }, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_grid, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_row, null, {\n              default: _withCtx(() => [\n                _createVNode(_component_ion_col, {\n                  size: \"4\",\n                  class: \"ion-margin-top ion-margin-bottom\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_TextInput, {\n                      modelValue: _ctx.patient.givenName,\n                      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((_ctx.patient.givenName) = $event))\n                    }, null, 8, [\"modelValue\"])\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ion_col, {\n                  size: \"4\",\n                  class: \"ion-margin-top ion-margin-bottom\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_TextInput, {\n                      modelValue: _ctx.patient.middleName,\n                      \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((_ctx.patient.middleName) = $event))\n                    }, null, 8, [\"modelValue\"])\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ion_col, {\n                  size: \"4\",\n                  class: \"ion-margin-top ion-margin-bottom\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_TextInput, {\n                      modelValue: _ctx.patient.familyName,\n                      \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((_ctx.patient.familyName) = $event))\n                    }, null, 8, [\"modelValue\"])\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ion_col, {\n                  size: \"12\",\n                  class: \"ion-margin-top ion-margin-bottom\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_DateInput, {\n                      modelValue: _ctx.patient.birthdate,\n                      \"onUpdate:modelValue\": _cache[4] || (_cache[4] = ($event: any) => ((_ctx.patient.birthdate) = $event)),\n                      allowEstimation: true,\n                      estimationLabel: 'Estimate Age',\n                      minDate: \"1900-01-01\",\n                      maxDate: _ctx.today,\n                      onIsEstimated: _cache[5] || (_cache[5] = (estimate) => _ctx.isBirthdateEstimated = estimate)\n                    }, null, 8, [\"modelValue\", \"maxDate\"])\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ion_col, {\n                  size: \"12\",\n                  class: \"ion-margin-top ion-margin-bottom\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_SelectInput, {\n                      modelValue: _ctx.patient.gender,\n                      \"onUpdate:modelValue\": _cache[6] || (_cache[6] = ($event: any) => ((_ctx.patient.gender) = $event)),\n                      options: _ctx.genderOptions\n                    }, null, 8, [\"modelValue\", \"options\"])\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ion_col, {\n                  size: \"12\",\n                  class: \"ion-margin-top ion-margin-bottom\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_TextInput, {\n                      modelValue: _ctx.patient.cellPhoneNumber,\n                      \"onUpdate:modelValue\": _cache[7] || (_cache[7] = ($event: any) => ((_ctx.patient.cellPhoneNumber) = $event)),\n                      allowUnknown: \"\"\n                    }, null, 8, [\"modelValue\"])\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ion_col, {\n                  size: \"12\",\n                  class: \"ion-margin-top ion-margin-bottom\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_SelectInput, {\n                      modelValue: _ctx.patient.homeVillage,\n                      \"onUpdate:modelValue\": _cache[8] || (_cache[8] = ($event: any) => ((_ctx.patient.homeVillage) = $event)),\n                      asyncOptions: _ctx.getVillagesByName,\n                      allowCustom: \"\"\n                    }, null, 8, [\"modelValue\", \"asyncOptions\"])\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ion_col, {\n                  size: \"12\",\n                  class: \"ion-margin-top ion-margin-bottom\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_SelectInput, {\n                      modelValue: _ctx.patient.landmark,\n                      \"onUpdate:modelValue\": _cache[9] || (_cache[9] = ($event: any) => ((_ctx.patient.landmark) = $event)),\n                      asyncOptions: _ctx.getLandmarks,\n                      allowCustom: \"\"\n                    }, null, 8, [\"modelValue\", \"asyncOptions\"])\n                  ]),\n                  _: 1\n                })\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_footer, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_button, {\n              color: \"primary\",\n              onClick: _cache[10] || (_cache[10] = ($event: any) => (_ctx.modal.hide())),\n              slot: \"end\"\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\"Close\")\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_ion_button, {\n              class: \"ion-margin-end\",\n              color: \"success\",\n              onClick: _ctx.onFinish,\n              slot: \"end\"\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\"Save\")\n              ]),\n              _: 1\n            }, 8, [\"onClick\"])\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    })\n  ], 64))\n}","\nimport { defineComponent, PropType, reactive, ref } from \"vue\";\nimport { IonGrid, IonRow, IonCol } from \"@ionic/vue\";\nimport Validation from \"@/components/Forms/validations/StandardValidations\"\nimport { Option } from \"@/components/Forms/FieldInterface\";\nimport { LocationService } from \"@/services/location_service\";\nimport { isEmpty } from \"lodash\";\nimport { PatientRegistrationService } from \"@/services/patient_registration_service\";\nimport { DTForm } from \"@/apps/EMC/interfaces/dt_form_field\";\nimport TextInput from \"../inputs/TextInput.vue\";\nimport DateInput from \"../inputs/DateInput.vue\";\nimport SelectInput from \"../inputs/SelectInput.vue\";\nimport { getLandmarks, getVillagesByName } from \"@/utils/HisFormHelpers/LocationFieldOptions\";\nimport { submitForm } from \"@/apps/EMC/utils/form\";\nimport { Patientservice } from \"@/services/patient_service\";\nimport EventBus from \"@/utils/EventBus\";\nimport { EmcEvents } from \"../../interfaces/emc_event\";\nimport { genderOptions } from \"../../utils/DTFormElements\";\nimport { modal } from \"@/utils/modal\";\nimport dayjs from \"dayjs\";\nimport { STANDARD_DATE_FORMAT } from \"@/utils/Date\";\nimport StandardValidations from \"@/components/Forms/validations/StandardValidations\";\n\nexport default defineComponent({\n  components: {\n    IonGrid,\n    IonRow,\n    IonCol,\n    TextInput,\n    DateInput,\n    SelectInput,\n  },\n  props: {\n    patientService: {\n      type: Object as PropType<Patientservice>,\n      required: true,\n    }\n  },\n  setup(props) {\n    const today = dayjs().format(STANDARD_DATE_FORMAT)\n    const isBirthdateEstimated = ref(false);\n    const patient = reactive<DTForm>({\n      givenName: {\n        label: \"First Name\",\n        value: props.patientService.getGivenName(),\n        placeholder: \"First Name\",\n        required: true,\n        validation: (name) => StandardValidations.isName(name)\n      },\n      familyName: {\n        label: \"last Name\",\n        value: props.patientService.getFamilyName(),\n        placeholder: \"Last Name\",\n        required: true,\n        validation: (name) => StandardValidations.isName(name)\n      },\n      middleName: {\n        label: \"middle Name\",\n        value: props.patientService.getMiddleName(),\n        placeholder: \"middle Name\",\n        validation: (name) => !!name && StandardValidations.isName(name)\n      },\n      gender: {\n        value: props.patientService.getGender(),\n        required: true,\n        label: \"Gender\",\n        placeholder: 'select gender'\n      },\n      birthdate: {\n        value:props.patientService.getBirthdate(),\n        label: 'Date of Birth',\n        placeholder: 'Date of Birth',\n        required: true,\n      },\n      cellPhoneNumber: {\n        value: props.patientService.getPhoneNumber(),\n        required: true,\n        label: \"Cellphone Number\",\n        placeholder: \"cellphone number e.g. 0991234567\",\n        validation: async (phone: Option) => !(phone.value === 'Unknown' || phone.value === 'N/A') && Validation.isMWPhoneNumber(phone)\n      },\n      homeVillage: {\n        value: props.patientService.getCurrentVillage(),\n        label: \"Home Village\",\n        placeholder: \"Home Village\",\n        required: true,\n      },\n      landmark: {\n        value: props.patientService.getClosestLandmark(),\n        label: \"Landmark\",\n        placeholder: \"Closest Landmark or Plot Number\",\n        required: true,\n      }\n    })\n\n    const resolveAddress = async (village: Option) => {\n      const address = {\n        'current_district': \"N/A\",\n        'current_traditional_authority': \"N/A\",\n        'current_village': village.label \n      }\n\n      const TA = village.other?.traditional_authority_id \n        ? await LocationService.getTraditionalAuthorityById(village.other.traditional_authority_id)\n        : null\n      if(!isEmpty(TA)) {\n        address['current_traditional_authority'] = TA[0].name\n        const district = await LocationService.getDistrictByID(TA[0].district_id)\n        if(!isEmpty(district)) {\n          address['current_district'] = district[0].name\n        }\n      }\n      return address;\n    }\n\n    const onFinish = async () => submitForm(patient, async (formData) => {\n      const updatedPatient = {} as any;\n      if(formData.givenName !== props.patientService.getGivenName()) updatedPatient[\"given_name\"] = formData.givenName;\n      if(formData.familyName !== props.patientService.getFamilyName()) updatedPatient[\"family_name\"] = formData.familyName;\n      if(formData.middleName !== props.patientService.getMiddleName()) updatedPatient[\"middle_name\"] = formData.middleName;\n      if(formData.birthdate !== props.patientService.getBirthdate()) updatedPatient[\"birthdate\"] = formData.birthdate;\n      if(formData.gender.value !== props.patientService.getGender()) updatedPatient[\"gender\"] = formData.gender.value;\n      if(formData.cellPhoneNumber !== props.patientService.getPhoneNumber()) updatedPatient[\"cell_phone_number\"] = formData.cellPhoneNumber;\n      if(formData.landmark.label !== props.patientService.getClosestLandmark()) updatedPatient[\"landmark\"] = formData.landmark.label;\n      if(formData.homeVillage !== props.patientService.getCurrentVillage()) {\n        Object.assign(updatedPatient, {\n          ...updatedPatient,\n          ...(await resolveAddress(formData.homeVillage))\n        })\n      }\n      if(!isEmpty(updatedPatient)) {\n        const person = new PatientRegistrationService();\n        person.setPersonID(props.patientService.getID());\n        await person.updatePerson(updatedPatient);\n      }\n      await modal.hide()\n      EventBus.emit(EmcEvents.RELOAD_PATIENT_DATA);\n    })\n \n    return {\n      today,\n      patient,\n      getLandmarks,\n      genderOptions,\n      isBirthdateEstimated,\n      modal,\n      onFinish, \n      getVillagesByName\n    };\n  },\n});\n","import { render } from \"./PatientDemographics.vue?vue&type=template&id=13fe3dee&ts=true\"\nimport script from \"./PatientDemographics.vue?vue&type=script&lang=ts\"\nexport * from \"./PatientDemographics.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/projects/malawi-emr/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ion_title = _resolveComponent(\"ion-title\")!\n  const _component_ion_icon = _resolveComponent(\"ion-icon\")!\n  const _component_ion_button = _resolveComponent(\"ion-button\")!\n  const _component_ion_buttons = _resolveComponent(\"ion-buttons\")!\n  const _component_ion_toolbar = _resolveComponent(\"ion-toolbar\")!\n  const _component_ion_header = _resolveComponent(\"ion-header\")!\n  const _component_TextInput = _resolveComponent(\"TextInput\")!\n  const _component_ion_col = _resolveComponent(\"ion-col\")!\n  const _component_ion_row = _resolveComponent(\"ion-row\")!\n  const _component_ion_grid = _resolveComponent(\"ion-grid\")!\n  const _component_ion_content = _resolveComponent(\"ion-content\")!\n  const _component_ion_footer = _resolveComponent(\"ion-footer\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(_component_ion_header, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_title, null, {\n              default: _withCtx(() => [\n                _createTextVNode(\"Add Guadian Demographics\")\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_ion_buttons, { slot: \"end\" }, {\n              default: _withCtx(() => [\n                _createVNode(_component_ion_button, {\n                  onClick: _cache[0] || (_cache[0] = ($event: any) => (_ctx.modal.hide()))\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_ion_icon, {\n                      slot: \"icon-only\",\n                      name: \"close\"\n                    })\n                  ]),\n                  _: 1\n                })\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_content, { class: \"ion-padding\" }, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_grid, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_row, null, {\n              default: _withCtx(() => [\n                _createVNode(_component_ion_col, {\n                  size: \"12\",\n                  class: \"ion-margin-top ion-margin-bottom\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_TextInput, {\n                      modelValue: _ctx.guardian.givenName,\n                      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((_ctx.guardian.givenName) = $event))\n                    }, null, 8, [\"modelValue\"])\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ion_col, {\n                  size: \"12\",\n                  class: \"ion-margin-top ion-margin-bottom\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_TextInput, {\n                      modelValue: _ctx.guardian.familyName,\n                      \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((_ctx.guardian.familyName) = $event))\n                    }, null, 8, [\"modelValue\"])\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ion_col, {\n                  size: \"12\",\n                  class: \"ion-margin-top ion-margin-bottom\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_TextInput, {\n                      modelValue: _ctx.guardian.cellPhoneNumber,\n                      \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((_ctx.guardian.cellPhoneNumber) = $event)),\n                      allowUnknown: \"\"\n                    }, null, 8, [\"modelValue\"])\n                  ]),\n                  _: 1\n                })\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_footer, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_button, {\n              color: \"primary\",\n              onClick: _cache[4] || (_cache[4] = ($event: any) => (_ctx.modal.hide())),\n              slot: \"end\"\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\"Close\")\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_ion_button, {\n              class: \"ion-margin-end\",\n              color: \"success\",\n              onClick: _ctx.onFinish,\n              slot: \"end\"\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\"Save\")\n              ]),\n              _: 1\n            }, 8, [\"onClick\"])\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    })\n  ], 64))\n}","\nimport { defineComponent, reactive } from \"vue\";\nimport { IonGrid, IonRow, IonCol } from \"@ionic/vue\";\nimport Validation from \"@/components/Forms/validations/StandardValidations\"\nimport { Option } from \"@/components/Forms/FieldInterface\";\nimport { PatientRegistrationService } from \"@/services/patient_registration_service\";\nimport { DTForm } from \"@/apps/EMC/interfaces/dt_form_field\";\nimport TextInput from \"../inputs/TextInput.vue\";\nimport { submitForm } from \"@/apps/EMC/utils/form\";\nimport { RelationsService } from \"@/services/relations_service\";\nimport EventBus from \"@/utils/EventBus\";\nimport { EmcEvents } from \"../../interfaces/emc_event\";\nimport { modal } from \"@/utils/modal\";\nimport StandardValidations from \"@/components/Forms/validations/StandardValidations\";\n\nexport default defineComponent({\n  components: {\n    IonGrid,\n    IonRow,\n    IonCol,\n    TextInput,\n  },\n  props: {\n    patientId: {\n      type: Number,\n      required: true,\n    }\n  },\n  setup(props) {    \n    const guardian = reactive<DTForm>({\n      givenName: {\n        label: \"First Name\",\n        value: \"\",\n        placeholder: \"First Name\",\n        required: true,\n        validation: (name) => StandardValidations.isName(name)\n      },\n      familyName: {\n        label: \"Last Name\",\n        value: \"\",\n        placeholder: \"Last Name\",\n        required: true,\n        validation: (name) => StandardValidations.isName(name)\n      },\n      cellPhoneNumber: {\n        value: '',\n        required: true,\n        label: \"Cellphone Number\",\n        validation: async (phone: Option) => {\n          return phone.value !== 'Unknown' && Validation.isMWPhoneNumber(phone)\n        }\n      },\n    })\n\n    const onFinish = async () => submitForm(guardian, async (formData) => {\n      const person: Record<string, any> = {\n        'home_district': \"N/A\",\n        'home_traditional_authority': \"N/A\",\n        'home_village': \"N/A\",\n        'current_district': \"N/A\",\n        'current_traditional_authority': \"N/A\",\n        'current_village': \"N/A\",\n        'middle_name': \"\",\n        'gender': \"N/A\",\n        'birthdate': \"N/A\",\n        'birthdate_estimated': \"N/A\",\n        'landmark': \"N/A\",\n        'relationship': \"N/A\",\n        'patient_type': \"\",\n        'isPatient': false,\n        'patient_id': props.patientId,\n        ...formData\n      };\n      const registrationService = new PatientRegistrationService()\n      await registrationService.registerGuardian(person)\n      const guardianId = registrationService.getPersonID()      \n      await RelationsService.createRelation(props.patientId, guardianId, 13)\n      await modal.hide()\n      EventBus.emit(EmcEvents.RELOAD_GUARDIAN_DATA)\n    }, \n    { \n      underscoreKeys: true \n    })\n \n    return {\n      guardian,\n      modal,\n      onFinish,\n    };\n  },\n});\n","import { render } from \"./GuardianDemographics.vue?vue&type=template&id=e657e904&ts=true\"\nimport script from \"./GuardianDemographics.vue?vue&type=script&lang=ts\"\nexport * from \"./GuardianDemographics.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/projects/malawi-emr/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ion_title = _resolveComponent(\"ion-title\")!\n  const _component_ion_icon = _resolveComponent(\"ion-icon\")!\n  const _component_ion_button = _resolveComponent(\"ion-button\")!\n  const _component_ion_buttons = _resolveComponent(\"ion-buttons\")!\n  const _component_ion_toolbar = _resolveComponent(\"ion-toolbar\")!\n  const _component_ion_header = _resolveComponent(\"ion-header\")!\n  const _component_text_input = _resolveComponent(\"text-input\")!\n  const _component_ion_col = _resolveComponent(\"ion-col\")!\n  const _component_ion_row = _resolveComponent(\"ion-row\")!\n  const _component_ion_grid = _resolveComponent(\"ion-grid\")!\n  const _component_ion_content = _resolveComponent(\"ion-content\")!\n  const _component_ion_footer = _resolveComponent(\"ion-footer\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(_component_ion_header, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_title, null, {\n              default: _withCtx(() => [\n                _createTextVNode(\"ARV NUMBER\")\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_ion_buttons, { slot: \"end\" }, {\n              default: _withCtx(() => [\n                _createVNode(_component_ion_button, {\n                  onClick: _cache[0] || (_cache[0] = ($event: any) => (_ctx.modal.hide()))\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_ion_icon, {\n                      slot: \"icon-only\",\n                      name: \"close\"\n                    })\n                  ]),\n                  _: 1\n                })\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_content, { class: \"ion-padding\" }, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_grid, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_row, null, {\n              default: _withCtx(() => [\n                _createVNode(_component_ion_col, null, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_text_input, {\n                      modelValue: _ctx.form.arvNumber,\n                      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((_ctx.form.arvNumber) = $event)),\n                      form: _ctx.form,\n                      prefix: `${_ctx.sitePrefix}-ARV-`\n                    }, null, 8, [\"modelValue\", \"form\", \"prefix\"])\n                  ]),\n                  _: 1\n                })\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_footer, { class: \"ion-padding-horizontal\" }, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_button, {\n              color: \"primary\",\n              onClick: _cache[2] || (_cache[2] = ($event: any) => (_ctx.modal.hide())),\n              slot: \"end\"\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\"Close\")\n              ]),\n              _: 1\n            }),\n            (_ctx.hasValidARVNumber)\n              ? (_openBlock(), _createBlock(_component_ion_button, {\n                  key: 0,\n                  color: \"danger\",\n                  onClick: _ctx.voidARV,\n                  slot: \"start\"\n                }, {\n                  default: _withCtx(() => [\n                    _createTextVNode(\"Void ARV Number\")\n                  ]),\n                  _: 1\n                }, 8, [\"onClick\"]))\n              : _createCommentVNode(\"\", true),\n            _createVNode(_component_ion_button, {\n              color: \"success\",\n              onClick: _ctx.onFinish,\n              slot: \"end\"\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\"Save\")\n              ]),\n              _: 1\n            }, 8, [\"onClick\"])\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    })\n  ], 64))\n}","\nimport { computed, defineComponent, onMounted, PropType, reactive, ref } from \"vue\";\nimport { IonGrid, IonRow, IonCol } from \"@ionic/vue\";\nimport { Option } from \"@/components/Forms/FieldInterface\";\nimport { DTForm } from \"@/apps/EMC/interfaces/dt_form_field\";\nimport TextInput from \"../inputs/TextInput.vue\";\nimport { submitForm } from \"@/apps/EMC/utils/form\";\nimport { loader } from \"@/utils/loader\";\nimport EventBus from \"@/utils/EventBus\";\nimport { EmcEvents } from \"../../interfaces/emc_event\";\nimport { Patientservice } from \"@/services/patient_service\";\nimport { isEmpty } from \"lodash\";\nimport { ProgramService } from \"@/services/program_service\";\nimport GLOBAL_PROP from \"@/apps/GLOBAL_APP/global_prop\";\nimport { modal } from \"@/utils/modal\";\nimport { alertConfirmation } from \"@/utils/Alerts\";\nimport StandardValidations from \"@/components/Forms/validations/StandardValidations\";\n\nexport default defineComponent({\n  components: {\n    IonGrid,\n    IonRow,\n    IonCol,\n    TextInput,\n  },\n  props: {\n    patient: {\n      type: Object as PropType<Patientservice>,\n      required: true,\n    }\n  },\n  setup(props) { \n    const sitePrefix = ref(\"\");\n    const arvNumber = computed(() => props.patient.getArvNumber());\n    const hasValidARVNumber = computed(() => {\n      return !isEmpty(arvNumber.value) && arvNumber.value !== \"Unknown\";\n    });\n\n    const form = reactive<DTForm>({\n      arvNumber: {\n        value: hasValidARVNumber.value ? arvNumber.value.split(\"-\")[2] : \"\",\n        label: `${hasValidARVNumber.value ? \"Edit\" : \"Add New\"} ARV Number`,\n        placeholder: \"Enter ARV Number\",\n        required: true,\n        validation: async (arv: Option) => {\n          const isNumberErr = StandardValidations.isNumber(arv, \"POSITIVE_INTEGERS\")\n          if(isNumberErr !== null) return isNumberErr\n          if(arv.value === arvNumber.value.split(\"-\")[2]) return null\n          const patients = await Patientservice.findByOtherID(4, `${sitePrefix.value}-ARV-${arv.value}`);\n          return isEmpty(patients) ?  null : ['ARV Number already exists'];\n        },\n      },\n    })\n\n    const onFinish = async () => submitForm(form, async (formData) => {\n      if(formData.arvNumber !== arvNumber.value.split(\"-\")[2]){\n        if(hasValidARVNumber.value) {\n          await props.patient.updateARVNumber(`${sitePrefix.value}-ARV-${formData.arvNumber}`);\n        } else {\n          await props.patient.createArvNumber(`${sitePrefix.value}-ARV-${formData.arvNumber}`);\n        }\n        EventBus.emit(EmcEvents.RELOAD_PATIENT_DATA)\n      }\n      await modal.hide();\n    }) \n\n    const voidARV = async () => {\n      const confirm = await alertConfirmation(`Are you sure you want to void this ARV Number ${arvNumber.value}?`);\n      if(!confirm) return;\n      await loader.show(\"Voiding ARV Number...\");\n      try {\n        await ProgramService.voidARVNumber(arvNumber.value);\n        await loader.hide();\n        await modal.hide();\n        EventBus.emit(EmcEvents.RELOAD_PATIENT_DATA)\n      } catch (error) {\n        await loader.hide();\n        console.log(error)\n      } \n    }\n\n    onMounted(async () => {\n      sitePrefix.value = await GLOBAL_PROP.sitePrefix();\n    }) \n \n    return {\n      form,\n      modal,\n      sitePrefix,\n      arvNumber,\n      hasValidARVNumber,\n      onFinish,\n      voidARV,\n    };\n  },\n});\n","import { render } from \"./ArvNumber.vue?vue&type=template&id=31dbec53&ts=true\"\nimport script from \"./ArvNumber.vue?vue&type=script&lang=ts\"\nexport * from \"./ArvNumber.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/projects/malawi-emr/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","\nimport { computed, defineComponent, onMounted, ref } from \"vue\";\nimport HisDate from \"@/utils/Date\";\nimport { Patient } from \"@/interfaces/patient\";\nimport { RelationshipService } from \"@/services/relationship_service\";\nimport VisitsSummary from \"../Components/tables/VisitsSummary.vue\";\nimport InformationHeader from \"@/apps/EMC/Components/InformationHeader.vue\";\nimport { PatientObservationService } from \"@/services/patient_observation_service\";\nimport PatientDemographics from \"../Components/modals/PatientDemographics.vue\";\nimport GuardianDemographicsVue from \"../Components/modals/GuardianDemographics.vue\";\nimport ARVNumberVue from \"../Components/modals/ArvNumber.vue\";\nimport { useRoute } from \"vue-router\";\nimport EventBus from \"@/utils/EventBus\";\nimport { EmcEvents } from \"../interfaces/emc_event\";\nimport { modal } from \"@/utils/modal\";\nimport { isEmpty } from \"lodash\";\n\nexport default defineComponent({\n  components: {\n    VisitsSummary,\n    InformationHeader,\n  },\n  setup () {\n    const route = useRoute();\n    const patientId = parseInt(route.params.patientId.toString()) || 0;\n    const patient = ref<PatientObservationService>();\n    const artStartDate = ref<string>(\"\");\n    const guardians = ref<string>(\"\");\n    const isReady = computed(() => !isEmpty(patient.value))\n\n    const setPatient = async () => {\n      if (patientId) {\n        const patientData: Patient = await PatientObservationService.findByID(patientId);\n        if(patientData) {\n          patient.value = new PatientObservationService(patientData);\n        }\n      }\n    };\n\n    const setPatientGuardian = async () => {\n      const relationship = await RelationshipService.getGuardianDetails(patientId);\n      guardians.value = relationship.map((r: any) => ` ${r.name} (${r.relationshipType})`).join(\", \");\n    }\n\n    const updateDemographics = async (attribute: string) => {\n      await modal.show(PatientDemographics, {\n        patientService: patient.value,\n        attribute,\n      });\n    }\n\n    const addGuardian = async () => {\n      await modal.show(GuardianDemographicsVue, {\n        patientId,\n      });\n    }\n\n    const updateARVNumber = async () => {\n      await modal.show(ARVNumberVue, {\n        patient: patient.value,\n      });\n    }\n\n    EventBus.on(EmcEvents.RELOAD_PATIENT_DATA,async () => {\n      await setPatient();\n    });\n    EventBus.on(EmcEvents.RELOAD_GUARDIAN_DATA, async () => {\n      await setPatientGuardian();\n    });\n\n    onMounted(async () => {\n      await setPatient();\n      const date = await patient.value?.getARTStartDate();\n      artStartDate.value = date ? HisDate.toStandardHisDisplayFormat(date) : \"N/A\";\n      await setPatientGuardian();\n    });\n\n    return {\n      patient,\n      artStartDate,\n      guardians,\n      isReady,\n      updateDemographics,\n      addGuardian,\n      updateARVNumber,\n    };\n  },\n});\n","import { render } from \"./Mastercard.vue?vue&type=template&id=3b0a2fea&ts=true\"\nimport script from \"./Mastercard.vue?vue&type=script&lang=ts\"\nexport * from \"./Mastercard.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/projects/malawi-emr/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { AppEncounterService } from \"@/services/app_encounter_service\";\nimport { isArray } from \"lodash\";\nimport { Option } from '@/components/Forms/FieldInterface';\nexport class VitalsService extends AppEncounterService{\n  constructor(patientID: number, providerID: number) {\n    super(patientID, 6, providerID);\n  }\n  isNotEmptyandNumber(vital: Option) {\n    return `${vital.value}`.match(/^-?\\d+\\.?\\d*$/) ? null : [`Invalid entry for ${vital.label}`]\n  }\n  isNotEmptyandFloat(vital: Option) {\n    return `${vital.value}`.match(/^\\d{1,3}\\.\\d{1,5}$/) \n      ? null \n      : [`Invalid entry for ${vital.label}. Don't forget to add a decimal. e.g. 56.2 ${vital.other?.modifier || ''}`]\n  }\n  checkMinMax(val: Option, min: number, max: number) {\n    const p = [];\n    if (parseFloat(`${val.value}`) < min) {\n      p.push([`${val.label} entered is less than minimum ${min} ${val?.other?.modifier || ''}`])\n    }\n    if (parseFloat(`${val.value}`) > max) {\n      p.push([`${val.label} entered is greater than maximum ${max} ${val?.other?.modifier || ''}`])\n    }\n    return p.length > 0 ? p : null;\n  }\n  validateAll(vitals: Option[]) {\n    const p: any = [];\n    vitals.map((vital: any) => {\n      const j = this.validator(vital);\n      return isArray(j) ? p.push(j) : null\n    })\n    return p.length > 0 ? p : null;\n  }\n\n  mergeErrors(errors: any[]) {\n    const holder: any = [];\n    errors.forEach(element => {\n      if (isArray(element)) {\n        holder.push(element)\n      }\n    });\n    return holder.length > 0 ? holder : null\n  }\n  isValidBPReading(vital: any) {\n    const p = [];\n    const isValidBP =  `${vital.value}`.match(/^\\d{1,3}\\/\\d{1,3}$/g) ? null : ['Invalid BP reading']\n    p.push(isValidBP);\n    if(isValidBP == null) {\n      const value = `${vital.value}`.split('/');\n      \n      const bpSystolic = {\n        label: 'Systolic',\n        value: value[0]\n      };\n      const bpDiastolic = {\n        label: 'Diastolic',\n        value: value[1]\n      };\n      p.push(this.checkMinMax(bpDiastolic, 30, 200))\n      p.push(this.checkMinMax(bpSystolic, 40, 250))\n    }\n    return this.mergeErrors(p)\n  }\n  validator(vital: Option) {\n    const values = [\n      {\n        name: \"Weight\",\n        validator: (val: Option) => {\n          const emptyErrors = this.isNotEmptyandFloat(val);\n          const minErrors = this.checkMinMax(val, 2.0, 250.0);\n          return this.mergeErrors([emptyErrors, minErrors]); \n        },\n      },\n      {\n        name: \"Height\",\n        validator: (val: Option) => {\n          const errors = []\n          errors.push(this.isNotEmptyandNumber(val))\n          errors.push(this.checkMinMax(val, 40, 220))\n          return this.mergeErrors(errors); \n        },\n      }, {\n        name: \"BP\",\n        validator: (val: any) => {\n          return this.isValidBPReading(val)\n        },\n      }, {\n        name: \"Temp\",\n        validator: (val: any) => {\n          const emptyErrors = this.isNotEmptyandNumber(val);\n          const minErrors = this.checkMinMax(val, 30, 42);\n          return this.mergeErrors([emptyErrors, minErrors]); \n        },\n      }, {\n        name: \"SP02\",\n        validator: (val: any) => {\n          const minErrors = this.checkMinMax(val, 40, 100);\n          return this.mergeErrors([minErrors]); \n        },\n      }, {\n        name: \"Pulse\",\n        validator: (val: any) => {\n          const minErrors = this.checkMinMax(val, 50, 120);\n          return this.mergeErrors([minErrors]); \n        },\n      }\n    ]\n    const v = values.filter(element => {\n      return element.name === vital.label;\n    });\n    if (v.length > 0) {\n      return v[0].validator(vital);\n    }\n    return null\n  }\n}","export enum EmcEvents {\n  RELOAD_PATIENT_DATA = 'reload_patient_data',\n  RELOAD_PATIENT_VISIT_DATA = 'reload_patient_visit_data',\n  RELOAD_GUARDIAN_DATA = 'reload_guardian_data',\n  RELOAD_LATEST_VL_RESULT = 'reload_latest_vl_result',\n  RELOAD_STAGING_INFORMATION = 'reload_staging_info',\n  ON_CLEAR = \"on_clear\",\n  ON_INITIAL_VISIT_DATE = \"on_initital_visit_date\"\n}","import { Person } from \"@/interfaces/person\"\nimport { Service } from \"./service\"\n\nexport interface NewPerson {\n    person_id?: number;\n    given_name: string;\n    family_name: string;\n    gender: string;\n    birthdate: string;\n    birthdate_estimated: boolean;\n    home_district: string;\n    home_traditional_authority: string;\n    home_village: string;\n    current_district: string;\n    current_traditional_authority: string;\n    current_village: string;\n    landmark: string;\n    cell_phone_number: string;\n    occupation: string;\n    facility_name: string;\n    patient_type?: string;\n    relationship?: string;\n}\n\nexport class PersonService extends Service{\n    person: Person | NewPerson\n    constructor(person: NewPerson | Person){\n        super()\n        this.person = person\n    }\n\n    create() { return Service.postJson('/people', this.person) }\n\n    update(id: number) { return Service.putJson(`people/${id}`, {\n        ...this.person, 'program_id': Service.getProgramID()\n    })}\n\n    static searchFamilyName(name: string) {\n        return super.getJson('/search/family_name', {'search_string': name})\n    }\n\n    static searchGivenName(name: string) {\n        return super.getJson('/search/given_name', {'search_string': name})\n    }\n\n    static async getPersonFullName(personId: string | number) {\n        const names = await super.getJson(`/people/${personId}/names`)\n        return names && names.length ? names[0].given_name + ' ' + names[0].family_name : ''\n    }\n}\n","export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./InformationHeader.vue?vue&type=style&index=0&id=0eefb168&scoped=true&lang=css\"","import { modalController } from \"@ionic/vue\";\n\nexport const modal = {\n  async show(component: any, componentProps?: Record<string, any>, cssClass = 'custom-modal', backdropDismiss = true) {\n    const m = await modalController.create({\n      component,\n      cssClass,\n      backdropDismiss,\n      componentProps,\n    });\n    m.present();\n    const { data } = await m.onWillDismiss();\n    if(data) return data;\n  },\n  async hide(data?: Record<string, any>) {\n    await modalController.dismiss(data);\n  }\n}","import { DrugInterface } from \"@/interfaces/Drug\";\nimport { DrugOrderService } from \"@/services/drug_order_service\";\nimport { Observation } from \"@/interfaces/observation\";\nimport HisDate from \"@/utils/Date\"\nimport { RegimenService } from \"@/services/regimen_service\";\nimport { isEmpty } from \"lodash\"\nimport { AppEncounterService } from \"@/services/app_encounter_service\"\nimport { toDate } from \"@/utils/Strs\";\n\nexport enum AdverseEffectsCategories {\n    CONTRAINDICATION = \"contraindication\",\n    SIDE_EFFECT = \"side_effect\"\n}\n\nexport class PrescriptionService extends AppEncounterService {\n    nextVisitInterval: number;\n    fastTrack: boolean;\n    regimenExtras: Array<Record<string, any>>;\n    hangingPills: Array<Record<string, any>>;\n    fastTrackMedications: Array<Record<string, any>>;\n    medicationOrders: Array<number>;\n    treatmentState: string;\n    contraindications: Record<string, any>;\n    sideEffects: Record<string, any>;\n    tptPrescriptionCount: number;\n    lastSideEffectDate: string;\n\n    constructor(patientID: number, providerID: number) {\n        super(patientID, 25, providerID) //TODO: Use encounter type reference name\n        this.nextVisitInterval = 0\n        this.fastTrack = false\n        this.regimenExtras = []\n        this.fastTrackMedications = []\n        this.hangingPills = []\n        this.medicationOrders = []\n        this.treatmentState = ''\n        this.contraindications = {}\n        this.sideEffects = {}\n        this.tptPrescriptionCount = 0\n        this.lastSideEffectDate = ''\n    }\n\n    setNextVisitInterval(nextVisitInterval: number) {\n        this.nextVisitInterval = nextVisitInterval\n    }\n\n    getHangingPills() {\n        return this.hangingPills\n    }\n\n    getMedicationOrders() {\n        return this.medicationOrders.map((i: number) => {\n            return AppEncounterService.getCachedConceptName(i)\n        })\n    }\n\n    getTptPrescriptionCount() {\n        return this.tptPrescriptionCount\n    }\n\n    getLastSideEffectDate() {\n        return this.lastSideEffectDate\n    }\n\n    getContraindications() { return this.contraindications }\n\n    getSideEffects() { return this.sideEffects }\n\n    getRegimenExtras() { return this.regimenExtras }\n\n    getPatientRegimens() { return RegimenService.getRegimens(this.patientID) }\n\n    getARVs() {\n        return RegimenService.getJson('arv_drugs')\n    }\n\n    getCustomIngridients() { return RegimenService.getCustomIngridients() }\n\n    getFastTrackMedications() { return this.fastTrackMedications }\n\n    getTreatmentState() { return this.treatmentState }\n\n    isFastTrack() { return this.fastTrack }\n\n    medicationOrdersAvailable() { return !isEmpty(this.medicationOrders) }\n\n    shouldPrescribeArvs() { \n        const arvs = AppEncounterService.getCachedConceptID(\"Antiretroviral drugs\")\n        return this.medicationOrders.includes(arvs)\n    }\n\n    shouldPrescribeExtras() {\n        const extras = AppEncounterService.getConceptsByCategory('art_extra_medication_order')\n        const extrasAvailable = extras.map((i: any) => this.medicationOrders.includes(i.concept_id))\n        return extrasAvailable.some(Boolean)\n    }\n\n    getRegimenStarterpack(regimenCode: number, patientWeight: number) {\n        const params = { weight: patientWeight, regimen: regimenCode }\n\n        return AppEncounterService.getJson(\n            `programs/${AppEncounterService.getProgramID()}/regimen_starter_packs`,\n            params\n        )\n    }\n\n    async getLvpDrugsByType(type: string, regimen: number) {\n        return AppEncounterService.getJson(\n            `programs/${AppEncounterService.getProgramID()}/regimens/${regimen}`,\n            {\n                'patient_id': this.patientID,\n                'lpv_drug_type': type\n            }\n        )\n    }\n\n    async loadContraindications() {\n        const contraindication = await AppEncounterService.getConceptID('Contraindications')\n        const obs = await AppEncounterService.getObs({\n            'concept_id': contraindication, 'person_id': this.patientID \n        })\n\n        obs.forEach((o: any) => {\n            const date = HisDate.toStandardHisFormat(o.obs_datetime)\n\n            if (!this.contraindications[date]) this.contraindications[date] = []\n\n            const concept = AppEncounterService.getCachedConceptName(o.value_coded)\n\n            this.contraindications[date].push(concept)\n        })\n    }\n\n    async loadDrugInduced() {\n        const drugInduced = await AppEncounterService.getConceptID('Drug induced')\n        const obs = await AppEncounterService.getObs({\n            'concept_id': drugInduced, 'person_id': this.patientID \n        })\n\n        if (!obs) return\n\n        obs.forEach((o: any) => {\n            const date = HisDate.toStandardHisFormat(o.obs_datetime)\n\n            if (!this.lastSideEffectDate) this.lastSideEffectDate = date\n\n            if (!o.value_drug || !o.value_coded) return\n\n            if (!this.sideEffects[date]) this.sideEffects[date] = {}\n\n            if (!this.sideEffects[date][o.value_drug]) this.sideEffects[date][o.value_drug] = []\n\n            const concept = AppEncounterService.getCachedConceptName(o.value_coded)\n\n            this.sideEffects[date][o.value_drug].push(concept)\n        })\n    }\n\n    async loadTptPrescriptionCount() {\n        const res = await AppEncounterService.getJson(\n            `tpt_prescription_count`, {\n                'patient_id': this.patientID,\n                'date': this.date\n            }\n        )\n\n        if (res) {\n            const count = res.count + 1\n            this.tptPrescriptionCount = count > 3 ? 3 : count\n        } \n    }\n\n    async loadFastTrackStatus() {\n        const isFastTrack = await AppEncounterService.getFirstValueCoded(this.patientID, 'Fast track')\n        const yes = await AppEncounterService.getConceptID('yes')\n\n        if (isFastTrack) this.fastTrack = isFastTrack === yes\n    }\n    \n    async loadRegimenExtras(date=this.date) {\n        const meds = await RegimenService.getJson(\n            `programs/${RegimenService.getProgramID()}/patients/${this.patientID}/dosages`,\n            {date}\n        )\n        if (meds) this.regimenExtras = Object.values(meds)\n    }\n\n    async loadMedicationOrders() {\n        const medicationOrders = await AppEncounterService.getConceptID(\"Medication orders\")\n        const orders = await AppEncounterService.getObs({\n            'concept_id': medicationOrders,\n            'date': this.date,\n            'person_id': this.patientID,\n            'page_size': 5\n        })\n        this.medicationOrders = orders.map((i: Observation) => i.value_coded)\n    }\n\n    async loadHangingPills() {\n        const pills = (await AppEncounterService.getAll(this.patientID, 'Pills brought'))||[]\n        this.hangingPills = pills.filter((o: any) => {\n            if (o.value_numeric >= 1) {\n                // Condition for detecting pills brought during transfer in.. This is a bit hack-ish\n                if (o.value_drug && toDate(o.obs_datetime) === toDate(this.date)) {\n                    return true\n                }\n                // This is for normal workflow adherence pills\n                return o.order||false\n            }\n            return false\n        }).map((o: any) => o?.order?.drug_order?.drug_inventory_id||o.value_drug)        \n    }\n\n    async loadFastTrackMedications() {\n        const drugs = await DrugOrderService.getLastDrugsReceived(this.patientID)\n        const withDosages = drugs.map(async(data: any) => {\n            const { drug } = data\n            const dosage = await DrugOrderService.getDrugDosages(this.patientID, drug.drug_id)\n            return {\n                'drug_id': drug.drug_id,\n                'drug_name': drug.name,\n                'units': drug.units,\n                'am': dosage.am,\n                'noon': dosage.noon,\n                'pm': dosage.pm,\n                'frequency': data.frequency\n            }\n        })\n        this.fastTrackMedications = await Promise.all(withDosages)\n    }\n\n    async loadTreatmentState() {\n        const params = { date: this.date }\n\n        const req = await AppEncounterService.getJson(\n            `programs/${AppEncounterService.getProgramID()}/patients/${this.patientID}/status`,\n            params\n        )\n\n        if (req) this.treatmentState = req['status']\n    }\n\n    findAndGroupDrugSideEffects(drugs: Array<number>) {\n        const allSideEffects: any = {}\n\n        for (const date in this.sideEffects) {\n            const drugInduced = this.sideEffects[date]\n\n            for(const drug in drugInduced) {\n                if (!drugs.includes(parseInt(drug))) continue\n\n                if (!allSideEffects[date]) allSideEffects[date] = []\n\n                allSideEffects[date] = [\n                    ...allSideEffects[date], ...drugInduced[drug]\n                ]\n            }\n        }\n        return allSideEffects\n    }\n\n    calculatePillsPerDay(am: number, noon: number, pm: number) {\n        return parseFloat(am.toString()) + noon + pm\n    }\n\n    estimatePackSize(pillsPerDay: number, packSize=0) {\n        const packs = (pillsPerDay * this.nextVisitInterval) / packSize\n        \n        let roundedPacks = Math.round(packs)\n\n        if (roundedPacks <= 0) roundedPacks += 1\n\n        return roundedPacks\n    }\n\n    calculateDosage(morningTabs: number, eveningTabs: number): number {\n        let dose = 0\n        if (eveningTabs === 0) dose = morningTabs\n\n        if (morningTabs == 0) dose = eveningTabs\n\n        if (morningTabs > 0 && eveningTabs  > 0) {\n            dose = (morningTabs + eveningTabs) / 2\n        }\n        return dose\n    }\n    \n    calculateEquivalentDosage(morningTabs: number, eveningTabs: number): number {\n        return morningTabs + eveningTabs\n    }\n\n    calculateDateFromInterval() {\n        const dateObj = new Date(this.date)\n        dateObj.setDate(dateObj.getDate() + this.nextVisitInterval)\n        return HisDate.toStandardHisFormat(dateObj)\n    }\n\n    getDrugPackSize(drug: any) {\n        if (drug.pack_size) return drug.pack_size\n        try{\n            return drug.barcodes[0].tabs\n        }catch(e) {\n            return 30\n        }\n    }\n\n    getInstructions(drugName: string, morningTabs: number, eveningTabs: number, units: string): string {\n        return `${drugName} :- Morning: ${morningTabs} ${units}, Evening: ${eveningTabs} ${units}`\n    }\n\n    toOrderObj(id: number, name: string, units: string, am=0, pm=0, frequency=''): DrugInterface {\n        return {\n            'drug_inventory_id': id,\n            'equivalent_daily_dose': this.calculateEquivalentDosage(am, pm),\n            'start_date': this.date,\n            'auto_expire_date': this.calculateDateFromInterval(), \n            'units': units,\n            'instructions': this.getInstructions(name, am, pm, units),\n            'dose': this.calculateDosage(am, pm),\n            'frequency': frequency\n        }\n    }\n\n    async getReasonForRegimenSwitch() {\n        const reason = await AppEncounterService.getFirstValueText(this.patientID, 'Reason for ARV switch')\n        return reason ? reason : 'N/A'\n    }\n\n    async createDrugOrder(drugOrders: Array<DrugInterface>) {\n        return DrugOrderService.create({\n            'encounter_id': this.encounterID,\n            'drug_orders': drugOrders\n        })\n    }\n\n    async createHangingPillsObs(response: string) {\n        return this.saveValueTextObs('appointment type', response)\n    }\n\n    async createRegimenSwitchObs(reasonForSwitch: string): Promise<Observation> {\n        return this.saveValueTextObs('Reason for ARV switch', reasonForSwitch)\n    }\n}\n","export * from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./PatientVisit.vue?vue&type=style&index=0&id=e5850f36&scoped=true&lang=css\""],"sourceRoot":""}