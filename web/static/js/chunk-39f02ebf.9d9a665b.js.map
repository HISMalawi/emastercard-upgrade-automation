{"version":3,"sources":["webpack:///./src/apps/ART/services/adherence_service.ts","webpack:///./src/utils/Arrays.ts","webpack:///./src/apps/ART/services/lab_order_service.ts","webpack:///./src/services/person_attributes_service.ts","webpack:///./src/services/patient_registration_service.ts","webpack:///./src/services/relations_service.ts","webpack:///./src/apps/ART/services/htn_service.ts","webpack:///./src/apps/EMC/Components/tables/VisitsSummary.vue?88ca","webpack:///./src/apps/ART/services/consultation_service.ts","webpack:///./src/services/patient_lab_result_service.ts","webpack:///./src/apps/EMC/utils/form.ts","webpack:///./src/apps/ART/services/stock_service.ts","webpack:///./src/apps/ART/services/dispensation_service.ts","webpack:///./src/apps/ART/services/reception_service.ts","webpack:///./src/services/drug_order_service.ts","webpack:///./src/utils/ActionSheetHelpers/VoidReason.ts","webpack:///./src/components/DataViews/DrillTableModal.vue?4406","webpack:///./src/components/DataViews/DrillTableModal.vue","webpack:///./src/components/DataViews/DrillTableModal.vue?1ade","webpack:///./src/apps/ART/services/appointment_service.ts","webpack:///./src/apps/EMC/views/Mastercard.vue?a22b","webpack:///./src/apps/EMC/Components/tables/VisitsSummary.vue?175b","webpack:///./src/apps/EMC/Components/modals/ViralLoadResult.vue?1654","webpack:///./src/apps/EMC/Components/modals/ViralLoadResult.vue","webpack:///./src/apps/EMC/Components/modals/ViralLoadResult.vue?85a4","webpack:///./src/apps/EMC/Components/modals/OutcomeStatus.vue?fd7e","webpack:///./src/apps/EMC/Components/tables/OutcomesTable.vue?f120","webpack:///./src/apps/EMC/Components/tables/OutcomesTable.vue","webpack:///./src/apps/EMC/Components/tables/OutcomesTable.vue?398e","webpack:///./src/apps/EMC/Components/EnrollmentForm.vue?b5b8","webpack:///./src/apps/EMC/Components/EnrollmentForm.vue","webpack:///./src/apps/EMC/Components/EnrollmentForm.vue?f9ef","webpack:///./src/apps/EMC/Components/OutcomeForm.vue?e3dd","webpack:///./src/apps/EMC/Components/OutcomeForm.vue","webpack:///./src/apps/EMC/Components/OutcomeForm.vue?8912","webpack:///./src/apps/EMC/Components/modals/OutcomeStatus.vue","webpack:///./src/apps/EMC/Components/modals/OutcomeStatus.vue?d55c","webpack:///./src/apps/EMC/Components/modals/PatientVisit.vue?c94d","webpack:///./src/services/patient_observation_service.ts","webpack:///./src/apps/EMC/Components/modals/PatientVisit.vue","webpack:///./src/apps/EMC/Components/modals/PatientVisit.vue?098b","webpack:///./src/apps/EMC/Components/tables/VisitsSummary.vue","webpack:///./src/apps/EMC/Components/tables/VisitsSummary.vue?82b9","webpack:///./src/apps/EMC/Components/InformationHeader.vue?1e11","webpack:///./src/apps/EMC/Components/InformationHeader.vue","webpack:///./src/apps/EMC/Components/InformationHeader.vue?15cb","webpack:///./src/apps/EMC/Components/modals/PatientDemographics.vue?6388","webpack:///./src/apps/EMC/Components/modals/PatientDemographics.vue","webpack:///./src/apps/EMC/Components/modals/PatientDemographics.vue?0395","webpack:///./src/apps/EMC/Components/modals/GuardianDemographics.vue?57dc","webpack:///./src/apps/EMC/Components/modals/GuardianDemographics.vue","webpack:///./src/apps/EMC/Components/modals/GuardianDemographics.vue?3e7f","webpack:///./src/apps/EMC/Components/modals/ArvNumber.vue?97bc","webpack:///./src/apps/EMC/Components/modals/ArvNumber.vue","webpack:///./src/apps/EMC/Components/modals/ArvNumber.vue?08e8","webpack:///./src/apps/EMC/views/Mastercard.vue","webpack:///./src/apps/EMC/views/Mastercard.vue?75de","webpack:///./src/apps/EMC/Components/modals/PatientVisit.vue?3d92","webpack:///./src/apps/ART/services/vitals_service.ts","webpack:///./src/apps/EMC/interfaces/emc_event.ts","webpack:///./src/services/person_service.ts","webpack:///./src/utils/modal.ts","webpack:///./src/apps/ART/services/prescription_service.ts","webpack:///./src/apps/EMC/Components/InformationHeader.vue?8d5e"],"names":["AdherenceService","AppEncounterService","constructor","patientID","providerID","super","this","lastDrugs","lastReceiptDate","optimiseHangingPills","date","Date","setDate","getDate","d","HisDate","toStandardHisFormat","drugs","getJson","isEmpty","reduce","receiptDate","drug","order","start_date","htnDrugs","BPManagementService","htnDrugReferences","map","drug_id","filter","includes","lastPillCounts","getPreviousDrugPillCount","quantity","getReceiptDate","getLastDrugs","receivedDrugsBefore","buildPillCountObs","orderId","pillCount","buildValueNumber","programID","drugId","adherence","concept","getConceptID","getSessionDate","isAdherenceGood","calculateAdherence","given","pills","expected","Math","round","calculateExpected","equivalentDailyDose","startDate","frequency","timeUnit","daysGone","calcTimeElapsed","parseFloat","toString","date1","dayjs","diff","calculateUnaccountedOrMissed","actual","exp","uniqueBy","arr","iteratee","Map","Boolean","item","uniqueKey","Array","isArray","k","join","values","LabOrderService","PersonAttributeService","Service","attributes","postJson","PatientRegistrationService","personId","getPersonID","setPersonID","personID","person","personAttributes","createPerson","createPersonAttributes","patient","createPatient","printPatient","updatePerson","PersonService","update","data","create","person_id","ProgramService","index","PatientPrintoutService","printNidLbl","RelationsService","relationID","reason","void","guardianID","curRelationID","newRelationTypeID","voidRelation","createRelation","patientA","patientB","relationType","HTN_SESSION_KEY","sbp","dbp","bpTrail","firstRecentGrade","secondRecentGrade","Object","sort","a","b","bp","getBpGrade","getSystolicBp","ObservationService","getFirstValueNumber","getDiastolicBp","query","getFirstValueCoded","drugID","state","getDrugs","HCZ","drugName","amount","current","selected","isChecked","dispensed","expectedRemaining","notes","Enalapril","remaining","Amlodipine","Atenolol","ConsultationService","getFamilyPlanningMethods","obs","getFirstObs","value_text","match","obsInValidPeriod","getDrugSideEffects","getProgramID","getClient","req","id","lastScreened","duration","secondCheck","getFirstValueText","isTL","value_coded","tlObs","fpObs","uniqueDrugs","forEach","drug_inventory_id","familyPlanningMethods","label","familyPlanningLogic","value","disabled","PatientLabResultService","patientId","testTypeID","resultDate","testID","createLabResult","measures","encounterID","getTestID","getTestTypeID","setTestTypeID","test","setResultDate","setTestID","getTestsWithoutResults","OrderService","getOrders","status","getTestIndicators","async","isValidForm","form","key","required","error","validation","payload","errs","length","console","log","every","resolveFormValues","underscoreKeys","formData","computedFormData","fKey","toUnderscores","computedValue","resolveObs","tag","accum","cur","concat","push","Promise","all","optionsToGroupObs","conceptName","options","buildGroupValueCoded","option","submitForm","callback","showloader","loader","show","toastWarning","hide","StockService","stock","pharm","current_quantity","DRUG_PACK_SIZES","DispensationService","drugHistory","currentDrugOrder","useDrugManagement","setIsDrugManagementEnabled","isEnabled","ART_PROP","drugManagementEnabled","getDrugHistory","getCurrentOrder","buildDispensations","tabs","totalPacks","dispensations","i","saveDispensations","res","DrugOrderService","getDrugOrderHistory","e","warn","getDrugOrders","fetchAvailableDrugStock","getDrugPackSizes","calcCompletePack","units","drugOrderBarcodes","barcodes","parseInt","completePack","ReceptionService","sitePrefix","getSitePrefix","GLOBAL_PROP","createArvNumber","identifier","buildArvNumber","arv","orders","pageSize","params","popVoidReason","size","modal","optionsActionSheet","name","slot","color","role","selection","action","_hoisted_1","_hoisted_2","render","_ctx","_cache","$props","$setup","$data","$options","_component_ion_title","_resolveComponent","_component_ion_toolbar","_component_ion_header","_component_his_basic_table","_component_text_skeloton","_component_ion_content","_component_ion_button","_component_ion_footer","_openBlock","_createElementBlock","_Fragment","_createVNode","default","_withCtx","_createTextVNode","_toDisplayString","title","_","ready","columns","rows","onClick","closeModal","defineComponent","components","HisBasicTable","IonHeader","IonToolbar","IonContent","IonFooter","IonButton","TextSkeloton","props","type","String","onRows","Function","watch","func","immediate","deep","methods","modalController","dismiss","__exports__","AppointmentService","paginate","_component_information_header","_component_ion_col","_component_ion_row","_component_visits_summary","_component_ion_grid","_component_layout","_createBlock","isReady","class","guardians","artStartDate","onUpdateARVNumber","updateARVNumber","onAddGuardian","addGuardian","onUpdatePatient","updateDemographics","_createCommentVNode","_withScopeId","n","_pushScopeId","_popScopeId","_createElementVNode","_component_ion_icon","_component_ion_card_title","_component_ion_card_header","_component_report_table","_component_ion_card_content","_component_ion_card","style","_renderList","actionButtons","btn","icon","config","tableConfig","_component_DateInput","_component_SelectInput","_component_NumberInput","_component_ion_label","_component_ion_checkbox","_component_ion_item","modelValue","orderDate","$event","minDate","birthdate","maxDate","today","reasons","specimenConcept","specimens","modifier","modifiers","result","min","ldl","resetResults","saveResults","IonTitle","IonLabel","IonGrid","IonRow","IonCol","IonCheckbox","IonItem","DateInput","SelectInput","NumberInput","setup","ref","toOptions","format","STANDARD_DATE_FORMAT","getBirthdate","reactive","isValid","placeholder","setSessionDate","orderService","getID","vlConceptId","ConceptService","encounter","createEncounter","Error","formattedOrders","buildLabOrders","saveOrdersArray","encounter_id","resultService","tests","resultEnc","resetSessionDate","EventBus","emit","EmcEvents","RELOAD_LATEST_VL_RESULT","RELOAD_PATIENT_VISIT_DATA","alertConfirmation","ON_CLEAR","isLDL","undefined","onMounted","getSpecimens","specimen","_component_ion_badge","_component_enrollment_form","_component_outcome_form","_component_outcomes_table","enrollmentStatus","isEnrolled","outcomes","enrollDate","onSaveOutcome","saveOutcome","_normalizeStyle","minHeight","totalStates","patientStates","program","patient_states","onVoidOutcome","voidOutcome","patientProgram","onEnrollProgram","enrollProgram","voidProgram","_component_data_table","TableRowActions","DataTable","emits","path","formatter","v","DISPLAY_DATE_FORMAT","showSearchField","showSubmitButton","computed","stateId","row","patient_state_id","onReset","_component_text_input","dateEnrolled","isTransferredOut","nextFacility","asyncOptions","getFacilities","transferOutReasons","specifyOther","otherReason","onSave","TextInput","facility","StandardValidations","IonBadge","OutcomesTable","EnrollmentForm","OutcomeForm","toStandardHisDisplayFormat","PatientProgramService","setStateDate","setStateId","finalReason","transferOutEncounter","other","updateState","toastSuccess","setProgramDate","setPatientProgramId","patient_program_id","voidState","splice","programs","getPrograms","find","l","date_enrolled","states","getProgramOutcomes","program_workflow_state_id","_component_yes_no_input","_component_multi_column_view","visitDate","weight","showHeightField","height","tbStatus","tbStatuses","isFemale","isPregnant","inline","isBreastfeeding","hasContraindications","items","contraIndications","numberOfColumns","entries","entry","lines","hasSideEffects","sideEffects","regimen","regimens","totalArvsGiven","totalCPTGiven","tbMed","tbMeds","hasGiven6H","hasGivenRFP","totalIPTGiven","totalRFPGiven","hasGiven3HP","total3HPGiven","totalPyridoxineGiven","patientPresent","guardianPresent","prevDrugs","nextAppointmentDate","drugRunOutDate","onClear","onSubmit","PatientObservationService","Patientservice","getFirstObsDatetime","getLastValueCoded","getConceptName","getLastValueNumber","weights","getAll","value_numeric","obs_datetime","value_datetime","getAllDrugOrders","Number","MAX_SAFE_INTEGER","getWhoStage","YesNoInput","MultiColumnView","vitals","VitalsService","consultations","prescription","PrescriptionService","dispensation","reception","appointment","prevHeight","getAge","validator","buildValueCoded","buildValueDate","isNumber","validateSeries","some","x","getRegimens","onTB","unknownReg","regs","RegimenService","getRegimensByWeight","keys","isPresent","arvs","remainingDrugs","add","setPatientPresent","setGuardianPresent","buildBmiObs","bmi","BMIService","calculateBMI","buildFpmObs","method","getTbSymptomsObs","getConceptsByCategory","toDrugOrder","calculateEquivalentDosage","am","pm","calculateDosage","getInstructions","drug_name","vitalsObs","bmiObs","saveObservationList","consultationObs","drugOrders","arvDrugs","getRegimenExtras","iptRegimens","pyridoxine","INH","rfpRegimens","threeHPRegimens","createDrugOrder","order_id","qty","flat","receptionObs","adherenceObs","equivalent_daily_dose","adh","buildAdherenceObs","appointmentObs","RELOAD_STAGING_INFORMATION","getRecentHeight","recentWeight","getRecentWeight","getLastDrugsReceived","concept_id","ReportTable","IonCard","IonCardHeader","IonCardTitle","IonCardContent","showIndex","tableCssTheme","PatientVisit","OutcomeStatus","ViralLoadResult","table","thTxt","formatVisitDate","monthsElapsed","drill","component","DrillTableModalVue","cssClass","componentProps","present","showDrugsDispensed","showSideEffects","removeEncounters","activeRows","encounters","EncounterService","getEncounters","voidEncounter","buildRows","getPatientVisits","then","dates","getCurrentProgramInformation","nextAppointment","pregnant","breastfeeding","vlResult","outcome","nDate","getFirstValueDatetime","vlObs","td","getCachedConceptName","tdLink","side_effects","pills_dispensed","tdBtn","on","width","display","justifyContent","_hoisted_3","_hoisted_4","_hoisted_5","_component_ion_list","patientInfo","button","clickable","onClickHandler","initWeight","initHeight","initBmi","initTBStatus","breastFeedingAtInitiation","pregnantAtInitiation","receivedART","agreesToFollowUp","reasonForStartingART","hivTestDate","hivTestPlace","stagingCondition","latestVLResult","whoSTage","getDobAndAgeAtInitiation","dob","ageAtInitiation","setLatestVLResult","force","ApiStore","invalidate","get","results","rs","r","t","c","value_modifier","getArvNumber","getNationalID","getGivenName","getFamilyName","toGenderString","getGender","getCurrentVillage","getClosestLandmark","getPhoneNumber","router","setHIVTestDate","getHIVTestDate","init","getInitialWeight","getInitialHeight","getInitialBMI","getInitialTBStatus","hasPregnancyAtARTInitiation","breastFeedingAtARTInitiation","everReceivedART","getReasonForStartingART","getHIVTestLocation","getStagingCondition","_component_ion_buttons","_component_TextInput","givenName","middleName","familyName","allowEstimation","estimationLabel","onIsEstimated","estimate","isBirthdateEstimated","gender","genderOptions","cellPhoneNumber","allowUnknown","homeVillage","getVillagesByName","allowCustom","landmark","getLandmarks","onFinish","patientService","getMiddleName","phone","Validation","isMWPhoneNumber","resolveAddress","address","village","TA","traditional_authority_id","LocationService","getTraditionalAuthorityById","district","getDistrictByID","district_id","updatedPatient","assign","RELOAD_PATIENT_DATA","guardian","registrationService","registerGuardian","guardianId","RELOAD_GUARDIAN_DATA","arvNumber","prefix","hasValidARVNumber","voidARV","split","isNumberErr","patients","findByOtherID","confirm","voidARVNumber","Layout","VisitsSummary","InformationHeader","route","useRoute","setPatient","patientData","findByID","setPatientGuardian","relationship","RelationshipService","getGuardianDetails","relationshipType","PatientDemographics","attribute","GuardianDemographicsVue","ARVNumberVue","getARTStartDate","isNotEmptyandNumber","vital","isNotEmptyandFloat","checkMinMax","val","max","p","validateAll","j","mergeErrors","errors","holder","element","isValidBPReading","isValidBP","bpSystolic","bpDiastolic","emptyErrors","minErrors","putJson","names","given_name","family_name","backdropDismiss","m","onWillDismiss","AdverseEffectsCategories","nextVisitInterval","fastTrack","regimenExtras","fastTrackMedications","hangingPills","medicationOrders","treatmentState","contraindications","tptPrescriptionCount","lastSideEffectDate","setNextVisitInterval","getHangingPills","getMedicationOrders","getTptPrescriptionCount","getLastSideEffectDate","getContraindications","getSideEffects","getPatientRegimens","getARVs","getCustomIngridients","getFastTrackMedications","getTreatmentState","isFastTrack","medicationOrdersAvailable","shouldPrescribeArvs","getCachedConceptID","shouldPrescribeExtras","extras","extrasAvailable","getRegimenStarterpack","regimenCode","patientWeight","contraindication","getObs","o","drugInduced","value_drug","count","yes","meds","drug_order","withDosages","dosage","getDrugDosages","noon","findAndGroupDrugSideEffects","allSideEffects","calculatePillsPerDay","estimatePackSize","pillsPerDay","packSize","packs","roundedPacks","morningTabs","eveningTabs","dose","calculateDateFromInterval","dateObj","getDrugPackSize","pack_size","toOrderObj","response","saveValueTextObs","reasonForSwitch"],"mappings":"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","file":"js/chunk-39f02ebf.9d9a665b.js","sourcesContent":["import { AppEncounterService } from \"@/services/app_encounter_service\"\nimport { DrugInterface } from \"@/interfaces/Drug\"\nimport HisDate from \"@/utils/Date\"\nimport { isEmpty } from \"lodash\"\nimport { BPManagementService } from \"./htn_service\"\nimport dayjs from \"dayjs\"\n\nexport class AdherenceService extends AppEncounterService {\n    lastDrugs: Array<DrugInterface>\n    lastReceiptDate: string\n    constructor(patientID: number, providerID: number) {\n        super(patientID, 68, providerID) //TODO: Use encounter type reference name\n        this.lastDrugs = []\n        this.lastReceiptDate = ''\n    }\n\n    async loadPreviousDrugs(optimiseHangingPills=false) {\n        const date = new Date(this.date)\n        date.setDate(date.getDate() - 1) // we don't want current date to count\n        const d = (date: string | Date) => HisDate.toStandardHisFormat(date)\n        const drugs = await AppEncounterService.getJson(\n            `patients/${this.patientID}/drugs_received`, { date: d(date) }\n        )\n        if (!isEmpty(drugs)) {\n            this.lastReceiptDate = drugs.reduce((receiptDate: string | null,  drug: any) => {\n                return !receiptDate || (new Date(d(drug.order.start_date)) > new Date(receiptDate))\n                    ?  d(drug.order.start_date)\n                    : receiptDate\n            }, null)\n            const htnDrugs = BPManagementService.htnDrugReferences().map((d: any) => d.drug_id)\n            this.lastDrugs = drugs.filter((drug: DrugInterface) => \n                !htnDrugs.includes(drug.drug['drug_id']) && d(drug.order.start_date) === this.lastReceiptDate\n            )\n            if (optimiseHangingPills) {\n                const lastPillCounts: Record<number, number> = (await this.getPreviousDrugPillCount()) || {}\n                this.lastDrugs = this.lastDrugs.map((d: DrugInterface) => {\n                    if (lastPillCounts[d.drug.drug_id] && d.quantity) {\n                        d.quantity += lastPillCounts[d.drug.drug_id]\n                    }\n                    return d\n                })\n            }\n        }\n    }\n\n    getReceiptDate() { return this.lastReceiptDate }\n\n    getLastDrugs() { return this.lastDrugs }\n\n    receivedDrugsBefore() { return !isEmpty(this.lastDrugs) }\n\n    buildPillCountObs(orderId: number, pillCount: number) {\n        return this.buildValueNumber('Number of tablets brought to clinic', pillCount, null, orderId)\n    }\n    \n    getPreviousDrugPillCount() {\n        return AppEncounterService.getJson('last_drugs_pill_count', {\n            'patient_id': this.patientID,\n            'program_id': this.programID,\n            'date': this.lastReceiptDate\n        })\n    }\n\n    async buildAdherenceObs(orderId: number, drugId: number, adherence: number) {\n        const concept = await AppEncounterService.getConceptID('Drug adherence', true)\n        return {\n            'concept_id': concept,\n            'value_numeric': adherence,\n            'value_drug': drugId,\n            'value_modifier': '%',\n            'order_id': orderId,\n            'person_id': this.patientID,\n            'obs_datetime': AppEncounterService.getSessionDate()\n        }\n    }\n\n    isAdherenceGood(adherence: number) {\n        return adherence >= 95 && adherence <= 105\n    }\n\n    calculateAdherence(given: number, pills: number, expected: number) {\n        return Math.round(100 * (given - pills) / (given - expected));\n    }\n\n    calculateExpected(\n        given: number, \n        equivalentDailyDose: number, \n        startDate: string, \n        frequency: 'QOD' | 'QW'\n    ) {\n        const timeUnit = frequency === 'QW' ? 'week' : 'day'\n        const daysGone = this.calcTimeElapsed(startDate, timeUnit);\n        return (given - (daysGone * parseFloat(equivalentDailyDose.toString())));\n    }\n\n    calcTimeElapsed(date1: string, timeUnit: 'week' | 'day') {\n        // Consider this example: 2022-01-28 to 2022-01-01 diff is supposed to give us a difference of 28 days. \n        // However, dayjs calculates it as a difference of 27 days. Adding a one to correct this issue for a better calculation\n        return dayjs(HisDate.toStandardHisFormat(this.date)).diff(HisDate.toStandardHisFormat(date1), timeUnit) + 1\n    }\n\n    calculateUnaccountedOrMissed(expected: string, actual: string) {\n        const exp = (parseFloat(expected) - parseFloat(actual));\n        return (exp < 0 ? ((exp * -1) + ' missed') : (exp + ' unacc'));\n    }\n}\n","/**\n * A function that remove duplicates from an array\n * \n * @param arr list of items with possible duplicates\n * @param iteratee a key or list of keys to be used to remove duplicates\n * @returns list of unique items\n */\nexport function uniqueBy(arr: any[], iteratee: string | string[]) {\n  return [...new Map(arr.filter(Boolean).map(item => {\n    const uniqueKey = Array.isArray(iteratee) \n      ? iteratee.map(k => item[k]).join('_')\n      : item[iteratee]\n    return [uniqueKey, item]\n  })).values()]\n}","import { AppEncounterService } from \"@/services/app_encounter_service\";\nexport class LabOrderService extends AppEncounterService {\n  constructor(patientID: number, providerID: number) {\n    super(patientID, 57, providerID);\n  }\n}","import { Service } from \"./service\"\n\nexport interface NewAttribute {\n    person_id: number;\n    person_attribute_type_id: number;\n    value: number | string;\n}\n\nexport class PersonAttributeService extends Service { \n    constructor() {\n        super()\n    }\n\n    static create(attributes: Array<NewAttribute>) { \n        return super.postJson('/person_attributes', attributes) \n    }\n}\n","import { Service } from \"./service\"\nimport { ProgramService } from \"@/services/program_service\";\nimport { Person } from \"@/interfaces/person\"\nimport { PersonService } from \"@/services/person_service\"\nimport { PersonAttributeService } from '@/services/person_attributes_service'\nimport { PatientPrintoutService } from \"@/services/patient_printout_service\";\n\nexport class PatientRegistrationService extends Service {\n    personId: number\n    constructor() {\n        super()\n        this.personId = 0\n    }\n\n    getPersonID() {\n        return this.personId\n    }\n\n    setPersonID(personID: number) {\n        this.personId = personID\n    }\n\n    async registerPatient(person: any, personAttributes: any) {\n        await this.createPerson(person)\n        await this.createPersonAttributes(personAttributes)\n        const patient = await this.createPatient()\n        await this.printPatient()\n        return patient\n    }\n\n    async registerGuardian(person: any) {\n        return this.createPerson(person)\n    }\n\n    updatePerson(person: any) {\n       return new PersonService(person).update(this.personId)\n    }\n\n    async createPerson(person: any) {\n        const data: Person = await new PersonService(person).create()\n        this.personId = data.person_id\n        return data\n    }\n\n    createPatient() {\n        return ProgramService.createPatient(this.personId)\n    }\n\n    async createPersonAttributes(attributes: Array<any>) {\n        for(const index in attributes) {\n            await PersonAttributeService.create({\n                ...attributes[index],\n                'person_id': this.personId\n            })\n        }\n    }\n\n    printPatient() {\n        return new PatientPrintoutService(this.personId).printNidLbl()\n    }\n}\n","import { Service } from \"./service\";\n\nexport class RelationsService extends Service {\n    constructor() {\n        super()\n    }\n\n    static voidRelation(patientID: number, relationID: number, reason: string) {\n\t\treturn Service.void(`people/${patientID}/relationships/${relationID}`, { reason })\n\t}\n\n    static async amendRelation(patientID: number, guardianID: number, curRelationID: number, newRelationTypeID: number) {\n        await RelationsService.voidRelation(patientID, curRelationID,\n            'Updating guardian relationship'\n        )\n        return RelationsService.createRelation(\n            patientID, guardianID, newRelationTypeID\n        )\n    }\n\n    static getRelations() {\n        return super.getJson('types/relationships')\n    }\n\n    static createRelation(patientA: number, patientB: number, relationType: number) {\n        return super.postJson(`people/${patientA}/relationships`, {\n            'relationship_type_id': relationType,\n            'relation_id': patientB\n        })\n    }\n}\n","import { AppEncounterService } from \"@/services/app_encounter_service\"\nimport { ObservationService } from \"@/services/observation_service\"\n\nexport enum HTN_SESSION_KEY {\n  Prescription = \"htnPrescription\"\n}\n\nexport class BPManagementService extends AppEncounterService {\n    constructor(patientID: number, providerID: number) {\n      super(patientID, 48, providerID) //TODO: Use encounter type reference name'\n    }\n\n    static getBpGrade(sbp: number, dbp: number) {\n      if ((sbp < 140) && (dbp < 90)) {\n        return \"normal\"\n      }\n      else if ((sbp >= 140 && sbp < 160) || (dbp >= 100 && dbp < 110)) {\n        return \"grade 1\"\n      }\n      else if ((sbp >= 180 && dbp > 110) || sbp >= 180) {\n        return \"grade 3\"\n      }\n      else if ((sbp >= 160 && sbp < 180) || (dbp >= 110)) {\n        return \"grade 2\"\n      }\n      return 'N/A'\n    }\n\n    /**\n     * BP is normointensive if two most recent consecutive tests are normal\n     * @param bpTrail \n     * @returns\n    */\n    static isBpNormotensive(bpTrail: any) {\n      const [ firstRecentGrade, secondRecentGrade ] = Object.values(bpTrail)\n        .sort((a: any, b: any) => a.date < b.date ? 1 : 0)\n        .map((bp: any) => this.getBpGrade(bp.sbp, bp.dbp))\n      return firstRecentGrade === 'normal' && secondRecentGrade === 'normal'\n    }\n\n    getSystolicBp() {\n      return ObservationService.getFirstValueNumber(this.patientID, 'Systolic blood pressure')\n    }\n\n    getDiastolicBp() {\n      return ObservationService.getFirstValueNumber(this.patientID, 'Diastolic blood pressure')\n    }\n\n    async onBpDrugs() {\n      const query = await ObservationService.getFirstValueCoded(this.patientID, 'Treatment status')\n      return query ? query === 'Yes' : false\n    }\n  \n    async getBPTrail() {\n      return await AppEncounterService.getJson(`/patients/${this.patientID}/bp_trail`);\n    }\n    async getCurrentDrugs() {\n      return await AppEncounterService.getJson(`/patients/${this.patientID}/current_bp_drugs`);\n    }\n    async getLastDrugs() {\n      return await AppEncounterService.getJson(`/patients/${this.patientID}/last_bp_drugs_dispensation`);\n    }\n    async getAdherence(drugID: number, pills: number) {\n      return await AppEncounterService.postJson(`/patients/${this.patientID}/remaining_bp_drugs`, {\n        'drug_id': drugID,\n        pills: pills\n      });\n    }\n    async enrollPatient(state: any) {\n      return await AppEncounterService.postJson(`/patients/${this.patientID}/update_or_create_htn_state`, state);\n    }\n    static htnDrugReferences() {\n      return [\n        { \n          'drug_id': 275,\n          'drug_name': \"HCZ (25mg tablet)\",\n          'units': 'tab(s)',\n          'am': 0,\n          'noon': 0,\n          'pm': 1,\n          'frequency': 'Daily (QOD)'\n        },\n        {\n          'drug_id': 942,\n          'drug_name': \"Enalapril (5mg tablet)\",\n          'units': 'tab(s)',\n          'am': 0,\n          'noon': 0,\n          'pm': 1,\n          'frequency': 'Daily (QOD)'\n        },\n        {\n          'drug_id': 943,\n          'drug_name': \"Enalapril (10mg tablet)\",\n          'units': 'tab(s)',\n          'am': 0,\n          'noon': 0,\n          'pm': 1,\n          'frequency': 'Daily (QOD)'\n        },\n        {\n          'drug_id': 558,\n          'drug_name': \"Amlodipine (5mg tablet)\",\n          'units': 'tab(s)',\n          'am': 0,\n          'noon': 0,\n          'pm': 1,\n          'frequency': 'Daily (QOD)'\n        },\n        {\n          'drug_id': 559,\n          'drug_name': \"Amlodipine (10mg tablet)\",\n          'units': 'tab(s)',\n          'am': 0,\n          'noon': 0,\n          'pm': 1,\n          'frequency': 'Daily (QOD)'\n        },\n        {\n          'drug_id': 117,\n          'drug_name': \"Atenolol (50mg tablet)\",\n          'units': 'tab(s)',\n          'am': 0,\n          'noon': 0,\n          'pm': 1,\n          'frequency': 'Daily (QOD)'\n        },\n        {\n          'drug_id': 11,\n          'drug_name': \"Atenolol(100mg tablet)\",\n          'units': 'tab(s)',\n          'am': 0,\n          'noon': 0,\n          'pm': 1,\n          'frequency': 'Daily (QOD)'\n        }\n      ]\n    }\n    getDrugs() {\n        return {\n        HCZ: {\n          drugs: [\n            {\n              drugName: \"HCZ (25mg tablet)\",\n              drugID: 275,\n              amount: '25mg',\n              current: false,\n              selected: false,\n              isChecked: false,\n              dispensed: null,\n              expectedRemaining: null,\n              adherence: null,\n            },\n          ],\n          selected: null,\n          notes: [],\n        },\n        Enalapril: {\n          drugs: [\n            {\n              drugName: \"Enalapril (5mg tablet)\",\n              drugID: 942,\n              amount: '5mg',\n              current: false,\n              selected: false,\n              isChecked: false,\n              dispensed: null,\n              expectedRemaining: null,\n              adherence: null,\n              remaining: null,\n            },\n            {\n              drugName: \"Enalapril (10mg tablet)\",\n              drugID: 943,\n              amount: '10mg',\n              current: false,\n              selected: false,\n              isChecked: false,\n              dispensed: null,\n              expectedRemaining: null,\n              adherence: null,\n              remaining: null,\n            },\n          ],\n          selected: null,\n          notes: [],\n        },\n        Amlodipine: {\n          drugs: [\n            {\n              drugName: \"Amlodipine (5mg tablet)\",\n              drugID: 558,\n              amount: '5mg',\n              current: false,\n              selected: false,\n              isChecked: false,\n              dispensed: null,\n              expectedRemaining: null,\n              adherence: null,\n              remaining: null,\n            },\n            {\n              drugName: \"Amlodipine (10mg tablet)\",\n              drugID: 559,\n              amount: '10mg',\n              current: false,\n              selected: false,\n              isChecked: false,\n              dispensed: null,\n              expectedRemaining: null,\n              adherence: null,\n              remaining: null,\n            },\n          ],\n          selected: null,\n          notes: [],\n        },\n        Atenolol: {\n          drugs: [\n            {\n              drugName: \"Atenolol (50mg tablet)\",\n              drugID: 117,\n              amount: '50mg',\n              current: false,\n              selected: false,\n              isChecked: false,\n              dispensed: null,\n              expectedRemaining: null,\n              adherence: null,\n              remaining: null,\n            },\n            {\n              drugName: \"Atenolol(100mg tablet)\",\n              drugID: 11,\n              amount: '100mg',\n              current: false,\n              selected: false,\n              isChecked: false,\n              dispensed: null,\n              expectedRemaining: null,\n              adherence: null,\n              remaining: null,\n            },\n          ],\n          selected: null,\n          notes: [],\n        },\n      }\n    }\n}","export * from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./VisitsSummary.vue?vue&type=style&index=0&id=4936bde9&scoped=true&lang=css\"","import { DrugInterface } from \"@/interfaces/Drug\";\nimport { AppEncounterService } from \"@/services/app_encounter_service\";\nimport { ObservationService } from \"@/services/observation_service\";\nimport dayjs from \"dayjs\";\nimport { isEmpty } from \"lodash\";\nimport { DrugOrderService } from \"@/services/drug_order_service\"\n\nexport class ConsultationService extends AppEncounterService {\n  constructor(patientID: number, providerID: number) {\n    super(patientID, 53, providerID);\n  }\n  getFamilyPlanningMethods() {\n    return [\n      \"ORAL CONTRACEPTIVE PILLS\",\n      \"DEPO-PROVERA\",\n      \"INTRAUTERINE CONTRACEPTION\",\n      \"CONTRACEPTIVE IMPLANT\",\n      \"MALE CONDOMS\",\n      \"FEMALE CONDOMS\",\n      \"TUBAL LIGATION\",\n      \"NONE\",\n    ];\n  }\n\n  async getTptTreatmentStatus() {\n    return AppEncounterService.getJson(`/patients/${this.patientID}/tpt_status`)\n  }\n\n  async patientHitMenopause() {\n    const obs = await ObservationService.getFirstObs(\n      this.patientID, 'Why does the woman not use birth control', \n    )\n    return obs && typeof obs?.value_text === 'string'\n      ? (obs.value_text.match(/menopause/i) ? true : false)\n      && AppEncounterService.obsInValidPeriod(obs)\n      : false\n  }\n\n  async hasTreatmentHistoryObs() {\n    const obs = await ObservationService.getFirstObs(this.patientID, 'Previous TB treatment history')\n    return obs && AppEncounterService.obsInValidPeriod(obs)\n  }\n\n  getDrugSideEffects() {\n    return AppEncounterService.getJson(`programs/${AppEncounterService.getProgramID()}/patients/${this.patientID}/medication_side_effects`, { \n      date: this.date \n    })\n  }\n\n  getClient() {\n    return AppEncounterService.getFirstValueCoded(this.patientID, 'Patient present');\n  }\n\n  async clientDueForCxCa() {\n    const req: any = await AppEncounterService.getJson(`last_cxca_screening_details`, {\n      id: this.patientID, date: this.date\n    })\n    if (!isEmpty(req)) {\n      const lastScreened = req['date_screened']\n      const duration = dayjs(this.date).diff(lastScreened, 'years')\n      return duration >= 1\n    }\n    return true\n  }\nasync clientHasHadAHysterectomy() {\n    const req: any = await AppEncounterService.getFirstValueCoded(this.patientID, 'Reason for NOT offering CxCa'); \n    if(req === \"Hysterectomy\") {\n      return true\n    }\n    const secondCheck: any = await AppEncounterService.getFirstValueText(this.patientID, 'Treatment'); \n    if(secondCheck === \"Hysterectomy\") {\n      return true\n    }\n    return false\n  }\n  async getTLObs() {\n    const isTL = ((obs: any) => obs && obs.value_coded === 'Tubal ligation' && AppEncounterService.obsInValidPeriod(obs))\n    const tlObs = await AppEncounterService.getFirstObs(this.patientID, 'Family planning')\n    if (isTL(tlObs)) {\n      return isTL(tlObs)\n    } else  {\n      const fpObs = await AppEncounterService.getFirstObs(this.patientID, 'Method of family planning')\n      return isTL(fpObs)\n    }\n  }\n  async getPreviousDrugs() {\n\n    const drugs = await AppEncounterService.getJson(\n      `patients/${this.patientID}/drugs_received`\n    )\n\n    if (!drugs) return\n\n    const uniqueDrugs = {} as any\n    drugs.forEach((drug: DrugInterface) => {\n      uniqueDrugs[drug.drug_inventory_id] = drug;\n    })\n    return uniqueDrugs;\n  }\n  familyPlanningMethods(label: string, values: any[]) {\n    const familyPlanningLogic: any = {\n      \"ORAL CONTRACEPTIVE PILLS\": {\n        \"DEPO-PROVERA\": 'N', \"INTRAUTERINE CONTRACEPTION\": 'N', 'CONTRACEPTIVE IMPLANT': 'N',\n        'MALE CONDOMS': 'Y', 'FEMALE CONDOMS': 'Y', 'RYTHM METHOD': 'N', 'TUBAL LIGATION': 'N',\n        'VASECTOMY': 'N'\n      },\n      \"DEPO-PROVERA\": {\n        \"ORAL CONTRACEPTIVE PILLS\": 'N', \"INTRAUTERINE CONTRACEPTION\": 'N', 'CONTRACEPTIVE IMPLANT': 'N',\n        'MALE CONDOMS': 'Y', 'FEMALE CONDOMS': 'Y', 'RYTHM METHOD': 'N', 'TUBAL LIGATION': 'N',\n        'VASECTOMY': 'N'\n      },\n      \"INTRAUTERINE CONTRACEPTION\": {\n        \"ORAL CONTRACEPTIVE PILLS\": 'N', \"DEPO-PROVERA\": 'N', 'CONTRACEPTIVE IMPLANT': 'N',\n        'MALE CONDOMS': 'Y', 'FEMALE CONDOMS': 'Y', 'RYTHM METHOD': 'N', 'TUBAL LIGATION': 'N',\n        'VASECTOMY': 'N'\n      },\n      \"CONTRACEPTIVE IMPLANT\": {\n        \"ORAL CONTRACEPTIVE PILLS\": 'N', \"DEPO-PROVERA\": 'N', 'INTRAUTERINE CONTRACEPTION': 'N',\n        'MALE CONDOMS': 'Y', 'FEMALE CONDOMS': 'Y', 'RYTHM METHOD': 'N', 'TUBAL LIGATION': 'N',\n        'VASECTOMY': 'N'\n      },\n      \"MALE CONDOMS\": {\n        \"ORAL CONTRACEPTIVE PILLS\": 'Y', \"DEPO-PROVERA\": 'Y', 'INTRAUTERINE CONTRACEPTION': 'Y',\n        'CONTRACEPTIVE IMPLANT': 'Y', 'FEMALE CONDOMS': 'Y', 'RYTHM METHOD': 'Y', 'TUBAL LIGATION': 'N',\n        'VASECTOMY': 'Y'\n      },\n      \"FEMALE CONDOMS\": {\n        \"ORAL CONTRACEPTIVE PILLS\": 'Y', \"DEPO-PROVERA\": 'Y', 'INTRAUTERINE CONTRACEPTION': 'Y',\n        'CONTRACEPTIVE IMPLANT': 'Y', 'MALE CONDOMS': 'Y', 'RYTHM METHOD': 'Y', 'TUBAL LIGATION': 'N',\n        'VASECTOMY': 'Y'\n      },\n      \"RYTHM METHOD\": {\n        \"ORAL CONTRACEPTIVE PILLS\": 'N', \"DEPO-PROVERA\": 'N', 'INTRAUTERINE CONTRACEPTION': 'N',\n        'MALE CONDOMS': 'Y', 'FEMALE CONDOMS': 'Y', 'CONTRACEPTIVE IMPLANT': 'N', 'TUBAL LIGATION': 'N',\n        'VASECTOMY': 'N'\n      },\n      \"TUBAL LIGATION\": {\n        \"ORAL CONTRACEPTIVE PILLS\": 'N', \"DEPO-PROVERA\": 'N', 'INTRAUTERINE CONTRACEPTION': 'N',\n        'MALE CONDOMS': 'N', 'FEMALE CONDOMS': 'N', 'CONTRACEPTIVE IMPLANT': 'N', 'RYTHM METHOD': 'N',\n        'VASECTOMY': 'N',\n      },\n      \"VASECTOMY\": {\n        \"ORAL CONTRACEPTIVE PILLS\": 'N', \"DEPO-PROVERA\": 'Y', 'INTRAUTERINE CONTRACEPTION': 'N',\n        'MALE CONDOMS': 'Y', 'FEMALE CONDOMS': 'N', 'CONTRACEPTIVE IMPLANT': 'Y', 'RYTHM METHOD': 'N',\n        'TUBAL LIGATION': 'N'\n      },\n      \"NONE\": {\n        \"ORAL CONTRACEPTIVE PILLS\": 'N', \"DEPO-PROVERA\": 'N', 'INTRAUTERINE CONTRACEPTION': 'N',\n        'MALE CONDOMS': 'N', 'FEMALE CONDOMS': 'N', 'CONTRACEPTIVE IMPLANT': 'N', 'RYTHM METHOD': 'N',\n        'TUBAL LIGATION': 'N'\n      }\n    }\n    const selected = familyPlanningLogic[label];\n    return values.map(data => {\n      if (selected[data.label] === \"N\") {\n        return {\n          label: data.label,\n          value: data.value,\n          isChecked: false,\n          disabled: true,\n        }\n      }\n      else {\n        return {\n          label: data.label,\n          value: data.value,\n          isChecked: data.isChecked,\n          disabled: false,\n        }\n      }\n\n    })\n  }\n\n}","import { OrderService } from '@/services/order_service'\nimport { AppEncounterService } from './app_encounter_service';\n\nexport class PatientLabResultService extends AppEncounterService {\n    patientID: number;\n    testTypeID: number;\n    resultDate: string;\n    testID: number;\n    constructor(patientId: number) {\n        super(patientId, 57)\n        this.patientID = patientId\n        this.testTypeID = -1\n        this.resultDate = ''\n        this.testID = -1\n    }\n\n    createLabResult(measures: Array<any>) {\n        return AppEncounterService.postJson(`lab/tests/${this.testID}/results`, {\n            'encounter_id': this.encounterID,\n            date: this.resultDate,\n            measures\n        })\n    }\n\n    getTestID() {\n        return this.testID\n    }\n\n    getTestTypeID() {\n        return this.testTypeID\n    }\n\n    setTestTypeID(test: number) {\n        this.testTypeID = test\n    }\n\n    setResultDate(date: string) {\n        this.resultDate = date\n    }\n\n    setTestID(test: number) {\n        this.testID = test\n    }   \n\n    getTestsWithoutResults() {\n        return OrderService.getOrders(this.patientID, {\n            status: 'drawn'\n        })\n    }\n\n    getTestIndicators() {\n      return OrderService.getJson(\n        `lab/test_result_indicators`, {\n        'test_type_id': this.testTypeID\n      })\n    }\n\n    \n}\n","import { ObsValue, ObservationService } from \"@/services/observation_service\"\nimport { DTForm } from \"../interfaces/dt_form_field\"\nimport { Option } from \"@/components/Forms/FieldInterface\";\nimport { toUnderscores } from \"@/utils/Strs\";\nimport { isEmpty } from \"lodash\";\nimport { loader } from \"@/utils/loader\";\nimport { toastWarning } from '@/utils/Alerts';\n\nexport async function isValidForm (form: DTForm) {\n  for (const key in form) {\n    if (form[key].required && isEmpty(form[key].value)) {\n      form[key].error = \"This field is required\";\n      continue;\n    }\n    if(typeof form[key].validation !== 'function') {\n      form[key].error = ''\n      continue\n    }\n    const payload = typeof form[key].value === 'object'\n        ? form[key].value\n        : { label: form[key].value, value: form[key].value }\n\n    const errs = await form[key].validation!(payload as Option, form)\n    if(errs && errs.length > 0) {\n      form[key].error = errs.toString()\n      console.log(key, form[key].error)\n    } else {\n      form[key].error = ''\n    }       \n  }\n  return Object.values(form).every(({ error }) => !error)\n}\n\nexport function resolveFormValues(form: DTForm, underscoreKeys = false) {\n  const formData: any = {}\n  const computedFormData: any = {}\n  for (const key in form) {\n    if(form[key].value) {\n      const fKey = underscoreKeys ? toUnderscores(key) : key\n      formData[fKey] = form[key].value\n      if(typeof form[key].computedValue === 'function') {\n        computedFormData[fKey] = form[key].computedValue!(form[key].value, form)\n      }\n    }\n  }\n  return { formData, computedFormData }\n}\n\nexport function resolveObs (obs: any, tag=''): Promise<ObsValue[]> {\n  const values: any = Object.values(obs)\n    .filter((d: any) => d && (d.tag === tag || tag === ''))\n    .reduce((accum: any, cur: any) => { \n      const data = cur.obs ? cur.obs : cur\n      if (Array.isArray(data)) {\n        accum = accum.concat(data)\n      } else {\n          accum.push(data)\n      }\n      return accum\n    }, [])\n  return Promise.all(values)\n}\n\nexport function optionsToGroupObs (conceptName: string, options: Option[]) {\n  return Promise.all(options.map(async (option) => {\n    return ObservationService.buildGroupValueCoded(conceptName, option.label, option.isChecked ? 'Yes' : 'No')\n  }))\n}\n\ntype SubmitFormCallback = (formData: Record<string, any>, computedData: Record<string, any>) => Promise<void> | void\ninterface SubmitOptios {\n  showloader?: boolean;\n  underscoreKeys?: boolean;\n}\n\nexport async function submitForm (form: DTForm, callback: SubmitFormCallback, options?: SubmitOptios) {\n  if(!await isValidForm(form)) return\n  const showloader = options?.showloader || false\n  try {\n    if (showloader) await loader.show()\n    const {formData, computedFormData} = resolveFormValues(form, options?.underscoreKeys)\n    await callback(formData, computedFormData)\n  } catch (error) {\n    toastWarning(`${error}`)\n    console.error(error)\n  } finally {\n    if(showloader) await loader.hide()\n  }\n}","import { Service } from \"@/services/service\";\n\nexport class StockService extends Service {\n    constructor() {\n        super()\n    }\n\n    static async fetchAvailableDrugStock(drugId: number) {\n        const stock = await this.getJson('pharmacy/items', { 'drug_id': drugId })\n        if (stock && stock.length > 0) {\n            return stock.reduce((accum: number, pharm: any) => accum + pharm.current_quantity, 0);\n        }\n    }\n}\n","import { AppEncounterService } from \"@/services/app_encounter_service\";\nimport { DrugOrderService } from \"@/services/drug_order_service\";\nimport { StockService } from \"./stock_service\";\nimport ART_PROP from '@/apps/ART/art_global_props';\n// ripped from old ART system\nexport const DRUG_PACK_SIZES: Record<string, any> = {\n    '11': [ 30 ],\n    '21': [ 25 ],\n    '22': [ 60 ],\n    '24': [ 30, 60, 90, 100 ],\n    '30': [ 90 ],\n    '39': [ 60 ],\n    '73': [ 120 ],\n    '74': [ 60 ],\n    '76': [ 1000 ],\n    '297': [ 30, 60, 90 ],\n    '576': [ 30, 60, 90 ],\n    '613': [ 60 ],\n    '731': [ 60 ],\n    '732': [ 60 ],\n    '733': [ 60 ],\n    '734': [ 30 ],\n    '735': [ 30 ],\n    '736': [ 60 ],\n    '738': [ 60 ],\n    '931': [ 12, 30, 60 ],\n    '932': [ 30 ],\n    '954': [ 60 ],\n    '963': [ 30, 60, 90 ],\n    '968': [ 60 ],\n    '969': [ 30 ],\n    '971': [ 30,60,90 ],\n    '976': [ 60 ],\n    '977': [ 30 ],\n    '982': [ 30 ],\n    '983': [ 30, 90 ],\n    '1039': [ 30,60,90 ],\n    '1043': [ 60 ],\n    '1044': [ 30],\n    '1056': [ 24 ],\n    '1216': [3, 6, 8, 12]\n}\n\nexport class DispensationService extends AppEncounterService {\n    drugHistory: Array<any>;\n    currentDrugOrder: Array<any>;\n    useDrugManagement: boolean; \n    constructor(patientID: number, providerID: number) {\n        super(patientID, 54, providerID)\n        this.drugHistory = []\n        this.currentDrugOrder = []\n        this.useDrugManagement = false\n    }\n\n    setIsDrugManagementEnabled(isEnabled: boolean) {\n        this.useDrugManagement = isEnabled\n    }\n\n    async loadDrugManagementEnabled() {\n        this.useDrugManagement = await ART_PROP.drugManagementEnabled()\n    }\n\n    getDrugHistory() {\n        return this.drugHistory\n    }\n\n    getCurrentOrder() {\n        return this.currentDrugOrder\n    }\n\n    buildDispensations(orderId: number, tabs: number, totalPacks: number) {\n        const dispensations = []\n        for(let i=0; i < totalPacks; i++) {\n            dispensations.push({\n                'drug_order_id': orderId,\n                date: this.date,\n                quantity: (tabs / totalPacks)\n            })\n        }\n        return dispensations\n    }\n\n    saveDispensations(dispensations: Array<any>) {\n        return AppEncounterService.postJson('/dispensations', { \n            dispensations, \n            'program_id': AppEncounterService.getProgramID()\n        })\n    }\n\n    async voidOrder(orderId: number) {\n        return AppEncounterService.void(`/dispensations/${orderId}`, {})\n    }\n\n    async loadDrugHistory() {\n        try {\n            const res = await DrugOrderService.getDrugOrderHistory(this.patientID)\n            if (res) this.drugHistory = res\n        } catch (e) {\n            console.warn(e)\n        }\n    }\n\n    async loadCurrentDrugOrder() {\n        const res = await DrugOrderService.getDrugOrders(this.patientID)\n        if (res) {\n            if (this.useDrugManagement) {\n                const drugs = res.map(async (d: any) => {\n                    d['available_stock'] = await StockService.fetchAvailableDrugStock(d.drug.drug_id)\n                    return d\n                })\n                this.currentDrugOrder = await Promise.all(drugs)\n                return\n            }\n            this.currentDrugOrder = res\n        }\n    }\n\n    getDrugPackSizes(drugId: number) {\n        if (drugId in DRUG_PACK_SIZES) {\n            return DRUG_PACK_SIZES[drugId]\n        }\n        return [30, 60, 90]\n    }\n\n    // Ripped from old ART system for backwards compatibility purposes\n    calcCompletePack(drug: any, units: number) {\n        //sorting in an ascending order by tabs\n        const drugOrderBarcodes = drug.barcodes.sort((a: any, b: any) => a.tabs - b.tabs); \n        if (drugOrderBarcodes.length == 0 || units == 0.0) return units;\n        for (const i in drugOrderBarcodes) {\n            const { tabs } = drugOrderBarcodes[i]\n            if (parseInt(tabs) >= units) return tabs;\n        }\n        const completePack = parseInt(drugOrderBarcodes[drugOrderBarcodes.length - 1].tabs)\n        return completePack\n    }\n}\n","import { AppEncounterService } from \"@/services/app_encounter_service\"\nimport { ProgramService } from \"@/services/program_service\";\nimport GLOBAL_PROP from \"@/apps/GLOBAL_APP/global_prop\";\n\nexport class ReceptionService extends AppEncounterService {\n    sitePrefix: string\n    constructor(patientID: number, providerID: number) {\n        super(patientID, 51, providerID) //TODO: Use encounter type reference name'\n        this.sitePrefix = ''\n    }\n\n    getSitePrefix() {\n        return this.sitePrefix\n    }\n\n    async loadSitePrefix() {\n        this.sitePrefix = await GLOBAL_PROP.sitePrefix();\n    }\n\n    createArvNumber(identifier: string) {\n        return ProgramService.postJson(\"/patient_identifiers/\", {\n            'patient_id': this.patientID,  \n            'identifier_type': 4,\n            identifier,\n        })\n    }\n\n    buildArvNumber(arv: number) {\n        return `${this.sitePrefix}-ARV-${arv}`    \n    }\n}\n","import { DrugOrderInterface } from \"@/interfaces/DrugOrder\";\nimport { Service } from \"./service\";\n\nexport class DrugOrderService extends Service {\n    constructor() {\n        super()\n    }\n\n    static create(orders: DrugOrderInterface) {\n        return this.postJson('drug_orders', orders)\n    }\n\n    static updateDispensationOrders(orders: any) {\n        return this.postJson('dispensations', {\n            'program_id': this.getProgramID(),\n            dispensations: orders.map((order: any) => ({\n                'date': this.getSessionDate(),\n                'drug_order_id': order['order_id'],\n                'quantity': order['quantity']\n            }))\n        })\n    }\n\n    static getDrugOrderHistory(patientID: number) {\n        return this.getJson('drug_orders', { 'patient_id': patientID })\n    }\n\n    static getDrugOrders(patientID: number) {\n        return this.getJson('drug_orders', {\n            'patient_id': patientID,\n            'date': this.getSessionDate(),\n            'program_id': this.getProgramID()\n        })\n    }\n\n    static getAllDrugOrders(patientID: number, pageSize=1000) {\n        return this.getJson('drug_orders', {\n            'patient_id': patientID,\n            'program_id': Service.getProgramID(),\n            'page_size': pageSize\n        })\n    }\n\n    static getLastDrugsReceived(patientID: number) {\n        return this.getJson(`patients/${patientID}/last_drugs_received`, {\n            'date': this.getSessionDate(),\n            'program_id': this.getProgramID()\n        })\n    }\n\n    static getDrugDosages(patientID: number, drugID: number, date=this.getSessionDate()) {\n        const params = { 'drug_id': drugID, 'date': date }\n        return this.getJson(`programs/${this.getProgramID()}/patients/${patientID}/drug_doses`, params)\n    }\n\n    static getOrderByPatient(patientId: number, params: any) {\n        return this.getJson('/drug_orders', {\n            'patient_id': patientId,\n            'program_id': this.getProgramID(),\n            ...params\n        })\n    }\n\n}","import { optionsActionSheet } from '@/utils/ActionSheets'\n\nexport default async function popVoidReason(callback: Function, size = 'action-sheet-modal') {\n    const modal = await optionsActionSheet(\n        'Are you sure you want to void record?',\n        'Please specify reason for voiding this record',\n        [\n          'Mistake/ Wrong Entry',\n          'Duplicate',\n          'System Error' \n        ],\n        [\n            { name: 'Cancel', slot:'start'},\n            { name: 'Void', color: 'danger', slot:'end', role: 'action'}\n        ],\n        '',\n        size\n    )\n    if (modal.selection && modal.action === 'Void') {\n        await callback(modal.selection)\n    }\n}\n","import { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment } from \"vue\"\n\nconst _hoisted_1 = { key: 0 }\nconst _hoisted_2 = { key: 1 }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ion_title = _resolveComponent(\"ion-title\")!\n  const _component_ion_toolbar = _resolveComponent(\"ion-toolbar\")!\n  const _component_ion_header = _resolveComponent(\"ion-header\")!\n  const _component_his_basic_table = _resolveComponent(\"his-basic-table\")!\n  const _component_text_skeloton = _resolveComponent(\"text-skeloton\")!\n  const _component_ion_content = _resolveComponent(\"ion-content\")!\n  const _component_ion_button = _resolveComponent(\"ion-button\")!\n  const _component_ion_footer = _resolveComponent(\"ion-footer\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(_component_ion_header, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_title, null, {\n              default: _withCtx(() => [\n                _createTextVNode(_toDisplayString(_ctx.title), 1)\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_content, null, {\n      default: _withCtx(() => [\n        (_ctx.ready)\n          ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n              _createVNode(_component_his_basic_table, {\n                columns: _ctx.columns,\n                rows: _ctx.rows\n              }, null, 8, [\"columns\", \"rows\"])\n            ]))\n          : (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [\n              _createVNode(_component_text_skeloton)\n            ]))\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_footer, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_button, {\n              color: \"danger\",\n              onClick: _ctx.closeModal,\n              slot: \"end\"\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\" Close \")\n              ]),\n              _: 1\n            }, 8, [\"onClick\"])\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    })\n  ], 64))\n}","\nimport { defineComponent, PropType } from \"vue\";\nimport HisBasicTable from \"./HisBasicTable.vue\";\nimport { modalController } from \"@ionic/vue\";\nimport TextSkeloton from \"@/components/TextSkeleton.vue\"\nimport {\n  IonHeader, \n  IonToolbar, \n  IonContent, \n  IonFooter, \n  IonButton\n} from \"@ionic/vue\"\nexport default defineComponent({\n  components: { \n    HisBasicTable,\n    IonHeader, \n    IonToolbar, \n    IonContent, \n    IonFooter, \n    IonButton,\n    TextSkeloton\n  },\n  props: {\n    title: {\n      type: String,\n      required: true,\n    },\n    columns: {\n      type: Object as PropType<string[]>,\n      required: true,\n    },\n    onRows: {\n      type: Function,\n      required: true,\n    },\n  },\n  data: () => ({\n    rows: [] as Array<any>,\n    ready: false,\n  }),\n  watch: {\n    onRows: {\n      async handler(func: Function) {\n        if (func) {\n          this.rows = await func();\n          this.ready = true;\n        }\n      },\n      immediate: true,\n      deep: true,\n    },\n  },\n  methods: {\n    async closeModal() {\n      await modalController.dismiss({});\n    },\n  },\n});\n","import { render } from \"./DrillTableModal.vue?vue&type=template&id=0cd2f14a&ts=true\"\nimport script from \"./DrillTableModal.vue?vue&type=script&lang=ts\"\nexport * from \"./DrillTableModal.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { AppEncounterService } from \"@/services/app_encounter_service\";\n\nexport class AppointmentService extends AppEncounterService {\n  constructor(patientID: number, providerID: number) {\n    super(patientID, 7, providerID);\n  }\n\n  async getNextAppointment() {\n    const programID = AppEncounterService.getProgramID();\n    return AppEncounterService.getJson(`/programs/${programID}/patients/${this.patientID}/next_appointment_date`, {date: this.date})\n  }\n  static async getDailiyAppointments(date: any) {\n    const programID = AppEncounterService.getProgramID();\n    return AppEncounterService.getJson(`/programs/${programID}/booked_appointments`, {date: date, paginate: false})\n  }\n\n}","import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, withCtx as _withCtx, createVNode as _createVNode } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_information_header = _resolveComponent(\"information-header\")!\n  const _component_ion_col = _resolveComponent(\"ion-col\")!\n  const _component_ion_row = _resolveComponent(\"ion-row\")!\n  const _component_visits_summary = _resolveComponent(\"visits-summary\")!\n  const _component_ion_grid = _resolveComponent(\"ion-grid\")!\n  const _component_layout = _resolveComponent(\"layout\")!\n\n  return (_openBlock(), _createBlock(_component_layout, null, {\n    default: _withCtx(() => [\n      (_ctx.isReady)\n        ? (_openBlock(), _createBlock(_component_ion_grid, {\n            key: 0,\n            class: \"ion-no-margin ion-no-padding\"\n          }, {\n            default: _withCtx(() => [\n              _createVNode(_component_ion_row, null, {\n                default: _withCtx(() => [\n                  _createVNode(_component_ion_col, { size: \"12\" }, {\n                    default: _withCtx(() => [\n                      (_ctx.patient)\n                        ? (_openBlock(), _createBlock(_component_information_header, {\n                            key: 0,\n                            patient: _ctx.patient,\n                            guardians: _ctx.guardians,\n                            artStartDate: _ctx.artStartDate,\n                            onUpdateARVNumber: _ctx.updateARVNumber,\n                            onAddGuardian: _ctx.addGuardian,\n                            onUpdatePatient: _ctx.updateDemographics\n                          }, null, 8, [\"patient\", \"guardians\", \"artStartDate\", \"onUpdateARVNumber\", \"onAddGuardian\", \"onUpdatePatient\"]))\n                        : _createCommentVNode(\"\", true)\n                    ]),\n                    _: 1\n                  })\n                ]),\n                _: 1\n              }),\n              _createVNode(_component_ion_row, null, {\n                default: _withCtx(() => [\n                  _createVNode(_component_ion_col, null, {\n                    default: _withCtx(() => [\n                      (_ctx.patient)\n                        ? (_openBlock(), _createBlock(_component_visits_summary, {\n                            key: 0,\n                            patient: _ctx.patient,\n                            startDate: _ctx.artStartDate\n                          }, null, 8, [\"patient\", \"startDate\"]))\n                        : _createCommentVNode(\"\", true)\n                    ]),\n                    _: 1\n                  })\n                ]),\n                _: 1\n              })\n            ]),\n            _: 1\n          }))\n        : _createCommentVNode(\"\", true)\n    ]),\n    _: 1\n  }))\n}","import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, withCtx as _withCtx, createVNode as _createVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-4936bde9\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", { class: \"title\" }, \"Summary of Visits\", -1))\nconst _hoisted_2 = { class: \"ion-float-right ion-margin-end ion-margin-bottom\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ion_icon = _resolveComponent(\"ion-icon\")!\n  const _component_ion_button = _resolveComponent(\"ion-button\")!\n  const _component_ion_card_title = _resolveComponent(\"ion-card-title\")!\n  const _component_ion_card_header = _resolveComponent(\"ion-card-header\")!\n  const _component_report_table = _resolveComponent(\"report-table\")!\n  const _component_ion_card_content = _resolveComponent(\"ion-card-content\")!\n  const _component_ion_card = _resolveComponent(\"ion-card\")!\n\n  return (_openBlock(), _createBlock(_component_ion_card, {\n    class: \"his-card\",\n    style: {\"padding\":\"0 !important\"}\n  }, {\n    default: _withCtx(() => [\n      _createVNode(_component_ion_card_header, null, {\n        default: _withCtx(() => [\n          _createVNode(_component_ion_card_title, null, {\n            default: _withCtx(() => [\n              _hoisted_1,\n              _createElementVNode(\"span\", _hoisted_2, [\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.actionButtons, (btn) => {\n                  return (_openBlock(), _createBlock(_component_ion_button, {\n                    key: btn.label,\n                    onClick: btn.action,\n                    color: btn.color || 'primary'\n                  }, {\n                    default: _withCtx(() => [\n                      (btn.icon)\n                        ? (_openBlock(), _createBlock(_component_ion_icon, {\n                            key: 0,\n                            icon: btn.icon,\n                            class: \"ion-margin-right\"\n                          }, null, 8, [\"icon\"]))\n                        : _createCommentVNode(\"\", true),\n                      _createTextVNode(\" \" + _toDisplayString(btn.label), 1)\n                    ]),\n                    _: 2\n                  }, 1032, [\"onClick\", \"color\"]))\n                }), 128))\n              ])\n            ]),\n            _: 1\n          })\n        ]),\n        _: 1\n      }),\n      _createVNode(_component_ion_card_content, {\n        class: \"ion-no-padding\",\n        style: {\"min-height\":\"45vh\"}\n      }, {\n        default: _withCtx(() => [\n          _createVNode(_component_report_table, {\n            rows: _ctx.rows,\n            columns: _ctx.columns,\n            config: _ctx.tableConfig\n          }, null, 8, [\"rows\", \"columns\", \"config\"])\n        ]),\n        _: 1\n      })\n    ]),\n    _: 1\n  }))\n}","import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ion_title = _resolveComponent(\"ion-title\")!\n  const _component_ion_toolbar = _resolveComponent(\"ion-toolbar\")!\n  const _component_ion_header = _resolveComponent(\"ion-header\")!\n  const _component_DateInput = _resolveComponent(\"DateInput\")!\n  const _component_ion_col = _resolveComponent(\"ion-col\")!\n  const _component_SelectInput = _resolveComponent(\"SelectInput\")!\n  const _component_NumberInput = _resolveComponent(\"NumberInput\")!\n  const _component_ion_row = _resolveComponent(\"ion-row\")!\n  const _component_ion_label = _resolveComponent(\"ion-label\")!\n  const _component_ion_checkbox = _resolveComponent(\"ion-checkbox\")!\n  const _component_ion_item = _resolveComponent(\"ion-item\")!\n  const _component_ion_grid = _resolveComponent(\"ion-grid\")!\n  const _component_ion_content = _resolveComponent(\"ion-content\")!\n  const _component_ion_button = _resolveComponent(\"ion-button\")!\n  const _component_ion_footer = _resolveComponent(\"ion-footer\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(_component_ion_header, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_title, null, {\n              default: _withCtx(() => [\n                _createTextVNode(\"Viral Load Results\")\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_content, { class: \"ion-padding\" }, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_grid, { style: {\"width\":\"100%\"} }, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_row, null, {\n              default: _withCtx(() => [\n                _createVNode(_component_ion_col, {\n                  size: \"12\",\n                  class: \"ion-margin-vertical\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_DateInput, {\n                      modelValue: _ctx.form.orderDate,\n                      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((_ctx.form.orderDate) = $event)),\n                      form: _ctx.form,\n                      minDate: _ctx.birthdate,\n                      maxDate: _ctx.today\n                    }, null, 8, [\"modelValue\", \"form\", \"minDate\", \"maxDate\"])\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ion_col, {\n                  size: \"6\",\n                  class: \"ion-margin-vertical\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_SelectInput, {\n                      modelValue: _ctx.form.reason,\n                      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((_ctx.form.reason) = $event)),\n                      options: _ctx.reasons\n                    }, null, 8, [\"modelValue\", \"options\"])\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ion_col, {\n                  size: \"6\",\n                  class: \"ion-margin-vertical\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_SelectInput, {\n                      modelValue: _ctx.form.specimenConcept,\n                      \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((_ctx.form.specimenConcept) = $event)),\n                      options: _ctx.specimens\n                    }, null, 8, [\"modelValue\", \"options\"])\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ion_col, {\n                  size: \"12\",\n                  class: \"ion-margin-vertical\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_DateInput, {\n                      modelValue: _ctx.form.resultDate,\n                      \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((_ctx.form.resultDate) = $event)),\n                      form: _ctx.form,\n                      minDate: _ctx.form.orderDate.value,\n                      \"max-date\": _ctx.today\n                    }, null, 8, [\"modelValue\", \"form\", \"minDate\", \"max-date\"])\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ion_col, {\n                  size: \"6\",\n                  class: \"ion-margin-vertical\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_SelectInput, {\n                      modelValue: _ctx.form.modifier,\n                      \"onUpdate:modelValue\": _cache[4] || (_cache[4] = ($event: any) => ((_ctx.form.modifier) = $event)),\n                      options: _ctx.modifiers\n                    }, null, 8, [\"modelValue\", \"options\"])\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ion_col, {\n                  size: \"6\",\n                  class: \"ion-margin-vertical\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_NumberInput, {\n                      modelValue: _ctx.form.result,\n                      \"onUpdate:modelValue\": _cache[5] || (_cache[5] = ($event: any) => ((_ctx.form.result) = $event)),\n                      form: _ctx.form,\n                      min: 1\n                    }, null, 8, [\"modelValue\", \"form\"])\n                  ]),\n                  _: 1\n                })\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_ion_row, { class: \"ion-margin-top\" }, {\n              default: _withCtx(() => [\n                _createVNode(_component_ion_col, { size: \"12\" }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_ion_label, { class: \"ion-padding-vertical bold\" }, {\n                      default: _withCtx(() => [\n                        _createTextVNode(\"Other Results Options: \")\n                      ]),\n                      _: 1\n                    }),\n                    _createVNode(_component_ion_item, null, {\n                      default: _withCtx(() => [\n                        _createVNode(_component_ion_label, null, {\n                          default: _withCtx(() => [\n                            _createTextVNode(\"LDL\")\n                          ]),\n                          _: 1\n                        }),\n                        _createVNode(_component_ion_checkbox, {\n                          slot: \"start\",\n                          modelValue: _ctx.ldl,\n                          \"onUpdate:modelValue\": _cache[6] || (_cache[6] = ($event: any) => ((_ctx.ldl) = $event))\n                        }, null, 8, [\"modelValue\"])\n                      ]),\n                      _: 1\n                    })\n                  ]),\n                  _: 1\n                })\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_footer, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_button, {\n              color: \"primary\",\n              onClick: _cache[7] || (_cache[7] = ($event: any) => (_ctx.modal.hide())),\n              slot: \"end\"\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\"Close\")\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_ion_button, {\n              color: \"warning\",\n              onClick: _ctx.resetResults,\n              slot: \"end\"\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\"Reset\")\n              ]),\n              _: 1\n            }, 8, [\"onClick\"]),\n            _createVNode(_component_ion_button, {\n              color: \"success\",\n              onClick: _ctx.saveResults,\n              slot: \"end\"\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\"Save\")\n              ]),\n              _: 1\n            }, 8, [\"onClick\"])\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    })\n  ], 64))\n}","\nimport { defineComponent, onMounted, PropType, reactive, ref, watch } from \"vue\";\nimport { \n  IonCol, \n  IonGrid, \n  IonRow, \n  IonContent, \n  IonFooter, \n  IonHeader, \n  IonTitle, \n  IonToolbar, \n  IonButton, \n  IonLabel, \n  IonCheckbox,\n  IonItem\n} from \"@ionic/vue\";\nimport { DTForm } from \"../../interfaces/dt_form_field\";\nimport { Patientservice } from \"@/services/patient_service\";\nimport DateInput from \"../inputs/DateInput.vue\";\nimport SelectInput from \"../inputs/SelectInput.vue\";\nimport NumberInput from \"../inputs/NumberInput.vue\";\nimport dayjs from \"dayjs\";\nimport { toOptions } from \"../../utils/DTFormElements\";\nimport { OrderService } from \"@/services/order_service\";\nimport { LabOrderService } from \"@/apps/ART/services/lab_order_service\";\nimport { Option } from \"@/components/Forms/FieldInterface\";\nimport { ConceptName } from \"@/interfaces/conceptName\";\nimport { submitForm } from \"../../utils/form\";\nimport { PatientLabResultService } from \"@/services/patient_lab_result_service\";\nimport { ConceptService } from \"@/services/concept_service\";\nimport EventBus from \"@/utils/EventBus\";\nimport { EmcEvents } from \"../../interfaces/emc_event\";\nimport { modal } from \"@/utils/modal\";\nimport { alertConfirmation } from \"@/utils/Alerts\";\nimport { STANDARD_DATE_FORMAT } from \"@/utils/Date\";\n\nexport default defineComponent({\n  components: {\n    IonContent,\n    IonFooter,\n    IonHeader,\n    IonTitle,\n    IonToolbar,\n    IonButton,\n    IonLabel,\n    IonGrid,\n    IonRow,\n    IonCol,\n    IonCheckbox,\n    IonItem,\n    DateInput,\n    SelectInput,\n    NumberInput,\n  },\n  props: {\n    patient: {\n      type: Object as PropType<Patientservice>,\n      required: true\n    },\n  },\n  setup(props) {\n    const ldl = ref(false);\n    const modifiers = toOptions(['=', '>', '<', '>=', '<=']);\n    const reasons = toOptions([\n      \"Routine\", \n      \"Targeted\", \n      \"Confirmatory\", \n      \"Stat\", \n      \"Repeat / Missing\",\n      \"Follow up after Low Level Viremia\",\n      \"Follow up after High Viral Load\"\n    ])\n    const specimens = ref<Option[]>([])\n    const today = dayjs().format(STANDARD_DATE_FORMAT)\n    const birthdate = dayjs(props.patient.getBirthdate()).format(STANDARD_DATE_FORMAT)\n\n    const form = reactive<DTForm>({\n      orderDate: {\n        value: '',\n        label: 'Order Date',\n        required: true,\n        validation: async (date) => {\n          if (!dayjs(date.value).isValid()) {\n            return ['Invalid date'];\n          }\n          if(new Date(date.value) > new Date(today)) {\n            return ['Order date cannot be in the future'];\n          }\n          if(new Date(date.value) < new Date(birthdate)) {\n            return ['Order date cannot be before patient\\'s date of birth'];\n          }\n          return null\n        }\n      },\n      resultDate: {\n        value: '',\n        label: 'Result Date',\n        required: true,\n        validation: async (date, form) => {\n          if (!dayjs(date.value).isValid()) {\n            return ['Invalid date'];\n          }\n          if(new Date(date.value) > new Date(today)) {\n            return ['Result date cannot be in the future'];\n          }\n          if(new Date(date.value) < new Date(form.orderDate.value)) {\n            return ['Result date cannot be before order date'];\n          }\n          return null\n        }\n      },\n      specimenConcept: {\n        value: '',\n        label: 'Specimen',\n        placeholder: 'Select a specimen',\n        required: true,\n      },\n      modifier: {\n        value: '',\n        label: 'Modifier',\n        placeholder: 'Select a modifier',\n        required: true,\n      },\n      reason: {\n        value: '',\n        label: 'Reason',\n        placeholder: 'Select a reason',\n        required: true,\n      },\n      result: {\n        value: '',\n        label: 'Result Value',\n        placeholder: 'Enter a result value',\n        required: true,\n      }\n    });\n\n    const saveResults = async () => submitForm(form, async (formData) => {\n      await LabOrderService.setSessionDate(formData.orderDate)\n      const orderService = new LabOrderService(props.patient.getID(), -1)\n      const vlConceptId = await ConceptService.getConceptID(\"HIV viral load\")\n      const encounter = await orderService.createEncounter();\n      if(!encounter) throw new Error('Unable to create lab order encounter');\n      const formattedOrders  = await OrderService.buildLabOrders(encounter, [{\n        'specimenConcept': formData.specimenConcept.value,\n        'reason': formData.reason.value,\n        'concept_id': vlConceptId\n      }]);\n      const orders = await  OrderService.saveOrdersArray(encounter.encounter_id, formattedOrders);\n      if(!orders) throw new Error('Unable to save lab orders');\n\n      await PatientLabResultService.setSessionDate(formData.resultDate)\n      const resultService = new PatientLabResultService(props.patient.getID())\n      resultService.setTestID(orders[0].tests[0].id)\n      resultService.setResultDate(formData.resultDate)\n      const resultEnc = await resultService.createEncounter()\n      if(!resultEnc) throw new Error(\"Unable to create lab result encounter\")\n      await resultService.createLabResult([{\n        \"indicator\": {\n          \"concept_id\": vlConceptId,\n        },\n        \"value\": ldl.value ? \"LDL\" : parseInt(formData.result),\n        \"value_modifier\": ldl.value ? \"=\" : formData.modifier.value,\n        \"value_type\": ldl.value ? \"text\" : \"numeric\"\n      }])\n\n      await PatientLabResultService.resetSessionDate()\n      await modal.hide()\n      EventBus.emit(EmcEvents.RELOAD_LATEST_VL_RESULT)\n      EventBus.emit(EmcEvents.RELOAD_PATIENT_VISIT_DATA)\n    })\n\n    const resetResults = async () => {\n      if((await alertConfirmation(\"Are you sure you want to clear all fields?\"))){\n        ldl.value = false\n        for(const key in form) {\n          form[key].value = '';\n          form[key].error = ''\n        }\n        EventBus.emit(EmcEvents.ON_CLEAR);\n      }\n    };\n\n    watch(ldl, (isLDL) => {\n      if(isLDL) {\n        form.modifier.value = \"\";\n        form.result.value = undefined;\n        form.modifier.error = ''\n        form.result.error = ''\n      }\n      form.modifier.disabled = isLDL;\n      form.modifier.required = !isLDL;\n      form.result.disabled = isLDL;\n      form.result.required = !isLDL;\n    });\n\n    onMounted(async () => {\n      specimens.value = (await OrderService.getSpecimens(\"HIV viral load\"))\n        .map((specimen: ConceptName) => ({\n          label: specimen.name,\n          value: specimen['concept_id']\n        })\n      )\n    })\n\n    return {\n      today,\n      birthdate,\n      form,\n      modifiers,\n      reasons,\n      specimens,\n      ldl,\n      modal,\n      resetResults,\n      saveResults,\n    };\n  },\n})\n","import { render } from \"./ViralLoadResult.vue?vue&type=template&id=1784043e&ts=true\"\nimport script from \"./ViralLoadResult.vue?vue&type=script&lang=ts\"\nexport * from \"./ViralLoadResult.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, normalizeStyle as _normalizeStyle, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ion_title = _resolveComponent(\"ion-title\")!\n  const _component_ion_toolbar = _resolveComponent(\"ion-toolbar\")!\n  const _component_ion_header = _resolveComponent(\"ion-header\")!\n  const _component_ion_badge = _resolveComponent(\"ion-badge\")!\n  const _component_ion_col = _resolveComponent(\"ion-col\")!\n  const _component_ion_row = _resolveComponent(\"ion-row\")!\n  const _component_enrollment_form = _resolveComponent(\"enrollment-form\")!\n  const _component_outcome_form = _resolveComponent(\"outcome-form\")!\n  const _component_outcomes_table = _resolveComponent(\"outcomes-table\")!\n  const _component_ion_grid = _resolveComponent(\"ion-grid\")!\n  const _component_ion_content = _resolveComponent(\"ion-content\")!\n  const _component_ion_button = _resolveComponent(\"ion-button\")!\n  const _component_ion_footer = _resolveComponent(\"ion-footer\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(_component_ion_header, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_title, null, {\n              default: _withCtx(() => [\n                _createTextVNode(\"Patient Outcomes\")\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_content, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_grid, { style: {\"width\":\"100%\"} }, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_row, null, {\n              default: _withCtx(() => [\n                _createVNode(_component_ion_col, null, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_ion_badge, {\n                      color: \"lightblue\",\n                      class: \"ion-padding\",\n                      style: {\"width\":\"100%\"},\n                      disabled: \"\"\n                    }, {\n                      default: _withCtx(() => [\n                        _createTextVNode(_toDisplayString(_ctx.enrollmentStatus), 1)\n                      ]),\n                      _: 1\n                    })\n                  ]),\n                  _: 1\n                })\n              ]),\n              _: 1\n            }),\n            (!_ctx.isEnrolled)\n              ? (_openBlock(), _createBlock(_component_ion_row, {\n                  key: 0,\n                  class: \"his-card\",\n                  style: {\"margin-bottom\":\".4rem\"}\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_ion_col, { size: \"12\" }, {\n                      default: _withCtx(() => [\n                        _createVNode(_component_enrollment_form, {\n                          patientProgram: _ctx.patientProgram,\n                          birthdate: _ctx.birthdate,\n                          onEnrollProgram: _ctx.enrollProgram\n                        }, null, 8, [\"patientProgram\", \"birthdate\", \"onEnrollProgram\"])\n                      ]),\n                      _: 1\n                    })\n                  ]),\n                  _: 1\n                }))\n              : (_openBlock(), _createElementBlock(_Fragment, { key: 1 }, [\n                  (_ctx.outcomes)\n                    ? (_openBlock(), _createBlock(_component_ion_row, {\n                        key: 0,\n                        class: \"his-card\",\n                        style: {\"margin-bottom\":\".4rem\"}\n                      }, {\n                        default: _withCtx(() => [\n                          _createVNode(_component_outcome_form, {\n                            \"date-enrolled\": _ctx.enrollDate,\n                            birthdate: _ctx.birthdate,\n                            outcomes: _ctx.outcomes,\n                            onSaveOutcome: _ctx.saveOutcome\n                          }, null, 8, [\"date-enrolled\", \"birthdate\", \"outcomes\", \"onSaveOutcome\"])\n                        ]),\n                        _: 1\n                      }))\n                    : _createCommentVNode(\"\", true),\n                  _createVNode(_component_ion_row, {\n                    class: \"his-card\",\n                    style: _normalizeStyle([{\"padding\":\"0 !important\"}, { minHeight: _ctx.totalStates ? '0' : '30vh'}])\n                  }, {\n                    default: _withCtx(() => [\n                      _createVNode(_component_ion_col, {\n                        size: \"12\",\n                        class: \"ion-no-padding\"\n                      }, {\n                        default: _withCtx(() => [\n                          _createVNode(_component_outcomes_table, {\n                            patientStates: _ctx.program?.patient_states,\n                            onVoidOutcome: _ctx.voidOutcome\n                          }, null, 8, [\"patientStates\", \"onVoidOutcome\"])\n                        ]),\n                        _: 1\n                      })\n                    ]),\n                    _: 1\n                  }, 8, [\"style\"])\n                ], 64))\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_footer, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_button, {\n              color: \"primary\",\n              onClick: _cache[0] || (_cache[0] = ($event: any) => (_ctx.modal.hide())),\n              slot: \"end\"\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\"Close\")\n              ]),\n              _: 1\n            }),\n            (_ctx.isEnrolled)\n              ? (_openBlock(), _createBlock(_component_ion_button, {\n                  key: 0,\n                  color: \"danger\",\n                  onClick: _ctx.voidProgram,\n                  slot: \"end\"\n                }, {\n                  default: _withCtx(() => [\n                    _createTextVNode(\"Void Program\")\n                  ]),\n                  _: 1\n                }, 8, [\"onClick\"]))\n              : _createCommentVNode(\"\", true)\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    })\n  ], 64))\n}","import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"ion-padding-horizontal ion-margin-vertical bold ion-margin-top\" }, \"Previous Outcomes\", -1)\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_data_table = _resolveComponent(\"data-table\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _hoisted_1,\n    _createVNode(_component_data_table, {\n      rows: _ctx.rows,\n      columns: _ctx.columns,\n      config: _ctx.tableConfig,\n      \"row-actions-buttons\": _ctx.TableRowActions,\n      color: \"custom\"\n    }, null, 8, [\"rows\", \"columns\", \"config\", \"row-actions-buttons\"])\n  ], 64))\n}","\nimport { computed, defineComponent, PropType } from \"vue\";\nimport { alertConfirmation } from \"@/utils/Alerts\";\nimport dayjs from \"dayjs\";\nimport { DISPLAY_DATE_FORMAT } from \"@/utils/Date\";\nimport { DataTable, RowActionButtonInterface, TableColumnInterface, TableConfigInterface } from '@uniquedj95/vtable'\n\nexport default defineComponent({\n  name: \"OutcomesTable\",\n  props: {\n    patientStates: {\n      type: Array as PropType<Array<any>>,\n      required: true\n    },\n  },\n  components: {\n    DataTable,\n  },\n  emits: [\"voidOutcome\"],\n  setup(props, { emit }) {\n    const columns: TableColumnInterface[] = [\n      { path: 'name', label: \"Outcome\"},\n      { path: 'start_date', label: \"Start Date\", formatter: (v) => dayjs(v).format(DISPLAY_DATE_FORMAT) },\n      { path: 'end_date', label: \"End Date\", formatter: (v) => dayjs(v).format(DISPLAY_DATE_FORMAT) },\n    ];\n\n    const tableConfig: TableConfigInterface = {\n      showSearchField: false,\n      showSubmitButton: false\n    }\n\n    const rows = computed<any[]>(() => props.patientStates.map((state: any, index: number) => ({\n      ...state,\n      index\n    })));\n\n    const TableRowActions: RowActionButtonInterface[] = [\n      { label: \"void\", color: 'danger', action: async (row) => {\n        if((await alertConfirmation(\"Are you sure you want to void this outcome?\"))){\n          emit(\"voidOutcome\", {stateId: row.patient_state_id, index: row.index});\n        }\n      }}\n    ]\n\n    return {\n      rows,\n      columns,\n      tableConfig,\n      TableRowActions,\n    };\n  }\n})\n","import { render } from \"./OutcomesTable.vue?vue&type=template&id=eb2cc154&ts=true\"\nimport script from \"./OutcomesTable.vue?vue&type=script&lang=ts\"\nexport * from \"./OutcomesTable.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_DateInput = _resolveComponent(\"DateInput\")!\n  const _component_ion_col = _resolveComponent(\"ion-col\")!\n  const _component_ion_button = _resolveComponent(\"ion-button\")!\n  const _component_ion_row = _resolveComponent(\"ion-row\")!\n  const _component_ion_grid = _resolveComponent(\"ion-grid\")!\n\n  return (_openBlock(), _createBlock(_component_ion_grid, null, {\n    default: _withCtx(() => [\n      _createVNode(_component_ion_row, null, {\n        default: _withCtx(() => [\n          _createVNode(_component_ion_col, { size: \"12\" }, {\n            default: _withCtx(() => [\n              _createVNode(_component_DateInput, {\n                modelValue: _ctx.form.date,\n                \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((_ctx.form.date) = $event)),\n                form: _ctx.form,\n                minDate: _ctx.birthdate,\n                \"max-date\": _ctx.today\n              }, null, 8, [\"modelValue\", \"form\", \"minDate\", \"max-date\"])\n            ]),\n            _: 1\n          }),\n          _createVNode(_component_ion_col, null, {\n            default: _withCtx(() => [\n              _createVNode(_component_ion_button, {\n                color: \"warning\",\n                onClick: _ctx.onReset\n              }, {\n                default: _withCtx(() => [\n                  _createTextVNode(\"Reset\")\n                ]),\n                _: 1\n              }, 8, [\"onClick\"]),\n              _createVNode(_component_ion_button, {\n                color: \"success\",\n                onClick: _ctx.enrollProgram\n              }, {\n                default: _withCtx(() => [\n                  _createTextVNode(\"Enroll\")\n                ]),\n                _: 1\n              }, 8, [\"onClick\"])\n            ]),\n            _: 1\n          })\n        ]),\n        _: 1\n      })\n    ]),\n    _: 1\n  }))\n}","\nimport { alertConfirmation } from \"@/utils/Alerts\";\nimport EventBus from \"@/utils/EventBus\";\nimport { IonGrid, IonRow, IonCol, IonButton } from \"@ionic/vue\";\nimport dayjs from \"dayjs\";\nimport { defineComponent, reactive } from \"vue\";\nimport { DTForm } from \"../interfaces/dt_form_field\";\nimport { EmcEvents } from \"../interfaces/emc_event\";\nimport { submitForm } from \"../utils/form\";\nimport DateInput from \"./inputs/DateInput.vue\";\n\nexport default defineComponent({\n  name: \"EnrollmentForm\",\n  components: {\n    DateInput,\n    IonGrid,\n    IonRow,\n    IonCol,\n    IonButton,\n  },\n  props: [\"birthdate\"],\n  emits: [\"enrollProgram\"],\n  setup(props, { emit }) {\n    const today = dayjs().format(\"YYYY-MM-DD\");\n    const form = reactive<DTForm>({\n      date: {\n        value: \"\",\n        label: \"Date of Enrollment\",\n        required: true,\n        validation: async (date) => {\n          if(new Date(date.value) < new Date(props.birthdate)) return [\"Date of enrollment cannot be before date of birth\"]\n          if(new Date(date.value) > new Date(today)) return [\"Date of enrollment cannot be in the future\"]\n          return null\n        }\n      },\n    })\n\n    const onReset = async () => {\n      if((await alertConfirmation(\"Are you sure you want to clear all fields\"))){\n        form.date.value = \"\";\n        form.date.error = \"\";\n        EventBus.emit(EmcEvents.ON_CLEAR)\n      }\n    }\n\n    const enrollProgram = async () => submitForm(form, ({ date }) => emit(\"enrollProgram\", date))\n\n    return {\n      form,\n      today,\n      onReset,\n      enrollProgram,\n    }\n  }\n})\n","import { render } from \"./EnrollmentForm.vue?vue&type=template&id=4068b4a6&ts=true\"\nimport script from \"./EnrollmentForm.vue?vue&type=script&lang=ts\"\nexport * from \"./EnrollmentForm.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode } from \"vue\"\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Add New Outcome\", -1)\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ion_col = _resolveComponent(\"ion-col\")!\n  const _component_DateInput = _resolveComponent(\"DateInput\")!\n  const _component_SelectInput = _resolveComponent(\"SelectInput\")!\n  const _component_text_input = _resolveComponent(\"text-input\")!\n  const _component_ion_button = _resolveComponent(\"ion-button\")!\n  const _component_ion_row = _resolveComponent(\"ion-row\")!\n  const _component_ion_grid = _resolveComponent(\"ion-grid\")!\n\n  return (_openBlock(), _createBlock(_component_ion_grid, null, {\n    default: _withCtx(() => [\n      _createVNode(_component_ion_row, null, {\n        default: _withCtx(() => [\n          _createVNode(_component_ion_col, { size: \"12\" }, {\n            default: _withCtx(() => [\n              _hoisted_1\n            ]),\n            _: 1\n          }),\n          _createVNode(_component_ion_col, {\n            size: \"6\",\n            class: \"ion-margin-top-vertical\"\n          }, {\n            default: _withCtx(() => [\n              _createVNode(_component_DateInput, {\n                modelValue: _ctx.form.date,\n                \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((_ctx.form.date) = $event)),\n                form: _ctx.form,\n                minDate: _ctx.dateEnrolled,\n                \"max-date\": _ctx.today\n              }, null, 8, [\"modelValue\", \"form\", \"minDate\", \"max-date\"])\n            ]),\n            _: 1\n          }),\n          _createVNode(_component_ion_col, {\n            size: \"6\",\n            class: \"ion-margin-top-vertical\"\n          }, {\n            default: _withCtx(() => [\n              _createVNode(_component_SelectInput, {\n                modelValue: _ctx.form.status,\n                \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((_ctx.form.status) = $event)),\n                form: _ctx.form,\n                options: _ctx.outcomes\n              }, null, 8, [\"modelValue\", \"form\", \"options\"])\n            ]),\n            _: 1\n          }),\n          (_ctx.isTransferredOut)\n            ? (_openBlock(), _createElementBlock(_Fragment, { key: 0 }, [\n                _createVNode(_component_ion_col, {\n                  size: \"6\",\n                  class: \"ion-margin-top-vertical\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_SelectInput, {\n                      modelValue: _ctx.form.nextFacility,\n                      \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((_ctx.form.nextFacility) = $event)),\n                      form: _ctx.form,\n                      asyncOptions: _ctx.getFacilities\n                    }, null, 8, [\"modelValue\", \"form\", \"asyncOptions\"])\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ion_col, {\n                  size: \"6\",\n                  class: \"ion-margin-top-vertical\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_SelectInput, {\n                      modelValue: _ctx.form.reason,\n                      \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((_ctx.form.reason) = $event)),\n                      form: _ctx.form,\n                      options: _ctx.transferOutReasons\n                    }, null, 8, [\"modelValue\", \"form\", \"options\"])\n                  ]),\n                  _: 1\n                }),\n                (_ctx.specifyOther)\n                  ? (_openBlock(), _createBlock(_component_ion_col, {\n                      key: 0,\n                      size: \"12\",\n                      class: \"ion-margin-top-vertical\"\n                    }, {\n                      default: _withCtx(() => [\n                        _createVNode(_component_text_input, {\n                          modelValue: _ctx.form.otherReason,\n                          \"onUpdate:modelValue\": _cache[4] || (_cache[4] = ($event: any) => ((_ctx.form.otherReason) = $event)),\n                          form: _ctx.form\n                        }, null, 8, [\"modelValue\", \"form\"])\n                      ]),\n                      _: 1\n                    }))\n                  : _createCommentVNode(\"\", true)\n              ], 64))\n            : _createCommentVNode(\"\", true),\n          _createVNode(_component_ion_col, {\n            size: \"12\",\n            class: \"ion-margin-top\"\n          }, {\n            default: _withCtx(() => [\n              _createVNode(_component_ion_button, {\n                color: \"warning\",\n                onClick: _ctx.onReset\n              }, {\n                default: _withCtx(() => [\n                  _createTextVNode(\"Reset\")\n                ]),\n                _: 1\n              }, 8, [\"onClick\"]),\n              _createVNode(_component_ion_button, {\n                color: \"success\",\n                onClick: _ctx.onSave\n              }, {\n                default: _withCtx(() => [\n                  _createTextVNode(\"Save\")\n                ]),\n                _: 1\n              }, 8, [\"onClick\"])\n            ]),\n            _: 1\n          })\n        ]),\n        _: 1\n      })\n    ]),\n    _: 1\n  }))\n}","\nimport { IonGrid, IonRow, IonCol, IonButton } from \"@ionic/vue\";\nimport dayjs from \"dayjs\";\nimport { computed, defineComponent, PropType, reactive } from \"vue\";\nimport { DTForm } from \"../interfaces/dt_form_field\";\nimport { submitForm } from \"../utils/form\";\nimport DateInput from \"./inputs/DateInput.vue\";\nimport SelectInput from \"./inputs/SelectInput.vue\";\nimport TextInput from \"./inputs/TextInput.vue\";\nimport StandardValidations from \"@/components/Forms/validations/StandardValidations\";\nimport { Option } from \"@/components/Forms/FieldInterface\";\nimport { getFacilities } from \"@/utils/HisFormHelpers/LocationFieldOptions\";\nimport { DISPLAY_DATE_FORMAT } from \"@/utils/Date\";\nimport EventBus from \"@/utils/EventBus\";\nimport { EmcEvents } from \"../interfaces/emc_event\";\nimport { alertConfirmation } from \"@/utils/Alerts\";\nimport { transferOutReasons } from \"../utils/DTFormElements\"\n\nexport default defineComponent({\n  name: \"OutcomeForm\",\n  props: {\n    outcomes: {\n      type: Array as PropType<Option[]>,\n      required: true,\n    },\n    dateEnrolled: {\n      type: String,\n      required: true\n    },\n    birthdate: {\n      type: String,\n      required: true\n    }\n  },\n  components: {\n    DateInput,\n    IonGrid,\n    IonRow,\n    IonCol,\n    IonButton,\n    SelectInput,\n    TextInput,\n  },\n  emits: [\"saveOutcome\"],\n  setup(props, { emit }) {\n    const today = dayjs().format(\"YYYY-MM-DD\");\n    const form = reactive<DTForm>({\n      date: {\n        value: \"\",\n        label: \"Outcome Date\",\n        required: true,\n        validation: async (date) => {\n          if(new Date(date.value) < new Date(props.birthdate)) return [`Outcome date cannot be before date of birth - ${dayjs(props.birthdate).format(DISPLAY_DATE_FORMAT)}` ]\n          if(new Date(date.value) < new Date(props.dateEnrolled)) return [`Outcome date cannot be before enrollment date- ${dayjs(props.dateEnrolled).format(DISPLAY_DATE_FORMAT)}`]\n          return null\n        }\n      },\n      status: {\n        value: \"\",\n        label: \"Outcome\",\n        required: true,\n      },\n      nextFacility: {\n        value: \"\",\n        label: \"Next Facility\",\n        validation: async (facility, form) => {\n          return form.status.value.label === \"Patient transferred out\" && \n            StandardValidations.required(facility);\n        }\n      },\n      reason: {\n        value: \"\",\n        label: \"Reason for transfer out\",\n        validation: async (reason, form) => {\n          return form.status.value.label === \"Patient transferred out\" && \n            StandardValidations.required(reason);\n        }\n      },\n      otherReason: {\n        value: \"\",\n        label: \"Other reason for transfer out\",\n        placeholder: \"Specify other reason for transfer out\",\n        validation: async (reason, form) => {\n          return form.status?.value?.label === \"Patient transferred out\" && \n            form.reason?.value?.label === \"Other\" &&\n            StandardValidations.required(reason);\n        }\n      },\n    })\n\n    const isTransferredOut = computed(() => form.status.value?.label === \"Patient transferred out\");\n    const specifyOther = computed(() => form.reason?.value?.label === \"Other\")\n\n    const onReset = async () => {\n      if((await alertConfirmation(\"are you sure you want to clear all fields\"))) {\n        for (const key in form) {\n          form[key].value = '';\n          form[key].error = '';\n        }\n        EventBus.emit(EmcEvents.ON_CLEAR)\n      }\n    }\n\n    const onSave = () => submitForm(form, data => emit(\"saveOutcome\", {\n      ...data, \n      isTransferredOut: isTransferredOut.value \n    }))\n\n    return {\n      form,\n      today,\n      isTransferredOut,\n      specifyOther,\n      onSave,\n      onReset,\n      getFacilities,\n      transferOutReasons\n    }\n  }\n})\n","import { render } from \"./OutcomeForm.vue?vue&type=template&id=ea0b263a&ts=true\"\nimport script from \"./OutcomeForm.vue?vue&type=script&lang=ts\"\nexport * from \"./OutcomeForm.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","\nimport { computed, defineComponent, onMounted, PropType, ref } from \"vue\";\nimport { \n  IonCol, \n  IonGrid, \n  IonRow, \n  IonContent, \n  IonFooter, \n  IonHeader, \n  IonTitle, \n  IonToolbar, \n  IonButton,\n  IonBadge,\n} from \"@ionic/vue\";\nimport { toastSuccess } from \"@/utils/Alerts\";\nimport { PatientProgramService } from \"@/services/patient_program_service\";\nimport { isEmpty } from \"lodash\";\nimport HisDate from \"@/utils/Date\";\nimport { Option } from \"@/components/Forms/FieldInterface\";\nimport OutcomesTable from \"../tables/OutcomesTable.vue\";\nimport EnrollmentForm from \"../EnrollmentForm.vue\";\nimport OutcomeForm from \"../OutcomeForm.vue\";\nimport { modal } from \"@/utils/modal\";\nimport EventBus from \"@/utils/EventBus\";\nimport { EmcEvents } from \"../../interfaces/emc_event\";\nimport { Patientservice } from \"@/services/patient_service\";\n\nexport default defineComponent({\n  components: {\n    IonContent,\n    IonFooter,\n    IonHeader,\n    IonTitle,\n    IonToolbar,\n    IonButton,\n    IonGrid,\n    IonRow,\n    IonCol,\n    IonBadge,\n    OutcomesTable,\n    EnrollmentForm,\n    OutcomeForm,\n  },\n  props: {\n    patient: {\n      type: Object as PropType<Patientservice>,\n      required: true\n    },\n  },\n  setup(props) {\n    const { toStandardHisDisplayFormat, toStandardHisFormat } = HisDate\n    const patientProgram = new PatientProgramService(props.patient.getID());\n    const birthdate = computed(() => toStandardHisFormat(props.patient.getBirthdate()))\n    const program = ref<Record<string, any>>();\n    const isEnrolled = computed(() => !isEmpty(program.value));\n    const enrollDate = ref('');\n    const outcomes = ref<Option[]>();\n    const totalStates = computed(() => program.value?.patient_states?.length ?? 0);\n    const enrollmentStatus = computed(() => isEnrolled.value && enrollDate.value \n      ? `Patient enrolled in this porgram on ${ toStandardHisDisplayFormat(enrollDate.value) }`\n      : 'Patient is not enrolled in this program'\n    );\n\n    const saveOutcome = async ({ date, status, nextFacility, reason, otherReason, isTransferredOut}: any) => {\n      patientProgram.setStateDate(date);\n      patientProgram.setStateId(status.value);\n      if(isTransferredOut) {\n        const finalReason = reason.value !== 'Other' ? reason.value : otherReason\n        await patientProgram.transferOutEncounter(nextFacility.other, finalReason);\n      }\n      await patientProgram.updateState();\n      await toastSuccess('Outcome saved successfully', 1000);\n      await modal.hide();\n      EventBus.emit(EmcEvents.RELOAD_PATIENT_VISIT_DATA);\n    }\n\n    const enrollProgram = async (date: string) => {\n      patientProgram.setProgramDate(date);\n      await patientProgram.enrollProgram();\n      await toastSuccess(\"Program enrolled successfully\", 1000);\n      await modal.hide();\n      EventBus.emit(EmcEvents.RELOAD_PATIENT_VISIT_DATA);\n    }\n\n    const voidProgram = async () => {\n      patientProgram.setPatientProgramId(program.value?.patient_program_id ||  -1);\n      await patientProgram.voidProgram('duplicate / system error');\n      await toastSuccess('Patient voided from program successfully', 1000);\n      await modal.hide();\n      EventBus.emit(EmcEvents.RELOAD_PATIENT_VISIT_DATA);\n    }\n\n    const voidOutcome = async ({stateId, index}: any) => {\n      patientProgram.setStateId(stateId);\n      await patientProgram.voidState('duplicate / system error');\n      toastSuccess('Outcome voided successfully');\n      program.value?.patient_states.splice(index, 1);\n      EventBus.emit(EmcEvents.RELOAD_PATIENT_VISIT_DATA);\n    }\n\n    onMounted (async () => {\n      const programs = await patientProgram.getPrograms();\n      program.value = programs.find((l: any) => l.program.name === \"HIV PROGRAM\");\n      if(program.value) {\n        enrollDate.value = program.value.date_enrolled;\n        const states= await patientProgram.getProgramOutcomes();\n        outcomes.value = states.map((state: any) => ({\n          label: state.name,\n          value: state.program_workflow_state_id,\n          other: state\n        }));\n      }\n    });\n\n    return {\n      modal,\n      patientProgram,\n      isEnrolled,\n      enrollDate,\n      birthdate,\n      enrollmentStatus,\n      outcomes,\n      program,\n      totalStates,\n      toStandardHisDisplayFormat,\n      saveOutcome,\n      enrollProgram,\n      voidProgram,\n      voidOutcome,\n    };\n  },\n})\n","import { render } from \"./OutcomeStatus.vue?vue&type=template&id=4300ba6d&ts=true\"\nimport script from \"./OutcomeStatus.vue?vue&type=script&lang=ts\"\nexport * from \"./OutcomeStatus.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, createElementBlock as _createElementBlock, renderList as _renderList, toDisplayString as _toDisplayString } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ion_title = _resolveComponent(\"ion-title\")!\n  const _component_ion_toolbar = _resolveComponent(\"ion-toolbar\")!\n  const _component_ion_header = _resolveComponent(\"ion-header\")!\n  const _component_DateInput = _resolveComponent(\"DateInput\")!\n  const _component_ion_col = _resolveComponent(\"ion-col\")!\n  const _component_NumberInput = _resolveComponent(\"NumberInput\")!\n  const _component_SelectInput = _resolveComponent(\"SelectInput\")!\n  const _component_yes_no_input = _resolveComponent(\"yes-no-input\")!\n  const _component_ion_label = _resolveComponent(\"ion-label\")!\n  const _component_ion_checkbox = _resolveComponent(\"ion-checkbox\")!\n  const _component_ion_item = _resolveComponent(\"ion-item\")!\n  const _component_multi_column_view = _resolveComponent(\"multi-column-view\")!\n  const _component_ion_row = _resolveComponent(\"ion-row\")!\n  const _component_ion_grid = _resolveComponent(\"ion-grid\")!\n  const _component_ion_content = _resolveComponent(\"ion-content\")!\n  const _component_ion_button = _resolveComponent(\"ion-button\")!\n  const _component_ion_footer = _resolveComponent(\"ion-footer\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(_component_ion_header, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_title, null, {\n              default: _withCtx(() => [\n                _createTextVNode(\"Patient Visit\")\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_content, { class: \"ion-padding\" }, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_grid, { style: {\"width\":\"100%\"} }, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_row, null, {\n              default: _withCtx(() => [\n                _createVNode(_component_ion_col, {\n                  size: \"6\",\n                  class: \"ion-margin-vertical\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_DateInput, {\n                      modelValue: _ctx.form.visitDate,\n                      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((_ctx.form.visitDate) = $event)),\n                      form: _ctx.form,\n                      minDate: _ctx.birthdate,\n                      maxDate: _ctx.today\n                    }, null, 8, [\"modelValue\", \"form\", \"minDate\", \"maxDate\"])\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ion_col, {\n                  size: \"6\",\n                  class: \"ion-margin-vertical\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_NumberInput, {\n                      modelValue: _ctx.form.weight,\n                      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((_ctx.form.weight) = $event)),\n                      form: _ctx.form,\n                      min: 1\n                    }, null, 8, [\"modelValue\", \"form\"])\n                  ]),\n                  _: 1\n                }),\n                (_ctx.showHeightField)\n                  ? (_openBlock(), _createBlock(_component_ion_col, {\n                      key: 0,\n                      size: \"6\",\n                      class: \"ion-margin-vertical\"\n                    }, {\n                      default: _withCtx(() => [\n                        _createVNode(_component_NumberInput, {\n                          modelValue: _ctx.form.height,\n                          \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((_ctx.form.height) = $event)),\n                          form: _ctx.form,\n                          min: 1\n                        }, null, 8, [\"modelValue\", \"form\"])\n                      ]),\n                      _: 1\n                    }))\n                  : _createCommentVNode(\"\", true),\n                _createVNode(_component_ion_col, {\n                  class: \"ion-margin-vertical\",\n                  size: _ctx.showHeightField ? 6 : 12\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_SelectInput, {\n                      modelValue: _ctx.form.tbStatus,\n                      \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((_ctx.form.tbStatus) = $event)),\n                      options: _ctx.tbStatuses\n                    }, null, 8, [\"modelValue\", \"options\"])\n                  ]),\n                  _: 1\n                }, 8, [\"size\"]),\n                (_ctx.isFemale)\n                  ? (_openBlock(), _createElementBlock(_Fragment, { key: 1 }, [\n                      _createVNode(_component_ion_col, {\n                        size: \"6\",\n                        class: \"ion-margin-vertical ion-padding-vertical\"\n                      }, {\n                        default: _withCtx(() => [\n                          _createVNode(_component_yes_no_input, {\n                            modelValue: _ctx.form.isPregnant,\n                            \"onUpdate:modelValue\": _cache[4] || (_cache[4] = ($event: any) => ((_ctx.form.isPregnant) = $event)),\n                            inline: \"\"\n                          }, null, 8, [\"modelValue\"])\n                        ]),\n                        _: 1\n                      }),\n                      _createVNode(_component_ion_col, {\n                        size: \"6\",\n                        class: \"ion-margin-vertical ion-padding-vertical\"\n                      }, {\n                        default: _withCtx(() => [\n                          _createVNode(_component_yes_no_input, {\n                            modelValue: _ctx.form.isBreastfeeding,\n                            \"onUpdate:modelValue\": _cache[5] || (_cache[5] = ($event: any) => ((_ctx.form.isBreastfeeding) = $event)),\n                            inline: \"\"\n                          }, null, 8, [\"modelValue\"])\n                        ]),\n                        _: 1\n                      })\n                    ], 64))\n                  : _createCommentVNode(\"\", true),\n                _createVNode(_component_ion_col, {\n                  size: \"6\",\n                  class: \"ion-margin-vertical\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_yes_no_input, {\n                      modelValue: _ctx.form.hasContraindications,\n                      \"onUpdate:modelValue\": _cache[6] || (_cache[6] = ($event: any) => ((_ctx.form.hasContraindications) = $event)),\n                      inline: \"\"\n                    }, null, 8, [\"modelValue\"]),\n                    (_ctx.hasContraindications)\n                      ? (_openBlock(), _createBlock(_component_multi_column_view, {\n                          key: 0,\n                          items: _ctx.contraIndications,\n                          numberOfColumns: 2\n                        }, {\n                          default: _withCtx(({ entries }) => [\n                            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(entries, (entry) => {\n                              return (_openBlock(), _createBlock(_component_ion_item, {\n                                lines: \"none\",\n                                key: entry.value\n                              }, {\n                                default: _withCtx(() => [\n                                  _createVNode(_component_ion_label, null, {\n                                    default: _withCtx(() => [\n                                      _createTextVNode(_toDisplayString(entry.label), 1)\n                                    ]),\n                                    _: 2\n                                  }, 1024),\n                                  _createVNode(_component_ion_checkbox, {\n                                    slot: \"start\",\n                                    modelValue: entry.isChecked,\n                                    \"onUpdate:modelValue\": ($event: any) => ((entry.isChecked) = $event)\n                                  }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"])\n                                ]),\n                                _: 2\n                              }, 1024))\n                            }), 128))\n                          ]),\n                          _: 1\n                        }, 8, [\"items\"]))\n                      : _createCommentVNode(\"\", true)\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ion_col, {\n                  class: \"ion-padding-start\",\n                  size: \"6\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_yes_no_input, {\n                      modelValue: _ctx.form.hasSideEffects,\n                      \"onUpdate:modelValue\": _cache[7] || (_cache[7] = ($event: any) => ((_ctx.form.hasSideEffects) = $event)),\n                      inline: \"\"\n                    }, null, 8, [\"modelValue\"]),\n                    (_ctx.hasSideEffects)\n                      ? (_openBlock(), _createBlock(_component_multi_column_view, {\n                          key: 0,\n                          items: _ctx.sideEffects,\n                          numberOfColumns: 2\n                        }, {\n                          default: _withCtx(({ entries }) => [\n                            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(entries, (entry) => {\n                              return (_openBlock(), _createBlock(_component_ion_item, {\n                                lines: \"none\",\n                                key: entry.value\n                              }, {\n                                default: _withCtx(() => [\n                                  _createVNode(_component_ion_label, null, {\n                                    default: _withCtx(() => [\n                                      _createTextVNode(_toDisplayString(entry.label), 1)\n                                    ]),\n                                    _: 2\n                                  }, 1024),\n                                  _createVNode(_component_ion_checkbox, {\n                                    slot: \"start\",\n                                    modelValue: entry.isChecked,\n                                    \"onUpdate:modelValue\": ($event: any) => ((entry.isChecked) = $event)\n                                  }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"])\n                                ]),\n                                _: 2\n                              }, 1024))\n                            }), 128))\n                          ]),\n                          _: 1\n                        }, 8, [\"items\"]))\n                      : _createCommentVNode(\"\", true)\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ion_col, {\n                  size: \"6\",\n                  class: \"ion-margin-vertical\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_SelectInput, {\n                      modelValue: _ctx.form.regimen,\n                      \"onUpdate:modelValue\": _cache[8] || (_cache[8] = ($event: any) => ((_ctx.form.regimen) = $event)),\n                      options: _ctx.regimens\n                    }, null, 8, [\"modelValue\", \"options\"])\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ion_col, {\n                  size: \"6\",\n                  class: \"ion-margin-vertical\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_NumberInput, {\n                      modelValue: _ctx.form.totalArvsGiven,\n                      \"onUpdate:modelValue\": _cache[9] || (_cache[9] = ($event: any) => ((_ctx.form.totalArvsGiven) = $event)),\n                      form: _ctx.form,\n                      min: 1\n                    }, null, 8, [\"modelValue\", \"form\"])\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ion_col, {\n                  size: \"6\",\n                  class: \"ion-margin-vertical\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_NumberInput, {\n                      modelValue: _ctx.form.totalCPTGiven,\n                      \"onUpdate:modelValue\": _cache[10] || (_cache[10] = ($event: any) => ((_ctx.form.totalCPTGiven) = $event)),\n                      form: _ctx.form,\n                      min: 1\n                    }, null, 8, [\"modelValue\", \"form\"])\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ion_col, {\n                  size: \"6\",\n                  class: \"ion-margin-vertical\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_SelectInput, {\n                      modelValue: _ctx.form.tbMed,\n                      \"onUpdate:modelValue\": _cache[11] || (_cache[11] = ($event: any) => ((_ctx.form.tbMed) = $event)),\n                      options: _ctx.tbMeds\n                    }, null, 8, [\"modelValue\", \"options\"])\n                  ]),\n                  _: 1\n                }),\n                (_ctx.hasGiven6H || _ctx.hasGivenRFP)\n                  ? (_openBlock(), _createBlock(_component_ion_col, {\n                      key: 2,\n                      size: \"6\"\n                    }, {\n                      default: _withCtx(() => [\n                        _createVNode(_component_NumberInput, {\n                          modelValue: _ctx.form.totalIPTGiven,\n                          \"onUpdate:modelValue\": _cache[12] || (_cache[12] = ($event: any) => ((_ctx.form.totalIPTGiven) = $event)),\n                          form: _ctx.form,\n                          min: 1\n                        }, null, 8, [\"modelValue\", \"form\"])\n                      ]),\n                      _: 1\n                    }))\n                  : _createCommentVNode(\"\", true),\n                (_ctx.hasGivenRFP)\n                  ? (_openBlock(), _createBlock(_component_ion_col, {\n                      key: 3,\n                      size: \"6\"\n                    }, {\n                      default: _withCtx(() => [\n                        _createVNode(_component_NumberInput, {\n                          modelValue: _ctx.form.totalRFPGiven,\n                          \"onUpdate:modelValue\": _cache[13] || (_cache[13] = ($event: any) => ((_ctx.form.totalRFPGiven) = $event)),\n                          form: _ctx.form,\n                          min: 1\n                        }, null, 8, [\"modelValue\", \"form\"])\n                      ]),\n                      _: 1\n                    }))\n                  : _createCommentVNode(\"\", true),\n                (_ctx.hasGiven3HP)\n                  ? (_openBlock(), _createBlock(_component_ion_col, {\n                      key: 4,\n                      size: \"6\"\n                    }, {\n                      default: _withCtx(() => [\n                        _createVNode(_component_NumberInput, {\n                          modelValue: _ctx.form.total3HPGiven,\n                          \"onUpdate:modelValue\": _cache[14] || (_cache[14] = ($event: any) => ((_ctx.form.total3HPGiven) = $event)),\n                          form: _ctx.form,\n                          min: 1\n                        }, null, 8, [\"modelValue\", \"form\"])\n                      ]),\n                      _: 1\n                    }))\n                  : _createCommentVNode(\"\", true),\n                (_ctx.hasGiven3HP || _ctx.hasGivenRFP || _ctx.hasGiven6H)\n                  ? (_openBlock(), _createBlock(_component_ion_col, {\n                      key: 5,\n                      size: \"6\"\n                    }, {\n                      default: _withCtx(() => [\n                        _createVNode(_component_NumberInput, {\n                          modelValue: _ctx.form.totalPyridoxineGiven,\n                          \"onUpdate:modelValue\": _cache[15] || (_cache[15] = ($event: any) => ((_ctx.form.totalPyridoxineGiven) = $event)),\n                          form: _ctx.form,\n                          min: 1\n                        }, null, 8, [\"modelValue\", \"form\"])\n                      ]),\n                      _: 1\n                    }))\n                  : _createCommentVNode(\"\", true),\n                _createVNode(_component_ion_col, {\n                  size: \"6\",\n                  class: \"ion-margin-vertical\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_yes_no_input, {\n                      modelValue: _ctx.form.patientPresent,\n                      \"onUpdate:modelValue\": _cache[16] || (_cache[16] = ($event: any) => ((_ctx.form.patientPresent) = $event)),\n                      inline: \"\",\n                      disabled: _ctx.form.patientPresent.disabled\n                    }, null, 8, [\"modelValue\", \"disabled\"])\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ion_col, {\n                  size: \"6\",\n                  class: \"ion-margin-vertical\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_yes_no_input, {\n                      modelValue: _ctx.form.guardianPresent,\n                      \"onUpdate:modelValue\": _cache[17] || (_cache[17] = ($event: any) => ((_ctx.form.guardianPresent) = $event)),\n                      inline: \"\"\n                    }, null, 8, [\"modelValue\"])\n                  ]),\n                  _: 1\n                }),\n                (_ctx.prevDrugs.length > 0)\n                  ? (_openBlock(), _createBlock(_component_ion_col, {\n                      key: 6,\n                      size: \"6\",\n                      class: \"ion-margin-vertical\"\n                    }, {\n                      default: _withCtx(() => [\n                        _createVNode(_component_NumberInput, {\n                          modelValue: _ctx.form.pillCount,\n                          \"onUpdate:modelValue\": _cache[18] || (_cache[18] = ($event: any) => ((_ctx.form.pillCount) = $event)),\n                          form: _ctx.form,\n                          min: 1\n                        }, null, 8, [\"modelValue\", \"form\"])\n                      ]),\n                      _: 1\n                    }))\n                  : _createCommentVNode(\"\", true),\n                _createVNode(_component_ion_col, {\n                  size: _ctx.prevDrugs.length > 0 ? 6 : 12,\n                  class: \"ion-margin-vertical\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_DateInput, {\n                      modelValue: _ctx.form.nextAppointmentDate,\n                      \"onUpdate:modelValue\": _cache[19] || (_cache[19] = ($event: any) => ((_ctx.form.nextAppointmentDate) = $event)),\n                      form: _ctx.form,\n                      minDate: _ctx.form.visitDate.value,\n                      maxDate: _ctx.drugRunOutDate\n                    }, null, 8, [\"modelValue\", \"form\", \"minDate\", \"maxDate\"])\n                  ]),\n                  _: 1\n                }, 8, [\"size\"])\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_footer, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_button, {\n              color: \"primary\",\n              onClick: _cache[20] || (_cache[20] = ($event: any) => (_ctx.modal.hide())),\n              slot: \"end\"\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\"Close\")\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_ion_button, {\n              color: \"warning\",\n              onClick: _ctx.onClear,\n              slot: \"end\"\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\"Reset\")\n              ]),\n              _: 1\n            }, 8, [\"onClick\"]),\n            _createVNode(_component_ion_button, {\n              color: \"success\",\n              onClick: _ctx.onSubmit,\n              slot: \"end\"\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\"Save\")\n              ]),\n              _: 1\n            }, 8, [\"onClick\"])\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    })\n  ], 64))\n}","import { Patient } from '@/interfaces/patient';\nimport { ObservationService } from './observation_service';\nimport { Service } from \"@/services/service\"\nimport HisDate from \"@/utils/Date\"\nimport { Observation } from \"@/interfaces/observation\"\nimport { Patientservice } from '@/services/patient_service';\nimport { DrugOrderService } from './drug_order_service';\nimport { isEmpty } from 'lodash';\n\nexport class PatientObservationService extends Patientservice {\n  constructor(patient: Patient) {\n    super(patient)\n  }\n\n  async isPregnant() {\n    const obs = await ObservationService.getFirstObs(this.getID(), 'Is patient pregnant')\n    return obs && (obs.value_coded.match(/Yes/i) ? true : false)\n      && ObservationService.obsInValidPeriod(obs)\n  }\n\n  async hasPregnancyObsToday() {\n    const date = await ObservationService.getFirstObsDatetime(this.getID(), 'Is patient pregnant')\n    return date && HisDate.toStandardHisFormat(date) === Service.getSessionDate() && this.isFemale()\n  }\n\n  async hasPregnancyAtARTInitiation() {\n    const obs = await ObservationService.getLastValueCoded(this.getID(), \"Is patient pregnant\")\n    return obs && await ObservationService.getConceptName(obs)\n  }\n\n  async breastFeedingAtARTInitiation() {\n    const obs = await ObservationService.getLastValueCoded(this.getID(), \"Is patient breast feeding\")\n    return obs && await ObservationService.getConceptName(obs)\n  }\n\n  async getInitialWeight() {\n    return ObservationService.getLastValueNumber(this.getID(), \"weight\")\n  }\n\n  async getRecentWeight() {\n    return ObservationService.getFirstValueNumber(this.getID(), \"weight\") || -1\n  }\n\n  async getInitialHeight() {\n    return ObservationService.getLastValueNumber(this.getID(), \"Height\")\n  }\n\n  async getInitialTBStatus() {\n    const obs = await ObservationService.getLastValueCoded(this.getID(), \"TB Status at Initiation\")\n    if (obs) return ObservationService.getConceptName(obs)\n  }\n\n  async getRecentHeight() {\n    return ObservationService.getFirstValueNumber(this.getID(), \"Height\") || -1\n  }\n\n  async getWeightHistory() {\n    try {\n      const weights = await ObservationService.getAll(this.getID(), 'weight')\n      return weights.map((obs: Observation) => ({\n        weight: obs.value_numeric, date: obs.obs_datetime\n      }))\n    } catch (e) {\n      console.warn(e)\n      return []\n    }\n  }\n  async getCompleteTBTherapyHistory() {\n    const data = await ObservationService.getAll(this.getID(), 'TB treatment history')\n    return data.filter((data: any) => {\n      return data.value_text.match(/Complete/i);\n    });\n  }\n\n  async getInitialBMI() {\n    return ObservationService.getLastValueNumber(this.getID(), \"BMI\")\n  }\n\n  async everReceivedART() {\n    return ObservationService.getFirstValueCoded(this.getID(), \"Ever received ART\")\n  }\n\n  async agreesToFollowUp() {\n    return ObservationService.getFirstValueCoded(this.getID(), \"Agrees to followup\")\n  }\n\n  async getHIVTestDate() {\n    const obs = await ObservationService.getFirstObs(this.getID(), \"Confirmatory HIV test date\")\n    if (obs && obs.value_datetime) return obs.value_datetime\n    if (obs && obs.value_text) return obs.value_text\n    return null\n  }\n\n  async getARTStartDate() {\n    const obs = await ObservationService.getFirstObs(this.getID(), \"Date ART started\")\n    if (obs && obs.value_datetime) return obs.value_datetime\n    if (obs && obs.value_text) return obs.value_text\n    const orders = await DrugOrderService.getAllDrugOrders(this.getID(), Number.MAX_SAFE_INTEGER);\n    if(!isEmpty(orders)){\n      return orders[0].order['start_date']\n    }\n    return null\n  }\n\n  async getHIVTestLocation() {\n    return ObservationService.getFirstValueText(\n      this.getID(),\n      \"Confirmatory HIV test location\"\n    )\n  }\n\n  async getReasonForStartingART() {\n    return ObservationService.getFirstValueCoded(this.getID(), \"Reason for ART eligibility\")\n  }\n\n  async getStagingCondition() {\n    return ObservationService.getFirstValueCoded(this.getID(), \"Who stages criteria present\")\n  }\n    \n  getWhoStage() {\n    return ObservationService.getFirstValueCoded(this.getID(), \"Who stage\")\n  }\n}","\nimport { computed, defineComponent, onMounted, PropType, reactive, ref, watch } from \"vue\";\nimport { \n  IonCol, \n  IonGrid, \n  IonRow,  \n  IonContent, \n  IonFooter, \n  IonHeader, \n  IonTitle, \n  IonToolbar, \n  IonButton, \n  IonLabel,\n  IonCheckbox,\nIonItem,\n} from \"@ionic/vue\";\nimport { alertConfirmation, toastSuccess } from \"@/utils/Alerts\";\nimport isEmpty from \"lodash/isEmpty\";\nimport { Option } from \"@/components/Forms/FieldInterface\";\nimport YesNoInput from \"../inputs/YesNoInput.vue\";\nimport SelectInput from \"../inputs/SelectInput.vue\";\nimport DateInput from \"../inputs/DateInput.vue\";\nimport NumberInput from \"../inputs/NumberInput.vue\";\nimport { ConceptService } from \"@/services/concept_service\";\nimport MultiColumnView from \"@/components/containers/MultiColumnView.vue\";\nimport { PatientObservationService } from \"@/services/patient_observation_service\";\nimport { RegimenService } from \"@/services/regimen_service\";\nimport { DrugOrderService } from \"@/services/drug_order_service\";\nimport { VitalsService } from \"@/apps/ART/services/vitals_service\";\nimport StandardValidations from \"@/components/Forms/validations/StandardValidations\";\nimport { ConsultationService } from \"@/apps/ART/services/consultation_service\";\nimport { ReceptionService } from \"@/apps/ART/services/reception_service\";\nimport { AdherenceService } from \"@/apps/ART/services/adherence_service\";\nimport { AppointmentService } from \"@/apps/ART/services/appointment_service\";\nimport { PrescriptionService } from \"@/apps/ART/services/prescription_service\";\nimport dayjs from \"dayjs\";\nimport { ObsValue } from \"@/services/observation_service\";\nimport { BMIService } from \"@/services/bmi_service\";\nimport { DispensationService } from \"@/apps/ART/services/dispensation_service\";\nimport { DTForm } from \"../../interfaces/dt_form_field\";\nimport { optionsToGroupObs, resolveObs, submitForm } from \"../../utils/form\";\nimport { toOptions } from \"../../utils/DTFormElements\";\nimport { modal } from \"@/utils/modal\";\nimport { EmcEvents } from \"../../interfaces/emc_event\";\nimport EventBus from \"@/utils/EventBus\";\nimport { uniqueBy } from \"@/utils/Arrays\";\nimport { DISPLAY_DATE_FORMAT, STANDARD_DATE_FORMAT } from \"@/utils/Date\";\n\nexport default defineComponent({\n  components: {\n    IonContent,\n    IonFooter,\n    IonHeader,\n    IonTitle,\n    IonToolbar,\n    IonButton,\n    IonItem,\n    IonLabel,\n    IonGrid,\n    IonRow,\n    IonCol,\n    IonCheckbox,\n    SelectInput,\n    NumberInput,\n    DateInput,\n    YesNoInput,\n    MultiColumnView\n  },\n  props: {\n    patient: {\n      type: Object as PropType<PatientObservationService>,\n      required: true\n    },\n  },\n  setup(props) {\n    const patientId = computed(() => props.patient.getID())\n    const vitals = new VitalsService(patientId.value, -1)\n    const consultations = new ConsultationService(patientId.value, -1)\n    const prescription = new PrescriptionService(patientId.value, -1)\n    const dispensation = new DispensationService(patientId.value, -1)\n    const reception = new ReceptionService(patientId.value, -1)\n    const adherence = new AdherenceService(patientId.value, -1)\n    const appointment = new AppointmentService(patientId.value, -1)\n    const prevHeight = ref<number>()\n    const regimens = ref<Option[]>([])\n    const contraIndications = ref<Option[]>([]);\n    const sideEffects = ref<Option[]>([]);\n    const prevDrugs = ref<any[]>([]);\n    const showHeightField = computed(() => !(prevHeight.value && props.patient.getAge() > 18))\n    const isFemale = computed(() => props.patient.isFemale())\n    const drugRunOutDate = ref<string>('');\n    const today = dayjs().format(STANDARD_DATE_FORMAT);\n    const birthdate = dayjs(props.patient.getBirthdate()).format(STANDARD_DATE_FORMAT);\n\n    const form = reactive<DTForm>({\n      visitDate: {\n        value: dayjs().format('YYYY-MM-DD') as string | undefined,\n        label: \"Visit Date\",\n        required: true,\n        validation: async (date: Option) => {\n          if(new Date(date.value) > new Date(today)) {\n            return [\"Visit date cannot be after today's date\"]\n          }\n          if(new Date(date.value) < new Date(birthdate)) {\n            return [\"Visit date cannot be before patient's birth date\"]\n          }\n          return null\n        }\n      },\n      weight: {\n        value: undefined as number | undefined,\n        label: \"Weight\",\n        required: true,\n        computedValue: (weight: number) => ({\n          tag: 'vitals',\n          obs: vitals.buildValueNumber('Weight', weight)\n        }),\n        validation: (weight: Option, form: any) => {\n          if ((isEmpty(weight) || !weight.value) && form.patientPresent.value === 'No') {\n            return null\n          } \n          return vitals.validator({...weight, label: 'Weight'})\n        } \n      },\n      height: {\n        value: undefined as number | undefined,\n        label: \"Height\",\n        computedValue: (height: number) => ({\n          tag: 'vitals',\n          obs: vitals.buildValueNumber('Height', height)\n        }),\n        validation: (height: Option) => {\n          if(!showHeightField.value || ((isEmpty(height) || !height.value) && form.patientPresent.value === 'No')) {\n            return null\n          }\n          return vitals.validator({...height, label: 'Height'})\n        }\n      },\n      isPregnant: {\n        value: undefined as \"Yes\" | \"No\"  | undefined,\n        label: 'Is the patient pregnant?',\n        computedValue: (isPregnant: \"Yes\" | \"No\") => ({\n          tag: 'consultation',\n          obs: consultations.buildValueCoded('Is patient pregnant', isPregnant)\n        }),\n        validation: async (state: Option) => isFemale.value && StandardValidations.required(state)\n      },\n      isBreastfeeding: {\n        value: undefined as \"Yes\" | \"No\"  | undefined,\n        label: 'Is the patient breastfeeding?',\n        computedValue: (isBreastfeeding: \"Yes\" | \"No\") => ({\n          tag: 'consultation',\n          obs: consultations.buildValueCoded('Is patient breast feeding', isBreastfeeding)\n        }),\n        validation: async (state: Option) => isFemale.value && StandardValidations.required(state)\n      },\n      nextAppointmentDate: {\n        value: undefined as string | undefined,\n        label: \"Next Appointment Date\",\n        required: true,\n        computedValue: (nextAppointmentDate: string) => ({\n          tag: 'appointment',\n          obs: appointment.buildValueDate('Appointment date', nextAppointmentDate)\n        }),\n        validation: async (date, form) => {\n          if(new Date(date.value) < new Date(form.visitDate.value)) {\n            return [\"Appointment date cannot be before visit date\"]\n          }\n          if(new Date(date.value) > new Date(drugRunOutDate.value)) {\n            return [\"Appointment date cannot be after drug run out date\"]\n          }\n          return null\n        }\n      },\n      patientPresent: {\n        value: undefined as \"Yes\" | \"No\"  | undefined,\n        label: 'Is the patient present?',\n        required: true,\n        computedValue: (patientPresent: \"Yes\" | \"No\") => ({\n          tag: 'reception',\n          obs: reception.buildValueCoded('Patient present', patientPresent)\n        }),\n      },\n      guardianPresent: {\n        value: undefined as \"Yes\" | \"No\"  | undefined,\n        label: 'Is the guardian present?',\n        required: true,\n        computedValue: (guardianPresent: \"Yes\" | \"No\") => ({\n          tag: 'reception',\n          obs: reception.buildValueCoded('Guardian present', guardianPresent)\n        }),\n      },\n      pillCount: {\n        value: undefined as number  | undefined,\n        label: \"Pill Count\",\n        required: prevDrugs.value.length > 0,\n        validation: async (pills: Option) => prevDrugs.value.length > 0 && StandardValidations.isNumber(pills)\n      },\n      regimen: {\n        value: undefined as string | undefined,\n        label: \"Regimen\",\n        placeholder: \"Select a regimen\",\n        computedValue: () => ({\n          tag: 'consultation',\n          obs: prescription.buildValueCoded(\"Medication orders\", \"Antiretroviral drugs\")\n        }),\n      },\n      totalCPTGiven: {\n        value: undefined as number  | undefined,\n        label: \"Total CPT Given\",\n        computedValue: () => ({\n          tag: 'consultation',\n          obs: prescription.buildValueCoded(\"Medication orders\", \"CPT\")\n        }),\n      },\n      totalIPTGiven: {\n        value: undefined as number  | undefined,\n        label: \"Total IPT Given\",\n        computedValue: () => ({\n          tag: 'consultation',\n          obs: prescription.buildValueCoded(\"Medication orders\", \"INH\")\n        }),\n        validation: async (drugs: Option, form: any) => {\n          return (form.tbMed.value?.label === '6H' || form.tbMed.value?.label === '3HP (RFP + INH)') && \n            StandardValidations.isNumber(drugs)\n        }\n      },\n      totalRFPGiven: {\n        value: undefined as number  | undefined,\n        label: \"Total RFP Given\",\n        computedValue: () => ({\n          tag: 'consultation',\n          obs: prescription.buildValueCoded(\"Medication orders\", \"3HP (RFP + INH)\")\n        }),\n        validation: async (drugs: Option, form: any) => {\n          return form.tbMed.value?.label === '3HP (RFP + INH)' && \n            StandardValidations.isNumber(drugs)\n        }\n      },\n      total3HPGiven: {\n        value: undefined as number  | undefined,\n        label: \"Total 3HP Given\",\n        computedValue: () => ({\n          tag: 'consultation',\n          obs: prescription.buildValueCoded(\"Medication orders\", \"INH 300 / RFP 300 (3HP)\")\n        }),\n        validation: async (drugs: Option, form: any) => {\n          return form.tbMed.value?.label === '3HP (INH 300 / RFP 300)' && \n            StandardValidations.isNumber(drugs)\n        }\n      },\n      totalArvsGiven: {\n        value: undefined as number  | undefined,\n        label: \"Total ARVs Given\",\n        validation: async (drugs: Option, form: any) => !isEmpty(form.regimen.value) && StandardValidations.isNumber(drugs)\n      },\n      totalPyridoxineGiven: {\n        value: undefined as number  | undefined,\n        label: \"Total Pyridoxine Given\",\n        validation: async (amount: Option, form: any) => form.tbMed.value?.label && StandardValidations.isNumber(amount)\n      },\n      tbMed: {\n        value: undefined as Option | undefined,\n        label: \"TB Medication\",\n        placeholder: \"Select a TB medication\",\n      },\n      hasContraindications: {\n        value: \"No\",\n        label: \"Has Side Effects / Contraindications ?\",\n        validation: async (state: Option) => StandardValidations.validateSeries([\n          ()  => StandardValidations.required(state),\n          () => {\n            if(state.value === \"No\" || contraIndications.value.some(x => x.isChecked)) return null\n            return [\"Please select at least one side effect\"]\n          }\n        ])\n      },\n      hasSideEffects: {\n        value: \"No\",\n        label: \"Has Other Side Effects ?\",\n        validation: async (state: Option) => StandardValidations.validateSeries([\n          ()  => StandardValidations.required(state),\n          () => {\n            if(state.value === \"No\" || sideEffects.value.some(x => x.isChecked)) return null\n            return [\"Please select at least one side effect\"]\n          }\n        ])\n      },\n      tbStatus: {\n        value: undefined as Option | undefined,\n        label: \"TB Status\",\n        computedValue: (status: Option) => ({\n          tag: 'consultation',\n          obs: consultations.buildValueCoded('TB Status', status.value)\n        }),\n        validation: async (state) => StandardValidations.required(state)\n      },\n    })\n\n    const getRegimens = async (weight: number, onTB?: boolean): Promise<Option[]> => {\n      const unknownReg = {\n        label: \"Unkown\",\n        value: \"Unkown\",\n        other: [{\n          \"drug_id\": 1046,\n          \"drug_name\": \"Unknown ARV\",\n          \"am\": 1,\n          \"pm\": 0,\n          \"units\": \"\",\n          \"frequency\":\t\"Daily (QOD)\"\n        }]\n      }      \n      const regs = await RegimenService.getRegimensByWeight(weight, onTB)\n      if(isEmpty(regs)) return [unknownReg]\n      return Object.keys(regs).map(key => ({\n        label: key, \n        value: key, \n        other: regs[key] \n      })).concat([unknownReg])\n    }\n\n    watch(form.patientPresent, isPresent => {\n      if(isPresent.value === \"No\") {\n        form.weight.required = false\n        form.guardianPresent.value = \"Yes\"\n      } else {\n        form.weight.required = true\n      }\n    })\n\n    watch(form.guardianPresent, isPresent => {\n      if(isPresent.value === \"No\") {\n        form.patientPresent.value = \"Yes\"\n      }\n    })\n\n    watch([form.weight, form.tbStatus], async () => {\n      if(form.weight.value) {\n        const onTB = !isEmpty(form.tbStatus.value) && !form.tbStatus.value.label.match(/TB Not Suspected/i)\n        regimens.value = await getRegimens(form.weight.value, onTB)\n        form.patientPresent.value = \"Yes\"\n        form.patientPresent.disabled = true\n      }\n    })\n\n    watch([() => form.totalArvsGiven.value, () => form.pillCount.value], () => {\n      const arvs = parseInt(form.totalArvsGiven.value) || 0\n      const remainingDrugs = parseInt(form.pillCount.value) || 0\n      drugRunOutDate.value = dayjs(form.visitDate.value).add(arvs + remainingDrugs, 'days').format(STANDARD_DATE_FORMAT)\n      form.nextAppointmentDate.label = `Next Appointment Date (Drug run out date: ${dayjs(drugRunOutDate.value).format(DISPLAY_DATE_FORMAT)})`\n      form.nextAppointmentDate.value = drugRunOutDate.value\n    })\n\n    const hasGiven3HP = computed(() => form.tbMed.value?.label === '3HP (INH 300 / RFP 300)')\n    const hasGivenRFP = computed(() => form.tbMed.value?.label === '3HP (RFP + INH)')\n    const hasGiven6H = computed(() => form.tbMed.value?.label === '6H')\n    const hasContraindications = computed(() => form.hasContraindications.value === 'Yes')\n    const hasSideEffects = computed(() => form.hasSideEffects.value === 'Yes')\n\n    const tbStatuses = toOptions([\n      'Confirmed TB Not on treatment', \n      'Confirmed TB on treatment', \n      'TB Not Suspected',\n      'TB Suspected'\n    ]);\n\n    const tbMeds = toOptions(['6H', '3HP (RFP + INH)', '3HP (INH 300 / RFP 300)'])\n    \n    const setPatientPresent = (state: \"Yes\" | \"No\") => {\n      form.patientPresent.value = state \n      if(state === 'No') {\n        form.guardianPresent.value = \"Yes\"\n      }\n    }\n\n    const setGuardianPresent = (state: \"Yes\" | \"No\") => {\n      form.guardianPresent.value = state\n      if(state === 'No') {\n        form.patientPresent.value = \"Yes\"\n      }\n    }\n\n    const buildBmiObs = async (formData: any): Promise<ObsValue> => {\n      const height = formData.height || prevHeight.value\n      const bmi = BMIService.calculateBMI(formData.weight, height)\n      return vitals.buildValueNumber('BMI', bmi)\n    }\n\n    const buildFpmObs = async () => {\n      const obs: ObsValue[] = [\n        await consultations.buildValueCoded('Patient using family planning', 'No')\n      ]\n      const methods = consultations.getFamilyPlanningMethods()\n      methods.forEach(async (method) => {\n        obs.push(await consultations.buildValueCoded(method, \"No\"))\n      })\n      return obs\n    }\n\n    const getTbSymptomsObs = async () => {\n      return Promise.all(ConceptService.getConceptsByCategory(\"tb_symptom\", true).map(async (concept) => {\n        return consultations.buildGroupValueCoded(concept.name, concept.name, \"No\")\n      }))\n    }\n\n    const toDrugOrder = (drug: any, quantity: number, duration: number, startDate: string) => {\n      return {\n        \"drug_inventory_id\": drug.drug_id,\n        \"equivalent_daily_dose\": prescription.calculateEquivalentDosage(drug.am, drug.pm),\n        \"dose\": prescription.calculateDosage(drug.am, drug.pm),\n        'start_date': startDate,\n        \"auto_expire_date\": dayjs(startDate).add(duration, 'days').format('YYYY-MM-DD'), \n        \"units\": drug.units,\n        \"qty\": quantity,\n        \"frequency\": drug.frequency,\n        \"instructions\": prescription.getInstructions(drug.drug_name, drug.am, drug.pm, drug.units),\n      }\n    }\n\n    const onSubmit = async () => {\n      await PatientObservationService.setSessionDate(form.visitDate.value)\n      vitals.setDate(form.visitDate.value)\n      consultations.setDate(form.visitDate.value)\n      prescription.setDate(form.visitDate.value)\n      reception.setDate(form.visitDate.value)\n      adherence.setDate(form.visitDate.value)\n      appointment.setDate(form.visitDate.value)\n      dispensation.setDate(form.visitDate.value)\n\n      await submitForm (form, async (formData, computedFormData) => {\n        await vitals.createEncounter()\n        const vitalsObs = await resolveObs(computedFormData, 'vitals')\n        if (!isEmpty(vitalsObs)) {\n          const bmiObs = await buildBmiObs(formData)\n          await vitals.saveObservationList([...vitalsObs, bmiObs])\n        }\n        \n        await consultations.createEncounter()\n        let consultationObs = await resolveObs(computedFormData, 'consultation')\n        consultationObs = [...consultationObs, ...(await optionsToGroupObs(\"Malawi ART side effects\", contraIndications.value))]\n        consultationObs = [...consultationObs, ...(await getTbSymptomsObs())]\n        if(hasSideEffects.value) consultationObs = [...consultationObs, ...(await optionsToGroupObs(\"Other side effect\", sideEffects.value))  ]\n        if(isFemale.value) consultationObs = [...consultationObs, ...(await buildFpmObs())]\n        await consultations.saveObservationList(consultationObs)\n\n        await prescription.createEncounter()\n        const drugOrders: any[] = []\n        let duration = 0\n        if(!isEmpty(formData.regimen) && formData.totalArvsGiven) {\n          const arvDrugs: any[] = formData.regimen.other\n          duration = Math.min(...arvDrugs.map(drug =>(formData.totalArvsGiven / (drug.am + drug.pm)) + 2))\n          arvDrugs.forEach((drug: any) => drugOrders.push(\n            toDrugOrder(drug, formData.totalArvsGiven, duration, formData.visitDate)\n          ))\n        }\n\n        if(formData.totalCPTGiven) {\n          uniqueBy((await RegimenService.getRegimenExtras('Cotrimoxazole', formData.weight)), 'concept_name')\n          .filter((drug: any) => drug.frequency === 'Daily (QOD)')\n          .forEach((drug: any) => drugOrders.push(toDrugOrder(drug, formData.totalCPTGiven, duration, formData.visitDate)))\n        }\n\n        if(formData.tbMed?.value) {\n          const iptRegimens = uniqueBy((await RegimenService.getRegimenExtras('INH', formData.weight)), ['concept_name', 'frequency'])\n          const pyridoxine = iptRegimens.find((d: any) => d['concept_name'] === 'Pyridoxine')\n\n          if(pyridoxine && formData.totalPyridoxineGiven) {\n            drugOrders.push(toDrugOrder(pyridoxine, formData.totalPyridoxineGiven, duration, formData.visitDate))\n          }\n\n          if(formData.totalIPTGiven) {\n            const INH = iptRegimens.find((drug: any) =>  drug['concept_name'] === \"Isoniazid\" && (\n              (hasGiven6H.value && drug.frequency === 'Daily (QOD)') || \n              (hasGivenRFP.value && drug.frequency === 'Weekly (QW)')\n            ))\n            drugOrders.push(toDrugOrder(INH, formData.totalIPTGiven, duration, formData.visitDate))\n          }\n\n          if(formData.totalRFPGiven && hasGivenRFP.value) {\n            const rfpRegimens = await RegimenService.getRegimenExtras('Rifapentine', formData.weight)\n            if(rfpRegimens.length) drugOrders.push(toDrugOrder(rfpRegimens[0], formData.totalRFPGiven, duration, formData.visitDate))\n          }\n\n          if(formData.total3HPGiven && hasGiven3HP.value) {\n            const threeHPRegimens = await RegimenService.getRegimenExtras('INH / RFP', formData.weight)\n            drugOrders.push(toDrugOrder(threeHPRegimens[0], formData.total3HPGiven, duration, formData.visitDate))\n          }\n        }\n\n        const orders: any[] = await prescription.createDrugOrder(drugOrders)\n        const dispensations = orders.map(order => {\n          const drug = drugOrders.find(drug => drug.drug_inventory_id === order.drug_inventory_id)\n          return dispensation.buildDispensations(order.order_id, drug.qty, 1)\n        })\n        await dispensation.saveDispensations(dispensations.flat(1))\n\n        await reception.createEncounter()\n        const receptionObs = await resolveObs(computedFormData, 'reception')\n        await reception.saveObservationList(receptionObs)\n\n        if(prevDrugs.value.length > 0) {\n          await adherence.createEncounter()\n          const adherenceObs = await Promise.all(prevDrugs.value.map(async (drug: any) => {\n            const expected = adherence.calculateExpected(drug.quantity, drug.equivalent_daily_dose, drug.order.start_date, drug.frequency)\n            const adh = adherence.calculateAdherence(drug.quantity, formData.pillCount, expected)\n            return [\n              await adherence.buildAdherenceObs(drug.order_id, drug.drug_inventory_id, adh),\n              await adherence.buildPillCountObs(drug.order_id, formData.pillCount)\n            ]\n          }))\n          await adherence.saveObservationList(adherenceObs.flat(1))\n        }\n\n        await appointment.createEncounter()\n        const appointmentObs = await resolveObs(computedFormData, 'appointment')\n        await appointment.saveObservationList(appointmentObs)\n        await toastSuccess('Patient visit saved successfully')\n\n        await PatientObservationService.resetSessionDate()\n\n        await modal.hide()\n        EventBus.emit(EmcEvents.RELOAD_PATIENT_VISIT_DATA);\n        EventBus.emit(EmcEvents.RELOAD_STAGING_INFORMATION);\n      })\n    }\n\n    const onClear = async () => {\n      if((await alertConfirmation('Are you sure you want to clear all fields?'))) {\n        for(const key in form) {\n          form[key].value = ''\n          form[key].error = ''\n          form[key].disabled = false;\n        }\n        EventBus.emit(EmcEvents.ON_CLEAR);\n      }\n    }\n\n    onMounted (async () => {\n      prevHeight.value = await props.patient.getRecentHeight()\n      const recentWeight = await props.patient.getRecentWeight()\n      if (recentWeight) regimens.value = await getRegimens(recentWeight)\n      prevDrugs.value = await DrugOrderService.getLastDrugsReceived(props.patient.getID())\n      form.pillCount.required = prevDrugs.value.length > 0\n      contraIndications.value = ConceptService\n        .getConceptsByCategory(\"contraindication\", true)\n        .map(concept => ({\n          value: concept.concept_id,\n          label: concept.name,\n          other: concept\n        }));\n      sideEffects.value = ConceptService\n        .getConceptsByCategory(\"side_effect\", true)\n        .map(concept => ({\n          value: concept.concept_id,\n          label: concept.name,\n          other: concept\n        }));\n    });\n\n    return {\n      today,\n      form,\n      regimens,\n      contraIndications,\n      sideEffects,\n      tbStatuses,\n      tbMeds,\n      hasGiven3HP,\n      hasGivenRFP,\n      hasGiven6H,\n      showHeightField,\n      isFemale,\n      modal,\n      hasContraindications,\n      hasSideEffects,\n      prevDrugs,\n      drugRunOutDate,\n      birthdate,\n      onSubmit,\n      setPatientPresent,\n      setGuardianPresent,\n      onClear,\n    };\n  },\n})\n","import { render } from \"./PatientVisit.vue?vue&type=template&id=78e0e234&scoped=true&ts=true\"\nimport script from \"./PatientVisit.vue?vue&type=script&lang=ts\"\nexport * from \"./PatientVisit.vue?vue&type=script&lang=ts\"\n\nimport \"./PatientVisit.vue?vue&type=style&index=0&id=78e0e234&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-78e0e234\"]])\n\nexport default __exports__","\nimport DrillTableModalVue from '@/components/DataViews/DrillTableModal.vue';\nimport table, { ColumnInterface, RowInterface } from '@/components/DataViews/tables/ReportDataTable';\nimport ReportTable from \"@/components/DataViews/tables/ReportDataTable.vue\"\nimport { EncounterService } from '@/services/encounter_service';\nimport { ObservationService } from '@/services/observation_service';\nimport { Patientservice } from '@/services/patient_service';\nimport { ProgramService } from '@/services/program_service';\nimport popVoidReason from '@/utils/ActionSheetHelpers/VoidReason';\nimport HisDate from \"@/utils/Date\";\nimport { IonButton, IonCard, IonCardContent, IonCardHeader, IonCardTitle, modalController } from '@ionic/vue';\nimport dayjs from 'dayjs';\nimport { computed, defineComponent, onMounted, PropType, reactive, ref } from 'vue';\nimport ViralLoadResult from '@/apps/EMC/Components/modals/ViralLoadResult.vue';\nimport OutcomeStatus from '@/apps/EMC/Components/modals/OutcomeStatus.vue';\nimport PatientVisit from '@/apps/EMC/Components/modals/PatientVisit.vue';\nimport { PatientObservationService } from '@/services/patient_observation_service';\nimport EventBus from '@/utils/EventBus';\nimport { EmcEvents } from '../../interfaces/emc_event';\nimport { modal } from '@/utils/modal';\nimport { ConceptService } from '@/services/concept_service';\nimport { isEmpty } from 'lodash';\n\ninterface ActionButtonInterface {\n  label: string;\n  icon?: string;\n  action: () => any;\n  color?: string;\n}\n\nexport default defineComponent({\n  props: {\n    patient: {\n      type: Object as PropType<PatientObservationService>,\n      required: true\n    },\n    startDate:{\n      type: String,\n      required: true\n    },\n  },\n  components: {\n    ReportTable,\n    IonCard,\n    IonCardHeader,\n    IonCardTitle,\n    IonCardContent,\n    IonButton,\n  },\n  setup(props) {\n    const rows = ref<RowInterface[][]>([])\n    const patientId = computed(() => props.patient.getID());\n    const tableConfig = reactive({\n      showIndex: false,\n      tableCssTheme: \"emc-datatable-theme\"\n    })\n\n    const actionButtons = ref<ActionButtonInterface[]>([\n      {\n        label: \"Add Visit\",\n        action: async () => modal.show(PatientVisit, { \n          patient: props.patient \n        })\n      },\n      {\n        label: \"Update Outcome\",\n        action:async () => modal.show(OutcomeStatus, {\n          patient: props.patient,\n        })\n      },\n      {\n        label: \"Enter VL Results\",\n        action: async () => modal.show(ViralLoadResult, {\n          patient: props.patient,\n        })\n      }\n    ])\n\n    const columns = ref<ColumnInterface[][]>([[\n      table.thTxt('Visit Date'),\n      table.thTxt(\"Given To\"),\n      table.thTxt('Weight (Kg)'),\n      table.thTxt('Height (cm)'),\n      table.thTxt('BMI'),\n      table.thTxt('Preg'),\n      table.thTxt('B/F'),\n      table.thTxt('TB STATUS'),\n      table.thTxt('Side Effects'),\n      table.thTxt('ART Regimen'),\n      table.thTxt('Next Appointment'),\n      table.thTxt('Outcome'),\n      table.thTxt('Viral Load'),\n      table.thTxt('Void Visit')\n    ]])\n\n    const formatVisitDate = (date: string) => {\n      const monthsElapsed = props.startDate !== \"N/A\" \n          ? '(' + dayjs(date).diff(props.startDate, 'months') + 'M)' \n          : ''\n      return `${HisDate.toStandardHisDisplayFormat(date)} ${monthsElapsed}`\n    }\n\n    const drill = async (rows: string[][], title: string, columns = [] as string[]) => {\n      if(isEmpty(rows)) return \n      const modal = await modalController.create({\n        component: DrillTableModalVue,\n        cssClass: \"custom-modal\",\n        componentProps: { title, columns, onRows: () => rows },\n      });\n      await modal.present();\n    }\n\n    const showDrugsDispensed = async (drugs = [] as any[], date: string) => {\n      const columns = ['DRUG NAME', 'QUANTITY', 'UNITS' ]\n      const rows = drugs.map((drug: any) => [drug[0], drug[1], 'tab(s)' ])\n      const title = `Drugs dispensed on ${HisDate.toStandardHisDisplayFormat(date)}`\n      return drill(rows, title, columns)\n    }\n\n    const showSideEffects = async (sideEffects = [] as any[], date: string) => {\n      const title = `Side Effects Noted on ${HisDate.toStandardHisDisplayFormat(date)}`\n      const rows = sideEffects.map((e: any) => [e]);\n      return drill(rows, title)\n    }\n\n    const removeEncounters = async (date: string, index: number, activeRows: any[]) => {\n      popVoidReason(async (reason: string) => {\n        const encounters = await EncounterService.getEncounters(patientId.value, {date});\n        encounters.forEach(async (encounter: any) => {\n          await EncounterService.voidEncounter(encounter.encounter_id, reason);\n        })\n        activeRows.splice(index, 1);\n      }, 'small-modal');\n    } \n\n    const buildRows = () => {\n      Patientservice.getPatientVisits(patientId.value, true).then(async (dates) => {\n        rows.value = []\n        for (const date of dates) {\n          const data =  await ProgramService.getCurrentProgramInformation(patientId.value,  date)\n          let nextAppointment = '';\n          let pregnant = '';\n          let breastfeeding = '';\n          let vlResult = ''\n\n          if (data.outcome !== 'Defaulted') {\n            const nDate = await ObservationService.getFirstValueDatetime(patientId.value, 'appointment date', date);\n            if(nDate) nextAppointment = HisDate.toStandardHisDisplayFormat(nDate)\n            pregnant = await ObservationService.getFirstValueCoded(patientId.value, 'Is patient pregnant', date);\n            breastfeeding = await ObservationService.getFirstValueCoded(patientId.value, 'Is patient breast feeding', date);\n            if(data['viral_load'] === 'N/A') {\n              const vlObs = await ObservationService.getFirstObs(patientId.value, \"HIV viral load\", date)\n              if(vlObs && vlObs.value_text && vlObs.value_numeric) {\n                vlResult = vlObs.value_numeric === 1 ? \"LDL\" : vlObs.value_text + vlObs.value_numeric.toString()\n              }\n            } else {\n              vlResult = data['viral_load']\n            }\n          }\n          data && rows.value.push([\n            table.td(formatVisitDate(date)),\n            table.td(data['visit_by'].match(/Unk/i) ? \"\" : data['visit_by']),\n            table.td(data.outcome === 'Defaulted' ? '' : data.weight),\n            table.td(data.outcome === 'Defaulted' ? '' : data.height),\n            table.td(data.outcome === 'Defaulted' ? '' : data.bmi),\n            table.td(pregnant || ''),\n            table.td(breastfeeding ||''),\n            table.td(data['tb_status'].match(/Unknown/i) || data.outcome === 'Defaulted' ? '' : (await ConceptService.getCachedConceptName(data['tb_status'])) || ''),\n            table.tdLink(data['side_effects'].length ? 'Yes' : data.outcome !== 'Defaulted' ? 'No' : '', () => showSideEffects(data.side_effects, date)),\n            table.tdLink(data.outcome === 'Defaulted' ? '' : data.regimen, () => showDrugsDispensed(data.pills_dispensed, date)),\n            table.td(nextAppointment || ''),\n            table.td(data.outcome.match(/Unk/i) ? \"\" : data.outcome),\n            table.td(vlResult),\n            table.tdBtn('X', (index: number, activeRows: any[]) => removeEncounters(date, index, activeRows), {}, 'danger')\n          ])\n        }\n      });\n    }\n\n    EventBus.on(EmcEvents.RELOAD_PATIENT_VISIT_DATA, () => buildRows())\n\n    onMounted(() => {\n      buildRows()\n    })\n\n    return {\n      actionButtons,\n      tableConfig,\n      columns,\n      rows,\n    }\n  },\n})\n","import { render } from \"./VisitsSummary.vue?vue&type=template&id=4936bde9&scoped=true&ts=true\"\nimport script from \"./VisitsSummary.vue?vue&type=script&lang=ts\"\nexport * from \"./VisitsSummary.vue?vue&type=script&lang=ts\"\n\nimport \"./VisitsSummary.vue?vue&type=style&index=0&id=4936bde9&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4936bde9\"]])\n\nexport default __exports__","import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock, createVNode as _createVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-556ed409\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { style: {width: '100%', display: 'flex', justifyContent: 'space-between'} }\nconst _hoisted_2 = { key: 0 }\nconst _hoisted_3 = { key: 1 }\nconst _hoisted_4 = { key: 2 }\nconst _hoisted_5 = { key: 3 }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ion_item = _resolveComponent(\"ion-item\")!\n  const _component_ion_list = _resolveComponent(\"ion-list\")!\n  const _component_multi_column_view = _resolveComponent(\"multi-column-view\")!\n\n  return (_openBlock(), _createBlock(_component_multi_column_view, {\n    items: _ctx.patientInfo,\n    numberOfColumns: 3\n  }, {\n    default: _withCtx(({entries}) => [\n      _createVNode(_component_ion_list, { class: \"his-card ion-margin-end\" }, {\n        default: _withCtx(() => [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(entries, (option, i) => {\n            return (_openBlock(), _createBlock(_component_ion_item, {\n              key: i,\n              lines: i === entries.length - 1 ? 'none': '',\n              button: _ctx.clickable(option),\n              onClick: ($event: any) => (_ctx.onClickHandler(option))\n            }, {\n              default: _withCtx(() => [\n                _createElementVNode(\"div\", _hoisted_1, [\n                  (option.label)\n                    ? (_openBlock(), _createElementBlock(\"span\", _hoisted_2, _toDisplayString(option.label) + \": \", 1))\n                    : (_openBlock(), _createElementBlock(\"span\", _hoisted_3)),\n                  (_ctx.clickable(option))\n                    ? (_openBlock(), _createElementBlock(\"span\", _hoisted_4, [\n                        _createElementVNode(\"a\", null, [\n                          _createElementVNode(\"b\", null, _toDisplayString(option.value || 'N/A'), 1)\n                        ])\n                      ]))\n                    : (_openBlock(), _createElementBlock(\"span\", _hoisted_5, [\n                        _createElementVNode(\"b\", null, _toDisplayString(option.value || 'N/A'), 1)\n                      ]))\n                ])\n              ]),\n              _: 2\n            }, 1032, [\"lines\", \"button\", \"onClick\"]))\n          }), 128))\n        ]),\n        _: 2\n      }, 1024)\n    ]),\n    _: 1\n  }, 8, [\"items\"]))\n}","\nimport { computed, defineComponent, onMounted, PropType, ref } from 'vue'\nimport MultiColumnView from \"@/components/containers/MultiColumnView.vue\";\nimport { PatientObservationService } from '@/services/patient_observation_service';\nimport HisDate from \"@/utils/Date\";\nimport dayjs from 'dayjs';\nimport { isEmpty } from 'lodash';\nimport router from '@/router';\nimport ApiStore from '@/composables/ApiStore';\nimport EventBus from '@/utils/EventBus';\nimport { EmcEvents } from '../interfaces/emc_event';\nimport { toGenderString } from '@/utils/Strs';\n\ninterface InfoItem {\n  label: string;\n  value: string | number;\n  other?: {\n    onClickHandler: () => Promise<void> | void;\n  };\n}\n\nexport default defineComponent({\n  components: {\n    MultiColumnView\n  },\n  props: {\n    patient: {\n      type: Object as PropType<PatientObservationService>,\n      required: true,\n    },\n    artStartDate: {\n      type: String,\n      required: true,\n    },\n    guardians: {\n      type: String,\n      default: '',\n    }\n  },\n  emits: ['updatePatient','updateARVNumber', 'addGuardian'],\n  setup(props, { emit }) {\n    const initWeight = ref(0)\n    const initHeight = ref(0)\n    const initBmi = ref(0)\n    const initTBStatus = ref('')\n    const breastFeedingAtInitiation = ref('')\n    const pregnantAtInitiation = ref('')\n    const receivedART = ref('')\n    const agreesToFollowUp = ref('')\n    const reasonForStartingART = ref('')\n    const hivTestDate = ref('')\n    const hivTestPlace = ref('')\n    const stagingCondition = ref('')\n    const latestVLResult = ref('')\n    const whoSTage = ref('')\n\n    const clickable = (item: InfoItem) => {\n      return item.other && typeof item.other.onClickHandler === 'function';\n    }\n\n    const onClickHandler = async (item: InfoItem) => {\n      if(clickable(item)){\n        await item.other?.onClickHandler()\n      }\n    }\n\n    const getDobAndAgeAtInitiation = () => {\n      const dob = props.patient.getBirthdate()\n      const ageAtInitiation = props.artStartDate !== \"N/A\" \n        ? dayjs(props.artStartDate).diff(dob, \"years\")\n        : ''\n      \n      return `${HisDate.toStandardHisDisplayFormat(dob)} (${ageAtInitiation})`\n    }\n\n    const setLatestVLResult = (force = false) => {\n      if(force) ApiStore.invalidate('PATIENT_LAB_ORDERS')\n      ApiStore.get('PATIENT_LAB_ORDERS', { patientID: props.patient.getID() }).then(orders => {\n        const results = orders.reduce((rs: any[], order: any) => {\n        const r = order.tests\n          .filter((t: any) => t.name.match(/hiv/i) && !isEmpty(t.result))\n          .map((t: any) => t.result);\n          return rs.concat(r.reduce((a: any, c: any) => a.concat(c), []));\n        }, [])\n        .sort((a: any, b: any) => new Date(a.date) > new Date(b.date) ? -1 : 1);\n        latestVLResult.value = isEmpty(results) \n          ? '' \n          : `${results[0].value_modifier}${results[0].value} (${HisDate.toStandardHisDisplayFormat(results[0].date)})`;\n      });\n    }\n\n    const patientInfo = computed(() => [\n      { label: \"ARV Number\", value: props.patient.getArvNumber(), other: {\n        onClickHandler: () => emit('updateARVNumber')\n      }},\n      { label: \"National Patient ID\", value: props.patient.getNationalID() },\n      { label: \"Name\", value: props.patient.getGivenName() + \" \" + props.patient.getFamilyName(), other: {\n        onClickHandler: () =>   emit('updatePatient', 'given_name')\n      }},\n      { label: \"DOB and Age at Initiation\", value: getDobAndAgeAtInitiation(), other: {\n          onClickHandler: () => emit('updatePatient', 'birthdate')\n      }},\n      {\n        label: \"Sex\",\n        value: toGenderString(props.patient.getGender()),\n        other: {\n          onClickHandler: () => {\n            emit('updatePatient', 'gender')\n          }\n        },\n      },\n      {\n        label: \"Location\",\n        value: props.patient.getCurrentVillage(),\n        other: {\n          onClickHandler: () => {\n            emit('updatePatient', 'home_village')\n          }\n        },\n      },\n      { \n        label: \"Landmark\", \n        value: props.patient.getClosestLandmark(),\n        other: {\n          onClickHandler: () => {\n            emit('updatePatient', 'landmarks')\n          }\n        },\n      },\n      { \n        label: \"Phone Number\", \n        value: props.patient.getPhoneNumber(),\n        other: {\n          onClickHandler: () => {\n            emit('updatePatient', 'phone_number')\n          }\n        },\n      },\n      {\n        label: \"Guardian\",\n        value: props.guardians ? props.guardians : \"add\",\n        other: {\n          ...(isEmpty(props.guardians) \n            ? {\n                onClickHandler: () => {\n                  emit('addGuardian')\n                }\n              } \n            : {}\n          ),\n        },\n      },\n      { label: \"Agrees to follow up\", value: agreesToFollowUp.value, other: {\n        onClickHandler: () => router.push(`/emc/registration/${props.patient.getID()}/false`)\n      }},\n      { label: \"Date of starting first line ARV Regimen\", value: props.artStartDate, other: {\n        onClickHandler: () => router.push(`/emc/registration/${props.patient.getID()}/false`)\n      }},\n      { label: \"Initial Weight (KG)\", value: initWeight.value, other: {\n        onClickHandler: () => router.push(`/emc/registration/${props.patient.getID()}/false`)\n      }},\n      { label: \"Initial Height (CM)\", value: initHeight.value, other: {\n        onClickHandler: () => router.push(`/emc/registration/${props.patient.getID()}/false`)\n      }},\n      { label: \"Initial BMI\", value: initBmi.value, other: {\n        onClickHandler: () => router.push(`/emc/registration/${props.patient.getID()}/false`)\n      }},\n      { label: \"Initial TB Status\", value: initTBStatus.value, other: {\n        onClickHandler: () => router.push(`/emc/registration/${props.patient.getID()}/false`)\n      }},\n      { label: \"Pregnant at Initiation\", value: pregnantAtInitiation.value, other: {\n        onClickHandler: () => router.push(`/emc/registration/${props.patient.getID()}/false`)\n      }},\n      { label: \"Breastfeeding at Initiation\", value: breastFeedingAtInitiation.value, other: {\n        onClickHandler: () => router.push(`/emc/registration/${props.patient.getID()}/false`)\n      }},\n      { label: \"Latest VL Result and Result Date\", value:  latestVLResult.value },\n      { label: \"TI\", value: receivedART.value, other: {\n        onClickHandler: () => router.push(`/emc/registration/${props.patient.getID()}/false`)\n      }},\n      { label: \"HIV test place\", value: hivTestPlace.value, other: {\n        onClickHandler: () => router.push(`/emc/registration/${props.patient.getID()}/false`)\n      }},\n      {  label: \"HIV test date\", value: hivTestDate.value, other: {\n        onClickHandler: () => router.push(`/emc/registration/${props.patient.getID()}/false`)\n      }},\n      { label: \"WHO stage\", value: whoSTage.value, other: {\n        onClickHandler: () => router.push(`/emc/registration/${props.patient.getID()}/false`)\n      }},\n      { label: \"Reason for starting ART\", value: reasonForStartingART.value, other: {\n        onClickHandler: () => router.push(`/emc/registration/${props.patient.getID()}/false`)\n      }},\n      { label: \"Staging codition\", value: stagingCondition.value, other: {\n        onClickHandler: () => router.push(`/emc/registration/${props.patient.getID()}/false`)\n      }},\n    ])\n\n    const setHIVTestDate = async () => {\n      const date = await props.patient.getHIVTestDate()\n      if(date) hivTestDate.value = HisDate.toStandardHisDisplayFormat(date)\n    }\n\n    const init = () => {\n      props.patient.getInitialWeight().then(v => initWeight.value = v)\n      props.patient.getInitialHeight().then(v => initHeight.value = v)\n      props.patient.getInitialBMI().then(v => initBmi.value = v)\n      props.patient.getInitialTBStatus().then(v => initTBStatus.value = v)\n      props.patient.hasPregnancyAtARTInitiation().then(v => pregnantAtInitiation.value = v)\n      props.patient.breastFeedingAtARTInitiation().then(v => breastFeedingAtInitiation.value = v)\n      props.patient.everReceivedART().then(v => receivedART.value = v)\n      props.patient.agreesToFollowUp().then(v => agreesToFollowUp.value = v)\n      props.patient.getReasonForStartingART().then(v => reasonForStartingART.value = v)\n      props.patient.getHIVTestLocation().then(v => hivTestPlace.value = v)\n      props.patient.getStagingCondition().then(v => stagingCondition.value = v)\n      props.patient.getWhoStage().then(v => whoSTage.value = v)\n      setLatestVLResult()\n      setHIVTestDate()\n    }\n\n   onMounted(() => {\n    init();\n    EventBus.on(EmcEvents.RELOAD_LATEST_VL_RESULT,  () =>  setLatestVLResult())\n    EventBus.on(EmcEvents.RELOAD_STAGING_INFORMATION, () => init())\n   })\n\n    return {\n      patientInfo,\n      onClickHandler,\n      clickable,\n    }\n  },\n})\n","import { render } from \"./InformationHeader.vue?vue&type=template&id=556ed409&scoped=true&ts=true\"\nimport script from \"./InformationHeader.vue?vue&type=script&lang=ts\"\nexport * from \"./InformationHeader.vue?vue&type=script&lang=ts\"\n\nimport \"./InformationHeader.vue?vue&type=style&index=0&id=556ed409&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-556ed409\"]])\n\nexport default __exports__","import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ion_title = _resolveComponent(\"ion-title\")!\n  const _component_ion_icon = _resolveComponent(\"ion-icon\")!\n  const _component_ion_button = _resolveComponent(\"ion-button\")!\n  const _component_ion_buttons = _resolveComponent(\"ion-buttons\")!\n  const _component_ion_toolbar = _resolveComponent(\"ion-toolbar\")!\n  const _component_ion_header = _resolveComponent(\"ion-header\")!\n  const _component_TextInput = _resolveComponent(\"TextInput\")!\n  const _component_ion_col = _resolveComponent(\"ion-col\")!\n  const _component_DateInput = _resolveComponent(\"DateInput\")!\n  const _component_SelectInput = _resolveComponent(\"SelectInput\")!\n  const _component_ion_row = _resolveComponent(\"ion-row\")!\n  const _component_ion_grid = _resolveComponent(\"ion-grid\")!\n  const _component_ion_content = _resolveComponent(\"ion-content\")!\n  const _component_ion_footer = _resolveComponent(\"ion-footer\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(_component_ion_header, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_title, null, {\n              default: _withCtx(() => [\n                _createTextVNode(\"Edit Patient Demographics\")\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_ion_buttons, { slot: \"end\" }, {\n              default: _withCtx(() => [\n                _createVNode(_component_ion_button, {\n                  onClick: _cache[0] || (_cache[0] = ($event: any) => (_ctx.modal.hide()))\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_ion_icon, {\n                      slot: \"icon-only\",\n                      name: \"close\"\n                    })\n                  ]),\n                  _: 1\n                })\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_content, { class: \"ion-padding\" }, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_grid, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_row, null, {\n              default: _withCtx(() => [\n                _createVNode(_component_ion_col, {\n                  size: \"4\",\n                  class: \"ion-margin-top ion-margin-bottom\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_TextInput, {\n                      modelValue: _ctx.patient.givenName,\n                      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((_ctx.patient.givenName) = $event))\n                    }, null, 8, [\"modelValue\"])\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ion_col, {\n                  size: \"4\",\n                  class: \"ion-margin-top ion-margin-bottom\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_TextInput, {\n                      modelValue: _ctx.patient.middleName,\n                      \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((_ctx.patient.middleName) = $event))\n                    }, null, 8, [\"modelValue\"])\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ion_col, {\n                  size: \"4\",\n                  class: \"ion-margin-top ion-margin-bottom\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_TextInput, {\n                      modelValue: _ctx.patient.familyName,\n                      \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((_ctx.patient.familyName) = $event))\n                    }, null, 8, [\"modelValue\"])\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ion_col, {\n                  size: \"12\",\n                  class: \"ion-margin-top ion-margin-bottom\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_DateInput, {\n                      modelValue: _ctx.patient.birthdate,\n                      \"onUpdate:modelValue\": _cache[4] || (_cache[4] = ($event: any) => ((_ctx.patient.birthdate) = $event)),\n                      allowEstimation: true,\n                      estimationLabel: 'Estimate Age',\n                      minDate: \"1900-01-01\",\n                      maxDate: _ctx.today,\n                      onIsEstimated: _cache[5] || (_cache[5] = (estimate) => _ctx.isBirthdateEstimated = estimate)\n                    }, null, 8, [\"modelValue\", \"maxDate\"])\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ion_col, {\n                  size: \"12\",\n                  class: \"ion-margin-top ion-margin-bottom\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_SelectInput, {\n                      modelValue: _ctx.patient.gender,\n                      \"onUpdate:modelValue\": _cache[6] || (_cache[6] = ($event: any) => ((_ctx.patient.gender) = $event)),\n                      options: _ctx.genderOptions\n                    }, null, 8, [\"modelValue\", \"options\"])\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ion_col, {\n                  size: \"12\",\n                  class: \"ion-margin-top ion-margin-bottom\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_TextInput, {\n                      modelValue: _ctx.patient.cellPhoneNumber,\n                      \"onUpdate:modelValue\": _cache[7] || (_cache[7] = ($event: any) => ((_ctx.patient.cellPhoneNumber) = $event)),\n                      allowUnknown: \"\"\n                    }, null, 8, [\"modelValue\"])\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ion_col, {\n                  size: \"12\",\n                  class: \"ion-margin-top ion-margin-bottom\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_SelectInput, {\n                      modelValue: _ctx.patient.homeVillage,\n                      \"onUpdate:modelValue\": _cache[8] || (_cache[8] = ($event: any) => ((_ctx.patient.homeVillage) = $event)),\n                      asyncOptions: _ctx.getVillagesByName,\n                      allowCustom: \"\"\n                    }, null, 8, [\"modelValue\", \"asyncOptions\"])\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ion_col, {\n                  size: \"12\",\n                  class: \"ion-margin-top ion-margin-bottom\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_SelectInput, {\n                      modelValue: _ctx.patient.landmark,\n                      \"onUpdate:modelValue\": _cache[9] || (_cache[9] = ($event: any) => ((_ctx.patient.landmark) = $event)),\n                      asyncOptions: _ctx.getLandmarks,\n                      allowCustom: \"\"\n                    }, null, 8, [\"modelValue\", \"asyncOptions\"])\n                  ]),\n                  _: 1\n                })\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_footer, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_button, {\n              color: \"primary\",\n              onClick: _cache[10] || (_cache[10] = ($event: any) => (_ctx.modal.hide())),\n              slot: \"end\"\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\"Close\")\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_ion_button, {\n              class: \"ion-margin-end\",\n              color: \"success\",\n              onClick: _ctx.onFinish,\n              slot: \"end\"\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\"Save\")\n              ]),\n              _: 1\n            }, 8, [\"onClick\"])\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    })\n  ], 64))\n}","\nimport { defineComponent, PropType, reactive, ref } from \"vue\";\nimport { IonGrid, IonRow, IonCol } from \"@ionic/vue\";\nimport Validation from \"@/components/Forms/validations/StandardValidations\"\nimport { Option } from \"@/components/Forms/FieldInterface\";\nimport { LocationService } from \"@/services/location_service\";\nimport { isEmpty } from \"lodash\";\nimport { PatientRegistrationService } from \"@/services/patient_registration_service\";\nimport { DTForm } from \"@/apps/EMC/interfaces/dt_form_field\";\nimport TextInput from \"../inputs/TextInput.vue\";\nimport DateInput from \"../inputs/DateInput.vue\";\nimport SelectInput from \"../inputs/SelectInput.vue\";\nimport { getLandmarks, getVillagesByName } from \"@/utils/HisFormHelpers/LocationFieldOptions\";\nimport { submitForm } from \"@/apps/EMC/utils/form\";\nimport { Patientservice } from \"@/services/patient_service\";\nimport EventBus from \"@/utils/EventBus\";\nimport { EmcEvents } from \"../../interfaces/emc_event\";\nimport { genderOptions } from \"../../utils/DTFormElements\";\nimport { modal } from \"@/utils/modal\";\nimport dayjs from \"dayjs\";\nimport { STANDARD_DATE_FORMAT } from \"@/utils/Date\";\n\nexport default defineComponent({\n  components: {\n    IonGrid,\n    IonRow,\n    IonCol,\n    TextInput,\n    DateInput,\n    SelectInput,\n  },\n  props: {\n    patientService: {\n      type: Object as PropType<Patientservice>,\n      required: true,\n    }\n  },\n  setup(props) {\n    const today = dayjs().format(STANDARD_DATE_FORMAT)\n    const isBirthdateEstimated = ref(false);\n    const patient = reactive<DTForm>({\n      givenName: {\n        label: \"First Name\",\n        value: props.patientService.getGivenName(),\n        placeholder: \"First Name\",\n        required: true,\n        error: \"\",\n      },\n      familyName: {\n        label: \"last Name\",\n        value: props.patientService.getFamilyName(),\n        placeholder: \"Last Name\",\n        required: true\n      },\n      middleName: {\n        label: \"middle Name\",\n        value: props.patientService.getMiddleName(),\n        placeholder: \"middle Name\",\n      },\n      gender: {\n        value: props.patientService.getGender(),\n        required: true,\n        label: \"Gender\",\n        placeholder: 'select gender'\n      },\n      birthdate: {\n        value:props.patientService.getBirthdate(),\n        label: 'Date of Birth',\n        placeholder: 'Date of Birth',\n        required: true,\n      },\n      cellPhoneNumber: {\n        value: props.patientService.getPhoneNumber(),\n        required: true,\n        label: \"Cellphone Number\",\n        placeholder: \"cellphone number e.g. 0991234567\",\n        validation: async (phone: Option) => !(phone.value === 'Unknown' || phone.value === 'N/A') && Validation.isMWPhoneNumber(phone)\n      },\n      homeVillage: {\n        value: props.patientService.getCurrentVillage(),\n        label: \"Home Village\",\n        placeholder: \"Home Village\",\n        required: true,\n      },\n      landmark: {\n        value: props.patientService.getClosestLandmark(),\n        label: \"Landmark\",\n        placeholder: \"Closest Landmark or Plot Number\",\n        required: true,\n      }\n    })\n\n    const resolveAddress = async (village: Option) => {\n      const address = {\n        'current_district': \"N/A\",\n        'current_traditional_authority': \"N/A\",\n        'current_village': village.label \n      }\n\n      const TA = village.other?.traditional_authority_id \n        ? await LocationService.getTraditionalAuthorityById(village.other.traditional_authority_id)\n        : null\n      if(!isEmpty(TA)) {\n        address['current_traditional_authority'] = TA[0].name\n        const district = await LocationService.getDistrictByID(TA[0].district_id)\n        if(!isEmpty(district)) {\n          address['current_district'] = district[0].name\n        }\n      }\n      return address;\n    }\n\n    const onFinish = async () => submitForm(patient, async (formData) => {\n      const updatedPatient = {} as any;\n      if(formData.givenName !== props.patientService.getGivenName()) updatedPatient[\"given_name\"] = formData.givenName;\n      if(formData.familyName !== props.patientService.getFamilyName()) updatedPatient[\"family_name\"] = formData.familyName;\n      if(formData.middleName !== props.patientService.getMiddleName()) updatedPatient[\"middle_name\"] = formData.middleName;\n      if(formData.birthdate !== props.patientService.getBirthdate()) updatedPatient[\"birthdate\"] = formData.birthdate;\n      if(formData.gender.value !== props.patientService.getGender()) updatedPatient[\"gender\"] = formData.gender.value;\n      if(formData.cellPhoneNumber !== props.patientService.getPhoneNumber()) updatedPatient[\"cell_phone_number\"] = formData.cellPhoneNumber;\n      if(formData.landmark.label !== props.patientService.getClosestLandmark()) updatedPatient[\"landmark\"] = formData.landmark.label;\n      if(formData.homeVillage !== props.patientService.getCurrentVillage()) {\n        Object.assign(updatedPatient, {\n          ...updatedPatient,\n          ...(await resolveAddress(formData.homeVillage))\n        })\n      }\n      if(!isEmpty(updatedPatient)) {\n        const person = new PatientRegistrationService();\n        person.setPersonID(props.patientService.getID());\n        await person.updatePerson(updatedPatient);\n      }\n      await modal.hide()\n      EventBus.emit(EmcEvents.RELOAD_PATIENT_DATA);\n    })\n \n    return {\n      today,\n      patient,\n      getLandmarks,\n      genderOptions,\n      isBirthdateEstimated,\n      modal,\n      onFinish, \n      getVillagesByName\n    };\n  },\n});\n","import { render } from \"./PatientDemographics.vue?vue&type=template&id=21a88e30&ts=true\"\nimport script from \"./PatientDemographics.vue?vue&type=script&lang=ts\"\nexport * from \"./PatientDemographics.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ion_title = _resolveComponent(\"ion-title\")!\n  const _component_ion_icon = _resolveComponent(\"ion-icon\")!\n  const _component_ion_button = _resolveComponent(\"ion-button\")!\n  const _component_ion_buttons = _resolveComponent(\"ion-buttons\")!\n  const _component_ion_toolbar = _resolveComponent(\"ion-toolbar\")!\n  const _component_ion_header = _resolveComponent(\"ion-header\")!\n  const _component_TextInput = _resolveComponent(\"TextInput\")!\n  const _component_ion_col = _resolveComponent(\"ion-col\")!\n  const _component_ion_row = _resolveComponent(\"ion-row\")!\n  const _component_ion_grid = _resolveComponent(\"ion-grid\")!\n  const _component_ion_content = _resolveComponent(\"ion-content\")!\n  const _component_ion_footer = _resolveComponent(\"ion-footer\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(_component_ion_header, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_title, null, {\n              default: _withCtx(() => [\n                _createTextVNode(\"Add Guadian Demographics\")\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_ion_buttons, { slot: \"end\" }, {\n              default: _withCtx(() => [\n                _createVNode(_component_ion_button, { onClick: _ctx.closeModal }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_ion_icon, {\n                      slot: \"icon-only\",\n                      name: \"close\"\n                    })\n                  ]),\n                  _: 1\n                }, 8, [\"onClick\"])\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_content, { class: \"ion-padding\" }, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_grid, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_row, null, {\n              default: _withCtx(() => [\n                _createVNode(_component_ion_col, {\n                  size: \"12\",\n                  class: \"ion-margin-top ion-margin-bottom\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_TextInput, {\n                      modelValue: _ctx.guardian.givenName,\n                      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((_ctx.guardian.givenName) = $event))\n                    }, null, 8, [\"modelValue\"])\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ion_col, {\n                  size: \"12\",\n                  class: \"ion-margin-top ion-margin-bottom\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_TextInput, {\n                      modelValue: _ctx.guardian.familyName,\n                      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((_ctx.guardian.familyName) = $event))\n                    }, null, 8, [\"modelValue\"])\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ion_col, {\n                  size: \"12\",\n                  class: \"ion-margin-top ion-margin-bottom\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_TextInput, {\n                      modelValue: _ctx.guardian.cellPhoneNumber,\n                      \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((_ctx.guardian.cellPhoneNumber) = $event)),\n                      allowUnknown: \"\"\n                    }, null, 8, [\"modelValue\"])\n                  ]),\n                  _: 1\n                })\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_footer, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_button, {\n              color: \"primary\",\n              onClick: _cache[3] || (_cache[3] = ($event: any) => (_ctx.modal.hide())),\n              slot: \"end\"\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\"Close\")\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_ion_button, {\n              class: \"ion-margin-end\",\n              color: \"success\",\n              onClick: _ctx.onFinish,\n              slot: \"end\"\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\"Save\")\n              ]),\n              _: 1\n            }, 8, [\"onClick\"])\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    })\n  ], 64))\n}","\nimport { defineComponent, reactive } from \"vue\";\nimport { IonGrid, IonRow, IonCol } from \"@ionic/vue\";\nimport Validation from \"@/components/Forms/validations/StandardValidations\"\nimport { Option } from \"@/components/Forms/FieldInterface\";\nimport { PatientRegistrationService } from \"@/services/patient_registration_service\";\nimport { DTForm } from \"@/apps/EMC/interfaces/dt_form_field\";\nimport TextInput from \"../inputs/TextInput.vue\";\nimport { submitForm } from \"@/apps/EMC/utils/form\";\nimport { RelationsService } from \"@/services/relations_service\";\nimport EventBus from \"@/utils/EventBus\";\nimport { EmcEvents } from \"../../interfaces/emc_event\";\nimport { modal } from \"@/utils/modal\";\n\nexport default defineComponent({\n  components: {\n    IonGrid,\n    IonRow,\n    IonCol,\n    TextInput,\n  },\n  props: {\n    patientId: {\n      type: Number,\n      required: true,\n    }\n  },\n  setup(props) {    \n    const guardian = reactive<DTForm>({\n      givenName: {\n        label: \"First Name\",\n        value: \"\",\n        placeholder: \"First Name\",\n        required: true,\n      },\n      familyName: {\n        label: \"Last Name\",\n        value: \"\",\n        placeholder: \"Last Name\",\n        required: true,\n      },\n      cellPhoneNumber: {\n        value: '',\n        required: true,\n        label: \"Cellphone Number\",\n        validation: async (phone: Option) => {\n          return phone.value !== 'Unknown' && Validation.isMWPhoneNumber(phone)\n        }\n      },\n    })\n\n    const onFinish = async () => submitForm(guardian, async (formData) => {\n      const person: Record<string, any> = {\n        'home_district': \"N/A\",\n        'home_traditional_authority': \"N/A\",\n        'home_village': \"N/A\",\n        'current_district': \"N/A\",\n        'current_traditional_authority': \"N/A\",\n        'current_village': \"N/A\",\n        'middle_name': \"\",\n        'gender': \"N/A\",\n        'birthdate': \"N/A\",\n        'birthdate_estimated': \"N/A\",\n        'landmark': \"N/A\",\n        'relationship': \"N/A\",\n        'patient_type': \"\",\n        'isPatient': false,\n        'patient_id': props.patientId,\n        ...formData\n      };\n      const registrationService = new PatientRegistrationService()\n      await registrationService.registerGuardian(person)\n      const guardianId = registrationService.getPersonID()      \n      await RelationsService.createRelation(props.patientId, guardianId, 13)\n      await modal.hide()\n      EventBus.emit(EmcEvents.RELOAD_GUARDIAN_DATA)\n    }, \n    { \n      underscoreKeys: true \n    })\n \n    return {\n      guardian,\n      modal,\n      onFinish,\n    };\n  },\n});\n","import { render } from \"./GuardianDemographics.vue?vue&type=template&id=77baa926&ts=true\"\nimport script from \"./GuardianDemographics.vue?vue&type=script&lang=ts\"\nexport * from \"./GuardianDemographics.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ion_title = _resolveComponent(\"ion-title\")!\n  const _component_ion_icon = _resolveComponent(\"ion-icon\")!\n  const _component_ion_button = _resolveComponent(\"ion-button\")!\n  const _component_ion_buttons = _resolveComponent(\"ion-buttons\")!\n  const _component_ion_toolbar = _resolveComponent(\"ion-toolbar\")!\n  const _component_ion_header = _resolveComponent(\"ion-header\")!\n  const _component_text_input = _resolveComponent(\"text-input\")!\n  const _component_ion_col = _resolveComponent(\"ion-col\")!\n  const _component_ion_row = _resolveComponent(\"ion-row\")!\n  const _component_ion_grid = _resolveComponent(\"ion-grid\")!\n  const _component_ion_content = _resolveComponent(\"ion-content\")!\n  const _component_ion_footer = _resolveComponent(\"ion-footer\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(_component_ion_header, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_title, null, {\n              default: _withCtx(() => [\n                _createTextVNode(\"ARV NUMBER\")\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_ion_buttons, { slot: \"end\" }, {\n              default: _withCtx(() => [\n                _createVNode(_component_ion_button, {\n                  onClick: _cache[0] || (_cache[0] = ($event: any) => (_ctx.modal.hide()))\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_ion_icon, {\n                      slot: \"icon-only\",\n                      name: \"close\"\n                    })\n                  ]),\n                  _: 1\n                })\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_content, { class: \"ion-padding\" }, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_grid, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_row, null, {\n              default: _withCtx(() => [\n                _createVNode(_component_ion_col, null, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_text_input, {\n                      modelValue: _ctx.form.arvNumber,\n                      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((_ctx.form.arvNumber) = $event)),\n                      form: _ctx.form,\n                      prefix: `${_ctx.sitePrefix}-ARV-`\n                    }, null, 8, [\"modelValue\", \"form\", \"prefix\"])\n                  ]),\n                  _: 1\n                })\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_footer, { class: \"ion-padding-horizontal\" }, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_button, {\n              color: \"primary\",\n              onClick: _cache[2] || (_cache[2] = ($event: any) => (_ctx.modal.hide())),\n              slot: \"end\"\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\"Close\")\n              ]),\n              _: 1\n            }),\n            (_ctx.hasValidARVNumber)\n              ? (_openBlock(), _createBlock(_component_ion_button, {\n                  key: 0,\n                  color: \"danger\",\n                  onClick: _ctx.voidARV,\n                  slot: \"start\"\n                }, {\n                  default: _withCtx(() => [\n                    _createTextVNode(\"Void ARV Number\")\n                  ]),\n                  _: 1\n                }, 8, [\"onClick\"]))\n              : _createCommentVNode(\"\", true),\n            _createVNode(_component_ion_button, {\n              color: \"success\",\n              onClick: _ctx.onFinish,\n              slot: \"end\"\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\"Save\")\n              ]),\n              _: 1\n            }, 8, [\"onClick\"])\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    })\n  ], 64))\n}","\nimport { computed, defineComponent, onMounted, PropType, reactive, ref } from \"vue\";\nimport { IonGrid, IonRow, IonCol } from \"@ionic/vue\";\nimport { Option } from \"@/components/Forms/FieldInterface\";\nimport { DTForm } from \"@/apps/EMC/interfaces/dt_form_field\";\nimport TextInput from \"../inputs/TextInput.vue\";\nimport { submitForm } from \"@/apps/EMC/utils/form\";\nimport { loader } from \"@/utils/loader\";\nimport EventBus from \"@/utils/EventBus\";\nimport { EmcEvents } from \"../../interfaces/emc_event\";\nimport { Patientservice } from \"@/services/patient_service\";\nimport { isEmpty } from \"lodash\";\nimport { ProgramService } from \"@/services/program_service\";\nimport GLOBAL_PROP from \"@/apps/GLOBAL_APP/global_prop\";\nimport { modal } from \"@/utils/modal\";\nimport { alertConfirmation } from \"@/utils/Alerts\";\nimport StandardValidations from \"@/components/Forms/validations/StandardValidations\";\n\nexport default defineComponent({\n  components: {\n    IonGrid,\n    IonRow,\n    IonCol,\n    TextInput,\n  },\n  props: {\n    patient: {\n      type: Object as PropType<Patientservice>,\n      required: true,\n    }\n  },\n  setup(props) { \n    const sitePrefix = ref(\"\");\n    const arvNumber = computed(() => props.patient.getArvNumber());\n    const hasValidARVNumber = computed(() => {\n      return !isEmpty(arvNumber.value) && arvNumber.value !== \"Unknown\";\n    });\n\n    const form = reactive<DTForm>({\n      arvNumber: {\n        value: hasValidARVNumber.value ? arvNumber.value.split(\"-\")[2] : \"\",\n        label: `${hasValidARVNumber.value ? \"Edit\" : \"Add New\"} ARV Number`,\n        placeholder: \"Enter ARV Number\",\n        required: true,\n        validation: async (arv: Option) => {\n          const isNumberErr = StandardValidations.isNumber(arv, \"POSITIVE_INTEGERS\")\n          if(isNumberErr !== null) return isNumberErr\n          if(arv.value === arvNumber.value.split(\"-\")[2]) return null\n          const patients = await Patientservice.findByOtherID(4, `${sitePrefix.value}-ARV-${arv.value}`);\n          return isEmpty(patients) ?  null : ['ARV Number already exists'];\n        },\n      },\n    })\n\n    const onFinish = async () => submitForm(form, async (formData) => {\n      if(formData.arvNumber !== arvNumber.value.split(\"-\")[2]){\n        if(hasValidARVNumber.value) {\n          await props.patient.updateARVNumber(`${sitePrefix.value}-ARV-${formData.arvNumber}`);\n        } else {\n          await props.patient.createArvNumber(`${sitePrefix.value}-ARV-${formData.arvNumber}`);\n        }\n        await modal.hide();\n        EventBus.emit(EmcEvents.RELOAD_PATIENT_DATA)\n      }\n    }) \n\n    const voidARV = async () => {\n      const confirm = await alertConfirmation(`Are you sure you want to void this ARV Number ${arvNumber.value}?`);\n      if(!confirm) return;\n      await loader.show(\"Voiding ARV Number...\");\n      try {\n        await ProgramService.voidARVNumber(arvNumber.value);\n        await loader.hide();\n        await modal.hide();\n        EventBus.emit(EmcEvents.RELOAD_PATIENT_DATA)\n      } catch (error) {\n        await loader.hide();\n        console.log(error)\n      } \n    }\n\n    onMounted(async () => {\n      sitePrefix.value = await GLOBAL_PROP.sitePrefix();\n    }) \n \n    return {\n      form,\n      modal,\n      sitePrefix,\n      arvNumber,\n      hasValidARVNumber,\n      onFinish,\n      voidARV,\n    };\n  },\n});\n","import { render } from \"./ArvNumber.vue?vue&type=template&id=84fe0026&ts=true\"\nimport script from \"./ArvNumber.vue?vue&type=script&lang=ts\"\nexport * from \"./ArvNumber.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","\nimport { computed, defineComponent, onMounted, ref } from \"vue\";\nimport HisDate from \"@/utils/Date\";\nimport { Patient } from \"@/interfaces/patient\";\nimport { RelationshipService } from \"@/services/relationship_service\";\nimport Layout from \"../Components/Layout.vue\";\nimport VisitsSummary from \"../Components/tables/VisitsSummary.vue\";\nimport InformationHeader from \"@/apps/EMC/Components/InformationHeader.vue\";\nimport { PatientObservationService } from \"@/services/patient_observation_service\";\nimport PatientDemographics from \"../Components/modals/PatientDemographics.vue\";\nimport GuardianDemographicsVue from \"../Components/modals/GuardianDemographics.vue\";\nimport ARVNumberVue from \"../Components/modals/ArvNumber.vue\";\nimport { useRoute } from \"vue-router\";\nimport EventBus from \"@/utils/EventBus\";\nimport { EmcEvents } from \"../interfaces/emc_event\";\nimport { modal } from \"@/utils/modal\";\nimport { isEmpty } from \"lodash\";\n\nexport default defineComponent({\n  components: {\n    Layout,\n    VisitsSummary,\n    InformationHeader,\n  },\n  setup () {\n    const route = useRoute();\n    const patientId = parseInt(route.params.patientId.toString()) || 0;\n    const patient = ref<PatientObservationService>();\n    const artStartDate = ref<string>(\"\");\n    const guardians = ref<string>(\"\");\n    const isReady = computed(() => !isEmpty(patient.value))\n\n    const setPatient = async () => {\n      if (patientId) {\n        const patientData: Patient = await PatientObservationService.findByID(patientId);\n        if(patientData) {\n          patient.value = new PatientObservationService(patientData);\n        }\n      }\n    };\n\n    const setPatientGuardian = async () => {\n      const relationship = await RelationshipService.getGuardianDetails(patientId);\n      guardians.value = relationship.map((r: any) => ` ${r.name} (${r.relationshipType})`).join(\", \");\n    }\n\n    const updateDemographics = async (attribute: string) => {\n      await modal.show(PatientDemographics, {\n        patientService: patient.value,\n        attribute,\n      });\n    }\n\n    const addGuardian = async () => {\n      await modal.show(GuardianDemographicsVue, {\n        patientId,\n      });\n    }\n\n    const updateARVNumber = async () => {\n      await modal.show(ARVNumberVue, {\n        patient: patient.value,\n      });\n    }\n\n    EventBus.on(EmcEvents.RELOAD_PATIENT_DATA,async () => {\n      await setPatient();\n    });\n    EventBus.on(EmcEvents.RELOAD_GUARDIAN_DATA, async () => {\n      await setPatientGuardian();\n    });\n\n    onMounted(async () => {\n      await setPatient();\n      const date = await patient.value?.getARTStartDate();\n      artStartDate.value = date ? HisDate.toStandardHisDisplayFormat(date) : \"N/A\";\n      await setPatientGuardian();\n    });\n\n    return {\n      patient,\n      artStartDate,\n      guardians,\n      isReady,\n      updateDemographics,\n      addGuardian,\n      updateARVNumber,\n    };\n  },\n});\n","import { render } from \"./Mastercard.vue?vue&type=template&id=61035d49&ts=true\"\nimport script from \"./Mastercard.vue?vue&type=script&lang=ts\"\nexport * from \"./Mastercard.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","export * from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./PatientVisit.vue?vue&type=style&index=0&id=78e0e234&scoped=true&lang=css\"","import { AppEncounterService } from \"@/services/app_encounter_service\";\nimport { isArray } from \"lodash\";\nimport { Option } from '@/components/Forms/FieldInterface';\nexport class VitalsService extends AppEncounterService{\n  constructor(patientID: number, providerID: number) {\n    super(patientID, 6, providerID);\n  }\n  isNotEmptyandNumber(vital: Option) {\n    return `${vital.value}`.match(/^-?\\d+\\.?\\d*$/) ? null : [`Invalid entry for ${vital.label}`]\n  }\n  isNotEmptyandFloat(vital: Option) {\n    return `${vital.value}`.match(/^\\d{1,3}\\.\\d{1,5}$/) \n      ? null \n      : [`Invalid entry for ${vital.label}. Don't forget to add a decimal. e.g. 56.2 ${vital.other?.modifier || ''}`]\n  }\n  checkMinMax(val: Option, min: number, max: number) {\n    const p = [];\n    if (parseFloat(`${val.value}`) < min) {\n      p.push([`${val.label} entered is less than minimum ${min} ${val?.other?.modifier || ''}`])\n    }\n    if (parseFloat(`${val.value}`) > max) {\n      p.push([`${val.label} entered is greater than maximum ${max} ${val?.other?.modifier || ''}`])\n    }\n    return p.length > 0 ? p : null;\n  }\n  validateAll(vitals: Option[]) {\n    const p: any = [];\n    vitals.map((vital: any) => {\n      const j = this.validator(vital);\n      return isArray(j) ? p.push(j) : null\n    })\n    return p.length > 0 ? p : null;\n  }\n\n  mergeErrors(errors: any[]) {\n    const holder: any = [];\n    errors.forEach(element => {\n      if (isArray(element)) {\n        holder.push(element)\n      }\n    });\n    return holder.length > 0 ? holder : null\n  }\n  isValidBPReading(vital: any) {\n    const p = [];\n    const isValidBP =  `${vital.value}`.match(/^\\d{1,3}\\/\\d{1,3}$/g) ? null : ['Invalid BP reading']\n    p.push(isValidBP);\n    if(isValidBP == null) {\n      const value = `${vital.value}`.split('/');\n      \n      const bpSystolic = {\n        label: 'Systolic',\n        value: value[0]\n      };\n      const bpDiastolic = {\n        label: 'Diastolic',\n        value: value[1]\n      };\n      p.push(this.checkMinMax(bpDiastolic, 30, 200))\n      p.push(this.checkMinMax(bpSystolic, 40, 250))\n    }\n    return this.mergeErrors(p)\n  }\n  validator(vital: Option) {\n    const values = [\n      {\n        name: \"Weight\",\n        validator: (val: Option) => {\n          const emptyErrors = this.isNotEmptyandFloat(val);\n          const minErrors = this.checkMinMax(val, 2.0, 250.0);\n          return this.mergeErrors([emptyErrors, minErrors]); \n        },\n      },\n      {\n        name: \"Height\",\n        validator: (val: Option) => {\n          const errors = []\n          errors.push(this.isNotEmptyandNumber(val))\n          errors.push(this.checkMinMax(val, 40, 220))\n          return this.mergeErrors(errors); \n        },\n      }, {\n        name: \"BP\",\n        validator: (val: any) => {\n          return this.isValidBPReading(val)\n        },\n      }, {\n        name: \"Temp\",\n        validator: (val: any) => {\n          const emptyErrors = this.isNotEmptyandNumber(val);\n          const minErrors = this.checkMinMax(val, 30, 42);\n          return this.mergeErrors([emptyErrors, minErrors]); \n        },\n      }, {\n        name: \"SP02\",\n        validator: (val: any) => {\n          const minErrors = this.checkMinMax(val, 40, 100);\n          return this.mergeErrors([minErrors]); \n        },\n      }, {\n        name: \"Pulse\",\n        validator: (val: any) => {\n          const minErrors = this.checkMinMax(val, 50, 120);\n          return this.mergeErrors([minErrors]); \n        },\n      }\n    ]\n    const v = values.filter(element => {\n      return element.name === vital.label;\n    });\n    if (v.length > 0) {\n      return v[0].validator(vital);\n    }\n    return null\n  }\n}","export enum EmcEvents {\n  RELOAD_PATIENT_DATA = 'reload_patient_data',\n  RELOAD_PATIENT_VISIT_DATA = 'reload_patient_visit_data',\n  RELOAD_GUARDIAN_DATA = 'reload_guardian_data',\n  RELOAD_LATEST_VL_RESULT = 'reload_latest_vl_result',\n  RELOAD_STAGING_INFORMATION = 'reload_staging_info',\n  ON_CLEAR = \"on_clear\",\n  ON_INITIAL_VISIT_DATE = \"on_initital_visit_date\"\n}","import { Person } from \"@/interfaces/person\"\nimport { Service } from \"./service\"\n\nexport interface NewPerson {\n    person_id?: number;\n    given_name: string;\n    family_name: string;\n    gender: string;\n    birthdate: string;\n    birthdate_estimated: boolean;\n    home_district: string;\n    home_traditional_authority: string;\n    home_village: string;\n    current_district: string;\n    current_traditional_authority: string;\n    current_village: string;\n    landmark: string;\n    cell_phone_number: string;\n    occupation: string;\n    facility_name: string;\n    patient_type?: string;\n    relationship?: string;\n}\n\nexport class PersonService extends Service{\n    person: Person | NewPerson\n    constructor(person: NewPerson | Person){\n        super()\n        this.person = person\n    }\n\n    create() { return Service.postJson('/people', this.person) }\n\n    update(id: number) { return Service.putJson(`people/${id}`, {\n        ...this.person, 'program_id': Service.getProgramID()\n    })}\n\n    static searchFamilyName(name: string) {\n        return super.getJson('/search/family_name', {'search_string': name})\n    }\n\n    static searchGivenName(name: string) {\n        return super.getJson('/search/given_name', {'search_string': name})\n    }\n\n    static async getPersonFullName(personId: string | number) {\n        const names = await super.getJson(`/people/${personId}/names`)\n        return names && names.length ? names[0].given_name + ' ' + names[0].family_name : ''\n    }\n}\n","import { modalController } from \"@ionic/vue\";\n\nexport const modal = {\n  async show(component: any, componentProps?: Record<string, any>, cssClass = 'custom-modal', backdropDismiss = true) {\n    const m = await modalController.create({\n      component,\n      cssClass,\n      backdropDismiss,\n      componentProps,\n    });\n    m.present();\n    const { data } = await m.onWillDismiss();\n    if(data) return data;\n  },\n  async hide(data?: Record<string, any>) {\n    await modalController.dismiss(data);\n  }\n}","import { DrugInterface } from \"@/interfaces/Drug\";\nimport { DrugOrderService } from \"@/services/drug_order_service\";\nimport { Observation } from \"@/interfaces/observation\";\nimport HisDate from \"@/utils/Date\"\nimport { RegimenService } from \"@/services/regimen_service\";\nimport { isEmpty } from \"lodash\"\nimport { AppEncounterService } from \"@/services/app_encounter_service\"\n\nexport enum AdverseEffectsCategories {\n    CONTRAINDICATION = \"contraindication\",\n    SIDE_EFFECT = \"side_effect\"\n}\n\nexport class PrescriptionService extends AppEncounterService {\n    nextVisitInterval: number;\n    fastTrack: boolean;\n    regimenExtras: Array<Record<string, any>>;\n    hangingPills: Array<Record<string, any>>;\n    fastTrackMedications: Array<Record<string, any>>;\n    medicationOrders: Array<number>;\n    treatmentState: string;\n    contraindications: Record<string, any>;\n    sideEffects: Record<string, any>;\n    tptPrescriptionCount: number;\n    lastSideEffectDate: string;\n\n    constructor(patientID: number, providerID: number) {\n        super(patientID, 25, providerID) //TODO: Use encounter type reference name\n        this.nextVisitInterval = 0\n        this.fastTrack = false\n        this.regimenExtras = []\n        this.fastTrackMedications = []\n        this.hangingPills = []\n        this.medicationOrders = []\n        this.treatmentState = ''\n        this.contraindications = {}\n        this.sideEffects = {}\n        this.tptPrescriptionCount = 0\n        this.lastSideEffectDate = ''\n    }\n\n    setNextVisitInterval(nextVisitInterval: number) {\n        this.nextVisitInterval = nextVisitInterval\n    }\n\n    getHangingPills() {\n        return this.hangingPills\n    }\n\n    getMedicationOrders() {\n        return this.medicationOrders.map((i: number) => {\n            return AppEncounterService.getCachedConceptName(i)\n        })\n    }\n\n    getTptPrescriptionCount() {\n        return this.tptPrescriptionCount\n    }\n\n    getLastSideEffectDate() {\n        return this.lastSideEffectDate\n    }\n\n    getContraindications() { return this.contraindications }\n\n    getSideEffects() { return this.sideEffects }\n\n    getRegimenExtras() { return this.regimenExtras }\n\n    getPatientRegimens() { return RegimenService.getRegimens(this.patientID) }\n\n    getARVs() {\n        return RegimenService.getJson('arv_drugs')\n    }\n\n    getCustomIngridients() { return RegimenService.getCustomIngridients() }\n\n    getFastTrackMedications() { return this.fastTrackMedications }\n\n    getTreatmentState() { return this.treatmentState }\n\n    isFastTrack() { return this.fastTrack }\n\n    medicationOrdersAvailable() { return !isEmpty(this.medicationOrders) }\n\n    shouldPrescribeArvs() { \n        const arvs = AppEncounterService.getCachedConceptID(\"Antiretroviral drugs\")\n        return this.medicationOrders.includes(arvs)\n    }\n\n    shouldPrescribeExtras() {\n        const extras = AppEncounterService.getConceptsByCategory('art_extra_medication_order')\n        const extrasAvailable = extras.map((i: any) => this.medicationOrders.includes(i.concept_id))\n        return extrasAvailable.some(Boolean)\n    }\n\n    getRegimenStarterpack(regimenCode: number, patientWeight: number) {\n        const params = { weight: patientWeight, regimen: regimenCode }\n\n        return AppEncounterService.getJson(\n            `programs/${AppEncounterService.getProgramID()}/regimen_starter_packs`,\n            params\n        )\n    }\n\n    async getLvpDrugsByType(type: string, regimen: number) {\n        return AppEncounterService.getJson(\n            `programs/${AppEncounterService.getProgramID()}/regimens/${regimen}`,\n            {\n                'patient_id': this.patientID,\n                'lpv_drug_type': type\n            }\n        )\n    }\n\n    async loadContraindications() {\n        const contraindication = await AppEncounterService.getConceptID('Contraindications')\n        const obs = await AppEncounterService.getObs({\n            'concept_id': contraindication, 'person_id': this.patientID \n        })\n\n        obs.forEach((o: any) => {\n            const date = HisDate.toStandardHisFormat(o.obs_datetime)\n\n            if (!this.contraindications[date]) this.contraindications[date] = []\n\n            const concept = AppEncounterService.getCachedConceptName(o.value_coded)\n\n            this.contraindications[date].push(concept)\n        })\n    }\n\n    async loadDrugInduced() {\n        const drugInduced = await AppEncounterService.getConceptID('Drug induced')\n        const obs = await AppEncounterService.getObs({\n            'concept_id': drugInduced, 'person_id': this.patientID \n        })\n\n        if (!obs) return\n\n        obs.forEach((o: any) => {\n            const date = HisDate.toStandardHisFormat(o.obs_datetime)\n\n            if (!this.lastSideEffectDate) this.lastSideEffectDate = date\n\n            if (!o.value_drug || !o.value_coded) return\n\n            if (!this.sideEffects[date]) this.sideEffects[date] = {}\n\n            if (!this.sideEffects[date][o.value_drug]) this.sideEffects[date][o.value_drug] = []\n\n            const concept = AppEncounterService.getCachedConceptName(o.value_coded)\n\n            this.sideEffects[date][o.value_drug].push(concept)\n        })\n    }\n\n    async loadTptPrescriptionCount() {\n        const res = await AppEncounterService.getJson(\n            `tpt_prescription_count`, {\n                'patient_id': this.patientID,\n                'date': this.date\n            }\n        )\n\n        if (res) {\n            const count = res.count + 1\n            this.tptPrescriptionCount = count > 3 ? 3 : count\n        } \n    }\n\n    async loadFastTrackStatus() {\n        const isFastTrack = await AppEncounterService.getFirstValueCoded(this.patientID, 'Fast track')\n        const yes = await AppEncounterService.getConceptID('yes')\n\n        if (isFastTrack) this.fastTrack = isFastTrack === yes\n    }\n    \n    async loadRegimenExtras(date=this.date) {\n        const meds = await RegimenService.getJson(\n            `programs/${RegimenService.getProgramID()}/patients/${this.patientID}/dosages`,\n            {date}\n        )\n        if (meds) this.regimenExtras = Object.values(meds)\n    }\n\n    async loadMedicationOrders() {\n        const medicationOrders = await AppEncounterService.getConceptID(\"Medication orders\")\n        const orders = await AppEncounterService.getObs({\n            'concept_id': medicationOrders,\n            'date': this.date,\n            'person_id': this.patientID,\n            'page_size': 5\n        })\n        this.medicationOrders = orders.map((i: Observation) => i.value_coded)\n    }\n\n    async loadHangingPills() {\n        const pills = await AppEncounterService.getAll(this.patientID, 'Pills brought')\n        if (pills) {\n            this.hangingPills = pills.filter((o: any) => o.value_numeric >= 1 && o.order)\n                                    .map((o: any) => o.order.drug_order.drug_inventory_id)\n        }\n    }\n\n    async loadFastTrackMedications() {\n        const drugs = await DrugOrderService.getLastDrugsReceived(this.patientID)\n        const withDosages = drugs.map(async(data: any) => {\n            const { drug } = data\n            const dosage = await DrugOrderService.getDrugDosages(this.patientID, drug.drug_id)\n            return {\n                'drug_id': drug.drug_id,\n                'drug_name': drug.name,\n                'units': drug.units,\n                'am': dosage.am,\n                'noon': dosage.noon,\n                'pm': dosage.pm,\n                'frequency': data.frequency\n            }\n        })\n        this.fastTrackMedications = await Promise.all(withDosages)\n    }\n\n    async loadTreatmentState() {\n        const params = { date: this.date }\n\n        const req = await AppEncounterService.getJson(\n            `programs/${AppEncounterService.getProgramID()}/patients/${this.patientID}/status`,\n            params\n        )\n\n        if (req) this.treatmentState = req['status']\n    }\n\n    findAndGroupDrugSideEffects(drugs: Array<number>) {\n        const allSideEffects: any = {}\n\n        for (const date in this.sideEffects) {\n            const drugInduced = this.sideEffects[date]\n\n            for(const drug in drugInduced) {\n                if (!drugs.includes(parseInt(drug))) continue\n\n                if (!allSideEffects[date]) allSideEffects[date] = []\n\n                allSideEffects[date] = [\n                    ...allSideEffects[date], ...drugInduced[drug]\n                ]\n            }\n        }\n        return allSideEffects\n    }\n\n    calculatePillsPerDay(am: number, noon: number, pm: number) {\n        return parseFloat(am.toString()) + noon + pm\n    }\n\n    estimatePackSize(pillsPerDay: number, packSize=0) {\n        const packs = (pillsPerDay * this.nextVisitInterval) / packSize\n        \n        let roundedPacks = Math.round(packs)\n\n        if (roundedPacks <= 0) roundedPacks += 1\n\n        return roundedPacks\n    }\n\n    calculateDosage(morningTabs: number, eveningTabs: number): number {\n        let dose = 0\n        if (eveningTabs === 0) dose = morningTabs\n\n        if (morningTabs == 0) dose = eveningTabs\n\n        if (morningTabs > 0 && eveningTabs  > 0) {\n            dose = (morningTabs + eveningTabs) / 2\n        }\n        return dose\n    }\n    \n    calculateEquivalentDosage(morningTabs: number, eveningTabs: number): number {\n        return morningTabs + eveningTabs\n    }\n\n    calculateDateFromInterval() {\n        const dateObj = new Date(this.date)\n        dateObj.setDate(dateObj.getDate() + this.nextVisitInterval)\n        return HisDate.toStandardHisFormat(dateObj)\n    }\n\n    getDrugPackSize(drug: any) {\n        if (drug.pack_size) return drug.pack_size\n        try{\n            return drug.barcodes[0].tabs\n        }catch(e) {\n            return 30\n        }\n    }\n\n    getInstructions(drugName: string, morningTabs: number, eveningTabs: number, units: string): string {\n        return `${drugName} :- Morning: ${morningTabs} ${units}, Evening: ${eveningTabs} ${units}`\n    }\n\n    toOrderObj(id: number, name: string, units: string, am=0, pm=0, frequency=''): DrugInterface {\n        return {\n            'drug_inventory_id': id,\n            'equivalent_daily_dose': this.calculateEquivalentDosage(am, pm),\n            'start_date': this.date,\n            'auto_expire_date': this.calculateDateFromInterval(), \n            'units': units,\n            'instructions': this.getInstructions(name, am, pm, units),\n            'dose': this.calculateDosage(am, pm),\n            'frequency': frequency\n        }\n    }\n\n    async getReasonForRegimenSwitch() {\n        const reason = await AppEncounterService.getFirstValueText(this.patientID, 'Reason for ARV switch')\n        return reason ? reason : 'N/A'\n    }\n\n    async createDrugOrder(drugOrders: Array<DrugInterface>) {\n        return DrugOrderService.create({\n            'encounter_id': this.encounterID,\n            'drug_orders': drugOrders\n        })\n    }\n\n    async createHangingPillsObs(response: string) {\n        return this.saveValueTextObs('appointment type', response)\n    }\n\n    async createRegimenSwitchObs(reasonForSwitch: string): Promise<Observation> {\n        return this.saveValueTextObs('Reason for ARV switch', reasonForSwitch)\n    }\n}\n","export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./InformationHeader.vue?vue&type=style&index=0&id=556ed409&scoped=true&lang=css\""],"sourceRoot":""}