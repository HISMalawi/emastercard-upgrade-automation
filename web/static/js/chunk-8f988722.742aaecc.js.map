{"version":3,"sources":["webpack:///./src/apps/OPD/views/reports/clinic/ClinicCasesSeen.vue?1b02","webpack:///./src/apps/OPD/views/reports/clinic/ClinicCasesSeen.vue","webpack:///./src/apps/OPD/views/reports/clinic/ClinicCasesSeen.vue?c438","webpack:///./src/apps/OPD/services/opd_report_service.ts"],"names":["render","_ctx","_cache","$props","$setup","$data","$options","_component_report_template","_resolveComponent","_component_ion_page","_openBlock","_createBlock","default","_withCtx","_createVNode","title","rows","fields","columns","period","onReportConfiguration","init","_","defineComponent","components","ReportTemplate","IonPage","mixins","ReportMixin","data","reportService","table","thTxt","sortable","exportable","colspan","value","created","this","getDateDurationFields","methods","config","OpdReportService","setStartDate","start_date","setEndDate","end_date","getDateIntervalPeriod","buildRows","NCD_TYPES","map","type","td","style","textAlign","__exports__","LA_TYPES","one","two","three","four","MENTAL_HEALTH_DIAGNOSIS","Service","constructor","super","endDate","startDate","epiweek","date","getSessionDate","programID","getProgramID","getPatientsWithNIDs","getReport","getClinicRegistrations","getAttendance","getDrugsGivenWithoutPrescription","getDrugsGivenWithPrescription","getDiagnosis","url","getJson","getDiagnosisByAddress","getLaPrescriptions","getMalariaReport","printLaReport","printService","PrintoutService","params","Object","keys","forEach","v","i","printLbl","Url","parameterizeObjToString","HisDate","toStandardHisDisplayFormat","setEpiWeek","getReportPeriod","buildRequest","payload","minDuration","quarters","year","getCurrentYear","push","name","start","end"],"mappings":"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","file":"js/chunk-8f988722.742aaecc.js","sourcesContent":["import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_report_template = _resolveComponent(\"report-template\")!\n  const _component_ion_page = _resolveComponent(\"ion-page\")!\n\n  return (_openBlock(), _createBlock(_component_ion_page, null, {\n    default: _withCtx(() => [\n      _createVNode(_component_report_template, {\n        title: _ctx.title,\n        rows: _ctx.rows,\n        fields: _ctx.fields,\n        columns: _ctx.columns,\n        period: _ctx.period,\n        onReportConfiguration: _ctx.init\n      }, null, 8, [\"title\", \"rows\", \"fields\", \"columns\", \"period\", \"onReportConfiguration\"])\n    ]),\n    _: 1\n  }))\n}","\nimport { defineComponent } from 'vue'\nimport { NCD_TYPES, OpdReportService } from \"@/apps/OPD/services/opd_report_service\"\nimport ReportTemplate from \"@/views/reports/BaseTableReport.vue\"\nimport table, { ColumnInterface, RowInterface } from \"@/components/DataViews/tables/ReportDataTable\"\nimport ReportMixin from '@/apps/ART/views/reports/ReportMixin.vue'\nimport { IonPage } from \"@ionic/vue\";\n\nexport default defineComponent({\n  components: { ReportTemplate, IonPage },\n  mixins: [ReportMixin],\n  data: () => ({\n    title: 'Cases seen report',\n    rows: [] as RowInterface[][], \n    reportService: {} as any,\n    columns: [\n      [\n        table.thTxt('', {\n          sortable: false,\n          exportable: false \n        }),\n        table.thTxt('New cases', {\n          colspan: 2,\n          sortable: false,\n          exportable: false \n        }),\n        table.thTxt('All cases', {\n          colspan: 2,\n          sortable: false,\n          exportable: false \n        }),\n      ],\n      [\n        table.thTxt('NCD type'),\n        table.thTxt('Male', { value: 'Male (New Cases)' }),\n        table.thTxt('Female', { value: 'Female (New Cases)' }),\n        table.thTxt('Male', { value: 'Male (All Cases)' }),\n        table.thTxt('Female', { value: 'Female (All Cases)' }),\n      ]\n    ] as ColumnInterface[][],\n  }),\n  created(){\n    this.fields = this.getDateDurationFields()\n  },\n  methods: {\n    async init(_: any, config: any){\n      this.reportService = new OpdReportService()\n      this.reportService.setStartDate(config.start_date)\n      this.reportService.setEndDate(config.end_date)\n      this.period = this.reportService.getDateIntervalPeriod()\n      this.rows = this.buildRows()\n      \n    },\n    buildRows(): RowInterface[][] {\n      return NCD_TYPES.map(type => ([\n        table.td(type, {style: {textAlign: 'left'}}),\n        table.td(''),\n        table.td(''),\n        table.td(''),\n        table.td('')\n      ]))\n    },\n  },\n})\n","import { render } from \"./ClinicCasesSeen.vue?vue&type=template&id=612de8ad&ts=true\"\nimport script from \"./ClinicCasesSeen.vue?vue&type=script&lang=ts\"\nexport * from \"./ClinicCasesSeen.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { Service } from \"@/services/service\";\nimport HisDate from \"@/utils/Date\"\nimport { PrintoutService } from '@/services/printout_service';\nimport Url from \"@/utils/Url\";\n\nexport interface QuarterInterface {\n    name: string;\n    start: string;\n    end: string;\n}\n\nexport const AGE_GROUPS = [\n    '0-5 months', '6-11 months',\n    '12-23 months', '2-4 years', \n    '5-9 years', '10-14 years', \n    '15-17 years', '18-19 years', \n    '20-24 years', '25-29 years', \n    '30-34 years', '35-39 years', \n    '40-44 years', '45-49 years', \n    '50 plus years'\n]\n\nexport const OTHER_AGE_GROUPS = [\n    '<1 year', '1-4 years',\n    '5-9 years', '10-14 years',\n    '15-19 years', '20-24 years',\n    '25-29 years', '30-34 years',\n    '35-39 years', '40-44 years',\n    '45-49 years', '50 plus years'\n]\n\nexport const LA_TYPES: Record<string, string> = {\n    one: 'AL 1', \n    two: 'AL 2', \n    three: 'AL 3', \n    four: 'LA 4'\n}\n\nexport const NCD_TYPES = [\n    'Diabetes',\n    'Hypertension',\n    'Stroke',\n    'Suspected cancer',\n    'Confirmed cancer',\n    'Palliative cancer',\n    'Asthma',\n    'Depression',\n    'Acute psychosis',\n    'Chronic psychosis',\n    'Epilepsy'\n]\n\nexport const MENTAL_HEALTH_DIAGNOSIS = [\n    'Organic mental disorder (Chronic)',\n    'Organic mental disorder (acute)',\n    'Alcohol use mental disorder',\n    'Drug use mental disorder',\n    'Schizophrenia',\n    'Acute and transient psychotic disorder',\n    'Schizo-affective disorder',\n    'Mood-affective disorder (MANIC)',\n    'Mood-affective disorder (BIPOLAR)',\n    'Mood-affective disorder (DEPRESSION)',\n    'Anxiety disorder',\n    'Stress reaction adjustment disorder',\n    'Dissociative conversion disorder',\n    'Somatoform disorder',\n    'Puerperal mental disorder',\n    'Personality/Behaviour disorder',\n    'Mental retardation',\n    'Psychological mental disorder',\n    'Hyperkinetic conduct disorder',\n    'Epilepsy'\n]\n\nexport class OpdReportService extends Service {\n    programID: number;\n    startDate: string;\n    endDate: string;\n    date: string;\n    epiweek: string;\n    constructor() {\n        super()\n        this.endDate = ''\n        this.startDate = ''\n        this.epiweek = ''\n        this.date = Service.getSessionDate()\n        this.programID = Service.getProgramID()\n    }\n\n    getPatientsWithNIDs() {\n        return this.getReport('with_nids')\n    }\n\n    getClinicRegistrations(){\n        return this.getReport('registration');\n    }\n\n    getAttendance(){\n        return this.getReport(`programs/${this.programID}/reports/attendance`)\n    }\n\n    getDrugsGivenWithoutPrescription() {\n        return this.getReport('drugs_given_without_prescription')\n    }\n\n    getDrugsGivenWithPrescription() {\n        return this.getReport('drugs_given_with_prescription')\n    }\n\n    getDiagnosis(){\n        const url = `programs/${this.programID}/reports/diagnosis`\n        return Service.getJson(url, {\n            'start_date': this.startDate,\n            'end_date': this.endDate,\n            'date': this.date\n        })\n    }\n\n    getDiagnosisByAddress(){\n        return this.getReport('diagnosis_by_address')\n    }\n\n    getLaPrescriptions(){\n        const url = `programs/${this.programID}/reports/la_prescriptions`\n        return Service.getJson(url, {\n            'start_date': this.startDate,\n            'end_date': this.endDate,\n            \n        })\n    }\n\n    getMalariaReport(){\n        const url = `programs/${this.programID}/reports/malaria_report`\n        return Service.getJson(url, {\n            'start_date': this.startDate,\n            'end_date': this.endDate,\n            'date': this.date\n        })\n    }\n    \n    printLaReport(data: Record<string, any>){\n        const printService = new PrintoutService()\n        const url = `programs/${this.programID}/barcodes/la_report`\n        const params: Record<string, any> = {\n            \"date[start]\": this.startDate,\n            \"date[end]\": this.endDate\n        }\n        Object.keys(LA_TYPES).forEach((v, i) => {\n            i++\n            params[`${i}[prescription]`] = data[`total_la_${v}_prescribed_drugs`]\n            params[`${i}[dispensed]`] = data[`total_la_${v}_dispensed_drugs`]\n        })\n        return printService.printLbl(`${url}?${Url.parameterizeObjToString(params)}`)\n    }\n\n    getDateIntervalPeriod() {\n        return `${HisDate.toStandardHisDisplayFormat(this.startDate)} - ${HisDate.toStandardHisDisplayFormat(this.endDate)}`\n    }\n\n    setStartDate(startDate: string) {\n        this.startDate = startDate\n    }  \n\n    setEndDate(endDate: string) {\n        this.endDate = endDate\n    }\n\n    setEpiWeek(epiweek: string) {\n        this.epiweek = epiweek\n    }\n\n    getReportPeriod() {\n        return this.startDate && this.endDate\n         ? `${HisDate.toStandardHisDisplayFormat(this.startDate)} - ${HisDate.toStandardHisDisplayFormat(this.endDate)}`\n         : '-'\n    }\n\n    getReport(url: string, params={}) {\n        return Service.getJson(url, this.buildRequest(params))\n    }\n\n    buildRequest(config: Record<string, any> = {}) {\n        const payload: any = {'date': this.date, 'program_id': this.programID}\n        if (this.startDate && this.endDate) {\n            payload['start_date'] = this.startDate\n            payload['end_date'] = this.endDate\n        }\n        if (this.epiweek) {\n            payload['epiweek'] = this.epiweek\n        }\n        return { ...payload, ...config }\n    }\n\n    static getReportQuarters(minDuration= 4) {\n        const quarters: Array<QuarterInterface> = []\n        let year = HisDate.getCurrentYear()\n        for(let i=0; i < minDuration; ++i) {\n            quarters.push({ name: `Q4 ${year}`, start: `${year}-10-01`, end: `${year}-12-31` })\n            quarters.push({ name: `Q3 ${year}`, start: `${year}-07-01`, end: `${year}-09-30` })\n            quarters.push({ name: `Q2 ${year}`, start: `${year}-04-01`, end: `${year}-06-30` })\n            quarters.push({ name: `Q1 ${year}`, start: `${year}-01-01`, end: `${year}-03-31` })\n            --year\n        }\n        return quarters\n    }\n\n}"],"sourceRoot":""}