{"version":3,"sources":["webpack:///./src/apps/SPINE/services/influenza_service.ts","webpack:///./src/apps/SPINE/views/encounters/InfluenzaData.vue","webpack:///./src/apps/SPINE/views/encounters/InfluenzaData.vue?47af","webpack:///./src/utils/HisFormHelpers/commons.ts"],"names":["InfluenzaDataService","AppEncounterService","constructor","patientID","providerID","super","_defineComponent","__name","setup","__props","fields","ref","influenzaService","goToNextTask","patientDashboardUrl","useEncounter","providerId","patientId","patient","value","getBackgroundInformationField","isChildBearing","getSymptomField","getFluLikeIllnessField","getAdmissionCriteriaField","getRecruitmentField","async","onSubmit","_fdata","cdata","createEncounter","obs","resolveObs","saveObservationList","id","helpText","type","FieldType","TT_MULTIPLE_YES_NO","computedValue","options","buildObs","checkedOptions","push","mapToYesNoOptions","condition","f","canRecruitPatient","concept","isEmpty","map","buildValueCoded","option","label","child","formData","Object","values","some","Boolean","_ctx","_cache","_openBlock","_createBlock","_unref","IonPage","default","_withCtx","_createVNode","HisStandardForm","cancelDestinationPath","onFinishAction","skipSummary","_","__exports__","tag","filter","d","reduce","accum","cur","data","Array","isArray","concat","Promise","all","mapStrToOptions","mapObjToOptions","other","hasUnknown","_checkedValue$value","checkedValue","find","yesNoUnknownOptions","yesNoOptions"],"mappings":"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","file":"js/chunk-3642fa06.e9df4c25.js","sourcesContent":["import { AppEncounterService } from \"@/services/app_encounter_service\"\n\nexport class InfluenzaDataService extends AppEncounterService {\n    constructor(patientID: number, providerID: number) {\n        super(patientID, 56, providerID) \n    }\n}","import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nimport { ref } from 'vue'\nimport HisStandardForm from \"@/components/Forms/HisStandardForm.vue\";\nimport { Field, Option } from '@/components/Forms/FieldInterface';\nimport { FieldType } from '@/components/Forms/BaseFormElements';\nimport { IonPage } from '@ionic/vue';\nimport useEncounter from \"@/composables/useEncounter\";\nimport { mapToYesNoOptions, resolveObs } from '@/utils/HisFormHelpers/commons';\nimport { InfluenzaDataService } from '../../services/influenza_service';\nimport { isEmpty } from 'lodash';\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'InfluenzaData',\n  setup(__props) {\n\nconst fields = ref<Array<Field>>([]);\nlet influenzaService: InfluenzaDataService;\n\nconst { goToNextTask, patientDashboardUrl } = useEncounter((providerId, patientId, patient) => {\n  influenzaService = new InfluenzaDataService(patientId, providerId);\n  fields.value = [\n    getBackgroundInformationField(patient.isChildBearing()),\n    getSymptomField(),\n    getFluLikeIllnessField(),\n    getAdmissionCriteriaField(),\n    getRecruitmentField(),\n  ]\n});\n\nasync function onSubmit(_fdata: any, cdata: any) {\n  await influenzaService.createEncounter();\n  const obs = await resolveObs(cdata);\n  await influenzaService.saveObservationList(obs);\n  goToNextTask();\n}\n\nfunction getBackgroundInformationField(isChildBearing: boolean): Field {\n  return {\n    id: 'background_information',\n    helpText: \"Background Information\",\n    type: FieldType.TT_MULTIPLE_YES_NO,\n    computedValue: (options: Array<Option>) => buildObs('Background information', options),\n    options: (_fdata: any, checkedOptions: Array<Option>) => {\n      const options = [\n        \"Influenza vaccine in the last 1 year\",\n        \"Currently (or in the last week) taking antibiotics\",\n        \"Current Smoker\",\n        \"Were you a smoker 3 months ago\",\n        \"RDT or blood smear positive for malaria\"\n      ];        \n      if(isChildBearing) options.push(\"Pregnant?\")\n      return mapToYesNoOptions(options, checkedOptions )\n    }\n  }\n}\n\nfunction getSymptomField(): Field {\n  return {\n    id: 'symptoms',\n    helpText: \"Symptoms\",\n    type: FieldType.TT_MULTIPLE_YES_NO,\n    options: (_fdata: any, checkedOptions: Array<Option>) => mapToYesNoOptions([\"Fever greater than 38 degrees celsius\"], checkedOptions),\n    computedValue: (options: Array<Option>) => buildObs('Symptom', options)\n  }\n}\n\nfunction getFluLikeIllnessField(): Field {\n  return {\n    id: 'flulike_illness',\n    helpText: \"Flu-like Illness\",\n    type: FieldType.TT_MULTIPLE_YES_NO,\n    computedValue: (options: Array<Option>) => buildObs('Flu-like illness', options),\n    options: (_fdata: any, checkedOptions: Array<Option>) => mapToYesNoOptions(\n      [\n        \"Cough\",\n        \"Sore throat\",\n        \"Headache\",\n        \"Rhinorrhea\",\n        \"Limb or joint-pain\",\n        \"Vomiting or diarrhoea\"\n      ],\n      checkedOptions\n    ),\n  }\n}\n\nfunction getAdmissionCriteriaField(): Field {\n  return {\n    id: 'admission_criteria',\n    helpText: \"Admission Criteria\",\n    type: FieldType.TT_MULTIPLE_YES_NO,\n    computedValue: (options: Array<Option>) => buildObs('Admission Criteria', options),\n    options: (_fdata: any, checkedOptions: Array<Option>) => mapToYesNoOptions(\n      [\n        \"Patient confused (newly disoriented in place, person or time)\",\n        \"Respiratory rate greater than or equal to 30\",\n        \"Oxygen saturation less than or equal to 90 percent\",\n        \"Blood pressure systolic less than 90 MMHG\",\n        \"Heart rate greater than 120 per minute\",\n        \"Inability to Stand\"\n      ],\n      checkedOptions\n    )\n  }\n}\n\nfunction getRecruitmentField(): Field {\n  return {\n    id: 'recruitment',\n    helpText: \"Influenza recruitment\",\n    type: FieldType.TT_MULTIPLE_YES_NO,\n    options: (_fdata: any, checkedOptions: Array<Option>) => mapToYesNoOptions(\n      [\n        \"Influenza like illness\",\n        \"Severe Acute Respiratory Infection\"\n      ],\n      checkedOptions\n    ),\n    condition: (f: any) => canRecruitPatient(f),\n    computedValue: (options: Array<Option>) => buildObs('Influenza', options) \n  }\n}\n\nfunction buildObs(concept: string, options: Array<Option>) {\n  if(isEmpty(options)) return null;\n  return {\n    obs: options.map(async (option) => ({\n      ...(await influenzaService.buildValueCoded(concept, option.label)),\n      child: [await influenzaService.buildValueCoded(option.label, option.value)]\n    }))\n  }\n}\n\nfunction canRecruitPatient(formData: Record<string, any>) {\n  return Object.values(formData).some(Boolean);\n}\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createBlock(_unref(IonPage), null, {\n    default: _withCtx(() => [\n      _createVNode(HisStandardForm, {\n        cancelDestinationPath: _unref(patientDashboardUrl),\n        fields: fields.value,\n        onFinishAction: onSubmit,\n        skipSummary: true\n      }, null, 8, [\"cancelDestinationPath\", \"fields\"])\n    ]),\n    _: 1\n  }))\n}\n}\n\n})","import script from \"./InfluenzaData.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./InfluenzaData.vue?vue&type=script&lang=ts&setup=true\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { Option } from \"@/components/Forms/FieldInterface\"\nimport { find } from \"lodash\"\n\nexport function resolveObs(obs: any, tag = '') {\n  const values: any = Object.values(obs)\n    .filter((d: any) => d && (d.tag === tag || tag === ''))\n    .reduce((accum: any, cur: any) => {\n      const data = cur.obs ? cur.obs : cur\n      if (Array.isArray(data)) {\n        accum = accum.concat(data)\n      } else if (typeof data === 'function') {\n        accum.push(data())\n      } else {\n        accum.push(data)\n      }\n      return accum\n    }, [])\n  return Promise.all(values)\n}\n\nexport function mapStrToOptions(options: Array<string>): Array<Option> {\n  return options.map(option => ({ label: option, value: option }));\n}\n\nexport function mapObjToOptions(options: Array<Record<string, any>>, label = \"name\", value = \"name\"): Array<Option> {\n  return options.map(option => ({ label: option[label], value: option[value], other: option }));\n}\n\nexport function mapToYesNoOptions(options: Array<string>, checkedOptions?: Array<Option>, hasUnknown = false) {\n  return options.map(label => {\n    const checkedValue = find(checkedOptions, { label });\n    return {\n      label,\n      value: checkedValue?.value ?? \"\",\n      other: {\n        values: hasUnknown ? yesNoUnknownOptions() : yesNoOptions()\n      }\n    }\n  });\n}\n\nexport function yesNoUnknownOptions() {\n  return mapStrToOptions([\"Yes\", \"No\", \"Unknown\"]);\n}\n\nexport function yesNoOptions() {\n  return mapStrToOptions([\"Yes\", \"No\"]);\n}\n\nexport function toYesNoOption(label: string, other: any={}): Option {\n  return {\n      label,\n      value: '',\n      other: {\n          ...other,\n          values: yesNoOptions()\n      }\n  } \n}"],"sourceRoot":""}