(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-25532402"],{7365:function(t,e,i){"use strict";i("14d9"),i("13d5");var a,n=i("7a23"),s=i("ad60"),o=i("2ef0"),r=i("0fa1"),l=i("7f35"),h=i("9283");(function(t){t["SET_PROVIDER"]="SET_PROVIDER",t["CHANGE_SESSION_DATE"]="change_session_date",t["GO_TO_PATIENT_DASHBOARD"]="go_to_patient_dashboard",t["CHANGE_PATIENT_OUTCOME"]="change_outcome",t["CONTINUE"]="continue",t["EXIT"]="exit"})(a||(a={}));const c=t=>h["c"].toStandardHisDisplayFormat(t),u={"Warn if attempting to create new encounters for a deceased patient":{priority:1,actions:{alert:async({outcomeStartDate:t})=>{const e=await Object(l["a"])("Data Integrity Issue Found","Patient died on "+c(t),"Proceeding with this outcome might affect accuracy of some reports",[{name:"Cancel",slot:"end",color:"primary"},{name:"Change outcome",slot:"end",color:"primary"},{name:"Continue Anyway",slot:"end",color:"danger"}]);return"Cancel"===e?a.GO_TO_PATIENT_DASHBOARD:"Change outcome"===e?a.CHANGE_PATIENT_OUTCOME:a.CONTINUE}},conditions:{outcome(t){return"Patient died"===t},outcomeStartDate(t,{sessionDate:e}){return e>=t}}},"A patient's date of birth must not be less than Session Date":{priority:2,actions:{alert:async({birthDate:t,sessionDate:e})=>{const i=await Object(l["a"])("Data integrity issue found","",`Session date ${c(e)} is less than birth date of ${c(t)}`,[{name:"Cancel",slot:"end",color:"danger"},{name:"Change session date",slot:"end",color:"success"}]);return"Change session date"===i?a.CHANGE_SESSION_DATE:a.GO_TO_PATIENT_DASHBOARD}},conditions:{birthDate(t,{sessionDate:e}){return e<t}}},"Select Encounter provider when in back data entry":{priority:3,actions:{selection:async({providers:t,encounterName:e,sessionDate:i,apiDate:n})=>{const s=await Object(l["c"])("Please select a provider for "+e,`BDE: ${c(i)} | Current: ${c(n)}`,t,[{name:"Cancel",color:"danger",slot:"start",role:"default"},{name:"Confirm",slot:"end",role:"action"}]);return"Cancel"===s.action?{value:-1,flowState:a.GO_TO_PATIENT_DASHBOARD}:{value:s.selection,flowState:a.SET_PROVIDER}}},conditions:{isBdeMode(t){return t}}}};var d=i("c21d"),p=i("7920"),g=i("b5e4"),m=i("8e8b"),v=Object(n["defineComponent"])({components:{HisStandardForm:p["a"]},data:()=>({patient:{},fields:[],patientID:"",providerID:-1,providers:[],facts:{sessionDate:"",apiDate:"",encounterName:"N/A",providers:[],isBdeMode:!1,birthDate:"",outcome:"",outcomeStartDate:""},ready:!1}),watch:{$route:{handler(t){t.params.patient_id&&this.patientID!=t.params.patient_id&&(this.patientID=parseInt(t.params.patient_id),m["a"].get("ACTIVE_PATIENT",{patientID:this.patientID}).then(t=>{this.patient=t,this.setEncounterFacts().then(()=>{this.checkEncounterGuidelines().then(()=>{this.ready=!0})})}))},immediate:!0,deep:!0}},computed:{cancelDestination(){return this.patientDashboardUrl()}},methods:{runflowState(t,e=null){const i={};if(i[a.SET_PROVIDER]=t=>{const[e]=t.split(" "),i=Object(o["find"])(this.providers,{username:e});return i&&(this.providerID=i.person_id),a.CONTINUE},i[a.CHANGE_SESSION_DATE]=()=>(this.$router.push("/session/date?patient_dashboard_redirection_id="+this.patientID),a.EXIT),i[a.CHANGE_PATIENT_OUTCOME]=()=>(this.$router.push("/patient/programs/"+this.patientID),a.EXIT),i[a.GO_TO_PATIENT_DASHBOARD]=()=>(this.gotoPatientDashboard(),a.EXIT),t in i)return i[t](e)},async checkEncounterGuidelines(){const t=Object(d["a"])(this.facts,u);for(const o in t){var e,i;const r=t[o];if(null!==r&&void 0!==r&&null!==(e=r.actions)&&void 0!==e&&e.alert){var n;const t=this.runflowState(await(null===r||void 0===r||null===(n=r.actions)||void 0===n?void 0:n.alert(this.facts)));if(t===a.EXIT)return}if(null!==r&&void 0!==r&&null!==(i=r.actions)&&void 0!==i&&i.selection){var s;const t=await(null===r||void 0===r||null===(s=r.actions)||void 0===s?void 0:s.selection(this.facts));this.runflowState(t.flowState,t.value)}}},async setEncounterFacts(){try{const t=await m["a"].get("PATIENT_PROGRAM",{patientID:this.patientID});this.facts.outcome=t.outcome,this.facts.outcomeStartDate=t.startDate}catch(t){console.error(t),Object(g["c"])(""+t)}this.facts.sessionDate=s["a"].getSessionDate(),this.facts.apiDate=s["a"].getCachedApiDate(),this.facts.isBdeMode=s["a"].isBDE(),this.facts.birthDate=this.patient.getBirthdate(),this.facts.encounterName=this.$route.name?this.$route.name.toString().toUpperCase():"N/A",s["a"].isBDE()&&(this.providers=await m["a"].get("PROVIDERS"),this.facts.providers=this.providers.sort((t,e)=>{const i=t.username.toUpperCase(),a=e.username.toUpperCase();return i<a?-1:i>a?1:0}).map(t=>{var e;let i=""+t.username;if(!Object(o["isEmpty"])(null===t||void 0===t||null===(e=t.person)||void 0===e?void 0:e.names)){var a;const[e]=(null===(a=t.person)||void 0===a?void 0:a.names)||[];i+=` (${e.given_name} ${e.family_name})`}return i}))},toOption(t,e={}){return{label:t,value:t,other:e}},mapStrToOptions(t){return t.map(t=>({label:t,value:t}))},patientDashboardUrl(){return"/patient/dashboard/"+this.patientID},gotoPatientDashboard(){return this.$router.push({path:this.patientDashboardUrl()})},nextTask(){return Object(r["b"])(this.patientID,this.$router)},yesNoOptions(){return[{label:"Yes",value:"Yes"},{label:"No",value:"No"}]},toYesNoOption(t,e={}){return{label:t,value:"",other:{...e,values:this.yesNoOptions()}}},mapOptions(t){return t.map(t=>({label:t,value:t}))},yesNoUnknownOptions(){return[{label:"Yes",value:"Yes"},{label:"No",value:"No"},{label:"Unknown",value:"Unknown"}]},resolveObs(t,e=""){const i=Object.values(t).filter(t=>t&&(t.tag===e||""===e)).reduce((t,e)=>{const i=e.obs?e.obs:e;return Array.isArray(i)?t=t.concat(i):"function"===typeof i?t.push(i()):t.push(i),t},[]);return Promise.all(i)},inArray(t,e){try{return t.filter(t=>e(t)).length>0}catch(i){return!1}},validateSeries(t){try{for(const e in t){const i=t[e]();if(i)return i}}catch(e){return[e]}}}});const b=v;e["a"]=b},7920:function(t,e,i){"use strict";var a=i("7a23");function n(t,e,i,n,s,o){return Object(a["openBlock"])(),Object(a["createBlock"])(Object(a["resolveDynamicComponent"])(t.formType),{fields:t.fields,skipSummary:t.skipSummary,activeField:t.activeField,cancelDestinationPath:t.cancelDestinationPath,onOnFinish:t.onFinish,onFinish:t.onFinishAction,onOnIndex:t.onIndex},null,40,["fields","skipSummary","activeField","cancelDestinationPath","onOnFinish","onFinish","onOnIndex"])}var s=i("9441"),o=Object(a["defineComponent"])({name:"HisStandardForm",components:{TouchScreenForm:s["a"]},emits:["onFinish","onIndex"],data:()=>({formType:"touch-screen-form"}),props:{onFinishAction:{type:Function},skipSummary:{type:Boolean,default:!1},activeField:{type:String},fields:{type:Object,required:!0},cancelDestinationPath:{type:String,required:!1}},methods:{onFinish(t,e){this.$emit("onFinish",t,e)},onIndex(t){this.$emit("onIndex",t)}}}),r=i("d959"),l=i.n(r);const h=l()(o,[["render",n]]);e["a"]=h},ab49:function(t,e,i){"use strict";i.r(e);var a=i("7a23");function n(t,e,i,n,s,o){const r=Object(a["resolveComponent"])("his-standard-form");return Object(a["openBlock"])(),Object(a["createBlock"])(r,{fields:t.fields,activeField:t.activeField,onOnskip:e[0]||(e[0]=e=>t.activeField=""),onFinishAction:t.onFinish,skipSummary:!0,cancelDestinationPath:t.cancelDestination},null,8,["fields","activeField","onFinishAction","cancelDestinationPath"])}i("14d9");var s=i("d95e"),o=i("7920"),r=i("2706"),l=i("b515"),h=i("b5e4"),c=i("7365"),u=i("aee2"),d=i("ad60"),p=i("2ef0"),g=i("3e53"),m=i("7f35"),v=i("5a0c"),b=i.n(v),f=i("8e8b"),O=Object(a["defineComponent"])({mixins:[c["a"]],components:{HisStandardForm:o["a"]},data:()=>({app:g["a"].getActiveApp(),activeField:"",age:null,gender:null,hasBPinfo:!1,finalHeightValue:null,recentHeight:null,recentHeightObsID:-1,HTNEnabled:!1,optionWhiteList:[],hasHTNObs:!1,vitals:{},weightForHeight:{},medianWeightandHeight:{},canEditHeight:!1,patientAgeAtPrevRecordedHeight:-1}),watch:{ready:{handler(t){t&&this.init()},immediate:!0}},methods:{init(){this.vitals=new l["a"](this.patientID,this.providerID),this.age=this.patient.getAge(),this.gender=this.patient.getGender(),this.fields=this.getFields()},getOptions(){let t="";this.recentHeight&&(this.age>18||this.patientAgeAtPrevRecordedHeight>=18)&&(t=this.recentHeight||"");const e=[{label:"Weight",value:"",other:{modifier:"KG",icon:"weight",required:!0}},{label:"Height",value:""+t,other:{modifier:"CM",icon:"height",recentHeight:this.recentHeight,visible:this.canEditHeight,required:this.canEditHeight}},{label:"BP",value:"",other:{modifier:"mmHG",icon:"bp"}},{label:"Temp",value:"",other:{modifier:"Â°C",icon:"temp"}},{label:"SP02",value:"",other:{modifier:"%",icon:"spo2"}},{label:"Pulse",value:"",other:{modifier:"BPM",icon:"pulse-rate"}},{label:"Age",value:this.age,other:{modifier:"Years old",icon:"",visible:!1}}];return Object(p["isEmpty"])(this.optionWhiteList)?e:e.filter(t=>this.optionWhiteList.includes(t.label)).map(t=>(t.other.required=!0,t))},canCheckWeightHeight(){return Object(p["isEmpty"])(this.optionWhiteList)||this.optionWhiteList.includes("Height")&&this.optionWhiteList.includes("Weight")},canCheckBp(){return Object(p["isEmpty"])(this.optionWhiteList)||this.optionWhiteList.includes("BP")},async onFinish(t){const e=await this.vitals.createEncounter();if(!e)return Object(h["e"])("Unable to create treatment encounter");const i=await this.buildObs(t),a=await this.vitals.saveObservationList(i);if(!a)return Object(h["e"])("Unable to save patient observations");Object(h["d"])("Observations and encounter created!"),this.nextTask()},async buildObs(t){const e=await this.mapObs(this.sanitizeVitals(t.vitals).filter(t=>"BP"!==t.label).map(t=>("Height"===t.label&&t.other.visible&&this.finalHeightValue&&(t.value=this.finalHeightValue),t)));if(this.HTNEnabled&&!this.hasHTNObs&&t.on_htn_medication){const i=await this.vitals.buildValueText("Treatment status",t.on_htn_medication.value);e.push(i)}return e},splitBP(t){const e=[];return t.forEach(t=>{if("BP"===t.label){const i=(""+t.value).split("/"),a=i[0],n=i[1];e.push({label:"Systolic",value:a}),e.push({label:"Diastolic",value:n})}}),e},getBMI(t){const e=this.getVal(t,"Weight"),i=this.getVal(t,"Height"),a=[];if(this.age<=14){const t=(e/parseFloat(this.medianWeightandHeight["weight"])*100).toFixed(0),n=(i/parseFloat(this.medianWeightandHeight["height"])*100).toFixed(0),s=(i%Math.floor(i)<.5?0:.5)+Math.floor(i),o=this.weightForHeight[s.toFixed(1)],r=(e/o*100).toFixed(0);isNaN(parseFloat(r))||a.push({label:"Weight for height percent of median",value:r}),a.push({label:"Weight for age percent of median",value:t}),a.push({label:"Height for age percent of median",value:n})}else{const t=u["a"].calculateBMI(e,i);a.push({label:"BMI",value:t})}return a},getVal(t,e){const i=t.filter(t=>t.label===e);return""===i[0].value?0:parseFloat(""+i[0].value)},async mapObs(t){const e=t.map(async t=>{const e=await this.vitals.buildValueNumber(t.label,t.value);return e});return Promise.all(e)},validateVitals(t){const e=this.checkRequiredVitals(t);if(e.length>0)return e.map(t=>[t.label+" can not be empty"]);const i=this.sanitizeVitals(t);return this.vitals.validateAll(i)},sanitizeVitals(t){let e=t.filter(t=>("Height"!==t.label||0!=t.other.required)&&(""!==t.value&&"Age"!==t.label));return this.canCheckBp()&&(e=e.concat(this.splitBP(e))),this.canCheckWeightHeight()&&(e=e.concat(this.getBMI(t))),e},checkRequiredVitals(t){return t.filter(t=>""===t.value&&!0===t.other.required)},getFields(){return[{id:"on_htn_medication",helpText:"Already taking drugs for blood pressure?",type:s["b"].TT_SELECT,init:async()=>{var t;return"ART"===(null===(t=this.app)||void 0===t?void 0:t.applicationName)&&(this.HTNEnabled=await f["a"].get("IS_ART_HTN_ENABLED"),this.HTNEnabled&&await l["a"].getAll(this.patientID,"Treatment status").then(t=>{this.hasHTNObs=t&&t.length>0})),!0},validation:t=>r["a"].required(t),condition:()=>this.HTNEnabled&&!this.hasHTNObs,options:()=>[{label:"Yes",value:"BP Drugs started"},{label:"No",value:"Not on BP Drugs"}]},{id:"vitals",helpText:"Vitals entry",type:s["b"].TT_VITALS_ENTRY,init:async()=>{const t=this.$route.query.vital_options;if(t&&(this.optionWhiteList=t.split(",")),this.canCheckWeightHeight()){const t=await this.patient.getRecentHeightObs();Object(p["isEmpty"])(t)?this.canEditHeight=!0:(this.patientAgeAtPrevRecordedHeight=b()(t["obs_datetime"]).diff(this.patient.getBirthdate(),"year"),this.recentHeight=t["value_numeric"],this.recentHeightObsID=t["obs_id"],this.canEditHeight=this.patientAgeAtPrevRecordedHeight<18||this.age<18),this.age<=14&&(this.medianWeightandHeight=await this.patient.getMedianWeightHeight(),this.weightForHeight=await d["a"].getWeightForHeightValues())}return!0},validation:t=>this.validateVitals(t),beforeNext:async t=>{const e=Object(p["find"])(t,{label:"Height"});if(e&&this.recentHeight&&e.other.visible){const t=parseInt(""+(e.value||0)),i=parseInt(""+(this.recentHeight||0));if(t<i){const e=`Use ${i} CM`,a=`Use ${t} CM`,n=await Object(m["a"])(`Previous Height "${i} CM"`,`Current Height "${t} CM"`,`Inconsistent Height Reading (Height can not be lower than previous height of " ${this.recentHeight} "CM. Please SELECT the correct height.)`,[{name:e,slot:"start",color:"success"},{name:a,slot:"end",color:"danger"}]);n===a&&this.recentHeightObsID?await Object(h["a"])("Do you want to void height observation for "+i)&&await l["a"].voidObs(this.recentHeightObsID):this.finalHeightValue=i}}return!0},config:{hiddenFooterBtns:["Clear"],onUpdateAlertStatus:async t=>{const e=Object(p["find"])(t,{label:"Weight"}),i=Object(p["find"])(t,{label:"Height"});if(!e||!i)return;const a=parseFloat(e.value),n=parseFloat(i.value);if(a<=0||n<=0)return{label:"BMI",value:"N/A",color:"",status:""};const s=await u["a"].getBMI(a,n,this.gender,this.age);return{label:"BMI",value:s.index,color:s.color,status:s.result}},onChangeOption:t=>{if(!t.value&&t.other.required)throw`Value for ${t.label} is required`;if(t.value){const e=this.vitals.validator(t);if(e&&e.length)throw e}}},options:()=>this.getOptions()}]}}}),E=i("d959"),D=i.n(E);const y=D()(O,[["render",n]]);e["default"]=y},b515:function(t,e,i){"use strict";i.d(e,"a",(function(){return s}));i("14d9");var a=i("cc6f"),n=i("2ef0");class s extends a["a"]{constructor(t,e){super(t,6,e)}isNotEmptyandNumber(t){return(""+t.value).match(/^-?\d+\.?\d*$/)?null:["Invalid entry for "+t.label]}isNotEmptyandFloat(t){var e;return(""+t.value).match(/^\d{1,3}\.\d{1,5}$/)?null:[`Invalid entry for ${t.label}. Don't forget to add a decimal. e.g. 56.2 ${(null===(e=t.other)||void 0===e?void 0:e.modifier)||""}`]}checkMinMax(t,e,i){const a=[];var n,s;parseFloat(""+t.value)<e&&a.push([`${t.label} entered is less than minimum ${e} ${(null===t||void 0===t||null===(n=t.other)||void 0===n?void 0:n.modifier)||""}`]);parseFloat(""+t.value)>i&&a.push([`${t.label} entered is greater than maximum ${i} ${(null===t||void 0===t||null===(s=t.other)||void 0===s?void 0:s.modifier)||""}`]);return a.length>0?a:null}validateAll(t){const e=[];return t.map(t=>{const i=this.validator(t);return Object(n["isArray"])(i)?e.push(i):null}),e.length>0?e:null}mergeErrors(t){const e=[];return t.forEach(t=>{Object(n["isArray"])(t)&&e.push(t)}),e.length>0?e:null}isValidBPReading(t){const e=[],i=(""+t.value).match(/^\d{1,3}\/\d{1,3}$/g)?null:["Invalid BP reading"];if(e.push(i),null==i){const i=(""+t.value).split("/"),a={label:"Systolic",value:i[0]},n={label:"Diastolic",value:i[1]};e.push(this.checkMinMax(n,30,200)),e.push(this.checkMinMax(a,40,250))}return this.mergeErrors(e)}validator(t){const e=[{name:"Weight",validator:t=>{const e=this.isNotEmptyandFloat(t),i=this.checkMinMax(t,2,250);return this.mergeErrors([e,i])}},{name:"Height",validator:t=>{const e=[];return e.push(this.isNotEmptyandNumber(t)),e.push(this.checkMinMax(t,40,220)),this.mergeErrors(e)}},{name:"BP",validator:t=>this.isValidBPReading(t)},{name:"Temp",validator:t=>{const e=this.isNotEmptyandNumber(t),i=this.checkMinMax(t,30,42);return this.mergeErrors([e,i])}},{name:"SP02",validator:t=>{const e=this.checkMinMax(t,40,100);return this.mergeErrors([e])}},{name:"Pulse",validator:t=>{const e=this.checkMinMax(t,50,120);return this.mergeErrors([e])}}],i=e.filter(e=>e.name===t.label);return i.length>0?i[0].validator(t):null}}},c21d:function(t,e,i){"use strict";i.d(e,"a",(function(){return o}));i("14d9");function a(t,e){const i=[],a=[-1,"",null,void 0];for(const n in e){if(!(n in t))continue;const s=t[n];a.includes(s)?i.push(!1):i.push(e[n](s,t))}return i.every(Boolean)}function n(t){return t.sort((t,e)=>t.priority&&e.priority&&t.priority<e.priority?-1:1)}function s(t){return t.sort((t,e)=>t.weight&&e.weight&&t.weight>e.weight?-1:1)}function o(t,e,i="",o="",r="priority"){const l=[];for(const n in e){const s=e[n],r=[s.target&&i&&s.target!=i,s.targetEvent&&o&&s.targetEvent!=o];r.some(Boolean)||a(t,s.conditions)&&(s.title=n,s.description&&(s.description.text=s.description.info(t)),l.push(s))}return"priority"===r?n(l):s(l)}}}]);
//# sourceMappingURL=chunk-25532402.c03dab6c.js.map