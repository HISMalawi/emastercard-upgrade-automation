{"version":3,"sources":["webpack:///./src/apps/CxCa/services/reports/cxca_report_service.ts","webpack:///./src/apps/CxCa/views/reports/clinic/BookedClients.vue?c2ad","webpack:///./src/apps/CxCa/views/reports/clinic/BookedClients.vue","webpack:///./src/apps/CxCa/views/reports/clinic/BookedClients.vue?2be9"],"names":["CxCaReportService","Service","constructor","super","this","endDate","startDate","date","getSessionDate","programID","getProgramID","getPepfarReport","reportName","getReport","getClinicReport","getMohReport","getDateIntervalPeriod","HisDate","toStandardHisDisplayFormat","setStartDate","setEndDate","getReportPeriod","url","params","getJson","buildRequest","config","payload","minDuration","quarters","year","getCurrentYear","i","push","name","start","end","render","_ctx","_cache","$props","$setup","$data","$options","_component_report_template","_resolveComponent","_component_ion_page","_openBlock","_createBlock","default","_withCtx","_createVNode","title","rows","fields","columns","period","canExportPDf","canExportCsv","onReportConfiguration","init","_","defineComponent","components","ReportTemplate","IonPage","mixins","ReportMixin","data","reportService","table","thTxt","created","getDateDurationFields","methods","start_date","end_date","buildRows","map","d","td","tdDate","tdBtn","$router","__exports__"],"mappings":"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","file":"js/chunk-123da1b6.ad17208c.js","sourcesContent":["import { Service } from \"@/services/service\";\nimport HisDate from \"@/utils/Date\"\n\nexport interface QuarterInterface {\n    name: string;\n    start: string;\n    end: string;\n}\n\n\n\nexport const AGE_GROUPS = [\n    '15-19 years', '20-24 years',\n    '25-29 years', '30-34 years',\n    '35-39 years', '40-44 years',\n    '45-49 years', '50 plus years'\n]\n\n\nexport class CxCaReportService extends Service {\n    programID: number;\n    startDate: string;\n    endDate: string;\n    date: string;\n    constructor() {\n        super()\n        this.endDate = ''\n        this.startDate = ''\n        this.date = Service.getSessionDate()\n        this.programID = Service.getProgramID()\n    }\n\n    getPepfarReport(reportName: string) {\n        return this.getReport('pepfar_cxca', {'report_name': reportName})\n    }\n    getClinicReport(reportName: string) {\n        return this.getReport('screened_for_cxca', {'report_name': reportName})\n    }\n    getMohReport(reportName: string) {\n        return this.getReport('screened_for_cxca', {'report_name': reportName})\n    }\n    \n    getDateIntervalPeriod() {\n        return `${HisDate.toStandardHisDisplayFormat(this.startDate)} - ${HisDate.toStandardHisDisplayFormat(this.endDate)}`\n    }\n\n    setStartDate(startDate: string) {\n        this.startDate = startDate\n    }  \n\n    setEndDate(endDate: string) {\n        this.endDate = endDate\n    }\n\n   \n\n    getReportPeriod() {\n        return this.startDate && this.endDate\n         ? `${HisDate.toStandardHisDisplayFormat(this.startDate)} - ${HisDate.toStandardHisDisplayFormat(this.endDate)}`\n         : '-'\n    }\n\n    getReport(url: string, params={}) {\n        return Service.getJson(url, this.buildRequest(params))\n    }\n\n    buildRequest(config: Record<string, any> = {}) {\n        const payload: any = {'date': this.date, 'program_id': 24}\n        if (this.startDate && this.endDate) {\n            payload['start_date'] = this.startDate\n            payload['end_date'] = this.endDate\n        }\n        return { ...payload, ...config }\n    }\n\n    static getReportQuarters(minDuration= 4) {\n        const quarters: Array<QuarterInterface> = []\n        let year = HisDate.getCurrentYear()\n        for(let i=0; i < minDuration; ++i) {\n            quarters.push({ name: `Q4 ${year}`, start: `${year}-10-01`, end: `${year}-12-31` })\n            quarters.push({ name: `Q3 ${year}`, start: `${year}-07-01`, end: `${year}-09-30` })\n            quarters.push({ name: `Q2 ${year}`, start: `${year}-04-01`, end: `${year}-06-30` })\n            quarters.push({ name: `Q1 ${year}`, start: `${year}-01-01`, end: `${year}-03-31` })\n            --year\n        }\n        return quarters\n    }\n\n}","import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_report_template = _resolveComponent(\"report-template\")!\n  const _component_ion_page = _resolveComponent(\"ion-page\")!\n\n  return (_openBlock(), _createBlock(_component_ion_page, null, {\n    default: _withCtx(() => [\n      _createVNode(_component_report_template, {\n        title: _ctx.title,\n        rows: _ctx.rows,\n        fields: _ctx.fields,\n        columns: _ctx.columns,\n        period: _ctx.period,\n        canExportPDf: false,\n        canExportCsv: false,\n        onReportConfiguration: _ctx.init\n      }, null, 8, [\"title\", \"rows\", \"fields\", \"columns\", \"period\", \"onReportConfiguration\"])\n    ]),\n    _: 1\n  }))\n}","\nimport { defineComponent } from 'vue'\nimport ReportTemplate from \"@/views/reports/BaseTableReport.vue\"\nimport table, { ColumnInterface, RowInterface } from \"@/components/DataViews/tables/ReportDataTable\"\nimport ReportMixin from '@/apps/ART/views/reports/ReportMixin.vue'\nimport { IonPage } from \"@ionic/vue\";\nimport { CxCaReportService } from '@/apps/CxCa/services/reports/cxca_report_service'\nexport default defineComponent({\n\n  components: { ReportTemplate, IonPage },\n  mixins: [ReportMixin],\n  data: () => ({\n    title: 'Booked Clients',\n    rows: [] as RowInterface[],\n    reportService: {} as any,\n    columns: [\n      [\n        table.thTxt(''),\n        table.thTxt('First Name'), \n        table.thTxt('Last Name'),\n        table.thTxt('Birthdate'),\n        table.thTxt('Booked'),\n        table.thTxt('Seen'),\n        table.thTxt('Action')\n      ]\n    ] as ColumnInterface[][],\n  }),\n  created() {\n    this.fields = this.getDateDurationFields()\n  },\n  methods: {\n    async init(_: any, config: any) {\n      this.reportService = new CxCaReportService()\n      this.reportService.setStartDate(config.start_date)\n      this.reportService.setEndDate(config.end_date)\n      const data = await this.reportService.getClinicReport('BOOKED CLIENTS FROM ART RAW DATA');\n      this.rows = this.buildRows(data)\n\n    },\n    buildRows(data: any): RowInterface[] {\n     return data.map((d: any) => ([\n        table.td(d['identifier']),\n        table.td(d['given_name']),\n        table.td(d['family_name']),\n        table.tdDate(d['dob']),\n        table.td(d['gender']),\n        table.td(d['seen']),\n        table.tdBtn('View', () => this.$router.push(`/patient/dashboard/${d['person_id']}`))\n      ]))\n    },\n  },\n})\n","import { render } from \"./BookedClients.vue?vue&type=template&id=63403bc0&ts=true\"\nimport script from \"./BookedClients.vue?vue&type=script&lang=ts\"\nexport * from \"./BookedClients.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}