(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-15eccd71"],{"1c9e":function(t,e,n){"use strict";n.r(e);var a=n("7a23");function i(t,e,n,i,o,s){const r=Object(a["resolveComponent"])("his-standard-form");return Object(a["openBlock"])(),Object(a["createBlock"])(r,{fields:t.fields,onFinishAction:t.onFinish,skipSummary:!0,cancelDestinationPath:t.cancelDestination},null,8,["fields","onFinishAction","cancelDestinationPath"])}var o=n("d95e"),s=n("7920"),r=n("2706"),c=n("b5e4"),l=n("7365"),d=n("83af"),p=n("4db7"),u=n("3e53"),h=n("2ef0"),m=n("9283"),f=n("d1ca"),v=n("5a0c"),D=n.n(v),y=n("8734"),b=Object(a["defineComponent"])({mixins:[l["a"]],components:{HisStandardForm:s["a"]},data:()=>({appointment:{}}),watch:{ready:{handler(t){var e;console.log("The Current App calling this encounter  ",null===(e=u["a"].getActiveApp())||void 0===e?void 0:e.applicationName),t&&(this.appointment=new d["a"](this.patientID,this.providerID),this.fields=[this.getAppointmentField()])},immediate:!0}},methods:{async onFinish(t,e){var n;await this.appointment.createEncounter(),await this.appointment.saveObservationList(await this.resolveObs(e));const a=new p["a"](this.patientID),i=["CxCa","ANC"];i.includes(""+(null===(n=u["a"].getActiveApp())||void 0===n?void 0:n.applicationName))||await a.printVisitSummaryLbl(),this.nextTask()},getAppointmentField(){const t=t=>m["c"].toStandardHisDisplayFormat(t),e=(t,e)=>new RegExp(t,"i").test(""+e);let n="",a="",i=-1,s=this.appointment.date,l=null;const p={},v=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"];return{id:"set_appointment",helpText:"Appointments booking",type:o["b"].TT_DATE_PICKER,init:async()=>{try{const t=await this.appointment.getNextAppointment();s=t.appointment_date,l=t.drugs_run_out_date}catch(e){if(console.warn(e),await Object(y["a"])(400),!await Object(c["a"])("Next appointment/drug-runout date is not available, do you want to proceed anyway?"))return this.gotoPatientDashboard(),!0}const t=await f["b"].appointmentLimit();return i=t?parseInt(t):0,!0},onValue:async o=>{if(void 0===p[o]){const t=await d["a"].getDailiyAppointments(o);p[o]=Array.isArray(t)?t.length:0}return!(i>=1&&p[o]>=i&&await Object(c["a"])(`${p[o]} clients were booked on ${t(o)}`,{header:`APPOINTMENT LIMIT (${i}) REACHED`,cancelBtnLabel:"Proceed",confirmBtnLabel:"New date"}))&&(Object(h["isEmpty"])(a)&&(a=await f["b"].clinicHolidays()),!(e(o,a)&&!await Object(c["a"])(t(o)+" is a clinic holiday, do you want to set an appointment?"))&&(Object(h["isEmpty"])(n)&&(n=this.patient.getAge()>=18?await f["b"].adultClinicDays():await f["b"].peadsClinicDays()),!(!e(v[D()(o).day()],n)&&!await Object(c["a"])(t(o)+" is not a clinic day. Do you want to proceed with this date?"))))},validation:t=>r["a"].required(t),defaultValue:()=>s,computedValue:t=>[this.appointment.buildValueDate("Appointment date",t),this.appointment.buildValueDate("Estimated date",s)],config:{hiddenFooterBtns:["Clear"],minDate:()=>this.appointment.date,maxDate:()=>l,supValue:t=>""+p[t],infoItems:e=>{var n;return"CxCa"===(null===(n=u["a"].getActiveApp())||void 0===n?void 0:n.applicationName)?[{label:"User set appointment date",value:t(e)},{label:"Appointments",value:p[e]},{label:"Appointment limit (per/day)",value:i}]:[{label:"Medication Run out Date",value:l?t(l):"Not available"},{label:"User set appointment date",value:t(e)},{label:"Appointments",value:p[e]},{label:"Appointment limit (per/day)",value:i}]}}}}}}),O=n("d959"),A=n.n(O);const g=A()(b,[["render",i]]);e["default"]=g},7365:function(t,e,n){"use strict";n("14d9"),n("13d5");var a,i=n("7a23"),o=n("ad60"),s=n("2ef0"),r=n("0fa1"),c=n("7f35"),l=n("9283");(function(t){t["SET_PROVIDER"]="SET_PROVIDER",t["CHANGE_SESSION_DATE"]="change_session_date",t["GO_TO_PATIENT_DASHBOARD"]="go_to_patient_dashboard",t["CHANGE_PATIENT_OUTCOME"]="change_outcome",t["CONTINUE"]="continue",t["EXIT"]="exit"})(a||(a={}));const d=t=>l["c"].toStandardHisDisplayFormat(t),p={"Warn if attempting to create new encounters for a deceased patient":{priority:1,actions:{alert:async({outcomeStartDate:t})=>{const e=await Object(c["a"])("Data Integrity Issue Found","Patient died on "+d(t),"Proceeding with this outcome might affect accuracy of some reports",[{name:"Cancel",slot:"end",color:"primary"},{name:"Change outcome",slot:"end",color:"primary"},{name:"Continue Anyway",slot:"end",color:"danger"}]);return"Cancel"===e?a.GO_TO_PATIENT_DASHBOARD:"Change outcome"===e?a.CHANGE_PATIENT_OUTCOME:a.CONTINUE}},conditions:{outcome(t){return"Patient died"===t},outcomeStartDate(t,{sessionDate:e}){return e>=t}}},"A patient's date of birth must not be less than Session Date":{priority:2,actions:{alert:async({birthDate:t,sessionDate:e})=>{const n=await Object(c["a"])("Data integrity issue found","",`Session date ${d(e)} is less than birth date of ${d(t)}`,[{name:"Cancel",slot:"end",color:"danger"},{name:"Change session date",slot:"end",color:"success"}]);return"Change session date"===n?a.CHANGE_SESSION_DATE:a.GO_TO_PATIENT_DASHBOARD}},conditions:{birthDate(t,{sessionDate:e}){return e<t}}},"Select Encounter provider when in back data entry":{priority:3,actions:{selection:async({providers:t,encounterName:e,sessionDate:n,apiDate:i})=>{const o=await Object(c["c"])("Please select a provider for "+e,`BDE: ${d(n)} | Current: ${d(i)}`,t,[{name:"Cancel",color:"danger",slot:"start",role:"default"},{name:"Confirm",slot:"end",role:"action"}]);return"Cancel"===o.action?{value:-1,flowState:a.GO_TO_PATIENT_DASHBOARD}:{value:o.selection,flowState:a.SET_PROVIDER}}},conditions:{isBdeMode(t){return t}}}};var u=n("c21d"),h=n("7920"),m=n("b5e4"),f=n("8e8b"),v=Object(i["defineComponent"])({components:{HisStandardForm:h["a"]},data:()=>({patient:{},fields:[],patientID:"",providerID:-1,providers:[],facts:{sessionDate:"",apiDate:"",encounterName:"N/A",providers:[],isBdeMode:!1,birthDate:"",outcome:"",outcomeStartDate:""},ready:!1}),watch:{$route:{handler(t){t.params.patient_id&&this.patientID!=t.params.patient_id&&(this.patientID=parseInt(t.params.patient_id),f["a"].get("ACTIVE_PATIENT",{patientID:this.patientID}).then(t=>{this.patient=t,this.setEncounterFacts().then(()=>{this.checkEncounterGuidelines().then(()=>{this.ready=!0})})}))},immediate:!0,deep:!0}},computed:{cancelDestination(){return this.patientDashboardUrl()}},methods:{runflowState(t,e=null){const n={};if(n[a.SET_PROVIDER]=t=>{const[e]=t.split(" "),n=Object(s["find"])(this.providers,{username:e});return n&&(this.providerID=n.person_id),a.CONTINUE},n[a.CHANGE_SESSION_DATE]=()=>(this.$router.push("/session/date?patient_dashboard_redirection_id="+this.patientID),a.EXIT),n[a.CHANGE_PATIENT_OUTCOME]=()=>(this.$router.push("/patient/programs/"+this.patientID),a.EXIT),n[a.GO_TO_PATIENT_DASHBOARD]=()=>(this.gotoPatientDashboard(),a.EXIT),t in n)return n[t](e)},async checkEncounterGuidelines(){const t=Object(u["a"])(this.facts,p);for(const s in t){var e,n;const r=t[s];if(null!==r&&void 0!==r&&null!==(e=r.actions)&&void 0!==e&&e.alert){var i;const t=this.runflowState(await(null===r||void 0===r||null===(i=r.actions)||void 0===i?void 0:i.alert(this.facts)));if(t===a.EXIT)return}if(null!==r&&void 0!==r&&null!==(n=r.actions)&&void 0!==n&&n.selection){var o;const t=await(null===r||void 0===r||null===(o=r.actions)||void 0===o?void 0:o.selection(this.facts));this.runflowState(t.flowState,t.value)}}},async setEncounterFacts(){try{const t=await f["a"].get("PATIENT_PROGRAM",{patientID:this.patientID});this.facts.outcome=t.outcome,this.facts.outcomeStartDate=t.startDate}catch(t){console.error(t),Object(m["c"])(""+t)}this.facts.sessionDate=o["a"].getSessionDate(),this.facts.apiDate=o["a"].getCachedApiDate(),this.facts.isBdeMode=o["a"].isBDE(),this.facts.birthDate=this.patient.getBirthdate(),this.facts.encounterName=this.$route.name?this.$route.name.toString().toUpperCase():"N/A",o["a"].isBDE()&&(this.providers=await f["a"].get("PROVIDERS"),this.facts.providers=this.providers.sort((t,e)=>{const n=t.username.toUpperCase(),a=e.username.toUpperCase();return n<a?-1:n>a?1:0}).map(t=>{var e;let n=""+t.username;if(!Object(s["isEmpty"])(null===t||void 0===t||null===(e=t.person)||void 0===e?void 0:e.names)){var a;const[e]=(null===(a=t.person)||void 0===a?void 0:a.names)||[];n+=` (${e.given_name} ${e.family_name})`}return n}))},toOption(t,e={}){return{label:t,value:t,other:e}},mapStrToOptions(t){return t.map(t=>({label:t,value:t}))},patientDashboardUrl(){return"/patient/dashboard/"+this.patientID},gotoPatientDashboard(){return this.$router.push({path:this.patientDashboardUrl()})},nextTask(){return Object(r["b"])(this.patientID,this.$router)},yesNoOptions(){return[{label:"Yes",value:"Yes"},{label:"No",value:"No"}]},toYesNoOption(t,e={}){return{label:t,value:"",other:{...e,values:this.yesNoOptions()}}},mapOptions(t){return t.map(t=>({label:t,value:t}))},yesNoUnknownOptions(){return[{label:"Yes",value:"Yes"},{label:"No",value:"No"},{label:"Unknown",value:"Unknown"}]},resolveObs(t,e=""){const n=Object.values(t).filter(t=>t&&(t.tag===e||""===e)).reduce((t,e)=>{const n=e.obs?e.obs:e;return Array.isArray(n)?t=t.concat(n):"function"===typeof n?t.push(n()):t.push(n),t},[]);return Promise.all(n)},inArray(t,e){try{return t.filter(t=>e(t)).length>0}catch(n){return!1}},validateSeries(t){try{for(const e in t){const n=t[e]();if(n)return n}}catch(e){return[e]}}}});const D=v;e["a"]=D},7920:function(t,e,n){"use strict";var a=n("7a23");function i(t,e,n,i,o,s){return Object(a["openBlock"])(),Object(a["createBlock"])(Object(a["resolveDynamicComponent"])(t.formType),{fields:t.fields,skipSummary:t.skipSummary,activeField:t.activeField,cancelDestinationPath:t.cancelDestinationPath,onOnFinish:t.onFinish,onFinish:t.onFinishAction,onOnIndex:t.onIndex},null,40,["fields","skipSummary","activeField","cancelDestinationPath","onOnFinish","onFinish","onOnIndex"])}var o=n("9441"),s=Object(a["defineComponent"])({name:"HisStandardForm",components:{TouchScreenForm:o["a"]},emits:["onFinish","onIndex"],data:()=>({formType:"touch-screen-form"}),props:{onFinishAction:{type:Function},skipSummary:{type:Boolean,default:!1},activeField:{type:String},fields:{type:Object,required:!0},cancelDestinationPath:{type:String,required:!1}},methods:{onFinish(t,e){this.$emit("onFinish",t,e)},onIndex(t){this.$emit("onIndex",t)}}}),r=n("d959"),c=n.n(r);const l=c()(s,[["render",i]]);e["a"]=l},"83af":function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var a=n("cc6f");class i extends a["a"]{constructor(t,e){super(t,7,e)}async getNextAppointment(){const t=a["a"].getProgramID();return a["a"].getJson(`/programs/${t}/patients/${this.patientID}/next_appointment_date`,{date:this.date})}static async getDailiyAppointments(t){const e=a["a"].getProgramID();return a["a"].getJson(`/programs/${e}/booked_appointments`,{date:t,paginate:!1})}}},c21d:function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));n("14d9");function a(t,e){const n=[],a=[-1,"",null,void 0];for(const i in e){if(!(i in t))continue;const o=t[i];a.includes(o)?n.push(!1):n.push(e[i](o,t))}return n.every(Boolean)}function i(t){return t.sort((t,e)=>t.priority&&e.priority&&t.priority<e.priority?-1:1)}function o(t){return t.sort((t,e)=>t.weight&&e.weight&&t.weight>e.weight?-1:1)}function s(t,e,n="",s="",r="priority"){const c=[];for(const i in e){const o=e[i],r=[o.target&&n&&o.target!=n,o.targetEvent&&s&&o.targetEvent!=s];r.some(Boolean)||a(t,o.conditions)&&(o.title=i,o.description&&(o.description.text=o.description.info(t)),c.push(o))}return"priority"===r?i(c):o(c)}}}]);
//# sourceMappingURL=chunk-15eccd71.193831c1.js.map