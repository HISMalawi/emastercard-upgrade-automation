{"version":3,"sources":["webpack:///./src/components/Keyboard/KbLayouts.ts","webpack:///./src/apps/AETC/views/encounters/Registration.vue?8826","webpack:///./src/apps/AETC/services/patient_registration_service.ts","webpack:///./src/apps/AETC/views/encounters/Registration.vue","webpack:///./src/apps/AETC/views/encounters/Registration.vue?22d3","webpack:///./src/views/EncounterMixin.vue","webpack:///./src/views/EncounterMixin.vue?fc39","webpack:///./src/components/Forms/HisStandardForm.vue?8e31","webpack:///./src/components/Forms/HisStandardForm.vue","webpack:///./src/components/Forms/HisStandardForm.vue?5176","webpack:///./src/guidelines/encounter_guidelines.ts","webpack:///./src/utils/GuidelineEngine.ts","webpack:///./src/components/Forms/BaseFormElements.ts","webpack:///./src/utils/HisFormHelpers/LocationFieldOptions.ts","webpack:///./src/components/FormElements lazy ^\\.\\/.*\\.vue$ namespace object"],"names":["DEFAULT_KEYPAD","PRESCRIPTION_KEYPAD","FLOAT_KEYPAD","VITALS_KEYPAD","DRUG_DISPENSER_KEYPAD","CD4_COUNT_PAD_LO","SYMBOLS","NUMBER_PAD_LO","NUMBER_ARROW_PAD_LO","MONTHLY_DAYS_LO","ALPHABETICAL_LO","QWERTY_LO","CHARACTERS_AND_NUMBERS_LO","NOTE_PAD_KEYBOARD","LOGIN_KEYBOARD","render","_ctx","_cache","$props","$setup","$data","$options","_component_his_standard_form","_resolveComponent","_openBlock","_createBlock","cancelDestinationPath","cancelDestination","fields","onFinishAction","onSubmit","PatientVisitRegistrationService","AppEncounterService","constructor","patientID","providerID","super","defineComponent","components","HisStandardForm","mixins","EncounterMixinVue","data","registrationService","watch","ready","isReady","this","patient","getID","getFields","immediate","deep","methods","mapToOption","listOptions","map","item","label","value","formData","computedData","asignNID","encounter","createEncounter","toastWarning","registrationData","resolveObs","registrationObs","saveObservationList","nextTask","nidAvailable","nid","updateMWNationalId","people","Patientservice","findByOtherID","MALAWI_NATIONAL_ID_TYPE","length","id","helpText","type","FieldType","TT_SELECT","validation","Validation","required","computedValue","v","obs","buildValueCoded","options","buildValueText","condition","visit_type","_","filter","getFacilities","config","showKeyboard","isFilterDataViaApi","val","getMWNationalID","yesNoUnknownOptions","appearInSummary","TT_TEXT","isMWNationalID","national_id_available","beforeNext","async","field","mwIdExists","toString","summaryMapValue","casing","customKeyboard","__exports__","providers","facts","sessionDate","apiDate","encounterName","isBdeMode","birthDate","outcome","outcomeStartDate","handler","route","params","patient_id","parseInt","Store","get","then","patientData","setEncounterFacts","checkEncounterGuidelines","computed","patientDashboardUrl","runflowState","state","states","FlowState","SET_PROVIDER","selection","username","split","provider","find","person_id","CONTINUE","CHANGE_SESSION_DATE","$router","push","EXIT","CHANGE_PATIENT_OUTCOME","GO_TO_PATIENT_DASHBOARD","gotoPatientDashboard","findings","matchToGuidelines","ENCOUNTER_GUIDELINES","index","_finding$actions","_finding$actions3","finding","actions","alert","_finding$actions2","status","_finding$actions4","flowState","program","startDate","e","console","error","toastDanger","ProgramService","getSessionDate","getCachedApiDate","isBDE","getBirthdate","$route","name","toUpperCase","sort","a","b","usernameA","usernameB","p","_p$person","isEmpty","person","names","_p$person2","latestName","given_name","family_name","toOption","other","mapStrToOptions","items","i","path","yesNoOptions","toYesNoOption","values","mapOptions","option","tag","Object","d","reduce","accum","cur","Array","isArray","concat","Promise","all","inArray","arr","expression","validateSeries","conditions","_resolveDynamicComponent","formType","skipSummary","activeField","onOnFinish","onFinish","onOnIndex","onIndex","TouchScreenForm","emits","props","Function","Boolean","default","String","$emit","dformat","HisDate","toStandardHisDisplayFormat","priority","action","infoActionSheet","slot","color","modal","optionsActionSheet","role","isCondition","ignored","undefined","prop","includes","every","sortByPriority","sortByWeight","weight","guidelines","target","targetEvent","sortBy","matches","guidelineIndex","targetValidations","some","title","description","text","info","COMPONENT_REFS","TT_ASYNC_MULTI_SELECT","TT_LINKAGE_CODE","TT_MULTI_SELECT_GRID","TT_AGE_INPUT","TT_BARCODE","TT_NOTE","TT_CARD_SELECTOR","TT_MULTIPLE_SELECT","TT_NUMBER","TT_MONTHLY_DAYS","TT_ART_REGIMEN_SELECTION","TT_NEXT_VISIT_INTERVAL_SELECTION","TT_TABLE_VIEWER","TT_DOSAGE_INPUT","TT_YES_NO","TT_MULTIPLE_YES_NO","TT_WEIGHT_CHART","TT_VITALS_ENTRY","TT_APPOINTMENTS_ENTRY","TT_COMPLAINTS_PICKER","TT_CLINIC_HOLIDAY_PICKER","TT_SUMMARY","TT_ART_STAGING_SUMMARY","TT_ADHERENCE_INPUT","TT_LAB_ORDERS","TT_PERSON_RESULT_VIEW","TT_PROGRAM_SELECTION","TT_DATE_PICKER","TT_RELATION_SELECTION","TT_FILING_NUMBER_VIEW","TT_PERSON_MATCH_VIEW","TT_FULL_DATE","TT_BATCH_ENTRY","TT_BATCH_VERIFICATION","TT_BATCH_MOVEMENT","TT_IP_ADDRESS","TT_TEXT_BANNER","TT_DISPENSATION_INPUT","TT_DATA_TABLE","TT_GROUP_SELECTOR","TT_ANC_PREGNANCY_INPUT_CONFIG","TT_ANC_PREGNANCY_DETAILS_INPUT","TT_ANC_LMP_DATE_INPUT","TT_DRUG_TRANSFER_IN","TT_GRID_SELECTOR","TT_ANC_DRUGSET_INPUT","TT_RADIOLOGY_PICKER","TT_PRESCRIPTION_INPUT","TT_INFINITE_SCROLL_MULTIPLE_SELECT","TT_DRUG_DISPENSER","facilities","LocationService","f","trim","facility","location_id","getLabFacilities","getLabs","getFacilityWards","wards","ward","getSpecialistClinics","clinics","clinic","getRegions","regions","region","region_id","getDistricts","regionID","districts","district","district_id","getTraditionalAuthorities","districtID","TAs","TA","traditional_authority_id","getVillages","traditionalAuthorityID","villages","village","village_id","getVillagesByName","page","getLandmarks","landmarks","landmark","code","webpackAsyncContext","req","__webpack_require__","o","resolve","Error","ids","slice","keys","module","exports"],"mappings":"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,iBACA,WACA,mBACA,UACA,SACA,kBACA,SAGJ,OAAOA,EAAUjT,IAAIkT,IAAQ,CACzBhT,MAAOgT,EACP/S,MAAO+S,EACPlK,MAAO,CACHmK,KAAMD,Q,qBC5GlB,IAAIlT,EAAM,CACT,wBAAyB,CACxB,OACA,qBAED,wBAAyB,CACxB,OACA,qBAED,iCAAkC,CACjC,OACA,qBAED,+BAAgC,CAC/B,OACA,qBAED,0BAA2B,CAC1B,OACA,qBAED,yBAA0B,CACzB,OACA,iBACA,qBAED,sBAAuB,CACtB,OACA,qBAED,kCAAmC,CAClC,OACA,qBAED,0BAA2B,CAC1B,OACA,iBACA,qBAED,mBAAoB,CACnB,OACA,qBAED,yBAA0B,CACzB,OACA,sBAED,6BAA8B,CAC7B,OACA,sBAED,0BAA2B,CAC1B,OACA,iBACA,sBAED,oBAAqB,CACpB,OACA,sBAED,wBAAyB,CACxB,OACA,iBACA,sBAED,+BAAgC,CAC/B,OACA,sBAED,wBAAyB,CACxB,OACA,sBAED,sBAAuB,CACtB,OACA,iBACA,iBACA,sBAED,yBAA0B,CACzB,OACA,iBACA,iBACA,sBAED,6BAA8B,CAC7B,OACA,iBACA,iBACA,sBAED,wBAAyB,CACxB,OACA,sBAED,+BAAgC,CAC/B,OACA,iBACA,sBAED,4BAA6B,CAC5B,OACA,sBAED,qBAAsB,CACrB,OACA,sBAED,qBAAsB,CACrB,OACA,sBAED,sBAAuB,CACtB,OACA,iBACA,sBAED,uBAAwB,CACvB,OACA,iBACA,sBAED,wBAAyB,CACxB,OACA,sBAED,yBAA0B,CACzB,OACA,sBAED,qBAAsB,CACrB,OACA,sBAED,wCAAyC,CACxC,OACA,sBAED,qBAAsB,CACrB,OACA,iBACA,sBAED,uBAAwB,CACvB,OACA,sBAED,2BAA4B,CAC3B,OACA,sBAED,0BAA2B,CAC1B,OACA,iBACA,sBAED,6BAA8B,CAC7B,OACA,sBAED,gBAAiB,CAChB,OACA,sBAED,uBAAwB,CACvB,OACA,sBAED,6BAA8B,CAC7B,OACA,iBACA,sBAED,2BAA4B,CAC3B,OACA,sBAED,kBAAmB,CAClB,OACA,sBAED,mBAAoB,CACnB,OACA,sBAED,uBAAwB,CACvB,OACA,sBAED,sBAAuB,CACtB,OACA,sBAED,qBAAsB,CACrB,OACA,sBAED,uBAAwB,CACvB,OACA,sBAED,uBAAwB,CACvB,OACA,sBAED,yBAA0B,CACzB,OACA,sBAED,yBAA0B,CACzB,OACA,sBAED,wBAAyB,CACxB,OACA,sBAED,yBAA0B,CACzB,OACA,sBAED,yBAA0B,CACzB,OACA,sBAED,2BAA4B,CAC3B,OACA,sBAED,oBAAqB,CACpB,OACA,sBAED,oBAAqB,CACpB,OACA,uBAGF,SAASoT,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEvT,EAAKqT,GAC9B,OAAOlJ,QAAQqJ,UAAU3O,MAAK,WAC7B,IAAIwC,EAAI,IAAIoM,MAAM,uBAAyBJ,EAAM,KAEjD,MADAhM,EAAE8L,KAAO,mBACH9L,KAIR,IAAIqM,EAAM1T,EAAIqT,GAAM9R,EAAKmS,EAAI,GAC7B,OAAOvJ,QAAQC,IAAIsJ,EAAIC,MAAM,GAAG3T,IAAIsT,EAAoBjM,IAAIxC,MAAK,WAChE,OAAOyO,EAAoB/R,MAG7B6R,EAAoBQ,KAAO,WAC1B,OAAOjK,OAAOiK,KAAK5T,IAEpBoT,EAAoB7R,GAAK,OACzBsS,EAAOC,QAAUV","file":"js/chunk-5de0132c.ea699d4b.js","sourcesContent":["export const DEFAULT_KEYPAD = [\n    ['1', '2', '3'],\n    ['4', '5', '6'],\n    ['7', '8', '9'],\n    ['.', '0', 'Del'],\n    ['',  'Done', '']\n]\nexport const PRESCRIPTION_KEYPAD = [\n    ['1', '2', '3'],\n    ['4', '5', '6'],\n    ['7', '8', '9'],\n    ['Del', '0', '.'],\n    ['Unknown', '', ''],\n]\nexport const FLOAT_KEYPAD = [\n    ['1', '2', '3'],\n    ['4', '5', '6'],\n    ['7', '8', '9'],\n    ['.', '0', '']\n]\nexport const VITALS_KEYPAD = [\n    ['1', '2', '3'],\n    ['4', '5', '6'],\n    ['7', '8', '9'],\n    ['.', '0', 'Del'],\n    ['Clear',  '%', '/']\n]\nexport const DRUG_DISPENSER_KEYPAD = [\n    ['1', '2', '3'],\n    ['4', '5', '6'],\n    ['7', '8', '9'],\n    ['Del.', '0', 'Clear'],\n    // ['Reset',  'Close', 'Dispense']\n]\nexport const CD4_COUNT_PAD_LO = [\n    ['1', '2', '3', '<'],\n    ['4', '5', '6', '>'],\n    ['7', '8', '9', '='],\n    ['',  '0', '']\n]\n\nexport const SYMBOLS = [\n    ['1', '2', '3', '+', '-', '/', '*'],\n    ['4', '5', '6', '%', '=', '<', '>', 'Qwerty'],\n    ['7', '8', '9', '.', ','],\n    ['',  '0', '']\n]\n\nexport const NUMBER_PAD_LO = [\n    ['1', '2', '3'],\n    ['4', '5', '6'],\n    ['7', '8', '9'],\n    ['',  '0', '']\n]\n\nexport const NUMBER_ARROW_PAD_LO = [\n    ['1', '2', '3'],\n    ['4', '5', '6'],\n    ['7', '8', '9'],\n    ['←',  '0', '→']\n]\n\nexport const MONTHLY_DAYS_LO = [\n    ['1', '2', '3', '4', '5', '6', '7'],\n    ['8', '9', '10', '11', '12', '13', '14'],\n    ['15', '16', '17', '18', '19', '20', '21'],\n    ['22', '23', '24', '25', '26', '27', '28'],\n    ['29', '30', '31']\n]\n\nexport const ALPHABETICAL_LO = [\n    ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', '.'],\n    ['i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q'],\n    ['r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n]\n\nexport const QWERTY_LO = [\n    ['q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p'],\n    ['a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l', \"'\"],\n    ['z', 'x', 'c', 'v', 'b', 'n', 'm',',', '.', 'A-Z']\n]\n\nexport const CHARACTERS_AND_NUMBERS_LO = [\n    ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0'],\n    ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', '-', '.'],\n    ['i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q'],\n    ['r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n]\nexport const NOTE_PAD_KEYBOARD = [\n    ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0', 'Del'],\n    [\"q\", \"w\", \"e\", \"r\", \"t\", \"y\", \"u\", \"i\", \"o\", \"p\", 'Clear'],\n    [\"a\", \"s\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \".\", \"Caps\"],\n    [\"z\", \"x\", \"c\", \"v\", \"b\", \"n\", \"m\", \"<\", \">\", \"/\", \"Enter\"], \n]\n\nexport const LOGIN_KEYBOARD =  [\n    [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"0\"],\n    [\"q\", \"w\", \"e\", \"r\", \"t\", \"y\", \"u\", \"i\", \"o\", \"p\"],\n    [\"a\", \"s\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"Del.\"],\n    [\"z\", \"x\", \"c\", \"v\", \"b\", \"n\", \"m\", \"Caps\", \"Login\"],\n];\n","import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_his_standard_form = _resolveComponent(\"his-standard-form\")!\n\n  return (_openBlock(), _createBlock(_component_his_standard_form, {\n    cancelDestinationPath: _ctx.cancelDestination,\n    fields: _ctx.fields,\n    onFinishAction: _ctx.onSubmit\n  }, null, 8, [\"cancelDestinationPath\", \"fields\", \"onFinishAction\"]))\n}","import { AppEncounterService } from \"@/services/app_encounter_service\"\n\nexport class PatientVisitRegistrationService extends AppEncounterService {\n    constructor(patientID: number, providerID: number) {\n        super(patientID, 104, providerID) \n    }\n}\n","\nimport { defineComponent} from 'vue'\nimport HisStandardForm from \"@/components/Forms/HisStandardForm.vue\";\nimport EncounterMixinVue from '@/views/EncounterMixin.vue';\nimport { PatientVisitRegistrationService } from \"@/apps/AETC/services/patient_registration_service\"\nimport Validation from '@/components/Forms/validations/StandardValidations';\nimport { Field, Option } from '@/components/Forms/FieldInterface';\nimport { FieldType } from '@/components/Forms/BaseFormElements';\nimport { getFacilities } from '@/utils/HisFormHelpers/LocationFieldOptions';\nimport { toastWarning } from '@/utils/Alerts';\nimport { Patientservice } from '@/services/patient_service';\nimport { MALAWI_NATIONAL_ID_TYPE } from '@/constants';\nimport { CHARACTERS_AND_NUMBERS_LO, NOTE_PAD_KEYBOARD } from '@/components/Keyboard/KbLayouts';\n\nexport default defineComponent({\n    components: { HisStandardForm },\n    mixins: [EncounterMixinVue],\n    data: () => ({\n        registrationService: {} as any\n    }),\n    watch: {\n        ready: {\n            async handler(isReady: boolean) {\n                if(isReady){\n                    this.registrationService = new PatientVisitRegistrationService(this.patient.getID(), this.providerID)\n                    this.fields = this.getFields()\n                }\n            },\n            immediate: true,\n            deep: true\n        }\n    },\n    methods: {\n        mapToOption(listOptions: Array<string>): Array<Option> {\n            return listOptions.map((item: any) => ({ label: item, value: item }))\n        },\n        async onSubmit(formData: any, computedData: any){\n            await this.asignNID(formData)\n            const encounter = await this.registrationService.createEncounter()\n            if (!encounter) return toastWarning('Unable to create registration encounter')\n            \n            const registrationData = await this.resolveObs({...computedData})\n            const registrationObs = await this.registrationService.saveObservationList(registrationData)\n            if (!registrationObs) return toastWarning('Unable to save observations')\n\n            this.nextTask()        \n        },\n        async asignNID(formData: any) {\n            const nidAvailable = formData['national_id_available']\n            const nid = formData['national_id']\n            if(nidAvailable && nidAvailable.value === 'Yes') {\n                await this.patient.updateMWNationalId(nid.value)\n            }\n        },\n        async mwIdExists(nid: string) {\n            if(!nid) return false\n            const people = await Patientservice.findByOtherID(MALAWI_NATIONAL_ID_TYPE, nid)\n            return people.length > 0\n        },\n        getFields(): Array<Field>{\n            return [\n                {\n                    id: 'visit_type',\n                    helpText: 'Type of visit',\n                    type: FieldType.TT_SELECT,\n                    validation: (value: any) => Validation.required(value),\n                    computedValue: (v: Option) => ({ obs: this.registrationService.buildValueCoded('Type of visit', v.value)}),\n                    options: () => {\n                        return [\n                            { label: 'New', value: 'New patient' },\n                            { label: 'Referral', value: 'Referral' },\n                            { label: 'Re-visiting', value: 'Re-visiting' },\n                        ]\n                    }\n                },\n                {\n                    id: 'referring_facility_name',\n                    helpText: 'Referred from',\n                    type: FieldType.TT_SELECT,\n                    validation: (value: any) => Validation.required(value),\n                    computedValue: ({ label }: Option) => ({obs: this.registrationService.buildValueText('Referred from', label)}),\n                    condition: (fields: any) => fields.visit_type.value === 'Referral',\n                    options: (_: any, filter='') => getFacilities(filter),\n                    config: {\n                        showKeyboard: true,\n                        isFilterDataViaApi: true\n                    }\n                },\n                {\n                    id: 'life_threatening_condition',\n                    helpText: 'Life threatening condition',\n                    type: FieldType.TT_SELECT,\n                    computedValue: (value: Option) => ({obs: this.registrationService.buildValueCoded('Life threatening condition', value.value)}),\n                    validation: (val: any) => Validation.required(val),\n                    options: () => this.mapToOption([\n                                'Airway',\n                                'Breathing',\n                                'Coma',\n                                'Confusion',\n                                'Convulsion',\n                                'Disability',\n                                'none',\n                                'other',\n                                'Temperatur (The child is very hot)'\n                            ])\n                },\n                {\n                    id: 'national_id_available',\n                    helpText: 'National ID Available',\n                    type: FieldType.TT_SELECT,\n                    validation: (value: any) => Validation.required(value),\n                    condition: () => this.patient.getMWNationalID() === 'Unknown',\n                    options: () => this.yesNoUnknownOptions(),\n                    appearInSummary: () => false\n                },\n                {\n                    id: 'national_id',\n                    helpText: 'Enter National ID',\n                    type: FieldType.TT_TEXT,\n                    validation: (value: Option) => Validation.isMWNationalID(value),\n                    condition: (fields: any) => fields.national_id_available.value === 'Yes',\n                    beforeNext: async (field: Option) => {\n                        if(field.value && (await this.mwIdExists(field.value.toString()))){\n                            toastWarning('National ID already exists')\n                            return false\n                        }\n                        return true\n                    },\n                    summaryMapValue: ({ value }: Option) => ({\n                        value,\n                        label: 'National ID'\n                    }),\n                    config: {\n                        casing: 'uppercase',\n                        customKeyboard: [CHARACTERS_AND_NUMBERS_LO, [['Delete']]],\n                    }\n                },\n                {\n                    id: 'triage',\n                    helpText: 'Select Triage Category',\n                    type: FieldType.TT_SELECT,\n                    computedValue: (value: Option) => ({obs: this.registrationService.buildValueCoded('Triage category', value.value)}),\n                    validation: (val: any) => Validation.required(val),\n                    options: () => this.mapToOption([\n                                'Emergency',\n                                'Priority',\n                                'Queue'\n                            ])\n                }\n            ]\n        }\n    }\n})\n","import { render } from \"./Registration.vue?vue&type=template&id=0ebeb758&ts=true\"\nimport script from \"./Registration.vue?vue&type=script&lang=ts\"\nexport * from \"./Registration.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/anthony/Documents/source/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","\n/**\n * @deprecated moved to useEncounter composable\n * \n */\nimport { defineComponent } from 'vue'\nimport { Field, Option } from '@/components/Forms/FieldInterface'\nimport { ProgramService } from \"@/services/program_service\"\nimport { find, isEmpty } from \"lodash\"\nimport { nextTask } from \"@/utils/WorkflowTaskHelper\"\nimport { ENCOUNTER_GUIDELINES, FlowState } from \"@/guidelines/encounter_guidelines\"\nimport { matchToGuidelines } from \"@/utils/GuidelineEngine\"\nimport HisStandardForm from \"@/components/Forms/HisStandardForm.vue\";\nimport { toastDanger } from '@/utils/Alerts'\nimport Store from \"@/composables/ApiStore\"\n\nexport default defineComponent({\n    components: { HisStandardForm },\n    data: () => ({\n        patient: {} as any,\n        fields: [] as Array<Field>,\n        patientID: '' as any,\n        providerID: -1 as number,\n        providers: [] as any,\n        facts: {\n            sessionDate: '' as string,\n            apiDate: '' as string,\n            encounterName: 'N/A' as string,\n            providers: [] as Array<any>,\n            isBdeMode: false as boolean,\n            birthDate: '' as string,\n            outcome: '' as string,\n            outcomeStartDate: '' as string\n        },\n        ready: false\n    }),\n    watch: {\n       '$route': {\n            handler(route: any) {\n                if(route.params.patient_id && this.patientID != route.params.patient_id) {\n                    this.patientID = parseInt(route.params.patient_id);\n                    Store.get('ACTIVE_PATIENT', { patientID: this.patientID})\n                        .then(patientData => {\n                            this.patient = patientData\n                            this.setEncounterFacts().then(() => {\n                                this.checkEncounterGuidelines().then(() => {\n                                    this.ready = true\n                                })\n                            })\n                        })\n                    }\n            },\n            immediate: true,\n            deep: true\n        }\n    },\n    computed: {\n        cancelDestination(): string {\n            return this.patientDashboardUrl()\n        }\n    },\n    methods: {\n        runflowState(state: FlowState, params=null) {\n            const states: any = {}\n            states[FlowState.SET_PROVIDER] = (selection: any) => {\n                const [ username ] = selection.split(' ')\n                const provider = find(this.providers, { username })\n                if (provider) this.providerID = provider.person_id\n                return FlowState.CONTINUE\n            }\n            states[FlowState.CHANGE_SESSION_DATE] = () => { \n                this.$router.push(`/session/date?patient_dashboard_redirection_id=${this.patientID}`)\n                return FlowState.EXIT\n            }\n            states[FlowState.CHANGE_PATIENT_OUTCOME] = () => {\n                this.$router.push(`/patient/programs/${this.patientID}`)\n                return FlowState.EXIT\n            }\n            states[FlowState.GO_TO_PATIENT_DASHBOARD] = () => {\n                this.gotoPatientDashboard()\n                return FlowState.EXIT\n            }\n            if (state in states) {\n                return states[state](params)\n            }\n        },\n        async checkEncounterGuidelines() {\n            const findings = matchToGuidelines(this.facts, ENCOUNTER_GUIDELINES)\n            for(const index in findings) {\n                const finding = findings[index]\n                if (finding?.actions?.alert) {\n                    const status = this.runflowState((await finding?.actions?.alert(this.facts)))\n                    if (status === FlowState.EXIT) return\n                }\n                if (finding?.actions?.selection) {\n                    const selection = await finding?.actions?.selection(this.facts)\n                    this.runflowState(selection.flowState, selection.value)\n                }\n            }\n        },\n        async setEncounterFacts() {\n            try {\n                const program = await Store.get('PATIENT_PROGRAM', { patientID: this.patientID })\n                this.facts.outcome = program.outcome\n                this.facts.outcomeStartDate = program.startDate\n            } catch (e) {\n                console.error(e)\n                toastDanger(`${e}`)\n            }\n            this.facts.sessionDate = ProgramService.getSessionDate()\n            this.facts.apiDate = ProgramService.getCachedApiDate() as string\n            this.facts.isBdeMode = ProgramService.isBDE() as boolean\n            this.facts.birthDate = this.patient.getBirthdate()\n            this.facts.encounterName = this.$route.name \n                ? this.$route.name.toString().toUpperCase()\n                : 'N/A'\n            if (ProgramService.isBDE()) {\n                this.providers = await Store.get('PROVIDERS')\n                this.facts.providers = this.providers\n                    .sort((a: any, b: any) => {\n                        const usernameA = a.username.toUpperCase()\n                        const usernameB = b.username.toUpperCase()\n                        return usernameA < usernameB ? -1 : usernameA > usernameB  ? 1 : 0\n                    })\n                    .map((p: any) => {\n                        let name = `${p.username}`\n                        if (!isEmpty(p?.person?.names)) {\n                            const [ latestName ] = p.person?.names || []\n                            name += ` (${latestName.given_name} ${latestName.family_name})`\n                        }\n                        return name\n                    })\n            }\n        },\n        toOption(label: string, other={}) {\n            return {\n                label,\n                value: label,\n                other\n            }\n        },\n        mapStrToOptions(items: string[]) {\n            return items.map(i => ({label: i, value: i}))\n        },\n        patientDashboardUrl(): string {\n            return `/patient/dashboard/${this.patientID}`\n        },\n        gotoPatientDashboard() {\n            return this.$router.push({path: this.patientDashboardUrl()})\n        },\n        nextTask() {\n            return nextTask(this.patientID, this.$router)\n        },\n        yesNoOptions(): Option[] {\n            return [\n                { label: \"Yes\", value: \"Yes\" },\n                { label: \"No\", value: \"No\" }\n            ]\n        },\n        toYesNoOption(label: string, other: any={}): Option {\n            return {\n                label,\n                value: '',\n                other: {\n                    ...other,\n                    values: this.yesNoOptions()\n                }\n            } \n        },\n        mapOptions(options: Array<string>) {\n            return options.map((option) => {\n                return { label: option, value: option }\n            });\n        },\n        yesNoUnknownOptions(): Option[] {\n            return [\n                { label: \"Yes\", value: \"Yes\" },\n                { label: \"No\", value: \"No\" },\n                { label: \"Unknown\", value: \"Unknown\" }\n            ]\n        },\n        resolveObs(obs: any, tag='') {\n            const values: any = Object.values(obs)\n                .filter((d: any) => d && (d.tag === tag || tag === ''))\n                .reduce((accum: any, cur: any) => { \n                    const data = cur.obs ? cur.obs : cur\n                    if (Array.isArray(data)) {\n                        accum = accum.concat(data)\n                    } else if (typeof data === 'function') {\n                        accum.push(data())\n                    } else {\n                        accum.push(data)\n                    }\n                    return accum\n                    }, [])\n            return Promise.all(values)\n        },\n        inArray(arr: Array<any>, expression: (i: any) => boolean): boolean {\n            try {\n                return arr.filter((i: any) => expression(i)).length > 0\n            } catch (e) {\n                return false\n            }\n        },\n        validateSeries(conditions: Array<any>){\n            try {\n                for(const i in conditions) {\n                    const condition = conditions[i]()\n\n                    if (condition) return condition\n                }\n            } catch (e) {\n                return [e]\n            }\n        }\n    }\n})\n","import script from \"./EncounterMixin.vue?vue&type=script&lang=ts\"\nexport * from \"./EncounterMixin.vue?vue&type=script&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { resolveDynamicComponent as _resolveDynamicComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createBlock(_resolveDynamicComponent(_ctx.formType), {\n    fields: _ctx.fields,\n    skipSummary: _ctx.skipSummary,\n    activeField: _ctx.activeField,\n    cancelDestinationPath: _ctx.cancelDestinationPath,\n    onOnFinish: _ctx.onFinish,\n    onFinish: _ctx.onFinishAction,\n    onOnIndex: _ctx.onIndex\n  }, null, 40, [\"fields\", \"skipSummary\", \"activeField\", \"cancelDestinationPath\", \"onOnFinish\", \"onFinish\", \"onOnIndex\"]))\n}","\nimport TouchScreenForm from \"@/components/Forms/TouchScreenForm.vue\";\nimport { defineComponent, PropType } from \"vue\";\nimport { Field } from \"./FieldInterface\";\n\nexport default defineComponent({\n    name: \"HisStandardForm\",\n    components: { TouchScreenForm },\n    emits: [\n        'onFinish',\n        'onIndex'\n    ],\n    data: () => ({\n        formType: 'touch-screen-form' as string\n    }),\n    props: {\n        onFinishAction: {\n            type: Function\n        },\n        skipSummary: {\n            type: Boolean,\n            default: false\n        },\n        activeField: {\n            type: String\n        },\n        fields: {\n            type: Object as PropType<Field[]>,\n            required: true\n        },\n        cancelDestinationPath: {\n            type: String,\n            required: false,\n        }\n    },\n    methods: {\n        onFinish(formData: any, computedData: any) {\n            this.$emit('onFinish', formData, computedData)\n        },\n        onIndex(i: number) {\n            this.$emit('onIndex', i)\n        }\n    }\n})\n","import { render } from \"./HisStandardForm.vue?vue&type=template&id=6daa0375&ts=true\"\nimport script from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\nexport * from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/anthony/Documents/source/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { infoActionSheet, optionsActionSheet } from \"@/utils/ActionSheets\";\nimport { GuideLineInterface } from \"@/utils/GuidelineEngine\";\nimport HisDate from '@/utils/Date'\n\nexport enum FlowState {\n    SET_PROVIDER = 'SET_PROVIDER',\n    CHANGE_SESSION_DATE = 'change_session_date',\n    GO_TO_PATIENT_DASHBOARD = 'go_to_patient_dashboard',\n    CHANGE_PATIENT_OUTCOME = 'change_outcome',\n    CONTINUE = 'continue',\n    EXIT = 'exit'\n}\nconst dformat = (d: string) => HisDate.toStandardHisDisplayFormat(d)\n\nexport const ENCOUNTER_GUIDELINES: Record<string, GuideLineInterface> = {\n    \"Warn if attempting to create new encounters for a deceased patient\": {\n        priority: 1,\n        actions: {\n            alert: async ({ outcomeStartDate }: any) => {\n                const action = await infoActionSheet(\n                    'Data Integrity Issue Found',\n                    `Patient died on ${dformat(outcomeStartDate)}`,\n                    'Proceeding with this outcome might affect accuracy of some reports',\n                    [\n                        { name: 'Cancel', slot: 'end', color: 'primary'},\n                        { name: 'Change outcome', slot: 'end', color: 'primary'},\n                        { name: 'Continue Anyway', slot: 'end', color: 'danger'}\n                    ]\n                )\n                return action === 'Cancel'\n                    ? FlowState.GO_TO_PATIENT_DASHBOARD\n                    : action === 'Change outcome'\n                    ? FlowState.CHANGE_PATIENT_OUTCOME\n                    : FlowState.CONTINUE\n            }\n        },\n        conditions: {\n            outcome(outcome: string) {\n                return outcome === 'Patient died'\n            },\n            outcomeStartDate(startDate: string, { sessionDate }: any) {\n                return sessionDate >= startDate\n            }\n        }\n    },\n    \"A patient's date of birth must not be less than Session Date\": {\n        priority: 2,\n        actions: {\n            alert: async ({ birthDate, sessionDate}: any) => {\n                const action = await infoActionSheet(\n                    'Data integrity issue found', '',\n                    `Session date ${dformat(sessionDate)} is less than birth date of ${dformat(birthDate)}`,\n                    [\n                        { name: 'Cancel', slot: 'end', color: 'danger'},\n                        { name: 'Change session date', slot: 'end', color: 'success'}\n                    ]\n                )\n                return action === 'Change session date'\n                    ? FlowState.CHANGE_SESSION_DATE\n                    : FlowState.GO_TO_PATIENT_DASHBOARD\n            }\n        },\n        conditions: {\n            birthDate(birthDate: string, { sessionDate }: any) {\n                return sessionDate < birthDate\n            }\n        }\n    },\n    \"Select Encounter provider when in back data entry\": {\n        priority: 3,\n        actions: {\n            selection: async ({ providers, encounterName, sessionDate, apiDate }: any) => {\n                const modal = await optionsActionSheet(\n                    `Please select a provider for ${encounterName}`,\n                    `BDE: ${dformat(sessionDate)} | Current: ${dformat(apiDate)}`,\n                    providers,\n                    [\n                        { name: 'Cancel', color: 'danger', slot: 'start', role: 'default'},\n                        { name: 'Confirm', slot: 'end', role: 'action' }\n                    ]\n                )\n                return modal.action === 'Cancel' \n                    ? { value: -1, flowState: FlowState.GO_TO_PATIENT_DASHBOARD }\n                    : { value: modal.selection, flowState: FlowState.SET_PROVIDER }\n            }\n        },\n        conditions: {\n            isBdeMode(isBDE: boolean) {\n                return isBDE\n            }\n        }\n    }\n}","/**\n * Compares patient facts against a predefined guideline Object.\n*/\nexport interface DescriptionInterface {\n    color?: 'primary' | 'secondary' | 'danger' | 'warning';\n    info: (facts: FactsInterface) => any;\n    text?: string;\n    show: 'onChecked' | 'always';\n}\n\nexport interface GuideLineInterface {\n    title?: string;\n    concept?: string;\n    weight?: number;\n    priority?: number;\n    conditions: ConditionsInteface;\n    actions?: Record<string, any>; //TODO: should <key, Function>\n    data?: Record<string, any>;\n    description?: DescriptionInterface;\n    target?: string;\n    targetEvent?: string;\n}\n\nexport type FactsInterface = Record<string, any>\nexport type ConditionResolver = (value: any, facts: FactsInterface) => boolean | RegExpMatchArray | null\nexport type ConditionsInteface = Record<string, ConditionResolver>\n\n/**\n * Match the facts with guidelines\n * @param facts \n * @param conditions \n * @returns \n */\nfunction isCondition(facts: FactsInterface, conditions: ConditionsInteface): boolean {\n    const state = [] \n    const ignored = [-1, '', null, undefined]\n\n    for(const prop in conditions) {\n        if (!(prop in facts)) \n            continue\n        \n        const value = facts[prop]\n        if (ignored.includes(value)) {\n            state.push(false)\n            continue\n        }\n\n        state.push(conditions[prop](value, facts))\n    }\n    return state.every(Boolean)\n}\n\n/**\n * Sort guidelines in the order of importance/relevance\n * @param findings \n * @returns \n */\nfunction sortByPriority(findings: GuideLineInterface[]) {\n    return findings.sort((a, b) => (a.priority && b.priority) && a.priority < b.priority ? -1 : 1)\n}\n\nfunction sortByWeight(findings: GuideLineInterface[]) {\n    return findings.sort((a, b) => (a.weight && b.weight) && a.weight > b.weight ? -1 : 1)\n}\n\nexport function logFindingsByWeight(guidelines: Record<string, GuideLineInterface>) {\n    const findings: any = Object.keys(guidelines).map(i => ({ name: i, weight: guidelines[i].weight}))\n    console.log(sortByWeight(findings).map((i: any) => `${i.weight} -> ${i.name}`))\n}\n\n/**\n * Check the guideline for matching facts and return matching object \n * @param facts: key value pair for used for searching in guidelines\n * @param guidelines: A dictionary containing fixed rules/validations that conforms to GuideLineInterface\n * @param target: Used for matching a target defined in a guidlines before executing conditions\n * @param targetEvent: used for matching a target event in a guideline before executing conditions\n * @returns\n */\nexport function matchToGuidelines(\n    facts: FactsInterface, \n    guidelines: Record<string, GuideLineInterface>,\n    target='', \n    targetEvent='',\n    sortBy='priority' as 'priority' | 'weight'): Array<GuideLineInterface> {\n    const matches = []\n    for(const guidelineIndex in guidelines) {\n        const data: GuideLineInterface = guidelines[guidelineIndex]\n        const targetValidations = [\n            (data.target && target && data.target != target),\n            (data.targetEvent && targetEvent \n                && data.targetEvent != targetEvent)\n        ]\n\n        if (targetValidations.some(Boolean)) {\n            continue\n        }\n\n        if (isCondition(facts, data.conditions)) {\n            data.title = guidelineIndex\n            if (data.description) {\n                data.description.text = data.description.info(facts)\n            }\n            matches.push(data)\n        }\n    }\n    return sortBy === 'priority' ? sortByPriority(matches) : sortByWeight(matches)\n}\n","/**\n * Map all formElements/components defined in \"@/components/FormElements\" \n * in the Enum below by their file name.\n * \n * Next step is to add FieldType entry in COMPONENT_REFS in the \n * Array below the FieldType Enum\n */\nexport enum FieldType {\n    TT_ASYNC_MULTI_SELECT = 'AsyncMultiSelect',\n    TT_LINKAGE_CODE = 'LinkageCodeInput',\n    TT_MULTI_SELECT_GRID= 'HisMultiSelectGrid',\n    TT_AGE_INPUT='HisAgeInput',\n    TT_GROUP_SELECTOR = 'HisGroupSelector',\n    TT_DATA_TABLE = 'HisDataTable',\n    TT_GRID_SELECTOR = 'HisGridSelector',\n    TT_NOTE = 'HisNote',\n    TT_BARCODE = 'HisBarcodeInput',\n    TT_MONTHLY_DAYS=\"HisMonthlyDays\",\n    TT_TEXT=\"HisTextInput\",\n    TT_NUMBER = \"HisNumberInput\",\n    TT_DATETIME=\"datetime\",\n    TT_SELECT=\"HisSelect\",\n    TT_MULTIPLE_SELECT=\"HisMultipleSelect\",\n    TT_ART_REGIMEN_SELECTION=\"HisArtRegimenSelection\",\n    TT_NEXT_VISIT_INTERVAL_SELECTION=\"HisNextVisitInterval\",\n    TT_TABLE_VIEWER=\"HisTableViewer\",\n    TT_DOSAGE_INPUT=\"HisDosageInput\",\n    TT_YES_NO=\"YesNoSelect\",\n    TT_MULTIPLE_YES_NO=\"MultiYesNoSelect\",\n    TT_SUMMARY=\"HisSummary\",\n    TT_WEIGHT_CHART = \"HisWeightChart\",\n    TT_VITALS_ENTRY=\"HisVitalsEntry\",\n    TT_ADHERENCE_INPUT = \"HisAdherenceInput\",\n    TT_ART_STAGING_SUMMARY = \"ArtStagingSummary\",\n    TT_LAB_ORDERS = \"HisLabOrders\",\n    TT_APPOINTMENTS_ENTRY = \"HisAppointments\",\n    TT_DISPENSATION_INPUT = 'DrugDispensationSelection',\n    TT_PROGRAM_SELECTION = 'ProgramSelection',\n    TT_DATE_PICKER = 'HisDatePicker',\n    TT_PERSON_RESULT_VIEW = 'PersonSearchView',\n    TT_RELATION_SELECTION = 'RelationsSelection',\n    TT_FILING_NUMBER_VIEW = 'FilingNumberView',\n    TT_CARD_SELECTOR = 'HisCardSelector',\n    TT_PERSON_MATCH_VIEW = 'PersonMatchView',\n    TT_FULL_DATE = 'HisDateInput',\n    TT_BATCH_ENTRY = 'HisBatchEntry',\n    TT_BATCH_VERIFICATION = 'HisBatchVerification',\n    TT_BATCH_MOVEMENT = 'HisBatchMovement',\n    TT_COMPLAINTS_PICKER = 'HisComplaintsPicker',\n    TT_RADIOLOGY_PICKER = 'HisRadiologyPicker',\n    TT_IP_ADDRESS = 'HisIPAddress',\n    TT_TEXT_BANNER = 'HisTextBanner',\n    TT_DRUG_DISPENSER = 'GeneralDrugDispenser',\n    TT_CLINIC_HOLIDAY_PICKER = 'HisClinicHolidayPicker',\n    TT_ANC_PREGNANCY_INPUT_CONFIG = 'AncPregnancyInfoConfig',\n    TT_ANC_PREGNANCY_DETAILS_INPUT = 'AncPregnancyDetailsInput',\n    TT_ANC_LMP_DATE_INPUT = 'AncLmpDateInput',\n    TT_ANC_DRUGSET_INPUT = 'AncDrugSetInput',\n    TT_DRUG_TRANSFER_IN = 'DrugTransferInput',\n    TT_PRESCRIPTION_INPUT = 'HisPrescriptionInput',\n    TT_INFINITE_SCROLL_MULTIPLE_SELECT=\"HisInfiniteScrollMultipleSelect\"\n}\n\n// Register FieldTypes here that will be registered at runtime\nexport const COMPONENT_REFS: FieldType[] = [\n    FieldType.TT_ASYNC_MULTI_SELECT,\n    FieldType.TT_LINKAGE_CODE,\n    FieldType.TT_MULTI_SELECT_GRID,\n    FieldType.TT_AGE_INPUT,\n    FieldType.TT_BARCODE,\n    FieldType.TT_NOTE,\n    FieldType.TT_SELECT,\n    FieldType.TT_CARD_SELECTOR,\n    FieldType.TT_MULTIPLE_SELECT,\n    FieldType.TT_TEXT,\n    FieldType.TT_NUMBER,\n    FieldType.TT_MONTHLY_DAYS,\n    FieldType.TT_ART_REGIMEN_SELECTION,\n    FieldType.TT_NEXT_VISIT_INTERVAL_SELECTION,\n    FieldType.TT_TABLE_VIEWER,\n    FieldType.TT_DOSAGE_INPUT,\n    FieldType.TT_YES_NO,\n    FieldType.TT_MULTIPLE_YES_NO,\n    FieldType.TT_WEIGHT_CHART,\n    FieldType.TT_VITALS_ENTRY,\n    FieldType.TT_APPOINTMENTS_ENTRY,\n    FieldType.TT_COMPLAINTS_PICKER,\n    FieldType.TT_CLINIC_HOLIDAY_PICKER,\n    FieldType.TT_SUMMARY,\n    FieldType.TT_ART_STAGING_SUMMARY,\n    FieldType.TT_ADHERENCE_INPUT,\n    FieldType.TT_LAB_ORDERS,\n    FieldType.TT_PERSON_RESULT_VIEW,\n    FieldType.TT_PROGRAM_SELECTION,\n    FieldType.TT_DATE_PICKER,\n    FieldType.TT_RELATION_SELECTION,\n    FieldType.TT_FILING_NUMBER_VIEW,\n    FieldType.TT_PERSON_MATCH_VIEW,\n    FieldType.TT_FULL_DATE,\n    FieldType.TT_BATCH_ENTRY,\n    FieldType.TT_BATCH_VERIFICATION,\n    FieldType.TT_BATCH_MOVEMENT,\n    FieldType.TT_IP_ADDRESS,\n    FieldType.TT_TEXT_BANNER,\n    FieldType.TT_DISPENSATION_INPUT,\n    FieldType.TT_DATA_TABLE,\n    FieldType.TT_GROUP_SELECTOR,\n    FieldType.TT_ANC_PREGNANCY_INPUT_CONFIG,\n    FieldType.TT_ANC_PREGNANCY_DETAILS_INPUT,\n    FieldType.TT_ANC_LMP_DATE_INPUT,\n    FieldType.TT_DRUG_TRANSFER_IN,\n    FieldType.TT_GRID_SELECTOR,\n    FieldType.TT_ANC_DRUGSET_INPUT,\n    FieldType.TT_RADIOLOGY_PICKER,\n    FieldType.TT_PRESCRIPTION_INPUT,\n    FieldType.TT_INFINITE_SCROLL_MULTIPLE_SELECT,\n    FieldType.TT_DRUG_DISPENSER\n]\n","import {LocationService} from \"@/services/location_service\"\nimport { Option } from \"@/components/Forms/FieldInterface\"\nimport { isEmpty } from \"lodash\"\n\nexport async function getFacilities(filter=''): Promise<Option[]> {\n    const facilities = await LocationService.getFacilities({name: filter})\n    return facilities.filter((f: any) => !isEmpty(f) && f.name.trim() !='')\n        .map((facility: any) => ({\n            label: facility.name,\n            value: facility.location_id,\n            other: facility\n        }))\n}\n\nexport async function getLabFacilities(filter=''): Promise<Option[]> {\n    const facilities = await LocationService.getLabs({'search_name': filter})\n    return facilities.map((facility: any) => ({\n            label: facility,\n            value: facility\n        }))\n}\n\nexport async function getFacilityWards(filter=''): Promise<Option[]> {\n    const wards = await LocationService.getFacilities({\n        name: filter,\n        tag: 'Facility adult sections'\n    })\n\n    return wards.map((ward: any) => ({\n        label: ward.name,\n        value: ward.name,\n        other: ward\n    }))\n}\n\nexport async function getSpecialistClinics(): Promise<Option[]> {\n    const clinics = await LocationService.getSpecialistClinics()\n    return clinics.map((clinic: any) => ({\n        label: clinic.name,\n        value: clinic.name,\n        other: clinic\n    }))\n}\n\nexport async function getRegions(): Promise<Option[]> {\n    const regions = await LocationService.getRegions()\n    return regions.map((region: any) => ({\n        label: region.name,\n        value: region.region_id,\n        other: region\n    }))\n}\n\nexport async function getDistricts(regionID: number): Promise<Option[]> {\n    const districts = await LocationService.getDistricts(regionID)\n    return districts.map((district: any) => ({\n        label: district.name,\n        value: district.district_id,\n        other: district\n    }))\n}\n\nexport async function getTraditionalAuthorities(districtID: number, name=''): Promise<Option[]> {\n    const TAs = await LocationService.getTraditionalAuthorities(districtID, name)\n    return TAs.map((TA: any) => ({\n        label: TA.name,\n        value: TA.traditional_authority_id,\n        other: TA\n    }))\n}\n\nexport async function getVillages(traditionalAuthorityID: number, name=''): Promise<Option[]> {\n    const villages = await LocationService.getVillages(traditionalAuthorityID, name)\n    return villages.map((village: any) => ({\n        label: village.name,\n        value: village.village_id,\n        other: village\n    }))\n}\n\nexport async function getVillagesByName(name='a', page=1): Promise<Option[]> {\n    const villages = await LocationService.getVillagesByName(name, page)\n    return villages.map((village: any) => ({\n        label: village.name,\n        value: village.village_id,\n        other: village\n    }))\n}\n\nexport function getLandmarks(): Option[] {\n    const landmarks = [\n        'Catholic Church',\n        'CCAP',\n        'Seventh Day',\n        'Mosque',\n        'Primary School',\n        'Borehole',\n        'Secondary School',\n        'College',\n        'Market',\n        'Football Ground',\n        'Other'\n    ]\n\n    return landmarks.map(landmark =>({\n        label: landmark,\n        value: landmark,\n        other: {\n            code: landmark\n        }\n    }))\n}\n","var map = {\n\t\"./AncDrugSetInput.vue\": [\n\t\t\"c99f\",\n\t\t\"TouchFormElement0\"\n\t],\n\t\"./AncLmpDateInput.vue\": [\n\t\t\"101a\",\n\t\t\"TouchFormElement1\"\n\t],\n\t\"./AncPregnancyDetailsInput.vue\": [\n\t\t\"b043\",\n\t\t\"TouchFormElement2\"\n\t],\n\t\"./AncPregnancyInfoConfig.vue\": [\n\t\t\"262e\",\n\t\t\"TouchFormElement3\"\n\t],\n\t\"./ArtStagingSummary.vue\": [\n\t\t\"43db\",\n\t\t\"TouchFormElement4\"\n\t],\n\t\"./AsyncMultiSelect.vue\": [\n\t\t\"5de2\",\n\t\t\"chunk-03993608\",\n\t\t\"TouchFormElement5\"\n\t],\n\t\"./BaseTextInput.vue\": [\n\t\t\"36ad\",\n\t\t\"TouchFormElement6\"\n\t],\n\t\"./DrugDispensationSelection.vue\": [\n\t\t\"05d5\",\n\t\t\"TouchFormElement7\"\n\t],\n\t\"./DrugTransferInput.vue\": [\n\t\t\"de42\",\n\t\t\"chunk-337918c0\",\n\t\t\"TouchFormElement8\"\n\t],\n\t\"./FieldMixin.vue\": [\n\t\t\"51c8\",\n\t\t\"TouchFormElement9\"\n\t],\n\t\"./FilingNumberView.vue\": [\n\t\t\"c650\",\n\t\t\"TouchFormElement10\"\n\t],\n\t\"./GeneralDrugDispenser.vue\": [\n\t\t\"7737\",\n\t\t\"TouchFormElement11\"\n\t],\n\t\"./HisAdherenceInput.vue\": [\n\t\t\"f2c3\",\n\t\t\"chunk-337918c0\",\n\t\t\"TouchFormElement12\"\n\t],\n\t\"./HisAgeInput.vue\": [\n\t\t\"c05f\",\n\t\t\"TouchFormElement13\"\n\t],\n\t\"./HisAppointments.vue\": [\n\t\t\"b2eb\",\n\t\t\"chunk-366b6f0a\",\n\t\t\"TouchFormElement14\"\n\t],\n\t\"./HisArtRegimenSelection.vue\": [\n\t\t\"47b9\",\n\t\t\"TouchFormElement15\"\n\t],\n\t\"./HisBarcodeInput.vue\": [\n\t\t\"dd65\",\n\t\t\"TouchFormElement16\"\n\t],\n\t\"./HisBatchEntry.vue\": [\n\t\t\"f2ab\",\n\t\t\"chunk-182277b5\",\n\t\t\"chunk-337918c0\",\n\t\t\"TouchFormElement17\"\n\t],\n\t\"./HisBatchMovement.vue\": [\n\t\t\"5148\",\n\t\t\"chunk-182277b5\",\n\t\t\"chunk-337918c0\",\n\t\t\"TouchFormElement18\"\n\t],\n\t\"./HisBatchVerification.vue\": [\n\t\t\"7b0f\",\n\t\t\"chunk-182277b5\",\n\t\t\"chunk-337918c0\",\n\t\t\"TouchFormElement19\"\n\t],\n\t\"./HisCardSelector.vue\": [\n\t\t\"0734\",\n\t\t\"TouchFormElement20\"\n\t],\n\t\"./HisClinicHolidayPicker.vue\": [\n\t\t\"4030\",\n\t\t\"chunk-366b6f0a\",\n\t\t\"TouchFormElement21\"\n\t],\n\t\"./HisComplaintsPicker.vue\": [\n\t\t\"82d1\",\n\t\t\"TouchFormElement22\"\n\t],\n\t\"./HisDataTable.vue\": [\n\t\t\"a6ba\",\n\t\t\"TouchFormElement23\"\n\t],\n\t\"./HisDateInput.vue\": [\n\t\t\"374c\",\n\t\t\"TouchFormElement24\"\n\t],\n\t\"./HisDatePicker.vue\": [\n\t\t\"9b30\",\n\t\t\"chunk-366b6f0a\",\n\t\t\"TouchFormElement25\"\n\t],\n\t\"./HisDosageInput.vue\": [\n\t\t\"b34c\",\n\t\t\"chunk-337918c0\",\n\t\t\"TouchFormElement26\"\n\t],\n\t\"./HisGridSelector.vue\": [\n\t\t\"112a\",\n\t\t\"TouchFormElement27\"\n\t],\n\t\"./HisGroupSelector.vue\": [\n\t\t\"81cf\",\n\t\t\"TouchFormElement28\"\n\t],\n\t\"./HisIPAddress.vue\": [\n\t\t\"2a82\",\n\t\t\"TouchFormElement29\"\n\t],\n\t\"./HisInfiniteScrollMultipleSelect.vue\": [\n\t\t\"52a3\",\n\t\t\"TouchFormElement30\"\n\t],\n\t\"./HisLabOrders.vue\": [\n\t\t\"e614\",\n\t\t\"chunk-03993608\",\n\t\t\"TouchFormElement31\"\n\t],\n\t\"./HisMonthlyDays.vue\": [\n\t\t\"69cf\",\n\t\t\"TouchFormElement32\"\n\t],\n\t\"./HisMultiSelectGrid.vue\": [\n\t\t\"0fa3\",\n\t\t\"TouchFormElement33\"\n\t],\n\t\"./HisMultipleSelect.vue\": [\n\t\t\"2fd5\",\n\t\t\"chunk-03993608\",\n\t\t\"TouchFormElement34\"\n\t],\n\t\"./HisNextVisitInterval.vue\": [\n\t\t\"3126\",\n\t\t\"TouchFormElement35\"\n\t],\n\t\"./HisNote.vue\": [\n\t\t\"c927\",\n\t\t\"TouchFormElement36\"\n\t],\n\t\"./HisNumberInput.vue\": [\n\t\t\"5e75\",\n\t\t\"TouchFormElement37\"\n\t],\n\t\"./HisPrescriptionInput.vue\": [\n\t\t\"87e5\",\n\t\t\"chunk-337918c0\",\n\t\t\"TouchFormElement38\"\n\t],\n\t\"./HisRadiologyPicker.vue\": [\n\t\t\"adc7\",\n\t\t\"TouchFormElement39\"\n\t],\n\t\"./HisSelect.vue\": [\n\t\t\"d11f\",\n\t\t\"TouchFormElement40\"\n\t],\n\t\"./HisSummary.vue\": [\n\t\t\"e0bd\",\n\t\t\"TouchFormElement41\"\n\t],\n\t\"./HisTableViewer.vue\": [\n\t\t\"8904\",\n\t\t\"TouchFormElement42\"\n\t],\n\t\"./HisTextBanner.vue\": [\n\t\t\"952c\",\n\t\t\"TouchFormElement43\"\n\t],\n\t\"./HisTextInput.vue\": [\n\t\t\"6ef9\",\n\t\t\"TouchFormElement44\"\n\t],\n\t\"./HisVitalsEntry.vue\": [\n\t\t\"e333\",\n\t\t\"TouchFormElement45\"\n\t],\n\t\"./HisWeightChart.vue\": [\n\t\t\"26a1\",\n\t\t\"TouchFormElement46\"\n\t],\n\t\"./LinkageCodeInput.vue\": [\n\t\t\"ac86\",\n\t\t\"TouchFormElement47\"\n\t],\n\t\"./MultiYesNoSelect.vue\": [\n\t\t\"5fd1\",\n\t\t\"TouchFormElement48\"\n\t],\n\t\"./PersonMatchView.vue\": [\n\t\t\"6591\",\n\t\t\"TouchFormElement49\"\n\t],\n\t\"./PersonSearchView.vue\": [\n\t\t\"28b2\",\n\t\t\"TouchFormElement50\"\n\t],\n\t\"./ProgramSelection.vue\": [\n\t\t\"e3b4\",\n\t\t\"TouchFormElement51\"\n\t],\n\t\"./RelationsSelection.vue\": [\n\t\t\"0e57\",\n\t\t\"TouchFormElement52\"\n\t],\n\t\"./SelectMixin.vue\": [\n\t\t\"82a9\",\n\t\t\"TouchFormElement53\"\n\t],\n\t\"./YesNoSelect.vue\": [\n\t\t\"71f2\",\n\t\t\"TouchFormElement54\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"f159\";\nmodule.exports = webpackAsyncContext;"],"sourceRoot":""}