{"version":3,"sources":["webpack:///./src/apps/ART/views/reports/ReportMixin.vue","webpack:///./src/apps/ART/views/reports/ReportMixin.vue?5c96","webpack:///./src/components/Forms/HisStandardForm.vue?8e31","webpack:///./src/components/Forms/HisStandardForm.vue","webpack:///./src/components/Forms/HisStandardForm.vue?5176","webpack:///./src/apps/ART/views/reports/inconsistencies/PatientVisitStats.vue?31ef","webpack:///./src/apps/ART/views/reports/inconsistencies/PatientVisitStats.vue?c66f","webpack:///./src/apps/ART/views/reports/inconsistencies/PatientVisitStats.vue","webpack:///./src/apps/ART/views/reports/inconsistencies/PatientVisitStats.vue?d03f"],"names":["defineComponent","data","app","App","getActiveApp","fields","report","reportReady","period","startDate","endDate","customFileName","isMilitarySite","drillDownCache","methods","formatGender","gender","fmtGender","toDate","date","HisDate","toStandardHisDisplayFormat","sortByArvNumber","attr","sort","a","b","this","getArvInt","e","console","error","arv","arvNumStr","split","arvNumInt","parseInt","tdARV","params","table","td","sortValue","confirmPatient","patient","$router","push","title","columns","asyncRows","canExport","modal","modalController","create","component","DrilldownTable","cssClass","componentProps","showFilters","rowsPerPage","paginated","showReportStamp","footerColor","onFinish","dismiss","present","rows","rowParser","getDefaultDrillDownTable","thTxt","async","ARV_NUM_INDEX","t","tableRows","map","id","index","isArray","defaultRow","num","key","slice","Patientservice","findByID","row","getArvNumber","getGender","tdDate","getBirthdate","toString","tdBtn","path","Promise","all","runTableDrill","drilldownData","drill","values","length","tdLink","getQuaterOptions","quarters","ArtReportService","getReportQuarters","q","label","name","value","start","other","getDateDurationFields","useQuarter","setCustomQuarterPeriod","maxQuarter","maxDate","Service","getSessionDate","minDate","helpText","type","FieldType","TT_SELECT","condition","validation","val","Validation","required","options","items","generateDateFields","f","quarter","estimation","allowUnknown","computeValue","unload","d","s","c","end_date","_","start_date","init","Store","get","computedValue","v","_this$app","applicationName","__exports__","render","_ctx","_cache","$props","$setup","$data","$options","_openBlock","_createBlock","_resolveDynamicComponent","formType","skipSummary","activeField","cancelDestinationPath","onOnFinish","onFinishAction","onOnIndex","onIndex","components","TouchScreenForm","emits","props","Function","Boolean","default","String","Object","formData","computedData","$emit","i","_withScopeId","n","_pushScopeId","_popScopeId","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","class","_component_his_standard_form","_resolveComponent","_component_ion_title","_component_ion_toolbar","_component_ion_header","_component_ApexChart","_component_view_port","_component_ion_content","_component_ion_button","_component_ion_footer","_component_ion_page","_createElementBlock","_Fragment","canShowReport","_createCommentVNode","onPeriod","_withCtx","_createVNode","_createTextVNode","href","onClick","_withModifiers","drillPatients","totalAttendance","_toDisplayString","totalPatientVisits","totalGuardianVisits","width","height","chartType","chartOptions","series","onMarkerClick","onPointSelection","color","$event","slot","size","ApexChart","IonPage","IonHeader","IonTitle","IonToolbar","IonContent","IonFooter","IonButton","ViewPort","HisStandardForm","mixins","ReportMixin","patients","reportData","patientPresent","guardianPresent","bothPresent","text","yaxis","plotAreaHeight","xaxis","markers","hover","sizeOffset","created","computed","totals","keys","forEach","concat","p","patient_id","reduce","k","conf","presentLoading","PatientReportService","setStartDate","setEndDate","getPatientVisitTypes","buildSeries","loadingController","message","backdropDismiss","patiendId","getCachedPatient","col","getGivenName","getFamilyName","dataPointIndex","seriesIndex","sIndex","dates","raw","drillData","Array","from","Date","toISOString","log","visitDates","uniq","setValueGroup","group","comparator","entries","filter","patient_present","guardian_present","sortSeries","valueGroup","getTime","sortData","guardian"],"mappings":"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","file":"js/chunk-9b28a1be.fb1be1e7.js","sourcesContent":["\nimport { Service } from \"@/services/service\"\nimport { defineComponent } from 'vue'\nimport { Field } from '@/components/Forms/FieldInterface'\nimport { generateDateFields } from \"@/utils/HisFormHelpers/MultiFieldDateHelper\"\nimport { Patientservice } from \"@/services/patient_service\"\nimport HisDate from \"@/utils/Date\"\nimport { modalController } from \"@ionic/vue\";\nimport DrilldownTable from \"@/apps/ART/views/reports/BasicReportTemplate.vue\"\nimport { ArtReportService } from \"@/apps/ART/services/reports/art_report_service\"\nimport { FieldType } from \"@/components/Forms/BaseFormElements\"\nimport { Option } from '@/components/Forms/FieldInterface'\nimport Validation from \"@/components/Forms/validations/StandardValidations\"\nimport table, { AsyncTableRowHandler } from \"@/components/DataViews/tables/ReportDataTable\"\nimport { isArray } from \"lodash\"\nimport Store from \"@/composables/ApiStore\"\nimport App from \"@/apps/app_lib\"\nimport { formatGender as fmtGender } from \"@/utils/Strs\"\n\n\nexport default defineComponent({\n    data: () => ({\n        app: App.getActiveApp(),\n        fields: [] as Array<Field>,\n        report: {} as any,\n        reportReady: false as boolean,\n        period: '' as string,\n        startDate: '' as string,\n        endDate: '' as string,\n        customFileName: '' as string,\n        isMilitarySite: false as boolean,\n        drillDownCache: {} as Record<number, Array<any>>\n    }),\n    methods: {\n        formatGender(gender: string) {\n            return fmtGender(gender);\n        },\n        toDate(date: string) {\n            return HisDate.toStandardHisDisplayFormat(date)\n        },\n        sortByArvNumber(data: Array<any>, attr='arv_number') {\n            try {\n                return data.sort((a: any, b: any) => this.getArvInt(a[attr]) > this.getArvInt(b[attr]) ? 1 : -1)\n            } catch(e) {\n                console.error(e)\n                return data\n            }\n        },\n        getArvInt(arv: string) {\n            if (typeof arv === 'string') {\n                const arvNumStr = arv.split('-')[2]\n                const arvNumInt = parseInt(arvNumStr)\n                return typeof arvNumInt === 'number' ? arvNumInt : 0 \n            }\n            return 0\n        },\n        tdARV(arv: string, params={}) {\n            return table.td(arv, { sortValue: this.getArvInt(arv), ...params})\n        },\n        confirmPatient(patient: number) {\n            return this.$router.push(`/patients/confirm?person_id=${patient}`)\n        },\n        async drilldownAsyncRows(title: string, columns: Array<any>, asyncRows: AsyncTableRowHandler, canExport=true) {\n            const modal = await modalController.create({\n                component: DrilldownTable,\n                cssClass: 'large-modal',\n                componentProps: { \n                    title, \n                    columns, \n                    asyncRows,\n                    canExport,\n                    showFilters: true,\n                    rowsPerPage: 50,\n                    paginated: true,\n                    showReportStamp: false,\n                    footerColor: 'light',\n                    onFinish: () => modalController.dismiss()\n                }\n            })\n            modal.present()\n        },\n        async drilldownData(title: string, columns: Array<any>, rows: Array<any>, rowParser: any) {\n            const modal = await modalController.create({\n                component: DrilldownTable,\n                cssClass: 'large-modal',\n                componentProps: { \n                    title, \n                    columns, \n                    rows,\n                    rowParser,\n                    rowsPerPage: 50,\n                    showFilters: true,\n                    paginated: true,\n                    showReportStamp: false,\n                    footerColor: 'light',\n                    onFinish: () => modalController.dismiss()\n                }\n            })\n            modal.present()\n        },\n        getDefaultDrillDownTable() {\n            const columns = [\n                [\n                    table.thTxt('ARV number'), \n                    table.thTxt('Gender'),\n                    table.thTxt('Birth Date'), \n                    table.thTxt('Actions')\n                ]\n            ]\n            const rowParser = async (tableRows: Array<any[]>) => {\n                let ARV_NUM_INDEX = 0\n                const t = tableRows.map(async (defaultRow: Array<any>) => {\n                    let id: any = null\n                    let index: null | number = null\n                    if (isArray(defaultRow)) {\n                        const [num, key ] = defaultRow\n                        index = num\n                        if (key in this.drillDownCache) {\n                            return [index, ...this.drillDownCache[key].slice(1)]\n                        }\n                    } else {\n                        id = defaultRow\n                        if (id in this.drillDownCache) {\n                            return this.drillDownCache[id]\n                        }\n                    }\n    \n                    const data = await Patientservice.findByID(id)\n                    const patient = new Patientservice(data)\n                    const row = []\n                    if (index) {\n                        ARV_NUM_INDEX = 1\n                        row.push(index)\n                    } \n                    row.push(this.tdARV(patient.getArvNumber()))\n                    row.push(table.td(this.formatGender(patient.getGender())))\n                    row.push(table.tdDate(patient.getBirthdate().toString()))\n                    row.push(table.tdBtn('Show', async () => {\n                        await modalController.dismiss({})\n                        this.$router.push({ path: `/patient/dashboard/${id}`})\n                    }))\n                    this.drillDownCache[id] = row\n                    return row\n                })\n                const rows = await Promise.all(t)\n                return rows.sort((a: any, b: any) => \n                        a[ARV_NUM_INDEX].sortValue > b[ARV_NUM_INDEX].sortValue \n                        ? 1 : -1)\n            }\n            return { rowParser, columns }\n        },\n        runTableDrill(data: any, title='Drilldown patients') {\n            const { columns, rowParser } = this.getDefaultDrillDownTable()\n            this.drilldownData(title, columns, data, rowParser)\n        },\n        drill(values: Array<number>, title='Drill table') {\n            if (values && values.length > 0) {\n                return table.tdLink(\n                    values.length, \n                    () => this.runTableDrill(values, title)\n                )\n            }\n            return table.td(0)\n        },\n        getQuaterOptions() {\n            const quarters = ArtReportService.getReportQuarters()\n            return quarters.map((q: any) => ({\n                label: q.name, value: q.start, other: q\n            }))\n        },\n        getDateDurationFields(\n            useQuarter=false, \n            setCustomQuarterPeriod=false, \n            maxQuarter=5, \n            maxDate=Service.getSessionDate() as string | null,\n        ): Array<Field> {\n            const minDate = '2000-01-01'\n            return [\n                {\n                    id: 'quarter',\n                    helpText: 'Select Quarter',\n                    type: FieldType.TT_SELECT,\n                    condition: () => useQuarter,\n                    validation: (val: Option) => Validation.required(val),\n                    options: () => {\n                        const quarters = ArtReportService.getReportQuarters(maxQuarter)\n                        let items: Array<Option> = quarters.map((q: any) => ({\n                            label: q.name,\n                            value: q.start,\n                            other: q\n                        }))\n                        if (setCustomQuarterPeriod) {\n                            items = [\n                                {\n                                    label: 'Set custom period',\n                                    value: 'custom_period',\n                                    other: {}\n                                },\n                                ...items\n                            ]\n                        }\n                        return items\n                    }\n                },\n                ...generateDateFields({\n                    id: 'start_date',\n                    helpText: 'Start',\n                    required: true,\n                    condition: (f: any) => f.quarter && f.quarter.value === 'custom_period' || !useQuarter,\n                    minDate: () => minDate,\n                    maxDate: () => maxDate,\n                    estimation: {\n                        allowUnknown: false\n                    },\n                    computeValue: (date: string) => date \n                }),\n                ...generateDateFields({\n                    id: 'end_date',\n                    helpText: 'End',\n                    required: true,\n                    condition: (f: any) => f.quarter && f.quarter.value === 'custom_period' || !useQuarter,\n                    unload: (d: any, s: any, f: any, c: any) => {\n                        if (s === 'next') {\n                            this.endDate = c.end_date\n                        }\n                    },\n                    minDate: (_: any, c: any) => c.start_date,\n                    maxDate: () => maxDate,\n                    estimation: {\n                        allowUnknown: false\n                    },\n                    computeValue: (date: string) => date\n                }),\n                {\n                    id: 'occupation',\n                    helpText: \"Report Group\",\n                    type: FieldType.TT_SELECT,\n                    init: async () => {\n                        this.isMilitarySite = await Store.get('IS_MILITARY_SITE')\n                        return true\n                    },\n                    computedValue: (v: Option) => v.value, \n                    condition: () => this.app?.applicationName === 'ART' && this.isMilitarySite,\n                    validation: (val: Option) => Validation.required(val),\n                    options: () => {\n                        return [\n                            { label: 'All', value: 'All'},\n                            { label: 'Military', value: 'Military'},\n                            { label: 'Civilian', value: 'Civilian'},\n                        ]\n                    }\n                }\n            ]\n        }\n    }\n})\n","import script from \"./ReportMixin.vue?vue&type=script&lang=ts\"\nexport * from \"./ReportMixin.vue?vue&type=script&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { resolveDynamicComponent as _resolveDynamicComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createBlock(_resolveDynamicComponent(_ctx.formType), {\n    fields: _ctx.fields,\n    skipSummary: _ctx.skipSummary,\n    activeField: _ctx.activeField,\n    cancelDestinationPath: _ctx.cancelDestinationPath,\n    onOnFinish: _ctx.onFinish,\n    onFinish: _ctx.onFinishAction,\n    onOnIndex: _ctx.onIndex\n  }, null, 40, [\"fields\", \"skipSummary\", \"activeField\", \"cancelDestinationPath\", \"onOnFinish\", \"onFinish\", \"onOnIndex\"]))\n}","\nimport TouchScreenForm from \"@/components/Forms/TouchScreenForm.vue\";\nimport { defineComponent, PropType } from \"vue\";\nimport { Field } from \"./FieldInterface\";\n\nexport default defineComponent({\n    name: \"HisStandardForm\",\n    components: { TouchScreenForm },\n    emits: [\n        'onFinish',\n        'onIndex'\n    ],\n    data: () => ({\n        formType: 'touch-screen-form' as string\n    }),\n    props: {\n        onFinishAction: {\n            type: Function\n        },\n        skipSummary: {\n            type: Boolean,\n            default: false\n        },\n        activeField: {\n            type: String\n        },\n        fields: {\n            type: Object as PropType<Field[]>,\n            required: true\n        },\n        cancelDestinationPath: {\n            type: String,\n            required: false,\n        }\n    },\n    methods: {\n        onFinish(formData: any, computedData: any) {\n            this.$emit('onFinish', formData, computedData)\n        },\n        onIndex(i: number) {\n            this.$emit('onIndex', i)\n        }\n    }\n})\n","import { render } from \"./HisStandardForm.vue?vue&type=template&id=6daa0375&ts=true\"\nimport script from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\nexport * from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/projects/malawi-emr/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","export * from \"-!../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./PatientVisitStats.vue?vue&type=style&index=0&id=74f18efc&scoped=true&lang=css\"","import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, withModifiers as _withModifiers, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, createVNode as _createVNode, Fragment as _Fragment, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-74f18efc\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1))\nconst _hoisted_2 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1))\nconst _hoisted_3 = { class: \"view-port-content\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_his_standard_form = _resolveComponent(\"his-standard-form\")!\n  const _component_ion_title = _resolveComponent(\"ion-title\")!\n  const _component_ion_toolbar = _resolveComponent(\"ion-toolbar\")!\n  const _component_ion_header = _resolveComponent(\"ion-header\")!\n  const _component_ApexChart = _resolveComponent(\"ApexChart\")!\n  const _component_view_port = _resolveComponent(\"view-port\")!\n  const _component_ion_content = _resolveComponent(\"ion-content\")!\n  const _component_ion_button = _resolveComponent(\"ion-button\")!\n  const _component_ion_footer = _resolveComponent(\"ion-footer\")!\n  const _component_ion_page = _resolveComponent(\"ion-page\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    (!_ctx.canShowReport)\n      ? (_openBlock(), _createBlock(_component_his_standard_form, {\n          key: 0,\n          onOnFinish: _ctx.onPeriod,\n          skipSummary: true,\n          fields: _ctx.fields\n        }, null, 8, [\"onOnFinish\", \"fields\"]))\n      : _createCommentVNode(\"\", true),\n    (_ctx.canShowReport)\n      ? (_openBlock(), _createBlock(_component_ion_page, { key: 1 }, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_header, null, {\n              default: _withCtx(() => [\n                _createVNode(_component_ion_toolbar, null, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_ion_title, null, {\n                      default: _withCtx(() => [\n                        _createTextVNode(\" Total Attendance: \"),\n                        _createElementVNode(\"a\", {\n                          href: \"#\",\n                          onClick: _cache[0] || (_cache[0] = _withModifiers(() => _ctx.drillPatients('Total attendance', _ctx.totalAttendance), [\"prevent\"]))\n                        }, _toDisplayString(_ctx.totalAttendance.length), 1),\n                        _hoisted_1,\n                        _createTextVNode(\" Patient visit: \"),\n                        _createElementVNode(\"a\", {\n                          href: \"#\",\n                          onClick: _cache[1] || (_cache[1] = _withModifiers(() => _ctx.drillPatients('Total patient visits', _ctx.totalPatientVisits), [\"prevent\"]))\n                        }, _toDisplayString(_ctx.totalPatientVisits.length), 1),\n                        _hoisted_2,\n                        _createTextVNode(\" Guardian visit: \"),\n                        _createElementVNode(\"a\", {\n                          href: \"#\",\n                          onClick: _cache[2] || (_cache[2] = _withModifiers(() => _ctx.drillPatients('Guardian visits', _ctx.totalGuardianVisits), [\"prevent\"]))\n                        }, _toDisplayString(_ctx.totalGuardianVisits.length), 1)\n                      ]),\n                      _: 1\n                    })\n                  ]),\n                  _: 1\n                })\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_ion_content, null, {\n              default: _withCtx(() => [\n                _createVNode(_component_view_port, null, {\n                  default: _withCtx(() => [\n                    _createElementVNode(\"div\", _hoisted_3, [\n                      _createVNode(_component_ApexChart, {\n                        width: _ctx.width,\n                        height: _ctx.height,\n                        type: _ctx.chartType,\n                        options: _ctx.chartOptions,\n                        series: _ctx.series,\n                        onMarkerClick: _ctx.onPointSelection\n                      }, null, 8, [\"width\", \"height\", \"type\", \"options\", \"series\", \"onMarkerClick\"])\n                    ])\n                  ]),\n                  _: 1\n                })\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_ion_footer, null, {\n              default: _withCtx(() => [\n                _createVNode(_component_ion_toolbar, { color: \"dark\" }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_ion_button, {\n                      onClick: _cache[3] || (_cache[3] = ($event: any) => (_ctx.canShowReport = false)),\n                      slot: \"start\",\n                      size: \"large\"\n                    }, {\n                      default: _withCtx(() => [\n                        _createTextVNode(\" New Date \")\n                      ]),\n                      _: 1\n                    }),\n                    _createVNode(_component_ion_button, {\n                      slot: \"end\",\n                      size: \"large\",\n                      \"router-link\": \"/\",\n                      color: \"success\"\n                    }, {\n                      default: _withCtx(() => [\n                        _createTextVNode(\" Finish \")\n                      ]),\n                      _: 1\n                    })\n                  ]),\n                  _: 1\n                })\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        }))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}","\nimport { defineComponent } from 'vue'\nimport {\n    IonPage,\n    IonHeader,\n    IonTitle,\n    IonToolbar,\n    IonContent,\n    IonFooter,\n    IonButton,\n    loadingController,\nmodalController\n} from \"@ionic/vue\"\nimport ViewPort from \"@/components/DataViews/ViewPort.vue\"\nimport { PatientReportService } from \"@/apps/ART/services/reports/patient_report_service\"\nimport HisStandardForm from \"@/components/Forms/HisStandardForm.vue\";\nimport ReportMixin from \"@/apps/ART/views/reports/ReportMixin.vue\"\nimport { uniq } from 'lodash';\nimport ApexChart from \"vue3-apexcharts\";\nimport table from \"@/components/DataViews/tables/ReportDataTable\"\nimport { Patientservice } from '@/services/patient_service';\n\nexport default defineComponent({\n    components: {\n        ApexChart,\n        IonPage,\n        IonHeader,\n        IonTitle,\n        IonToolbar,\n        IonContent,\n        IonFooter,\n        IonButton,\n        ViewPort,\n        HisStandardForm\n    },\n    mixins: [ReportMixin],\n    data: () => ({\n        patients: {} as Record<string|number, Patientservice>,\n        reportData: {} as Record<string, any>,\n        chartType: 'area',\n        height: '100%',\n        width: '100%',\n        canShowReport: false,\n        report: {} as any,\n        series: [] as any,\n        patientPresent: {} as any,\n        guardianPresent: {} as any,\n        bothPresent: {} as any,\n        chartOptions: {\n            title : {\n                text: \"HIV Reception encounters\"\n            },\n            yaxis: {\n                title: { \n                    text: \"Number of clients\"\n                },\n                plotAreaHeight: 800,\n            },\n            xaxis: {\n                type: 'datetime'\n            },\n            markers: {\n                size: 8,\n                hover: {\n                    sizeOffset: 3\n                }\n            }\n        } as any\n    }),\n    created() {\n        this.fields = this.getDateDurationFields()\n    },\n    computed: {\n        totalAttendance(): number[] {\n            let totals: any = []\n            Object.keys(this.reportData).forEach((date: string) => {\n                totals = totals.concat(Object.keys(this.reportData[date])\n                    .map(p => ({ patient_id: p, date})))\n            })\n            return totals\n        },\n        totalPatientVisits(): any {\n            return Object.keys(this.patientPresent)\n                .reduce((a: any, k: string) => {\n                    return a.concat(this.patientPresent[k]\n                        .map((p: number) => ({ patient_id: p, date: k })))\n                }, [])\n        },\n        totalGuardianVisits(): any {\n            return Object.keys(this.guardianPresent)\n                .reduce((a: any, k: string) => {\n                    return a.concat(this.guardianPresent[k]\n                        .map((p: number) => ({ patient_id: p, date: k })))\n                }, [])\n        }\n    },\n    methods: {\n        async onPeriod(_: any, conf: any) {\n            await this.presentLoading()\n            this.reportData = {}\n            this.canShowReport = true\n            this.patientPresent = {}\n            this.guardianPresent = {}\n            this.report = new PatientReportService()\n            this.report.setStartDate(conf.start_date)\n            this.report.setEndDate(conf.end_date)\n            this.reportData = await this.report.getPatientVisitTypes()\n            this.series = this.buildSeries(this.reportData)\n            loadingController.dismiss()\n        },\n        async presentLoading() {\n            (await loadingController.create({\n                message: 'Please wait...',\n                backdropDismiss: false\n            })).present()\n        },\n        async getCachedPatient(patiendId: number) {\n            if(!(patiendId in this.patients)) {\n                const patient = await Patientservice.findByID(patiendId);\n                this.patients[patiendId] = new Patientservice(patient);\n            }\n            return this.patients[patiendId];\n        },\n        async drillPatients(title: string, patients: any[]) {\n            const columns = [\n                [\n                    table.thTxt('ARV Number'),\n                    table.thTxt('First name'),\n                    table.thTxt('Last name'),\n                    table.thTxt('Gender'),\n                    table.thTxt('Visit date'),\n                    table.thTxt('Action')\n                ]\n            ]\n            const rowParser = async (row: any) => {\n                const data = row.map(async (col: any) => {\n                    const patient = await this.getCachedPatient(col.patient_id);\n                    try {\n                        return [\n                            this.tdARV(patient.getArvNumber()),\n                            table.td(patient.getGivenName()),\n                            table.td(patient.getFamilyName()),\n                            table.td(this.formatGender(patient.getGender())),\n                            table.tdDate(col.date),\n                            table.tdBtn('Show', async () => {\n                                await modalController.dismiss({})\n                                this.$router.push({ path: `/patient/dashboard/${col.patient_id}`})\n                            })\n                        ]\n                    } catch (e) {\n                        return [\n                            table.td('N/A'),\n                            table.td('N/A'),\n                            table.td('N/A'),\n                            table.td('N/A'),\n                            table.td('N/A'),\n                            table.tdBtn('Show', async () => {\n                                await modalController.dismiss({})\n                                this.$router.push({ path: `/patient/dashboard/${col.patient_id}`})\n                            })\n                        ]\n                    }\n                })\n                return Promise.all(data)\n            }\n            this.drilldownData(title, columns, patients, rowParser)\n        },\n        onPointSelection(e: any, c: any, { dataPointIndex, seriesIndex }: any) {\n            try {\n                const sIndex = seriesIndex <= 0 ? 0 : seriesIndex\n                const dates: any = this.series[sIndex].data[dataPointIndex]\n                const patients: any = this.series[sIndex].raw[dataPointIndex]\n                const drillData = Array.from({ length: patients.length }, (k, i) => {\n                    return { patient_id: patients[i], date: new Date(dates[0]).toISOString() }\n                })\n                this.drillPatients('Point selection', drillData)\n            } catch (e) {\n                console.log('Error loading point selection data')\n            }\n        },\n        buildSeries(data: any) {\n            const visitDates: string[] = uniq(Object.keys(data))\n            const setValueGroup = (\n                date: string,\n                group: Record<string, any>,\n                comparator: any) => {\n\n                if (!(date in group)) group[date] = []\n\n                const values = Object.entries(data[date])\n                    .filter(([, v]: any) => comparator(\n                        v.patient_present,\n                        v.guardian_present\n                    ))\n                    .map(([patient]) => patient)\n\n                group[date] = [...group[date], ...values]\n                return group\n            }\n\n            const sortSeries = (valueGroup: any) => {\n                return visitDates.map((date: string) => [\n                    new Date(date).getTime(), \n                    valueGroup[date].length\n                ])\n            }\n\n            const sortData = (valueGroup: any) => visitDates.map((date: string) => valueGroup[date])\n    \n            for(const date in data) {\n                setValueGroup(date, this.patientPresent, (patient: any, guardian: any) => {\n                    return patient && !guardian\n                })\n                setValueGroup(date, this.guardianPresent, (patient: any, guardian: any) => {\n                    return !patient && guardian\n                })\n                setValueGroup(date, this.bothPresent, (patient: any, guardian: any) => {\n                    return patient && guardian\n                })\n            }\n            return [\n                {\n                    name: 'Patient present',\n                    raw: sortData(this.patientPresent),\n                    data: sortSeries(this.patientPresent)\n                },\n                {\n                    name: 'Guardian present',\n                    raw: sortData(this.guardianPresent),\n                    data: sortSeries(this.guardianPresent)\n                },\n                {\n                    name: 'Both patient and guardian present',\n                    raw: sortData(this.bothPresent),\n                    data: sortSeries(this.bothPresent)\n                }\n            ]\n        }\n    }\n})\n","import { render } from \"./PatientVisitStats.vue?vue&type=template&id=74f18efc&scoped=true&ts=true\"\nimport script from \"./PatientVisitStats.vue?vue&type=script&lang=ts\"\nexport * from \"./PatientVisitStats.vue?vue&type=script&lang=ts\"\n\nimport \"./PatientVisitStats.vue?vue&type=style&index=0&id=74f18efc&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/daniel/projects/malawi-emr/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-74f18efc\"]])\n\nexport default __exports__"],"sourceRoot":""}