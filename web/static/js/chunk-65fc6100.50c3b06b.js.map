{"version":3,"sources":["webpack:///./src/components/Keyboard/KbLayouts.ts","webpack:///./src/apps/ART/views/ARTStock/movement.vue?bf4b","webpack:///./src/services/DHA_code_service.ts","webpack:///./src/apps/ART/views/ARTStock/movement.vue","webpack:///./src/apps/ART/views/ARTStock/movement.vue?9697","webpack:///./src/components/Forms/HisStandardForm.vue?8e31","webpack:///./src/components/Forms/HisStandardForm.vue","webpack:///./src/components/Forms/HisStandardForm.vue?5176","webpack:///./src/components/Forms/BaseFormElements.ts","webpack:///./src/utils/HisFormHelpers/LocationFieldOptions.ts","webpack:///./src/components/FormElements lazy ^\\.\\/.*\\.vue$ namespace object"],"names":["DEFAULT_KEYPAD","PRESCRIPTION_KEYPAD","FLOAT_KEYPAD","VITALS_KEYPAD","DRUG_DISPENSER_KEYPAD","CD4_COUNT_PAD_LO","SYMBOLS","NUMBER_PAD_LO","NUMBER_ARROW_PAD_LO","MONTHLY_DAYS_LO","ALPHABETICAL_LO","QWERTY_LO","CHARACTERS_AND_NUMBERS_LO","NOTE_PAD_KEYBOARD","LOGIN_KEYBOARD","render","_ctx","_cache","$props","$setup","$data","$options","_component_his_standard_form","_resolveComponent","_openBlock","_createBlock","fields","activeField","onFinishAction","onFinish","skipSummary","DHAVerificationService","constructor","_defineProperty","this","BASE30_DIGITS","split","forEach","digit","decimalValue","BASE30_DIGITS_INDEX","convertFromDecimal","number","toBase","result","Math","floor","digits","toString","map","Number","parseInt","parity","length","sum","position","checksum","isValidDHACode","code","decimalCode","convertToDecimal","computedCheckDigit","calculateLuhnCheckDigit","exception","console","error","undefined","slice","defineComponent","components","HisStandardForm","data","drugs","selectedDrugs","barcode","stockService","methods","formData","errors","drug","enter_batches","authorization","value","quantity","other","pack_size","tins","date","reason","task","relocateItems","id","location_id","relocation_location","disposeItems","e","BadRequestError","isEmpty","concat","drug_name","push","log","toastSuccess","$router","toastDanger","join","getFields","helpText","type","FieldType","TT_SELECT","validation","val","Validation","required","options","label","notTheSame","StockService","getLocationName","condition","_","filter","getFacilities","computedValue","config","showKeyboard","isFilterDataViaApi","dynamicHelpText","f","TT_FULL_DATE","TT_MULTIPLE_SELECT","requireNext","async","checked","getDrugs","unload","TT_BATCH_MOVEMENT","beforeNext","v","c","currentFieldContext","drugsToStr","b","partialEntries","partialDrugs","toastWarning","getReasons","TT_TEXT","customKeyboard","validateSeries","dha","toUpperCase","TT_TABLE_VIEWER","d","buildResults","hiddenFooterBtns","isRelocation","columns","rows","toNumString","HisDate","toStandardHisDisplayFormat","expiry_date","getItems","_ref","_drug$drug_name","name","drug_legacy_name","expireAt","isChecked","drug_id","description","color","show","text","product_code","batch_number","trunc","current_quantity","dayjs","isBefore","delivery_date","mapToOptions","vals","formdata","_drug$other","drugExpired","isAfter","getSessionDate","disposeReasons","created","__exports__","_resolveDynamicComponent","formType","cancelDestinationPath","onOnFinish","onOnIndex","onIndex","TouchScreenForm","emits","props","Function","Boolean","default","String","Object","computedData","$emit","i","COMPONENT_REFS","TT_ASYNC_MULTI_SELECT","TT_LINKAGE_CODE","TT_MULTI_SELECT_GRID","TT_AGE_INPUT","TT_BARCODE","TT_NOTE","TT_CARD_SELECTOR","TT_NUMBER","TT_MONTHLY_DAYS","TT_ART_REGIMEN_SELECTION","TT_NEXT_VISIT_INTERVAL_SELECTION","TT_DOSAGE_INPUT","TT_YES_NO","TT_MULTIPLE_YES_NO","TT_WEIGHT_CHART","TT_VITALS_ENTRY","TT_APPOINTMENTS_ENTRY","TT_COMPLAINTS_PICKER","TT_CLINIC_HOLIDAY_PICKER","TT_SUMMARY","TT_ART_STAGING_SUMMARY","TT_ADHERENCE_INPUT","TT_LAB_ORDERS","TT_PERSON_RESULT_VIEW","TT_PROGRAM_SELECTION","TT_DATE_PICKER","TT_RELATION_SELECTION","TT_FILING_NUMBER_VIEW","TT_PERSON_MATCH_VIEW","TT_BATCH_ENTRY","TT_BATCH_VERIFICATION","TT_IP_ADDRESS","TT_TEXT_BANNER","TT_DISPENSATION_INPUT","TT_DATA_TABLE","TT_GROUP_SELECTOR","TT_ANC_PREGNANCY_INPUT_CONFIG","TT_ANC_PREGNANCY_DETAILS_INPUT","TT_ANC_LMP_DATE_INPUT","TT_DRUG_TRANSFER_IN","TT_GRID_SELECTOR","TT_ANC_DRUGSET_INPUT","TT_RADIOLOGY_PICKER","TT_PRESCRIPTION_INPUT","TT_INFINITE_SCROLL_MULTIPLE_SELECT","TT_DRUG_DISPENSER","facilities","LocationService","trim","facility","getLabFacilities","getLabs","getFacilityWards","wards","tag","ward","getSpecialistClinics","clinics","clinic","getRegions","regions","region","region_id","getDistricts","regionID","districts","district","district_id","getTraditionalAuthorities","districtID","TAs","TA","traditional_authority_id","getVillages","traditionalAuthorityID","villages","village","village_id","getVillagesByName","page","getLandmarks","landmarks","landmark","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","Error","ids","all","keys","module","exports"],"mappings":"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D,MAAMJ,QAAiB5B,OAAgB+B,kBAAkB1H,EAAM2H,GAC/D,OAAOJ,EAAS7O,IAAK8O,IAAY,CAC7B3K,MAAO2K,EAAQxH,KACfrF,MAAO6M,EAAQC,WACf5M,MAAO2M,KAIT,SAAUI,IACZ,MAAMC,EAAY,CACd,kBACA,OACA,cACA,SACA,iBACA,WACA,mBACA,UACA,SACA,kBACA,SAGJ,OAAOA,EAAUnP,IAAIoP,IAAQ,CACzBjL,MAAOiL,EACPnN,MAAOmN,EACPjN,MAAO,CACH1B,KAAM2O,Q,qBC5GlB,IAAIpP,EAAM,CACT,wBAAyB,CACxB,OACA,qBAED,wBAAyB,CACxB,OACA,qBAED,iCAAkC,CACjC,OACA,qBAED,+BAAgC,CAC/B,OACA,qBAED,0BAA2B,CAC1B,OACA,qBAED,yBAA0B,CACzB,OACA,iBACA,qBAED,sBAAuB,CACtB,OACA,qBAED,kCAAmC,CAClC,OACA,qBAED,0BAA2B,CAC1B,OACA,iBACA,qBAED,mBAAoB,CACnB,OACA,qBAED,yBAA0B,CACzB,OACA,sBAED,6BAA8B,CAC7B,OACA,sBAED,0BAA2B,CAC1B,OACA,iBACA,sBAED,oBAAqB,CACpB,OACA,sBAED,wBAAyB,CACxB,OACA,iBACA,sBAED,+BAAgC,CAC/B,OACA,sBAED,wBAAyB,CACxB,OACA,sBAED,sBAAuB,CACtB,OACA,iBACA,iBACA,sBAED,yBAA0B,CACzB,OACA,iBACA,iBACA,sBAED,6BAA8B,CAC7B,OACA,iBACA,iBACA,sBAED,wBAAyB,CACxB,OACA,sBAED,+BAAgC,CAC/B,OACA,iBACA,sBAED,4BAA6B,CAC5B,OACA,sBAED,qBAAsB,CACrB,OACA,sBAED,qBAAsB,CACrB,OACA,sBAED,sBAAuB,CACtB,OACA,iBACA,sBAED,uBAAwB,CACvB,OACA,iBACA,sBAED,wBAAyB,CACxB,OACA,sBAED,yBAA0B,CACzB,OACA,sBAED,qBAAsB,CACrB,OACA,sBAED,wCAAyC,CACxC,OACA,sBAED,qBAAsB,CACrB,OACA,iBACA,sBAED,uBAAwB,CACvB,OACA,sBAED,2BAA4B,CAC3B,OACA,sBAED,0BAA2B,CAC1B,OACA,iBACA,sBAED,6BAA8B,CAC7B,OACA,sBAED,gBAAiB,CAChB,OACA,sBAED,uBAAwB,CACvB,OACA,sBAED,6BAA8B,CAC7B,OACA,iBACA,sBAED,2BAA4B,CAC3B,OACA,sBAED,kBAAmB,CAClB,OACA,sBAED,mBAAoB,CACnB,OACA,sBAED,uBAAwB,CACvB,OACA,sBAED,sBAAuB,CACtB,OACA,sBAED,qBAAsB,CACrB,OACA,sBAED,uBAAwB,CACvB,OACA,sBAED,uBAAwB,CACvB,OACA,sBAED,yBAA0B,CACzB,OACA,sBAED,yBAA0B,CACzB,OACA,sBAED,wBAAyB,CACxB,OACA,sBAED,yBAA0B,CACzB,OACA,sBAED,yBAA0B,CACzB,OACA,sBAED,2BAA4B,CAC3B,OACA,sBAED,oBAAqB,CACpB,OACA,sBAED,oBAAqB,CACpB,OACA,uBAGF,SAASqP,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAExP,EAAKsP,GAC9B,OAAOG,QAAQC,UAAUC,MAAK,WAC7B,IAAI7M,EAAI,IAAI8M,MAAM,uBAAyBN,EAAM,KAEjD,MADAxM,EAAErC,KAAO,mBACHqC,KAIR,IAAI+M,EAAM7P,EAAIsP,GAAM5M,EAAKmN,EAAI,GAC7B,OAAOJ,QAAQK,IAAID,EAAI3O,MAAM,GAAGlB,IAAIuP,EAAoBzM,IAAI6M,MAAK,WAChE,OAAOJ,EAAoB7M,MAG7B2M,EAAoBU,KAAO,WAC1B,OAAOlG,OAAOkG,KAAK/P,IAEpBqP,EAAoB3M,GAAK,OACzBsN,EAAOC,QAAUZ","file":"js/chunk-65fc6100.50c3b06b.js","sourcesContent":["export const DEFAULT_KEYPAD = [\n    ['1', '2', '3'],\n    ['4', '5', '6'],\n    ['7', '8', '9'],\n    ['.', '0', 'Del'],\n    ['',  'Done', '']\n]\nexport const PRESCRIPTION_KEYPAD = [\n    ['1', '2', '3'],\n    ['4', '5', '6'],\n    ['7', '8', '9'],\n    ['Del', '0', '.'],\n    ['Unknown', '', ''],\n]\nexport const FLOAT_KEYPAD = [\n    ['1', '2', '3'],\n    ['4', '5', '6'],\n    ['7', '8', '9'],\n    ['.', '0', '']\n]\nexport const VITALS_KEYPAD = [\n    ['1', '2', '3'],\n    ['4', '5', '6'],\n    ['7', '8', '9'],\n    ['.', '0', 'Del'],\n    ['Clear',  '%', '/']\n]\nexport const DRUG_DISPENSER_KEYPAD = [\n    ['1', '2', '3'],\n    ['4', '5', '6'],\n    ['7', '8', '9'],\n    ['Del.', '0', 'Clear'],\n    // ['Reset',  'Close', 'Dispense']\n]\nexport const CD4_COUNT_PAD_LO = [\n    ['1', '2', '3', '<'],\n    ['4', '5', '6', '>'],\n    ['7', '8', '9', '='],\n    ['',  '0', '']\n]\n\nexport const SYMBOLS = [\n    ['1', '2', '3', '+', '-', '/', '*'],\n    ['4', '5', '6', '%', '=', '<', '>', 'Qwerty'],\n    ['7', '8', '9', '.', ','],\n    ['',  '0', '']\n]\n\nexport const NUMBER_PAD_LO = [\n    ['1', '2', '3'],\n    ['4', '5', '6'],\n    ['7', '8', '9'],\n    ['',  '0', '']\n]\n\nexport const NUMBER_ARROW_PAD_LO = [\n    ['1', '2', '3'],\n    ['4', '5', '6'],\n    ['7', '8', '9'],\n    ['←',  '0', '→']\n]\n\nexport const MONTHLY_DAYS_LO = [\n    ['1', '2', '3', '4', '5', '6', '7'],\n    ['8', '9', '10', '11', '12', '13', '14'],\n    ['15', '16', '17', '18', '19', '20', '21'],\n    ['22', '23', '24', '25', '26', '27', '28'],\n    ['29', '30', '31']\n]\n\nexport const ALPHABETICAL_LO = [\n    ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', '.'],\n    ['i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q'],\n    ['r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n]\n\nexport const QWERTY_LO = [\n    ['q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p'],\n    ['a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l', \"'\"],\n    ['z', 'x', 'c', 'v', 'b', 'n', 'm',',', '.', 'A-Z']\n]\n\nexport const CHARACTERS_AND_NUMBERS_LO = [\n    ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0'],\n    ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', '-', '.'],\n    ['i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q'],\n    ['r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n]\nexport const NOTE_PAD_KEYBOARD = [\n    ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0', 'Del'],\n    [\"q\", \"w\", \"e\", \"r\", \"t\", \"y\", \"u\", \"i\", \"o\", \"p\", 'Clear'],\n    [\"a\", \"s\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \".\", \"Caps\"],\n    [\"z\", \"x\", \"c\", \"v\", \"b\", \"n\", \"m\", \"<\", \">\", \"/\", \"Enter\"], \n]\n\nexport const LOGIN_KEYBOARD =  [\n    [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"0\"],\n    [\"q\", \"w\", \"e\", \"r\", \"t\", \"y\", \"u\", \"i\", \"o\", \"p\"],\n    [\"a\", \"s\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"Del.\"],\n    [\"z\", \"x\", \"c\", \"v\", \"b\", \"n\", \"m\", \"Caps\", \"Login\"],\n];\n","import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_his_standard_form = _resolveComponent(\"his-standard-form\")!\n\n  return (_openBlock(), _createBlock(_component_his_standard_form, {\n    fields: _ctx.fields,\n    activeField: _ctx.activeField,\n    onFinishAction: _ctx.onFinish,\n    skipSummary: true\n  }, null, 8, [\"fields\", \"activeField\", \"onFinishAction\"]))\n}","\nexport class DHAVerificationService {\n\n\tBASE30_DIGITS_INDEX = {} as any;\n\tBASE30_DIGITS: any;\n\t// static BASE30_DIGITS: any;\n\tconstructor() {\n\n\t\tthis.BASE30_DIGITS = '0123456789ABCDEFGHJKLMNPRTVWXY'.split('');\n\t\tthis.BASE30_DIGITS.forEach((digit: any, decimalValue: any) => this.BASE30_DIGITS_INDEX[digit] = decimalValue);\n\t}\n\n\t//   BASE30_DIGITS.forEach((digit, decimalValue) => BASE30_DIGITS_INDEX[digit] = decimalValue);\n\tconvertFromDecimal(number: any, toBase = 30) {\n\t\tif (toBase < 2 || toBase > 30) throw (\"Invalid base ${toBase}\");\n\n\t\tlet result = '';\n\n\t\twhile (number > 0) {\n\t\t\tresult = this.BASE30_DIGITS[number % toBase] + result;\n\t\t\tnumber = Math.floor(number / toBase);\n\t\t}\n\n\t\treturn result;\n\t}\n\tstatic calculateLuhnCheckDigit(number: any) {\n\t\tconst digits = number.toString().split('').map((digit: string) => Number.parseInt(digit, 10));\n\t\tconst parity = digits.length % 2;\n\n\t\tlet sum = 0;\n\n\t\tdigits.forEach((digit: any, position: any) => {\n\t\t\tif (position % 2 === parity) digit *= 2;\n\t\t\tif (digit > 9) digit -= 9;\n\n\t\t\tsum += digit;\n\t\t});\n\n\t\tconst checksum = sum % 10;\n\t\treturn checksum === 0 ? 0 : 10 - checksum;\n\t}\n\n\t/**\n\t * @param code {String}\n\t *\n\t * @returns {Boolean}\n\t */\n\tisValidDHACode(code: any) {\n\t\ttry {\n\t\t\tconst decimalCode = this.convertToDecimal(code).toString();\n\t\t\tconst computedCheckDigit = DHAVerificationService.calculateLuhnCheckDigit(Number.parseInt(decimalCode, 10) * 10);\n\t\t\treturn computedCheckDigit === 0;\n\t\t} catch (exception) {\n\t\t\tconsole.error(exception);\n\t\t\treturn false;\n\t\t}\n\t}\n\tconvertToDecimal(number: any): any {\n\t\tif (number.length == 0) return 0;\n\n\t\tconst decimalValue = this.BASE30_DIGITS_INDEX[number[0]];\n\n\t\tif (decimalValue === undefined || decimalValue === null)\n\t\t\tthrow (\"Invalid base ${fromBase} number: ${number}\");\n\n\t\treturn decimalValue * 30 ** (number.length - 1) + this.convertToDecimal(number.slice(1));\n\t}\n\n\t//   return {isValidDHACode};\n}\n// const DHACodes = (() => {\n\n//   /**\n//    * Converts any number in the DHA base 30 character set to a decimal value.\n//    * \n//    * @param number {String}\n//    * @param fromBase {Number}\n//    *\n//    * @returns Number\n//    */\n\n\n//   /**\n//    * Convert any decimal value to any base within DHA's base 30 character set.\n//    * \n//    * @param number {Number}\n//    * @param toBase {Number}\n//    *\n//    * @returns {String}\n//    */\n\n\n//   /**\n//    * Returns the Luhn checksum for given number.\n//    * \n//    * @param number {Number}\n//    * @returns {Number}\n//    */\n\n// })();\n","\nimport { defineComponent } from \"vue\";\nimport { Field, Option } from \"@/components/Forms/FieldInterface\";\nimport { FieldType } from \"@/components/Forms/BaseFormElements\";\nimport HisStandardForm from \"@/components/Forms/HisStandardForm.vue\";\nimport { CHARACTERS_AND_NUMBERS_LO } from \"@/components/Keyboard/KbLayouts\";\nimport Validation from \"@/components/Forms/validations/StandardValidations\";\nimport { DHAVerificationService } from \"@/services/DHA_code_service\"\nimport HisDate from \"@/utils/Date\";\nimport { StockService } from \"./stock_service\";\nimport { toastWarning, toastDanger, toastSuccess } from \"@/utils/Alerts\";\nimport { getFacilities } from \"@/utils/HisFormHelpers/LocationFieldOptions\";\nimport { BadRequestError } from  \"@/services/service\"\nimport { isEmpty } from \"lodash\";\nimport dayjs from \"dayjs\";\nimport { toNumString } from \"@/utils/Strs\";\n\nexport default defineComponent({\n  components: { HisStandardForm },\n  data: () => ({\n    activeField: \"\",\n    fields: [] as any,\n    drugs: [] as any,\n    selectedDrugs: [] as any,\n    barcode: \"\",\n    stockService: {} as any,\n  }),\n\n  methods: {\n    async onFinish(formData: any) {\n      let errors: string[] = [];\n      for (const drug of formData.enter_batches) {\n        const data = {\n          'reallocation_code': formData.authorization.value,\n          quantity: drug.other.pack_size * drug.other.tins,\n          date: formData.date.value,\n          reason: drug.other.reason,\n        }\n        try {\n          if (formData.task.value === \"Relocations\") {\n            await this.stockService.relocateItems(drug.other.id, {\n              ...data, \n              location_id: formData.relocation_location.value\n            })\n          } else await this.stockService.disposeItems(drug.other.id, data)\n        } catch (e) {\n          if (e instanceof BadRequestError && !isEmpty(e.errors)) {\n            errors = errors.concat(e.errors.map((e: string) => `${e} for ${drug.other.drug_name}`));\n          } else {\n            errors.push(`${e}`)\n          }\n          console.log(e)\n        }\n      }\n      if (isEmpty(errors)) {\n        toastSuccess(\"Stock succesfully moved\");\n        return this.$router.push(\"/\");\n      }\n      toastDanger(`${errors.join(',')}`);\n    },\n    getFields(): Array<Field> {\n      return [\n        {\n          id: \"task\",\n          helpText: \"Select task\",\n          type: FieldType.TT_SELECT,\n          validation: (val: any) => Validation.required(val),\n          options: () => [\n            {\n              label: \"Relocations\",\n              value: \"Relocations\",\n            },\n            {\n              label: \"Disposal\",\n              value: \"Disposal\",\n            },\n          ],\n        },\n        {\n          id: \"relocation_location\",\n          helpText: \"Destination\",\n          type: FieldType.TT_SELECT,\n          validation: (val: Option) => Validation.required(val) || Validation.notTheSame(val.label, `${StockService.getLocationName()}`),\n          condition: (val: any) => val.task.value === \"Relocations\" ,\n          options: (_: any, filter = \"\") => getFacilities(filter),\n          computedValue: (val: Option) => val.label,\n          config: {\n            showKeyboard: true,\n            isFilterDataViaApi: true,\n          },\n        },\n        {\n          id: \"date\",\n          dynamicHelpText: (f) => `Date of ${f.task.label}`,\n          helpText: \"Set date\",\n          type: FieldType.TT_FULL_DATE,\n          validation: (val: any) => Validation.required(val),\n        },\n        {\n          id: \"select drugs\",\n          helpText: \"Select drugs\",\n          type: FieldType.TT_MULTIPLE_SELECT,\n          requireNext: true,\n          validation: (val: any) => Validation.required(val),\n          options: async (f: any, checked: Option[]) => this.getDrugs(checked, f.date.value),\n          unload: (val: any) => (this.selectedDrugs = val),\n        },\n        {\n          id: \"enter_batches\",\n          helpText: \"Batch entry\",\n          type: FieldType.TT_BATCH_MOVEMENT,\n          beforeNext: (v: any, f: any, c: any, {currentFieldContext}: any) => {\n            const drugsToStr = (drugs: any) => drugs.map((b: any) => `${b.label}`).join(' & ')\n            const partialEntries = currentFieldContext.drugs.filter((drug: Option) => !drug.other.tins || !drug.other.reason);\n            if (!isEmpty(partialEntries)) {\n              const partialDrugs = drugsToStr(partialEntries)\n              toastWarning(`Please fix partial batch entries for drugs: ${partialDrugs}`)\n              return false\n            }\n            return true\n          },\n          options: () => this.selectedDrugs,\n          validation: (val: any) => Validation.required(val),\n          config: {\n            getReasons: this.getReasons,\n          }\n        },\n        {\n          id: \"authorization\",\n          helpText: \"Enter authorization code\",\n          type: FieldType.TT_TEXT,\n          config: {\n            customKeyboard: [CHARACTERS_AND_NUMBERS_LO, [['Delete']]]\n          },\n          validation: (v: Option) => Validation.validateSeries([\n            () => Validation.required(v),\n            () => {\n              const value = v.value as string\n              const dha = new DHAVerificationService()\n              return !dha.isValidDHACode(value.toUpperCase())\n                ? ['Invalid authorization code']\n                : null\n            }\n          ]), \n        },\n        {\n          id: \"summary\",\n          helpText: \"Summary\",\n          type: FieldType.TT_TABLE_VIEWER,\n          options: (d: any) => this.buildResults(d),\n          config: {\n            hiddenFooterBtns: [\"Clear\"],\n          },\n        },\n      ];\n    },\n    buildResults(formData: any) {\n      const isRelocation = formData.task.value === 'Relocations'\n      const columns = [\n        \"Drug\",\n        \"Total Tins\",\n        \"Expiry date\",\n        \"Authorization code\",\n        \"Reason\"\n      ];\n\n      if (isRelocation) columns.push('Relocation')\n\n      const rows = formData.enter_batches.map((drug: any) => {\n        const data = [\n          drug.other.drug_name,\n          toNumString(drug.other.tins),\n          HisDate.toStandardHisDisplayFormat(drug.other.expiry_date),\n          formData.authorization.value.toUpperCase(),\n          drug.other.reason\n        ]\n        if (isRelocation) data.push(formData.relocation_location.label)\n        return data\n      });\n      return [\n        {\n          label: \"Confirm entry\",\n          value: \"Table\",\n          other: { columns, rows },\n        },\n      ];\n    },\n    async getDrugs(checked: Option[], date: string): Promise<Array<Option>> {\n      const drugs = await this.stockService.getItems();\n      return  drugs.map((drug: any) => {\n        const name = drug?.drug_name ?? drug?.drug_legacy_name ?? 'N/A';\n        const expireAt = HisDate.toStandardHisDisplayFormat(drug.expiry_date);\n        const isChecked = checked.filter(c => c.label === name).length >= 1 \n        return {\n          label: name,\n          value: drug.drug_id,\n          isChecked,\n          description: {\n            color: \"primary\",\n            show: \"always\",\n            text: `Product Code: ${drug.product_code} - Batch Number: ${drug.batch_number} - Pack Size: ${drug.pack_size} - Expiry date: ${expireAt}`\n          },\n          other: {\n            ...drug,\n            tins: null,\n            quantity: Math.trunc(drug.current_quantity / drug.pack_size) || 0,\n            reason: ''\n          },\n        };\n      })\n      .filter((drug: any) => {\n        return !(dayjs(date).isBefore(drug.other.delivery_date)) &&\n          drug.other.current_quantity > 0\n      });\n    },\n    mapToOptions(vals: string[]) {\n      return vals.map((data) => {\n        return { label: data, value: data };\n      });\n    },\n    getReasons(drug: Option, formdata: any): any {\n      if (formdata.task.value === \"Relocations\") {\n        return this.mapToOptions([\n          \"Transfer to another facility/relocation\",\n          \"For trainings\",\n        ]);\n      } \n      const drugExpired = dayjs(drug.other?.expiry_date).isAfter(StockService.getSessionDate());\n      const disposeReasons = [\"Damaged\", \"Phased out\", \"Banned\", \"Missing\"];\n      if(!drugExpired) disposeReasons.push(\"Expired\");\n      return this.mapToOptions(disposeReasons);\n    },\n  },\n  created() {\n    this.stockService = new StockService();\n    this.fields = this.getFields();\n  },\n});\n","import { render } from \"./movement.vue?vue&type=template&id=323c1db9&ts=true\"\nimport script from \"./movement.vue?vue&type=script&lang=ts\"\nexport * from \"./movement.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/anthony/Documents/source/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { resolveDynamicComponent as _resolveDynamicComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createBlock(_resolveDynamicComponent(_ctx.formType), {\n    fields: _ctx.fields,\n    skipSummary: _ctx.skipSummary,\n    activeField: _ctx.activeField,\n    cancelDestinationPath: _ctx.cancelDestinationPath,\n    onOnFinish: _ctx.onFinish,\n    onFinish: _ctx.onFinishAction,\n    onOnIndex: _ctx.onIndex\n  }, null, 40, [\"fields\", \"skipSummary\", \"activeField\", \"cancelDestinationPath\", \"onOnFinish\", \"onFinish\", \"onOnIndex\"]))\n}","\nimport TouchScreenForm from \"@/components/Forms/TouchScreenForm.vue\";\nimport { defineComponent, PropType } from \"vue\";\nimport { Field } from \"./FieldInterface\";\n\nexport default defineComponent({\n    name: \"HisStandardForm\",\n    components: { TouchScreenForm },\n    emits: [\n        'onFinish',\n        'onIndex'\n    ],\n    data: () => ({\n        formType: 'touch-screen-form' as string\n    }),\n    props: {\n        onFinishAction: {\n            type: Function\n        },\n        skipSummary: {\n            type: Boolean,\n            default: false\n        },\n        activeField: {\n            type: String\n        },\n        fields: {\n            type: Object as PropType<Field[]>,\n            required: true\n        },\n        cancelDestinationPath: {\n            type: String,\n            required: false,\n        }\n    },\n    methods: {\n        onFinish(formData: any, computedData: any) {\n            this.$emit('onFinish', formData, computedData)\n        },\n        onIndex(i: number) {\n            this.$emit('onIndex', i)\n        }\n    }\n})\n","import { render } from \"./HisStandardForm.vue?vue&type=template&id=6daa0375&ts=true\"\nimport script from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\nexport * from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/anthony/Documents/source/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","/**\n * Map all formElements/components defined in \"@/components/FormElements\" \n * in the Enum below by their file name.\n * \n * Next step is to add FieldType entry in COMPONENT_REFS in the \n * Array below the FieldType Enum\n */\nexport enum FieldType {\n    TT_ASYNC_MULTI_SELECT = 'AsyncMultiSelect',\n    TT_LINKAGE_CODE = 'LinkageCodeInput',\n    TT_MULTI_SELECT_GRID= 'HisMultiSelectGrid',\n    TT_AGE_INPUT='HisAgeInput',\n    TT_GROUP_SELECTOR = 'HisGroupSelector',\n    TT_DATA_TABLE = 'HisDataTable',\n    TT_GRID_SELECTOR = 'HisGridSelector',\n    TT_NOTE = 'HisNote',\n    TT_BARCODE = 'HisBarcodeInput',\n    TT_MONTHLY_DAYS=\"HisMonthlyDays\",\n    TT_TEXT=\"HisTextInput\",\n    TT_NUMBER = \"HisNumberInput\",\n    TT_DATETIME=\"datetime\",\n    TT_SELECT=\"HisSelect\",\n    TT_MULTIPLE_SELECT=\"HisMultipleSelect\",\n    TT_ART_REGIMEN_SELECTION=\"HisArtRegimenSelection\",\n    TT_NEXT_VISIT_INTERVAL_SELECTION=\"HisNextVisitInterval\",\n    TT_TABLE_VIEWER=\"HisTableViewer\",\n    TT_DOSAGE_INPUT=\"HisDosageInput\",\n    TT_YES_NO=\"YesNoSelect\",\n    TT_MULTIPLE_YES_NO=\"MultiYesNoSelect\",\n    TT_SUMMARY=\"HisSummary\",\n    TT_WEIGHT_CHART = \"HisWeightChart\",\n    TT_VITALS_ENTRY=\"HisVitalsEntry\",\n    TT_ADHERENCE_INPUT = \"HisAdherenceInput\",\n    TT_ART_STAGING_SUMMARY = \"ArtStagingSummary\",\n    TT_LAB_ORDERS = \"HisLabOrders\",\n    TT_APPOINTMENTS_ENTRY = \"HisAppointments\",\n    TT_DISPENSATION_INPUT = 'DrugDispensationSelection',\n    TT_PROGRAM_SELECTION = 'ProgramSelection',\n    TT_DATE_PICKER = 'HisDatePicker',\n    TT_PERSON_RESULT_VIEW = 'PersonSearchView',\n    TT_RELATION_SELECTION = 'RelationsSelection',\n    TT_FILING_NUMBER_VIEW = 'FilingNumberView',\n    TT_CARD_SELECTOR = 'HisCardSelector',\n    TT_PERSON_MATCH_VIEW = 'PersonMatchView',\n    TT_FULL_DATE = 'HisDateInput',\n    TT_BATCH_ENTRY = 'HisBatchEntry',\n    TT_BATCH_VERIFICATION = 'HisBatchVerification',\n    TT_BATCH_MOVEMENT = 'HisBatchMovement',\n    TT_COMPLAINTS_PICKER = 'HisComplaintsPicker',\n    TT_RADIOLOGY_PICKER = 'HisRadiologyPicker',\n    TT_IP_ADDRESS = 'HisIPAddress',\n    TT_TEXT_BANNER = 'HisTextBanner',\n    TT_DRUG_DISPENSER = 'GeneralDrugDispenser',\n    TT_CLINIC_HOLIDAY_PICKER = 'HisClinicHolidayPicker',\n    TT_ANC_PREGNANCY_INPUT_CONFIG = 'AncPregnancyInfoConfig',\n    TT_ANC_PREGNANCY_DETAILS_INPUT = 'AncPregnancyDetailsInput',\n    TT_ANC_LMP_DATE_INPUT = 'AncLmpDateInput',\n    TT_ANC_DRUGSET_INPUT = 'AncDrugSetInput',\n    TT_DRUG_TRANSFER_IN = 'DrugTransferInput',\n    TT_PRESCRIPTION_INPUT = 'HisPrescriptionInput',\n    TT_INFINITE_SCROLL_MULTIPLE_SELECT=\"HisInfiniteScrollMultipleSelect\"\n}\n\n// Register FieldTypes here that will be registered at runtime\nexport const COMPONENT_REFS: FieldType[] = [\n    FieldType.TT_ASYNC_MULTI_SELECT,\n    FieldType.TT_LINKAGE_CODE,\n    FieldType.TT_MULTI_SELECT_GRID,\n    FieldType.TT_AGE_INPUT,\n    FieldType.TT_BARCODE,\n    FieldType.TT_NOTE,\n    FieldType.TT_SELECT,\n    FieldType.TT_CARD_SELECTOR,\n    FieldType.TT_MULTIPLE_SELECT,\n    FieldType.TT_TEXT,\n    FieldType.TT_NUMBER,\n    FieldType.TT_MONTHLY_DAYS,\n    FieldType.TT_ART_REGIMEN_SELECTION,\n    FieldType.TT_NEXT_VISIT_INTERVAL_SELECTION,\n    FieldType.TT_TABLE_VIEWER,\n    FieldType.TT_DOSAGE_INPUT,\n    FieldType.TT_YES_NO,\n    FieldType.TT_MULTIPLE_YES_NO,\n    FieldType.TT_WEIGHT_CHART,\n    FieldType.TT_VITALS_ENTRY,\n    FieldType.TT_APPOINTMENTS_ENTRY,\n    FieldType.TT_COMPLAINTS_PICKER,\n    FieldType.TT_CLINIC_HOLIDAY_PICKER,\n    FieldType.TT_SUMMARY,\n    FieldType.TT_ART_STAGING_SUMMARY,\n    FieldType.TT_ADHERENCE_INPUT,\n    FieldType.TT_LAB_ORDERS,\n    FieldType.TT_PERSON_RESULT_VIEW,\n    FieldType.TT_PROGRAM_SELECTION,\n    FieldType.TT_DATE_PICKER,\n    FieldType.TT_RELATION_SELECTION,\n    FieldType.TT_FILING_NUMBER_VIEW,\n    FieldType.TT_PERSON_MATCH_VIEW,\n    FieldType.TT_FULL_DATE,\n    FieldType.TT_BATCH_ENTRY,\n    FieldType.TT_BATCH_VERIFICATION,\n    FieldType.TT_BATCH_MOVEMENT,\n    FieldType.TT_IP_ADDRESS,\n    FieldType.TT_TEXT_BANNER,\n    FieldType.TT_DISPENSATION_INPUT,\n    FieldType.TT_DATA_TABLE,\n    FieldType.TT_GROUP_SELECTOR,\n    FieldType.TT_ANC_PREGNANCY_INPUT_CONFIG,\n    FieldType.TT_ANC_PREGNANCY_DETAILS_INPUT,\n    FieldType.TT_ANC_LMP_DATE_INPUT,\n    FieldType.TT_DRUG_TRANSFER_IN,\n    FieldType.TT_GRID_SELECTOR,\n    FieldType.TT_ANC_DRUGSET_INPUT,\n    FieldType.TT_RADIOLOGY_PICKER,\n    FieldType.TT_PRESCRIPTION_INPUT,\n    FieldType.TT_INFINITE_SCROLL_MULTIPLE_SELECT,\n    FieldType.TT_DRUG_DISPENSER\n]\n","import {LocationService} from \"@/services/location_service\"\nimport { Option } from \"@/components/Forms/FieldInterface\"\nimport { isEmpty } from \"lodash\"\n\nexport async function getFacilities(filter=''): Promise<Option[]> {\n    const facilities = await LocationService.getFacilities({name: filter})\n    return facilities.filter((f: any) => !isEmpty(f) && f.name.trim() !='')\n        .map((facility: any) => ({\n            label: facility.name,\n            value: facility.location_id,\n            other: facility\n        }))\n}\n\nexport async function getLabFacilities(filter=''): Promise<Option[]> {\n    const facilities = await LocationService.getLabs({'search_name': filter})\n    return facilities.map((facility: any) => ({\n            label: facility,\n            value: facility\n        }))\n}\n\nexport async function getFacilityWards(filter=''): Promise<Option[]> {\n    const wards = await LocationService.getFacilities({\n        name: filter,\n        tag: 'Facility adult sections'\n    })\n\n    return wards.map((ward: any) => ({\n        label: ward.name,\n        value: ward.name,\n        other: ward\n    }))\n}\n\nexport async function getSpecialistClinics(): Promise<Option[]> {\n    const clinics = await LocationService.getSpecialistClinics()\n    return clinics.map((clinic: any) => ({\n        label: clinic.name,\n        value: clinic.name,\n        other: clinic\n    }))\n}\n\nexport async function getRegions(): Promise<Option[]> {\n    const regions = await LocationService.getRegions()\n    return regions.map((region: any) => ({\n        label: region.name,\n        value: region.region_id,\n        other: region\n    }))\n}\n\nexport async function getDistricts(regionID: number): Promise<Option[]> {\n    const districts = await LocationService.getDistricts(regionID)\n    return districts.map((district: any) => ({\n        label: district.name,\n        value: district.district_id,\n        other: district\n    }))\n}\n\nexport async function getTraditionalAuthorities(districtID: number, name=''): Promise<Option[]> {\n    const TAs = await LocationService.getTraditionalAuthorities(districtID, name)\n    return TAs.map((TA: any) => ({\n        label: TA.name,\n        value: TA.traditional_authority_id,\n        other: TA\n    }))\n}\n\nexport async function getVillages(traditionalAuthorityID: number, name=''): Promise<Option[]> {\n    const villages = await LocationService.getVillages(traditionalAuthorityID, name)\n    return villages.map((village: any) => ({\n        label: village.name,\n        value: village.village_id,\n        other: village\n    }))\n}\n\nexport async function getVillagesByName(name='a', page=1): Promise<Option[]> {\n    const villages = await LocationService.getVillagesByName(name, page)\n    return villages.map((village: any) => ({\n        label: village.name,\n        value: village.village_id,\n        other: village\n    }))\n}\n\nexport function getLandmarks(): Option[] {\n    const landmarks = [\n        'Catholic Church',\n        'CCAP',\n        'Seventh Day',\n        'Mosque',\n        'Primary School',\n        'Borehole',\n        'Secondary School',\n        'College',\n        'Market',\n        'Football Ground',\n        'Other'\n    ]\n\n    return landmarks.map(landmark =>({\n        label: landmark,\n        value: landmark,\n        other: {\n            code: landmark\n        }\n    }))\n}\n","var map = {\n\t\"./AncDrugSetInput.vue\": [\n\t\t\"c99f\",\n\t\t\"TouchFormElement0\"\n\t],\n\t\"./AncLmpDateInput.vue\": [\n\t\t\"101a\",\n\t\t\"TouchFormElement1\"\n\t],\n\t\"./AncPregnancyDetailsInput.vue\": [\n\t\t\"b043\",\n\t\t\"TouchFormElement2\"\n\t],\n\t\"./AncPregnancyInfoConfig.vue\": [\n\t\t\"262e\",\n\t\t\"TouchFormElement3\"\n\t],\n\t\"./ArtStagingSummary.vue\": [\n\t\t\"43db\",\n\t\t\"TouchFormElement4\"\n\t],\n\t\"./AsyncMultiSelect.vue\": [\n\t\t\"5de2\",\n\t\t\"chunk-03993608\",\n\t\t\"TouchFormElement5\"\n\t],\n\t\"./BaseTextInput.vue\": [\n\t\t\"36ad\",\n\t\t\"TouchFormElement6\"\n\t],\n\t\"./DrugDispensationSelection.vue\": [\n\t\t\"05d5\",\n\t\t\"TouchFormElement7\"\n\t],\n\t\"./DrugTransferInput.vue\": [\n\t\t\"de42\",\n\t\t\"chunk-337918c0\",\n\t\t\"TouchFormElement8\"\n\t],\n\t\"./FieldMixin.vue\": [\n\t\t\"51c8\",\n\t\t\"TouchFormElement9\"\n\t],\n\t\"./FilingNumberView.vue\": [\n\t\t\"c650\",\n\t\t\"TouchFormElement10\"\n\t],\n\t\"./GeneralDrugDispenser.vue\": [\n\t\t\"7737\",\n\t\t\"TouchFormElement11\"\n\t],\n\t\"./HisAdherenceInput.vue\": [\n\t\t\"f2c3\",\n\t\t\"chunk-337918c0\",\n\t\t\"TouchFormElement12\"\n\t],\n\t\"./HisAgeInput.vue\": [\n\t\t\"c05f\",\n\t\t\"TouchFormElement13\"\n\t],\n\t\"./HisAppointments.vue\": [\n\t\t\"b2eb\",\n\t\t\"chunk-d64a144c\",\n\t\t\"TouchFormElement14\"\n\t],\n\t\"./HisArtRegimenSelection.vue\": [\n\t\t\"47b9\",\n\t\t\"TouchFormElement15\"\n\t],\n\t\"./HisBarcodeInput.vue\": [\n\t\t\"dd65\",\n\t\t\"TouchFormElement16\"\n\t],\n\t\"./HisBatchEntry.vue\": [\n\t\t\"f2ab\",\n\t\t\"chunk-182277b5\",\n\t\t\"chunk-337918c0\",\n\t\t\"TouchFormElement17\"\n\t],\n\t\"./HisBatchMovement.vue\": [\n\t\t\"5148\",\n\t\t\"chunk-182277b5\",\n\t\t\"chunk-337918c0\",\n\t\t\"TouchFormElement18\"\n\t],\n\t\"./HisBatchVerification.vue\": [\n\t\t\"7b0f\",\n\t\t\"chunk-182277b5\",\n\t\t\"chunk-337918c0\",\n\t\t\"TouchFormElement19\"\n\t],\n\t\"./HisCardSelector.vue\": [\n\t\t\"0734\",\n\t\t\"TouchFormElement20\"\n\t],\n\t\"./HisClinicHolidayPicker.vue\": [\n\t\t\"4030\",\n\t\t\"chunk-d64a144c\",\n\t\t\"TouchFormElement21\"\n\t],\n\t\"./HisComplaintsPicker.vue\": [\n\t\t\"82d1\",\n\t\t\"TouchFormElement22\"\n\t],\n\t\"./HisDataTable.vue\": [\n\t\t\"a6ba\",\n\t\t\"TouchFormElement23\"\n\t],\n\t\"./HisDateInput.vue\": [\n\t\t\"374c\",\n\t\t\"TouchFormElement24\"\n\t],\n\t\"./HisDatePicker.vue\": [\n\t\t\"9b30\",\n\t\t\"chunk-d64a144c\",\n\t\t\"TouchFormElement25\"\n\t],\n\t\"./HisDosageInput.vue\": [\n\t\t\"b34c\",\n\t\t\"chunk-337918c0\",\n\t\t\"TouchFormElement26\"\n\t],\n\t\"./HisGridSelector.vue\": [\n\t\t\"112a\",\n\t\t\"TouchFormElement27\"\n\t],\n\t\"./HisGroupSelector.vue\": [\n\t\t\"81cf\",\n\t\t\"TouchFormElement28\"\n\t],\n\t\"./HisIPAddress.vue\": [\n\t\t\"2a82\",\n\t\t\"TouchFormElement29\"\n\t],\n\t\"./HisInfiniteScrollMultipleSelect.vue\": [\n\t\t\"52a3\",\n\t\t\"TouchFormElement30\"\n\t],\n\t\"./HisLabOrders.vue\": [\n\t\t\"e614\",\n\t\t\"chunk-03993608\",\n\t\t\"TouchFormElement31\"\n\t],\n\t\"./HisMonthlyDays.vue\": [\n\t\t\"69cf\",\n\t\t\"TouchFormElement32\"\n\t],\n\t\"./HisMultiSelectGrid.vue\": [\n\t\t\"0fa3\",\n\t\t\"TouchFormElement33\"\n\t],\n\t\"./HisMultipleSelect.vue\": [\n\t\t\"2fd5\",\n\t\t\"chunk-03993608\",\n\t\t\"TouchFormElement34\"\n\t],\n\t\"./HisNextVisitInterval.vue\": [\n\t\t\"3126\",\n\t\t\"TouchFormElement35\"\n\t],\n\t\"./HisNote.vue\": [\n\t\t\"c927\",\n\t\t\"TouchFormElement36\"\n\t],\n\t\"./HisNumberInput.vue\": [\n\t\t\"5e75\",\n\t\t\"TouchFormElement37\"\n\t],\n\t\"./HisPrescriptionInput.vue\": [\n\t\t\"87e5\",\n\t\t\"chunk-337918c0\",\n\t\t\"TouchFormElement38\"\n\t],\n\t\"./HisRadiologyPicker.vue\": [\n\t\t\"adc7\",\n\t\t\"TouchFormElement39\"\n\t],\n\t\"./HisSelect.vue\": [\n\t\t\"d11f\",\n\t\t\"TouchFormElement40\"\n\t],\n\t\"./HisSummary.vue\": [\n\t\t\"e0bd\",\n\t\t\"TouchFormElement41\"\n\t],\n\t\"./HisTableViewer.vue\": [\n\t\t\"8904\",\n\t\t\"TouchFormElement42\"\n\t],\n\t\"./HisTextBanner.vue\": [\n\t\t\"952c\",\n\t\t\"TouchFormElement43\"\n\t],\n\t\"./HisTextInput.vue\": [\n\t\t\"6ef9\",\n\t\t\"TouchFormElement44\"\n\t],\n\t\"./HisVitalsEntry.vue\": [\n\t\t\"e333\",\n\t\t\"TouchFormElement45\"\n\t],\n\t\"./HisWeightChart.vue\": [\n\t\t\"26a1\",\n\t\t\"TouchFormElement46\"\n\t],\n\t\"./LinkageCodeInput.vue\": [\n\t\t\"ac86\",\n\t\t\"TouchFormElement47\"\n\t],\n\t\"./MultiYesNoSelect.vue\": [\n\t\t\"5fd1\",\n\t\t\"TouchFormElement48\"\n\t],\n\t\"./PersonMatchView.vue\": [\n\t\t\"6591\",\n\t\t\"TouchFormElement49\"\n\t],\n\t\"./PersonSearchView.vue\": [\n\t\t\"28b2\",\n\t\t\"TouchFormElement50\"\n\t],\n\t\"./ProgramSelection.vue\": [\n\t\t\"e3b4\",\n\t\t\"TouchFormElement51\"\n\t],\n\t\"./RelationsSelection.vue\": [\n\t\t\"0e57\",\n\t\t\"TouchFormElement52\"\n\t],\n\t\"./SelectMixin.vue\": [\n\t\t\"82a9\",\n\t\t\"TouchFormElement53\"\n\t],\n\t\"./YesNoSelect.vue\": [\n\t\t\"71f2\",\n\t\t\"TouchFormElement54\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"f159\";\nmodule.exports = webpackAsyncContext;"],"sourceRoot":""}