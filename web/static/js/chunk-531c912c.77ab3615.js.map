{"version":3,"sources":["webpack:///./src/apps/ART/views/reports/ReportMixin.vue","webpack:///./src/apps/ART/views/reports/ReportMixin.vue?42ba","webpack:///./src/views/reports/BaseTableReport.vue?4f36","webpack:///./src/views/reports/BaseTableReport.vue","webpack:///./src/views/reports/BaseTableReport.vue?8f7c","webpack:///./src/views/reports/BaseTableReport.vue?5994","webpack:///./src/components/Forms/HisStandardForm.vue?f008","webpack:///./src/components/Forms/HisStandardForm.vue","webpack:///./src/components/Forms/HisStandardForm.vue?6820","webpack:///./src/apps/OPD/views/reports/clinic/DiagnosisByAddress.vue?1e64","webpack:///./src/apps/OPD/views/reports/clinic/DiagnosisByAddress.vue","webpack:///./src/apps/OPD/views/reports/clinic/DiagnosisByAddress.vue?31a0","webpack:///./src/apps/OPD/services/opd_report_service.ts"],"names":["defineComponent","data","fields","report","reportReady","period","startDate","endDate","customFileName","drillDownCache","methods","formatGender","gender","upCaseGender","toUpperCase","test","toDate","date","HisDate","toStandardHisDisplayFormat","sortByArvNumber","attr","sort","a","b","this","getArvInt","e","console","error","arv","prfx","art","arvNumStr","split","arvNumInt","parseInt","tdARV","params","table","td","sortValue","confirmPatient","patient","$router","push","title","columns","asyncRows","canExport","modal","modalController","create","component","DrilldownTable","cssClass","componentProps","showFilters","rowsPerPage","paginated","showReportStamp","footerColor","onFinish","dismiss","present","rows","rowParser","getDefaultDrillDownTable","thTxt","async","ARV_NUM_INDEX","t","tableRows","map","id","index","isArray","defaultRow","num","key","oldIndex","rest","Patientservice","findByID","row","getArvNumber","getGender","tdDate","getBirthdate","toString","tdBtn","path","Promise","all","runTableDrill","drilldownData","drill","values","length","tdLink","getQuaterOptions","quarters","ArtReportService","getReportQuarters","q","label","name","value","start","other","getDateDurationFields","useQuarter","setCustomQuarterPeriod","maxQuarter","maxDate","Service","getSessionDate","minDate","helpText","type","FieldType","TT_SELECT","condition","validation","val","Validation","required","options","items","generateDateFields","f","quarter","estimation","allowUnknown","computeValue","unload","d","s","c","end_date","_","start_date","__exports__","_hoisted_1","class","_hoisted_2","_hoisted_3","render","_ctx","_cache","$props","$setup","$data","$options","_component_his_standard_form","_resolveComponent","_component_ion_img","_component_ion_thumbnail","_component_ion_label","_component_report_filter","_component_ion_toolbar","_component_ion_header","_component_report_table","_component_ion_content","_component_pagination","_component_ion_chip","_component_ion_footer","_component_his_footer","_component_ion_page","_openBlock","_createElementBlock","_Fragment","_withDirectives","_createVNode","onOnFinish","skipSummary","_vShow","showForm","_createCommentVNode","_createBlock","default","_withCtx","slot","src","logo","_createElementVNode","_createTextVNode","_toDisplayString","customInfo","showPerPageFilter","disableSearchFilter","isTableLoading","disablePerPageFilter","totalRowCount","onOnItemsPerPage","i","itemsPerPage","onOnSearchFilter","searchFilter","config","tableCssTheme","newPage","currentPage","onOnIsLoading","l","onOnTableRows","r","onOnPagination","p","totalPages","onOnActiveColumns","activeColumns","onOnActiveRows","activeRows","perPage","maxVisibleButtons","onOnChangePage","color","coreVersion","apiVersion","btns","components","HisStandardForm","IonHeader","ReportTable","HisFooter","IonPage","IonContent","IonToolbar","Pagination","ReportFilter","IonFooter","IonChip","IonLabel","props","String","encryptPDF","Boolean","Object","Array","customBtns","canExportPDf","canExportCsv","onReportConfiguration","Function","Number","formData","computeFormData","isLoadingData","getApiVersion","getCoreVersion","siteUUID","getSiteUUID","getFileName","getLocationName","pdfEncryptionData","password","getUserName","encryption","userPassword","ownerPassword","userPermissions","computedData","presentLoading","loadingController","toastDanger","loading","message","backdropDismiss","created","size","visible","onClick","toExportableFormat","toCsv","mode","option","infoActionSheet","toTablePDF","reloadReport","_resolveDynamicComponent","formType","activeField","cancelDestinationPath","onFinishAction","onOnIndex","onIndex","TouchScreenForm","emits","$emit","_component_report_template","init","ReportTemplate","mixins","ReportMixin","reportService","OpdReportService","setStartDate","setEndDate","getDateIntervalPeriod","buildRows","getDiagnosisByAddress","totalDiagnosis","diagnosis","reduce","isEmpty","address","LA_TYPES","one","two","three","four","NCD_TYPES","MENTAL_HEALTH_DIAGNOSIS","constructor","super","epiweek","programID","getProgramID","getPatientsWithNIDs","getReport","getClinicRegistrations","getAttendance","getDrugsGivenWithoutPrescription","getDrugsGivenWithPrescription","getDiagnosis","url","getJson","getLaPrescriptions","getMalariaReport","printLaReport","printService","PrintoutService","keys","forEach","v","printLbl","Url","parameterizeObjToString","setEpiWeek","getReportPeriod","buildRequest","payload","minDuration","year","getCurrentYear","end"],"mappings":"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","file":"js/chunk-531c912c.77ab3615.js","sourcesContent":["\nimport { Service } from \"@/services/service\"\nimport { defineComponent } from 'vue'\nimport { Field } from '@/components/Forms/FieldInterface'\nimport { generateDateFields } from \"@/utils/HisFormHelpers/MultiFieldDateHelper\"\nimport { Patientservice } from \"@/services/patient_service\"\nimport HisDate from \"@/utils/Date\"\nimport { modalController } from \"@ionic/vue\";\nimport DrilldownTable from \"@/apps/ART/views/reports/BasicReportTemplate.vue\"\nimport { ArtReportService } from \"@/apps/ART/services/reports/art_report_service\"\nimport { FieldType } from \"@/components/Forms/BaseFormElements\"\nimport { Option } from '@/components/Forms/FieldInterface'\nimport Validation from \"@/components/Forms/validations/StandardValidations\"\nimport table from \"@/components/DataViews/tables/ReportDataTable\"\nimport { isArray } from \"lodash\"\nimport { toGenderString } from \"@/utils/Strs\"\n\nexport default defineComponent({\n    data: () => ({\n        fields: [] as Array<Field>,\n        report: {} as any,\n        reportReady: false as boolean,\n        period: '' as string,\n        startDate: '' as string,\n        endDate: '' as string,\n        customFileName: '' as string,\n        drillDownCache: {} as Record<number, Array<any>>\n    }),\n    methods: {\n        formatGender(gender: string) {\n            const upCaseGender = `${gender}`.toUpperCase()\n            if (upCaseGender === 'M' || upCaseGender === 'MALE') {\n                return 'Male'\n            }\n            if (upCaseGender === 'F' || upCaseGender === 'FEMALE') {\n                return 'Female'\n            }\n            if (/fbf|fnp|fp/i.test(gender)) {\n                return upCaseGender\n            }\n            return gender\n        },\n        toDate(date: string) {\n            return HisDate.toStandardHisDisplayFormat(date)\n        },\n        sortByArvNumber(data: Array<any>, attr='arv_number') {\n            try {\n                return data.sort((a: any, b: any) => this.getArvInt(a[attr]) > this.getArvInt(b[attr]) ? 1 : -1)\n            } catch(e) {\n                console.error(e)\n                return data\n            }\n        },\n        getArvInt(arv: string) {\n            if (typeof arv === 'string') {\n                const [prfx, art, arvNumStr] = arv.split('-')\n                const arvNumInt = parseInt(arvNumStr)\n                return typeof arvNumInt === 'number' ? arvNumInt : 0 \n            }\n            return 0\n        },\n        tdARV(arv: string, params={}) {\n            return table.td(arv, { sortValue: this.getArvInt(arv), ...params})\n        },\n        confirmPatient(patient: number) {\n            return this.$router.push(`/patients/confirm?person_id=${patient}`)\n        },\n        async drilldownAsyncRows(title: string, columns: Array<any>, asyncRows: Function, canExport=true) {\n            const modal = await modalController.create({\n                component: DrilldownTable,\n                cssClass: 'large-modal',\n                componentProps: { \n                    title, \n                    columns, \n                    asyncRows,\n                    canExport,\n                    showFilters: true,\n                    rowsPerPage: 50,\n                    paginated: true,\n                    showReportStamp: false,\n                    footerColor: 'light',\n                    onFinish: () => modalController.dismiss()\n                }\n            })\n            modal.present()\n        },\n        async drilldownData(title: string, columns: Array<any>, rows: Array<any>, rowParser: any) {\n            const modal = await modalController.create({\n                component: DrilldownTable,\n                cssClass: 'large-modal',\n                componentProps: { \n                    title, \n                    columns, \n                    rows,\n                    rowParser,\n                    rowsPerPage: 50,\n                    showFilters: true,\n                    paginated: true,\n                    showReportStamp: false,\n                    footerColor: 'light',\n                    onFinish: () => modalController.dismiss()\n                }\n            })\n            modal.present()\n        },\n        getDefaultDrillDownTable() {\n            const columns = [\n                [\n                    table.thTxt('ARV number'), \n                    table.thTxt('Gender'),\n                    table.thTxt('Birth Date'), \n                    table.thTxt('Actions')\n                ]\n            ]\n            const rowParser = async (tableRows: Array<any[]>) => {\n                let ARV_NUM_INDEX = 0\n                const t = tableRows.map(async (defaultRow: Array<any>) => {\n                    let id: any = null\n                    let index: null | number = null\n                    if (isArray(defaultRow)) {\n                        const [num, key ] = defaultRow\n                        index = num\n                        if (key in this.drillDownCache) {\n                            const [oldIndex, ...rest] = this.drillDownCache[key]\n                            return [index, ...rest] // Assign new index number and maintain patient record\n                        }\n                    } else {\n                        id = defaultRow\n                        if (id in this.drillDownCache) {\n                            return this.drillDownCache[id]\n                        }\n                    }\n    \n                    const data = await Patientservice.findByID(id)\n                    const patient = new Patientservice(data)\n                    const row = []\n                    if (index) {\n                        ARV_NUM_INDEX = 1\n                        row.push(index)\n                    } \n                    row.push(this.tdARV(patient.getArvNumber()))\n                    row.push(table.td(this.formatGender(patient.getGender())))\n                    row.push(table.tdDate(patient.getBirthdate().toString()))\n                    row.push(table.tdBtn('Show', async () => {\n                        await modalController.dismiss({})\n                        this.$router.push({ path: `/patient/dashboard/${id}`})\n                    }))\n                    this.drillDownCache[id] = row\n                    return row\n                })\n                const rows = await Promise.all(t)\n                return rows.sort((a: any, b: any) => \n                        a[ARV_NUM_INDEX].sortValue > b[ARV_NUM_INDEX].sortValue \n                        ? 1 : -1)\n            }\n            return { rowParser, columns }\n        },\n        runTableDrill(data: any, title='Drilldown patients') {\n            const { columns, rowParser } = this.getDefaultDrillDownTable()\n            this.drilldownData(title, columns, data, rowParser)\n        },\n        drill(values: Array<number>, title='Drill table') {\n            if (values && values.length > 0) {\n                return table.tdLink(\n                    values.length, \n                    () => this.runTableDrill(values, title)\n                )\n            }\n            return table.td(0)\n        },\n        getQuaterOptions() {\n            const quarters = ArtReportService.getReportQuarters()\n            return quarters.map((q: any) => ({\n                label: q.name, value: q.start, other: q\n            }))\n        },\n        getDateDurationFields(\n            useQuarter=false, \n            setCustomQuarterPeriod=false, \n            maxQuarter=5, \n            maxDate=Service.getSessionDate() as string | null,\n        ): Array<Field> {\n            const minDate = '2000-01-01'\n            return [\n                {\n                    id: 'quarter',\n                    helpText: 'Select Quarter',\n                    type: FieldType.TT_SELECT,\n                    condition: () => useQuarter,\n                    validation: (val: Option) => Validation.required(val),\n                    options: () => {\n                        const quarters = ArtReportService.getReportQuarters(maxQuarter)\n                        let items: Array<Option> = quarters.map((q: any) => ({\n                            label: q.name,\n                            value: q.start,\n                            other: q\n                        }))\n                        if (setCustomQuarterPeriod) {\n                            items = [\n                                {\n                                    label: 'Set custom period',\n                                    value: 'custom_period',\n                                    other: {}\n                                },\n                                ...items\n                            ]\n                        }\n                        return items\n                    }\n                },\n                ...generateDateFields({\n                    id: 'start_date',\n                    helpText: 'Start',\n                    required: true,\n                    condition: (f: any) => f.quarter && f.quarter.value === 'custom_period' || !useQuarter,\n                    minDate: () => minDate,\n                    maxDate: () => maxDate,\n                    estimation: {\n                        allowUnknown: false\n                    },\n                    computeValue: (date: string) => date \n                }),\n                ...generateDateFields({\n                    id: 'end_date',\n                    helpText: 'End',\n                    required: true,\n                    condition: (f: any) => f.quarter && f.quarter.value === 'custom_period' || !useQuarter,\n                    unload: (d: any, s: any, f: any, c: any) => {\n                        if (s === 'next') {\n                            this.endDate = c.end_date\n                        }\n                    },\n                    minDate: (_: any, c: any) => c.start_date,\n                    maxDate: () => maxDate,\n                    estimation: {\n                        allowUnknown: false\n                    },\n                    computeValue: (date: string) => date\n                })\n            ]\n        }\n    }\n})\n","import script from \"./ReportMixin.vue?vue&type=script&lang=ts\"\nexport * from \"./ReportMixin.vue?vue&type=script&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { resolveComponent as _resolveComponent, vShow as _vShow, createVNode as _createVNode, withDirectives as _withDirectives, withCtx as _withCtx, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createBlock as _createBlock, Fragment as _Fragment, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-1fd58e0f\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"header-text-list\" }\nconst _hoisted_2 = { key: 0 }\nconst _hoisted_3 = { class: \"report-content\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_his_standard_form = _resolveComponent(\"his-standard-form\")!\n  const _component_ion_img = _resolveComponent(\"ion-img\")!\n  const _component_ion_thumbnail = _resolveComponent(\"ion-thumbnail\")!\n  const _component_ion_label = _resolveComponent(\"ion-label\")!\n  const _component_report_filter = _resolveComponent(\"report-filter\")!\n  const _component_ion_toolbar = _resolveComponent(\"ion-toolbar\")!\n  const _component_ion_header = _resolveComponent(\"ion-header\")!\n  const _component_report_table = _resolveComponent(\"report-table\")!\n  const _component_ion_content = _resolveComponent(\"ion-content\")!\n  const _component_pagination = _resolveComponent(\"pagination\")!\n  const _component_ion_chip = _resolveComponent(\"ion-chip\")!\n  const _component_ion_footer = _resolveComponent(\"ion-footer\")!\n  const _component_his_footer = _resolveComponent(\"his-footer\")!\n  const _component_ion_page = _resolveComponent(\"ion-page\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _withDirectives(_createVNode(_component_his_standard_form, {\n      onOnFinish: _ctx.onFinish,\n      skipSummary: true,\n      fields: _ctx.fields\n    }, null, 8, [\"onOnFinish\", \"fields\"]), [\n      [_vShow, _ctx.showForm]\n    ]),\n    (!_ctx.showForm)\n      ? (_openBlock(), _createBlock(_component_ion_page, { key: 0 }, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_header, null, {\n              default: _withCtx(() => [\n                _createVNode(_component_ion_toolbar, null, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_ion_thumbnail, { slot: \"start\" }, {\n                      default: _withCtx(() => [\n                        _createVNode(_component_ion_img, { src: _ctx.logo }, null, 8, [\"src\"])\n                      ]),\n                      _: 1\n                    }),\n                    _createVNode(_component_ion_label, null, {\n                      default: _withCtx(() => [\n                        _createElementVNode(\"ul\", _hoisted_1, [\n                          _createElementVNode(\"li\", null, [\n                            _createTextVNode(\"Title \"),\n                            _createElementVNode(\"b\", null, _toDisplayString(_ctx.title), 1)\n                          ]),\n                          _createElementVNode(\"li\", null, [\n                            _createTextVNode(\"Period \"),\n                            _createElementVNode(\"b\", null, _toDisplayString(_ctx.period), 1)\n                          ]),\n                          (_ctx.customInfo)\n                            ? (_openBlock(), _createElementBlock(\"li\", _hoisted_2, [\n                                _createTextVNode(_toDisplayString(_ctx.customInfo.label) + \" \", 1),\n                                _createElementVNode(\"b\", null, _toDisplayString(_ctx.customInfo.value), 1)\n                              ]))\n                            : _createCommentVNode(\"\", true)\n                        ])\n                      ]),\n                      _: 1\n                    }),\n                    _createVNode(_component_report_filter, {\n                      slot: \"end\",\n                      showPerPageFilter: _ctx.showFilters || _ctx.paginated,\n                      disableSearchFilter: _ctx.isTableLoading,\n                      disablePerPageFilter: _ctx.isTableLoading,\n                      totalRowCount: _ctx.tableRows.length,\n                      onOnItemsPerPage: _cache[0] || (_cache[0] = (i) => _ctx.itemsPerPage = i),\n                      onOnSearchFilter: _cache[1] || (_cache[1] = (f) => _ctx.searchFilter = f)\n                    }, null, 8, [\"showPerPageFilter\", \"disableSearchFilter\", \"disablePerPageFilter\", \"totalRowCount\"])\n                  ]),\n                  _: 1\n                })\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_ion_content, null, {\n              default: _withCtx(() => [\n                _createElementVNode(\"div\", _hoisted_3, [\n                  _createVNode(_component_report_table, {\n                    rows: _ctx.rows,\n                    paginated: _ctx.paginated,\n                    asyncRows: _ctx.asyncRows,\n                    rowParser: _ctx.rowParser,\n                    config: {..._ctx.config, tableCssTheme: _ctx.tableCssTheme},\n                    columns: _ctx.columns,\n                    showFilters: _ctx.showFilters,\n                    newPage: _ctx.currentPage,\n                    searchFilter: _ctx.searchFilter,\n                    rowsPerPage: _ctx.itemsPerPage,\n                    onOnIsLoading: _cache[2] || (_cache[2] = (l) => _ctx.isTableLoading = l),\n                    onOnTableRows: _cache[3] || (_cache[3] = (r) => _ctx.tableRows = r),\n                    onOnPagination: _cache[4] || (_cache[4] = (p) => _ctx.totalPages = p.length),\n                    onOnActiveColumns: _cache[5] || (_cache[5] = (c) => _ctx.activeColumns = c),\n                    onOnActiveRows: _cache[6] || (_cache[6] = (r) => _ctx.activeRows = r)\n                  }, null, 8, [\"rows\", \"paginated\", \"asyncRows\", \"rowParser\", \"config\", \"columns\", \"showFilters\", \"newPage\", \"searchFilter\", \"rowsPerPage\"])\n                ])\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_ion_footer, null, {\n              default: _withCtx(() => [\n                (!_ctx.searchFilter && _ctx.paginated || !_ctx.searchFilter && _ctx.totalPages > 0 && _ctx.paginated)\n                  ? (_openBlock(), _createBlock(_component_ion_toolbar, { key: 0 }, {\n                      default: _withCtx(() => [\n                        _createVNode(_component_pagination, {\n                          perPage: _ctx.itemsPerPage,\n                          maxVisibleButtons: 10,\n                          totalPages: _ctx.totalPages,\n                          onOnChangePage: _cache[7] || (_cache[7] = (p) => _ctx.currentPage=p)\n                        }, null, 8, [\"perPage\", \"totalPages\"])\n                      ]),\n                      _: 1\n                    }))\n                  : _createCommentVNode(\"\", true),\n                (_ctx.showReportStamp)\n                  ? (_openBlock(), _createBlock(_component_ion_toolbar, { key: 1 }, {\n                      default: _withCtx(() => [\n                        _createVNode(_component_ion_chip, { color: \"primary\" }, {\n                          default: _withCtx(() => [\n                            _createTextVNode(\"Date Created: \"),\n                            _createElementVNode(\"b\", null, _toDisplayString(_ctx.date), 1)\n                          ]),\n                          _: 1\n                        }),\n                        _createVNode(_component_ion_chip, { color: \"primary\" }, {\n                          default: _withCtx(() => [\n                            _createTextVNode(\"His-Core Version: \"),\n                            _createElementVNode(\"b\", null, _toDisplayString(_ctx.coreVersion), 1)\n                          ]),\n                          _: 1\n                        }),\n                        _createVNode(_component_ion_chip, { color: \"primary\" }, {\n                          default: _withCtx(() => [\n                            _createTextVNode(\"API Version: \"),\n                            _createElementVNode(\"b\", null, _toDisplayString(_ctx.apiVersion), 1)\n                          ]),\n                          _: 1\n                        })\n                      ]),\n                      _: 1\n                    }))\n                  : _createCommentVNode(\"\", true)\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_his_footer, {\n              color: _ctx.footerColor,\n              btns: _ctx.btns\n            }, null, 8, [\"color\", \"btns\"])\n          ]),\n          _: 1\n        }))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}","\nimport { defineComponent, PropType } from \"vue\";\nimport HisFooter from \"@/components/HisDynamicNavFooter.vue\";\nimport ReportTable from \"@/components/DataViews/tables/ReportDataTable.vue\"\nimport { toCsv, toTablePDF } from \"@/utils/Export\"\nimport { toExportableFormat, ColumnInterface, RowInterface} from \"@/components/DataViews/tables/ReportDataTable\" \nimport HisStandardForm from \"@/components/Forms/HisStandardForm.vue\";\nimport { Field, Option } from '@/components/Forms/FieldInterface';\nimport { \n  IonPage,\n  IonHeader,\n  IonContent,\n  IonToolbar,\n  loadingController,\n  IonChip, \n  IonFooter,\n  IonLabel\n} from \"@ionic/vue\"\nimport { Service } from \"@/services/service\"\nimport HisDate from \"@/utils/Date\"\nimport ReportFilter from \"@/components/ReportFilter.vue\"\nimport Pagination from \"@/components/Pagination.vue\"\nimport { toastDanger } from \"@/utils/Alerts\";\nimport { EncryptionOptions } from \"jspdf\";\nimport { infoActionSheet } from \"@/utils/ActionSheets\";\n\nexport default defineComponent({\n  components: { \n    HisStandardForm,   \n    IonHeader,\n    ReportTable, \n    HisFooter, \n    IonPage, \n    IonContent, \n    IonToolbar,\n    Pagination, \n    ReportFilter,  \n    IonFooter,\n    IonChip, \n    IonLabel\n  },\n  props: {\n      title: {\n      type: String,\n      required: true,\n    },\n    period: {\n      type: String,\n      default: '',\n    },\n    encryptPDF: {\n      type: Boolean,\n      default: false\n    },\n    config: {\n      type: Object as PropType<Record<string, any>>\n    },\n    fields: {\n      type: Array as PropType<Field[]>,\n      default: () => []\n    },\n    columns: {\n      type: Array as PropType<Array<ColumnInterface[]>>,\n      required: true\n    },\n    rows: {\n      type: Array as PropType<Array<RowInterface[]>>,\n      required: true\n    },\n    paginated: {\n        type: Boolean,\n        default: false\n    },\n    customBtns: {\n      type: Array,\n      default: () => []\n    },\n    canExportPDf: {\n      type: Boolean,\n      default: true\n    },\n    canExportCsv: {\n      type: Boolean,\n      default: true\n    },\n    onReportConfiguration: {\n      type: Function,\n      required: false\n    },\n    rowParser: {\n      type: Function as PropType<((data: any) => any[][])>\n    },\n    showFilters: {\n      type: Boolean,\n      default: false\n    },\n    rowsPerPage: {\n      type: Number\n    },\n    asyncRows: {\n      type: Function as PropType<() => Promise<any[][]>>\n    },\n    footerColor: {\n      type: String,\n      default: 'dark'\n    },\n    customFileName: {\n      type: String,\n      default: ''\n    },\n    canExport: {\n      type: Boolean,\n      default: true\n    },\n    showReportStamp: {\n      type: Boolean,\n      default: true\n    },\n    customInfo: {\n      type: Object as PropType<Option>\n    }\n  },\n  data: () => ({\n    formData: {} as any,\n    computeFormData: {} as any,\n    btns: [] as Array<any>,\n    isLoadingData: false as boolean,\n    showForm: false as boolean,\n    logo: \"/assets/images/login-logos/Malawi-Coat_of_arms_of_arms.png\" as string,\n    isTableLoading: false as boolean,\n    searchFilter: '' as string,\n    itemsPerPage: 50 as number,\n    currentPage: 0 as number,\n    tableRows: [] as any,\n    totalPages: 0 as number,\n    activeColumns: [] as any,\n    activeRows: [] as any,\n    date: HisDate.toStandardHisDisplayFormat(Service.getSessionDate()),\n    apiVersion: Service.getApiVersion(),\n    coreVersion: Service.getCoreVersion(),\n    siteUUID: Service.getSiteUUID() as string,\n    tableCssTheme: 'opd-report-theme',\n  }),\n  methods: {\n    getFileName() {\n      return `${Service.getLocationName()} ${this.title} ${this.period}`\n    },\n    pdfEncryptionData(): Record<\"encryption\", EncryptionOptions> {\n      const password = Service.getUserName()\n      return {\n        encryption: {\n          userPassword: password,\n          ownerPassword: password,\n          userPermissions: [\"print\"]\n        }\n      }\n    },\n    async onFinish(formData: any, computedData: any) {\n      this.formData = formData\n      this.computeFormData = computedData\n      this.showForm = false\n      await this.presentLoading()\n      try {\n        if(this.onReportConfiguration) await this.onReportConfiguration(this.formData, this.computeFormData)\n        loadingController.dismiss ()\n      }catch(e) {\n        console.error(e)\n        toastDanger(`${e}`)\n        loadingController.dismiss()\n      }\n    },\n    async reloadReport() {\n      await this.onFinish(this.formData, this.computeFormData)\n    },\n    async presentLoading() {\n      const loading = await loadingController\n        .create({\n          message: 'Please wait...',\n          backdropDismiss: false\n        })\n      await loading.present()\n    }\n  },\n  created() {\n    this.showForm = !!this.fields.length\n    this.btns = this.customBtns\n    this.btns.push(\n      {\n        name: \"CSV\",\n        size: \"large\",\n        slot: \"start\",\n        color: \"primary\",\n        visible: this.canExportCsv,\n        onClick: async () => {\n          const {columns, rows} = toExportableFormat(this.columns, this.rows)\n          toCsv(columns, [\n            ...rows,\n            [`Date Created: ${this.date}`],\n            [`Period: ${this.period}`],\n            [`HIS-Core Version: ${this.coreVersion}`],\n            [`API Version: ${this.apiVersion}`],\n            [`Site UUID: ${this.siteUUID}`]\n          ], this.getFileName())\n        }\n      },\n      {\n        name: \"PDF\",\n        size: \"large\",\n        slot: \"start\",\n        color: \"primary\",\n        visible: this.canExportPDf,\n        onClick: async () => {\n          let mode: 'pdfMode' | 'ignorePDFColumnexport' = 'pdfMode'\n          if (this.encryptPDF) {\n            const option = await infoActionSheet(\n              'Security warning',\n              'PDF may contain private data that will require a password to unlock',\n              'To access private data choose Secure PDF over Regular PDF',\n              [\n                { \n                  name: \"Secure PDF\",\n                  slot: \"start\",\n                  color: \"success\"\n                },\n                { \n                  name: \"Regular PDF\",\n                  slot: \"start\",\n                  color: \"success\"\n                }\n              ],\n              'his-danger-color'\n            )\n            mode = option === 'Secure PDF' ? 'pdfMode' : 'ignorePDFColumnexport'\n          }\n          const {columns, rows} = toExportableFormat(this.activeColumns, this.activeRows, mode)\n          toTablePDF(\n            columns, \n            rows, \n            this.getFileName(),\n            false,\n            this.encryptPDF && mode !='ignorePDFColumnexport' ? this.pdfEncryptionData() : {}\n          )\n        }\n      },\n      {\n        name: \"Back\",\n        size: \"large\",\n        slot: \"end\",\n        color: \"primary\",\n        visible: true,\n        onClick: () => this.showForm = true\n      },\n      {\n        name: \"Refresh\",\n        size: \"large\",\n        slot: \"end\",\n        color: \"warning\",\n        visible: true,\n        onClick: () => this.reloadReport()\n      },\n      {\n        name: \"Finish\",\n        size: \"large\",\n        slot: \"end\",\n        color: \"success\",\n        visible: true,\n        onClick: () => this.$router.push({ path:'/' })\n      }\n    )\n  }\n})\n","import { render } from \"./BaseTableReport.vue?vue&type=template&id=1fd58e0f&scoped=true&ts=true\"\nimport script from \"./BaseTableReport.vue?vue&type=script&lang=ts\"\nexport * from \"./BaseTableReport.vue?vue&type=script&lang=ts\"\n\nimport \"./BaseTableReport.vue?vue&type=style&index=0&id=1fd58e0f&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-1fd58e0f\"]])\n\nexport default __exports__","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./BaseTableReport.vue?vue&type=style&index=0&id=1fd58e0f&scoped=true&lang=css\"","import { resolveDynamicComponent as _resolveDynamicComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createBlock(_resolveDynamicComponent(_ctx.formType), {\n    fields: _ctx.fields,\n    skipSummary: _ctx.skipSummary,\n    activeField: _ctx.activeField,\n    cancelDestinationPath: _ctx.cancelDestinationPath,\n    onOnFinish: _ctx.onFinish,\n    onFinish: _ctx.onFinishAction,\n    onOnIndex: _ctx.onIndex\n  }, null, 40, [\"fields\", \"skipSummary\", \"activeField\", \"cancelDestinationPath\", \"onOnFinish\", \"onFinish\", \"onOnIndex\"]))\n}","\nimport TouchScreenForm from \"@/components/Forms/TouchScreenForm.vue\";\nimport { defineComponent, PropType } from \"vue\";\nimport { Field } from \"./FieldInterface\";\n\nexport default defineComponent({\n    name: \"HisStandardForm\",\n    components: { TouchScreenForm },\n    emits: [\n        'onFinish',\n        'onIndex'\n    ],\n    data: () => ({\n        formType: 'touch-screen-form' as string\n    }),\n    props: {\n        onFinishAction: {\n            type: Function\n        },\n        skipSummary: {\n            type: Boolean,\n            default: false\n        },\n        activeField: {\n            type: String\n        },\n        fields: {\n            type: Object as PropType<Field[]>,\n            required: true\n        },\n        cancelDestinationPath: {\n            type: String,\n            required: false,\n        }\n    },\n    methods: {\n        onFinish(formData: any, computedData: any) {\n            this.$emit('onFinish', formData, computedData)\n        },\n        onIndex(i: number) {\n            this.$emit('onIndex', i)\n        }\n    }\n})\n","import { render } from \"./HisStandardForm.vue?vue&type=template&id=6daa0375&ts=true\"\nimport script from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\nexport * from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_report_template = _resolveComponent(\"report-template\")!\n  const _component_ion_page = _resolveComponent(\"ion-page\")!\n\n  return (_openBlock(), _createBlock(_component_ion_page, null, {\n    default: _withCtx(() => [\n      _createVNode(_component_report_template, {\n        title: _ctx.title,\n        rows: _ctx.rows,\n        fields: _ctx.fields,\n        columns: _ctx.columns,\n        period: _ctx.period,\n        onReportConfiguration: _ctx.init\n      }, null, 8, [\"title\", \"rows\", \"fields\", \"columns\", \"period\", \"onReportConfiguration\"])\n    ]),\n    _: 1\n  }))\n}","\nimport { defineComponent } from 'vue'\nimport { OpdReportService } from \"@/apps/OPD/services/opd_report_service\"\nimport ReportTemplate from \"@/views/reports/BaseTableReport.vue\"\nimport table, { ColumnInterface, RowInterface } from \"@/components/DataViews/tables/ReportDataTable\"\nimport ReportMixin from '@/apps/ART/views/reports/ReportMixin.vue'\nimport { isEmpty } from 'lodash'\nimport { IonPage } from \"@ionic/vue\";\n\nexport default defineComponent({\n  components: { ReportTemplate, IonPage },\n  mixins: [ReportMixin],\n  data: () => ({\n    title: 'OPD diagnosis by address report',\n    rows: [] as RowInterface[][],\n    reportService: {} as any,\n    columns: [\n      [\n        table.thTxt('Address'),\n        table.thTxt('Diagnosis'),\n        table.thTxt('Count'),\n      ]\n    ] as ColumnInterface[][],\n  }),\n  created(){\n    this.fields = this.getDateDurationFields()\n  },\n  methods: {\n    async init(_: any, config: any){\n      this.reportService = new OpdReportService()\n      this.reportService.setStartDate(config.start_date)\n      this.reportService.setEndDate(config.end_date)\n      this.period = this.reportService.getDateIntervalPeriod()\n      this.rows = this.buildRows((await this.reportService.getDiagnosisByAddress()))\n      \n    },\n    totalDiagnosis(diagnosis: Record<string, number>) {\n      return Object.values(diagnosis).reduce((a, b) => a + b, 0)\n    },\n    buildRows(data: Record<string, any>): RowInterface[][] {\n      const rows: RowInterface[][] = [];\n      if(isEmpty(data)) return rows\n      for (const diagnosis in data) {\n        for(const address in data[diagnosis]){\n          rows.push([\n            table.td(address),\n            table.td(diagnosis),\n            table.td(data[diagnosis][address])\n          ])\n        }\n      }\n      return rows\n    },\n  },\n})\n","import { render } from \"./DiagnosisByAddress.vue?vue&type=template&id=879f0aa8&ts=true\"\nimport script from \"./DiagnosisByAddress.vue?vue&type=script&lang=ts\"\nexport * from \"./DiagnosisByAddress.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { Service } from \"@/services/service\";\nimport HisDate from \"@/utils/Date\"\nimport { PrintoutService } from '@/services/printout_service';\nimport Url from \"@/utils/Url\";\n\nexport interface QuarterInterface {\n    name: string;\n    start: string;\n    end: string;\n}\n\nexport const AGE_GROUPS = [\n    '0-5 months', '6-11 months',\n    '12-23 months', '2-4 years', \n    '5-9 years', '10-14 years', \n    '15-17 years', '18-19 years', \n    '20-24 years', '25-29 years', \n    '30-34 years', '35-39 years', \n    '40-44 years', '45-49 years', \n    '50 plus years'\n]\n\nexport const OTHER_AGE_GROUPS = [\n    '<1 year', '1-4 years',\n    '5-9 years', '10-14 years',\n    '15-19 years', '20-24 years',\n    '25-29 years', '30-34 years',\n    '35-39 years', '40-44 years',\n    '45-49 years', '50 plus years'\n]\n\nexport const LA_TYPES: Record<string, string> = {\n    one: 'AL 1', \n    two: 'AL 2', \n    three: 'AL 3', \n    four: 'LA 4'\n}\n\nexport const NCD_TYPES = [\n    'Diabetes',\n    'Hypertension',\n    'Stroke',\n    'Suspected cancer',\n    'Confirmed cancer',\n    'Palliative cancer',\n    'Asthma',\n    'Depression',\n    'Acute psychosis',\n    'Chronic psychosis',\n    'Epilepsy'\n]\n\nexport const MENTAL_HEALTH_DIAGNOSIS = [\n    'Organic mental disorder (Chronic)',\n    'Organic mental disorder (acute)',\n    'Alcohol use mental disorder',\n    'Drug use mental disorder',\n    'Schizophrenia',\n    'Acute and transient psychotic disorder',\n    'Schizo-affective disorder',\n    'Mood-affective disorder (MANIC)',\n    'Mood-affective disorder (BIPOLAR)',\n    'Mood-affective disorder (DEPRESSION)',\n    'Anxiety disorder',\n    'Stress reaction adjustment disorder',\n    'Dissociative conversion disorder',\n    'Somatoform disorder',\n    'Puerperal mental disorder',\n    'Personality/Behaviour disorder',\n    'Mental retardation',\n    'Psychological mental disorder',\n    'Hyperkinetic conduct disorder',\n    'Epilepsy'\n]\n\nexport class OpdReportService extends Service {\n    programID: number;\n    startDate: string;\n    endDate: string;\n    date: string;\n    epiweek: string;\n    constructor() {\n        super()\n        this.endDate = ''\n        this.startDate = ''\n        this.epiweek = ''\n        this.date = Service.getSessionDate()\n        this.programID = Service.getProgramID()\n    }\n\n    getPatientsWithNIDs() {\n        return this.getReport('with_nids')\n    }\n\n    getClinicRegistrations(){\n        return this.getReport('registration');\n    }\n\n    getAttendance(){\n        return this.getReport(`programs/${this.programID}/reports/attendance`)\n    }\n\n    getDrugsGivenWithoutPrescription() {\n        return this.getReport('drugs_given_without_prescription')\n    }\n\n    getDrugsGivenWithPrescription() {\n        return this.getReport('drugs_given_with_prescription')\n    }\n\n    getDiagnosis(){\n        const url = `programs/${this.programID}/reports/diagnosis`\n        return Service.getJson(url, {\n            'start_date': this.startDate,\n            'end_date': this.endDate,\n            'date': this.date\n        })\n    }\n\n    getDiagnosisByAddress(){\n        return this.getReport('diagnosis_by_address')\n    }\n\n    getLaPrescriptions(){\n        const url = `programs/${this.programID}/reports/la_prescriptions`\n        return Service.getJson(url, {\n            'start_date': this.startDate,\n            'end_date': this.endDate,\n            \n        })\n    }\n\n    getMalariaReport(){\n        const url = `programs/${this.programID}/reports/malaria_report`\n        return Service.getJson(url, {\n            'start_date': this.startDate,\n            'end_date': this.endDate,\n            'date': this.date\n        })\n    }\n    \n    printLaReport(data: Record<string, any>){\n        const printService = new PrintoutService()\n        const url = `programs/${this.programID}/barcodes/la_report`\n        const params: Record<string, any> = {\n            \"date[start]\": this.startDate,\n            \"date[end]\": this.endDate\n        }\n        Object.keys(LA_TYPES).forEach((v, i) => {\n            i++\n            params[`${i}[prescription]`] = data[`total_la_${v}_prescribed_drugs`]\n            params[`${i}[dispensed]`] = data[`total_la_${v}_dispensed_drugs`]\n        })\n        return printService.printLbl(`${url}?${Url.parameterizeObjToString(params)}`)\n    }\n\n    getDateIntervalPeriod() {\n        return `${HisDate.toStandardHisDisplayFormat(this.startDate)} - ${HisDate.toStandardHisDisplayFormat(this.endDate)}`\n    }\n\n    setStartDate(startDate: string) {\n        this.startDate = startDate\n    }  \n\n    setEndDate(endDate: string) {\n        this.endDate = endDate\n    }\n\n    setEpiWeek(epiweek: string) {\n        this.epiweek = epiweek\n    }\n\n    getReportPeriod() {\n        return this.startDate && this.endDate\n         ? `${HisDate.toStandardHisDisplayFormat(this.startDate)} - ${HisDate.toStandardHisDisplayFormat(this.endDate)}`\n         : '-'\n    }\n\n    getReport(url: string, params={}) {\n        return Service.getJson(url, this.buildRequest(params))\n    }\n\n    buildRequest(config: Record<string, any> = {}) {\n        const payload: any = {'date': this.date, 'program_id': this.programID}\n        if (this.startDate && this.endDate) {\n            payload['start_date'] = this.startDate\n            payload['end_date'] = this.endDate\n        }\n        if (this.epiweek) {\n            payload['epiweek'] = this.epiweek\n        }\n        return { ...payload, ...config }\n    }\n\n    static getReportQuarters(minDuration= 4) {\n        const quarters: Array<QuarterInterface> = []\n        let year = HisDate.getCurrentYear()\n        for(let i=0; i < minDuration; ++i) {\n            quarters.push({ name: `Q4 ${year}`, start: `${year}-10-01`, end: `${year}-12-31` })\n            quarters.push({ name: `Q3 ${year}`, start: `${year}-07-01`, end: `${year}-09-30` })\n            quarters.push({ name: `Q2 ${year}`, start: `${year}-04-01`, end: `${year}-06-30` })\n            quarters.push({ name: `Q1 ${year}`, start: `${year}-01-01`, end: `${year}-03-31` })\n            --year\n        }\n        return quarters\n    }\n\n}"],"sourceRoot":""}