{"version":3,"sources":["webpack:///./src/plugins/LabelPrinter/web.ts"],"names":["LabelPrinterWeb","WebPlugin","opts","url","ApiClient","expandPath","then","path","document","location","TypeError","devices"],"mappings":"6MAKM,MAAOA,UAAwBC,OACnC,YAAYC,GACV,GAAGA,EAAKC,IACN,OAAOC,OAAUC,WAAWH,EAAKC,KAAKG,KAAKC,IACzCC,SAASC,SAAWF,IAGxB,MAAM,IAAIG,UAAW,iBAEvB,iBACE,MAAO,CACLC,QAAS,CAAC","file":"js/chunk-2d21db89.b91554c1.js","sourcesContent":["import ApiClient from '@/services/api_client';\nimport { WebPlugin } from '@capacitor/core';\nimport type { LabelPrinterPlugin, WriteOptions } from './definitions';\n\n\nexport class LabelPrinterWeb extends WebPlugin implements LabelPrinterPlugin {\n  async write(opts: WriteOptions): Promise<void> {\n    if(opts.url) {\n      return ApiClient.expandPath(opts.url).then(path => {\n        document.location = path as any\n      })\n    }\n    throw new TypeError (\"Undefined url\")\n  }\n  async discover(): Promise<{devices: string[]}> {\n    return {\n      devices: [\"webPrinter\"]\n    }\n  }\n}\n"],"sourceRoot":""}