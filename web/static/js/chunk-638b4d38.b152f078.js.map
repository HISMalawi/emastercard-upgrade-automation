{"version":3,"sources":["webpack:///./src/apps/ART/views/encounters/Appointment.vue?885a","webpack:///./src/apps/ART/views/encounters/Appointment.vue","webpack:///./src/apps/ART/views/encounters/Appointment.vue?9d72","webpack:///./src/views/EncounterMixin.vue","webpack:///./src/views/EncounterMixin.vue?fc39","webpack:///./src/components/Forms/HisStandardForm.vue?8e31","webpack:///./src/components/Forms/HisStandardForm.vue","webpack:///./src/components/Forms/HisStandardForm.vue?5176","webpack:///./src/apps/ART/services/appointment_service.ts","webpack:///./src/guidelines/encounter_guidelines.ts","webpack:///./src/utils/GuidelineEngine.ts","webpack:///./src/components/Forms/BaseFormElements.ts","webpack:///./src/components/FormElements lazy ^\\.\\/.*\\.vue$ namespace object"],"names":["render","_ctx","_cache","$props","$setup","$data","$options","_component_his_standard_form","_resolveComponent","_openBlock","_createBlock","fields","onFinishAction","onFinish","skipSummary","cancelDestinationPath","cancelDestination","defineComponent","mixins","EncounterMixinVue","components","HisStandardForm","data","appointment","watch","ready","handler","_App$getActiveApp","console","log","App","getActiveApp","applicationName","this","AppointmentService","patientID","providerID","getAppointmentField","immediate","methods","_","computedData","_App$getActiveApp2","createEncounter","saveObservationList","resolveObs","printer","PatientPrintoutService","appsThatDoNotPrint","includes","printVisitSummaryLbl","nextTask","d","date","HisDate","toStandardHisDisplayFormat","exists","strOne","strTwo","RegExp","test","clinicDays","clinicHolidays","appointmentLimit","nextAppointment","drugRunoutDate","dateAppointments","weekDays","id","helpText","type","FieldType","TT_DATE_PICKER","init","async","res","getNextAppointment","appointment_date","drugs_run_out_date","e","warn","delayPromise","alertConfirmation","gotoPatientDashboard","limitRes","ART_GLOBAL_PROP","parseInt","onValue","undefined","getDailiyAppointments","Array","isArray","length","header","cancelBtnLabel","confirmBtnLabel","isEmpty","patient","getAge","adultClinicDays","peadsClinicDays","dayjs","day","validation","val","Validation","required","defaultValue","computedValue","buildValueDate","config","hiddenFooterBtns","minDate","maxDate","supValue","infoItems","_App$getActiveApp3","label","value","__exports__","providers","facts","sessionDate","apiDate","encounterName","isBdeMode","birthDate","outcome","outcomeStartDate","route","params","patient_id","Store","get","then","patientData","setEncounterFacts","checkEncounterGuidelines","deep","computed","patientDashboardUrl","runflowState","state","states","FlowState","SET_PROVIDER","selection","username","split","provider","find","person_id","CONTINUE","CHANGE_SESSION_DATE","$router","push","EXIT","CHANGE_PATIENT_OUTCOME","GO_TO_PATIENT_DASHBOARD","findings","matchToGuidelines","ENCOUNTER_GUIDELINES","index","_finding$actions","_finding$actions3","finding","actions","alert","_finding$actions2","status","_finding$actions4","flowState","program","startDate","error","toastDanger","ProgramService","getSessionDate","getCachedApiDate","isBDE","getBirthdate","$route","name","toString","toUpperCase","sort","a","b","usernameA","usernameB","map","p","_p$person","person","names","_p$person2","latestName","given_name","family_name","toOption","other","mapStrToOptions","items","i","path","yesNoOptions","toYesNoOption","values","mapOptions","options","option","yesNoUnknownOptions","obs","tag","Object","filter","reduce","accum","cur","concat","Promise","all","inArray","arr","expression","validateSeries","conditions","condition","_resolveDynamicComponent","formType","activeField","onOnFinish","onOnIndex","onIndex","TouchScreenForm","emits","props","Function","Boolean","default","String","formData","$emit","AppEncounterService","constructor","super","getJson","programID","getProgramID","paginate","dformat","priority","action","infoActionSheet","slot","color","modal","optionsActionSheet","role","isCondition","ignored","prop","every","sortByPriority","sortByWeight","weight","guidelines","target","targetEvent","sortBy","matches","guidelineIndex","targetValidations","some","title","description","text","info","COMPONENT_REFS","TT_ASYNC_MULTI_SELECT","TT_LINKAGE_CODE","TT_MULTI_SELECT_GRID","TT_AGE_INPUT","TT_BARCODE","TT_NOTE","TT_SELECT","TT_CARD_SELECTOR","TT_MULTIPLE_SELECT","TT_TEXT","TT_NUMBER","TT_MONTHLY_DAYS","TT_ART_REGIMEN_SELECTION","TT_NEXT_VISIT_INTERVAL_SELECTION","TT_TABLE_VIEWER","TT_DOSAGE_INPUT","TT_YES_NO","TT_MULTIPLE_YES_NO","TT_WEIGHT_CHART","TT_VITALS_ENTRY","TT_APPOINTMENTS_ENTRY","TT_COMPLAINTS_PICKER","TT_CLINIC_HOLIDAY_PICKER","TT_SUMMARY","TT_ART_STAGING_SUMMARY","TT_ADHERENCE_INPUT","TT_LAB_ORDERS","TT_PERSON_RESULT_VIEW","TT_PROGRAM_SELECTION","TT_RELATION_SELECTION","TT_FILING_NUMBER_VIEW","TT_PERSON_MATCH_VIEW","TT_FULL_DATE","TT_BATCH_ENTRY","TT_BATCH_VERIFICATION","TT_BATCH_MOVEMENT","TT_IP_ADDRESS","TT_TEXT_BANNER","TT_DISPENSATION_INPUT","TT_DATA_TABLE","TT_GROUP_SELECTOR","TT_ANC_PREGNANCY_INPUT_CONFIG","TT_ANC_PREGNANCY_DETAILS_INPUT","TT_ANC_LMP_DATE_INPUT","TT_DRUG_TRANSFER_IN","TT_GRID_SELECTOR","TT_ANC_DRUGSET_INPUT","TT_RADIOLOGY_PICKER","TT_PRESCRIPTION_INPUT","TT_INFINITE_SCROLL_MULTIPLE_SELECT","TT_DRUG_DISPENSER","webpackAsyncContext","req","__webpack_require__","o","resolve","Error","code","ids","slice","keys","module","exports"],"mappings":"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ACVvP,EAAUwP,kBACVxP,EAAUyP,8BACVzP,EAAU0P,+BACV1P,EAAU2P,sBACV3P,EAAU4P,oBACV5P,EAAU6P,iBACV7P,EAAU8P,qBACV9P,EAAU+P,oBACV/P,EAAUgQ,sBACVhQ,EAAUiQ,mCACVjQ,EAAUkQ,oB,qBCpHd,IAAI3I,EAAM,CACT,wBAAyB,CACxB,OACA,qBAED,wBAAyB,CACxB,OACA,qBAED,iCAAkC,CACjC,OACA,qBAED,+BAAgC,CAC/B,OACA,qBAED,0BAA2B,CAC1B,OACA,qBAED,yBAA0B,CACzB,OACA,iBACA,qBAED,sBAAuB,CACtB,OACA,qBAED,kCAAmC,CAClC,OACA,qBAED,0BAA2B,CAC1B,OACA,iBACA,qBAED,mBAAoB,CACnB,OACA,qBAED,yBAA0B,CACzB,OACA,sBAED,6BAA8B,CAC7B,OACA,sBAED,0BAA2B,CAC1B,OACA,iBACA,sBAED,oBAAqB,CACpB,OACA,sBAED,wBAAyB,CACxB,OACA,iBACA,sBAED,+BAAgC,CAC/B,OACA,sBAED,wBAAyB,CACxB,OACA,sBAED,sBAAuB,CACtB,OACA,iBACA,iBACA,sBAED,yBAA0B,CACzB,OACA,iBACA,iBACA,sBAED,6BAA8B,CAC7B,OACA,iBACA,iBACA,sBAED,wBAAyB,CACxB,OACA,sBAED,+BAAgC,CAC/B,OACA,iBACA,sBAED,4BAA6B,CAC5B,OACA,sBAED,qBAAsB,CACrB,OACA,sBAED,qBAAsB,CACrB,OACA,sBAED,sBAAuB,CACtB,OACA,iBACA,sBAED,uBAAwB,CACvB,OACA,iBACA,sBAED,wBAAyB,CACxB,OACA,sBAED,yBAA0B,CACzB,OACA,sBAED,qBAAsB,CACrB,OACA,sBAED,wCAAyC,CACxC,OACA,sBAED,qBAAsB,CACrB,OACA,iBACA,sBAED,uBAAwB,CACvB,OACA,sBAED,2BAA4B,CAC3B,OACA,sBAED,0BAA2B,CAC1B,OACA,iBACA,sBAED,6BAA8B,CAC7B,OACA,sBAED,gBAAiB,CAChB,OACA,sBAED,uBAAwB,CACvB,OACA,sBAED,6BAA8B,CAC7B,OACA,iBACA,sBAED,2BAA4B,CAC3B,OACA,sBAED,kBAAmB,CAClB,OACA,sBAED,mBAAoB,CACnB,OACA,sBAED,uBAAwB,CACvB,OACA,sBAED,sBAAuB,CACtB,OACA,sBAED,qBAAsB,CACrB,OACA,sBAED,uBAAwB,CACvB,OACA,sBAED,uBAAwB,CACvB,OACA,sBAED,yBAA0B,CACzB,OACA,sBAED,yBAA0B,CACzB,OACA,sBAED,wBAAyB,CACxB,OACA,sBAED,yBAA0B,CACzB,OACA,sBAED,yBAA0B,CACzB,OACA,sBAED,2BAA4B,CAC3B,OACA,sBAED,oBAAqB,CACpB,OACA,sBAED,oBAAqB,CACpB,OACA,uBAGF,SAAS4I,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAE/I,EAAK6I,GAC9B,OAAO/G,QAAQkH,UAAUxM,MAAK,WAC7B,IAAIvD,EAAI,IAAIgQ,MAAM,uBAAyBJ,EAAM,KAEjD,MADA5P,EAAEiQ,KAAO,mBACHjQ,KAIR,IAAIkQ,EAAMnJ,EAAI6I,GAAMvQ,EAAK6Q,EAAI,GAC7B,OAAOrH,QAAQC,IAAIoH,EAAIC,MAAM,GAAGpJ,IAAI8I,EAAoB7P,IAAIuD,MAAK,WAChE,OAAOsM,EAAoBxQ,MAG7BsQ,EAAoBS,KAAO,WAC1B,OAAO7H,OAAO6H,KAAKrJ,IAEpB4I,EAAoBtQ,GAAK,OACzBgR,EAAOC,QAAUX","file":"js/chunk-638b4d38.b152f078.js","sourcesContent":["import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_his_standard_form = _resolveComponent(\"his-standard-form\")!\n\n  return (_openBlock(), _createBlock(_component_his_standard_form, {\n    fields: _ctx.fields,\n    onFinishAction: _ctx.onFinish,\n    skipSummary: true,\n    cancelDestinationPath: _ctx.cancelDestination\n  }, null, 8, [\"fields\", \"onFinishAction\", \"cancelDestinationPath\"]))\n}","\nimport { defineComponent } from \"vue\";\nimport { Field } from \"@/components/Forms/FieldInterface\"\nimport { FieldType } from \"@/components/Forms/BaseFormElements\";\nimport HisStandardForm from \"@/components/Forms/HisStandardForm.vue\";\nimport Validation from \"@/components/Forms/validations/StandardValidations\";\nimport { alertConfirmation } from \"@/utils/Alerts\"\nimport EncounterMixinVue from '../../../../views/EncounterMixin.vue';\nimport {AppointmentService} from '@/apps/ART/services/appointment_service'\nimport { PatientPrintoutService } from \"@/services/patient_printout_service\";\nimport App from \"@/apps/app_lib\"\nimport { isEmpty } from \"lodash\";\nimport HisDate from \"@/utils/Date\"\nimport ART_GLOBAL_PROP from \"@/apps/ART/art_global_props\"\nimport dayjs from \"dayjs\";\nimport { delayPromise } from \"@/utils/Timers\";\n\nexport default defineComponent({\n  mixins: [EncounterMixinVue],\n  components: { HisStandardForm },\n  data: () => ({\n    appointment: {} as any\n  }),\n  watch: {\n    ready: {\n      handler(ready: boolean) {\n\n\n        //print out App type\n        console.log(\"The Current App calling this encounter  \",App.getActiveApp()?.applicationName)\n\n        if (ready) {\n          this.appointment = new AppointmentService(this.patientID, this.providerID)\n          this.fields = [\n            this.getAppointmentField()\n          ]\n        }\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    async onFinish(_: any, computedData: any) {\n      await this.appointment.createEncounter()\n      await this.appointment.saveObservationList(\n        (await this.resolveObs(computedData))\n      )\n      const printer = new PatientPrintoutService(this.patientID);\n      // TODO: remove the program checks here\n      const appsThatDoNotPrint = ['CxCa', 'ANC']\n      \n\n      if(!appsThatDoNotPrint.includes(`${App.getActiveApp()?.applicationName}`)) {\n        await printer.printVisitSummaryLbl();\n      }\n      this.nextTask()\n    },\n    getAppointmentField(): Field {\n      const d = (date: string) => HisDate.toStandardHisDisplayFormat(date)\n      const exists = (strOne: string, strTwo: string) => new RegExp(strOne, 'i').test(`${strTwo}`)\n      let clinicDays = ''\n      let clinicHolidays = ''\n      let appointmentLimit = -1\n      let nextAppointment = this.appointment.date\n      let drugRunoutDate: string | null = null\n      const dateAppointments: Record<string, number> = {}\n      const weekDays = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n      return {\n        id: \"set_appointment\",\n        helpText: \"Appointments booking\",\n        type: FieldType.TT_DATE_PICKER,\n        init: async () => {\n          try {\n            const res = await this.appointment.getNextAppointment()\n            nextAppointment = res.appointment_date\n            drugRunoutDate = res.drugs_run_out_date\n          } catch(e) {\n            console.warn(e)\n            await delayPromise(400)\n            if (!(await alertConfirmation('Next appointment/drug-runout date is not available, do you want to proceed anyway?'))) {\n              this.gotoPatientDashboard()\n              return true\n            }\n          }\n          const limitRes = (await ART_GLOBAL_PROP.appointmentLimit());\n          appointmentLimit = limitRes ? parseInt(limitRes) : 0\n          return true\n        },\n        onValue: async (date: string) => {\n          console.log(this.appointment)\n          if (dateAppointments[date] === undefined) {\n            const res = await AppointmentService.getDailiyAppointments(date)\n            dateAppointments[date] = Array.isArray(res) ? res.length : 0\n          }\n          if (appointmentLimit >= 1 && dateAppointments[date] >= appointmentLimit) {\n            if((await alertConfirmation(\n              `${dateAppointments[date]} clients were booked on ${d(date)}`, \n              {\n                header: `APPOINTMENT LIMIT (${appointmentLimit}) REACHED`,\n                cancelBtnLabel: \"Proceed\",\n                confirmBtnLabel: \"New date\"\n              }\n            ))) return false;\n          }\n          // Check clinic holidays\n          if (isEmpty(clinicHolidays)) {\n            clinicHolidays = await ART_GLOBAL_PROP.clinicHolidays()\n          }\n          if(exists(date, clinicHolidays)) {\n            if (!(await alertConfirmation(`${d(date)} is a clinic holiday, do you want to set an appointment?`))) \n              return false;\n          }\n          //Check clinic days\n          if (isEmpty(clinicDays)) {\n            clinicDays = this.patient.getAge() >= 18\n              ? (await ART_GLOBAL_PROP.adultClinicDays())\n              : (await ART_GLOBAL_PROP.peadsClinicDays())\n          }\n          if(!exists(weekDays[dayjs(date).day()], clinicDays)){\n            if(!(await alertConfirmation(`${d(date)} is not a clinic day. Do you want to proceed with this date?`))) \n              return false;\n          }\n          return true\n        },\n        validation: (val: any) => Validation.required(val),\n        defaultValue: () => nextAppointment,\n        computedValue: (date: string) => {\n          return [\n            this.appointment.buildValueDate('Appointment date', date),\n            this.appointment.buildValueDate('Estimated date', nextAppointment)\n          ]\n        },\n        config: {\n          hiddenFooterBtns: [\n            'Clear'\n          ],\n          minDate: () => this.appointment.date,\n          maxDate: () => drugRunoutDate,\n          supValue: (date: string) => `${dateAppointments[date]}`,\n          infoItems: (date: string) => {\n\n            if(App.getActiveApp()?.applicationName === 'CxCa'){\n              return [\n                {\n                  label: 'User set appointment date',\n                  value: d(date)\n                },\n                {\n                  label: 'Appointments',\n                  value: dateAppointments[date]\n                },\n                {\n                  label: 'Appointment limit (per/day)',\n                  value: appointmentLimit\n                }\n              ]\n            }else{\n              return [\n                { \n                  label: 'Medication Run out Date',\n                  value: drugRunoutDate ? d(drugRunoutDate) : 'Not available'\n                },\n                {\n                  label: 'User set appointment date',\n                  value: d(date)\n                },\n                {\n                  label: 'Appointments',\n                  value: dateAppointments[date]\n                },\n                {\n                  label: 'Appointment limit (per/day)',\n                  value: appointmentLimit\n                }\n              ]\n            }\n          }\n        }\n      }\n    }\n  }\n});\n","import { render } from \"./Appointment.vue?vue&type=template&id=17f54239&ts=true\"\nimport script from \"./Appointment.vue?vue&type=script&lang=ts\"\nexport * from \"./Appointment.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/anthony/Documents/source/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","\n/**\n * @deprecated moved to useEncounter composable\n * \n */\nimport { defineComponent } from 'vue'\nimport { Field, Option } from '@/components/Forms/FieldInterface'\nimport { ProgramService } from \"@/services/program_service\"\nimport { find, isEmpty } from \"lodash\"\nimport { nextTask } from \"@/utils/WorkflowTaskHelper\"\nimport { ENCOUNTER_GUIDELINES, FlowState } from \"@/guidelines/encounter_guidelines\"\nimport { matchToGuidelines } from \"@/utils/GuidelineEngine\"\nimport HisStandardForm from \"@/components/Forms/HisStandardForm.vue\";\nimport { toastDanger } from '@/utils/Alerts'\nimport Store from \"@/composables/ApiStore\"\n\nexport default defineComponent({\n    components: { HisStandardForm },\n    data: () => ({\n        patient: {} as any,\n        fields: [] as Array<Field>,\n        patientID: '' as any,\n        providerID: -1 as number,\n        providers: [] as any,\n        facts: {\n            sessionDate: '' as string,\n            apiDate: '' as string,\n            encounterName: 'N/A' as string,\n            providers: [] as Array<any>,\n            isBdeMode: false as boolean,\n            birthDate: '' as string,\n            outcome: '' as string,\n            outcomeStartDate: '' as string\n        },\n        ready: false\n    }),\n    watch: {\n       '$route': {\n            handler(route: any) {\n                if(route.params.patient_id && this.patientID != route.params.patient_id) {\n                    this.patientID = parseInt(route.params.patient_id);\n                    Store.get('ACTIVE_PATIENT', { patientID: this.patientID})\n                        .then(patientData => {\n                            this.patient = patientData\n                            this.setEncounterFacts().then(() => {\n                                this.checkEncounterGuidelines().then(() => {\n                                    this.ready = true\n                                })\n                            })\n                        })\n                    }\n            },\n            immediate: true,\n            deep: true\n        }\n    },\n    computed: {\n        cancelDestination(): string {\n            return this.patientDashboardUrl()\n        }\n    },\n    methods: {\n        runflowState(state: FlowState, params=null) {\n            const states: any = {}\n            states[FlowState.SET_PROVIDER] = (selection: any) => {\n                const [ username ] = selection.split(' ')\n                const provider = find(this.providers, { username })\n                if (provider) this.providerID = provider.person_id\n                return FlowState.CONTINUE\n            }\n            states[FlowState.CHANGE_SESSION_DATE] = () => { \n                this.$router.push(`/session/date?patient_dashboard_redirection_id=${this.patientID}`)\n                return FlowState.EXIT\n            }\n            states[FlowState.CHANGE_PATIENT_OUTCOME] = () => {\n                this.$router.push(`/patient/programs/${this.patientID}`)\n                return FlowState.EXIT\n            }\n            states[FlowState.GO_TO_PATIENT_DASHBOARD] = () => {\n                this.gotoPatientDashboard()\n                return FlowState.EXIT\n            }\n            if (state in states) {\n                return states[state](params)\n            }\n        },\n        async checkEncounterGuidelines() {\n            const findings = matchToGuidelines(this.facts, ENCOUNTER_GUIDELINES)\n            for(const index in findings) {\n                const finding = findings[index]\n                if (finding?.actions?.alert) {\n                    const status = this.runflowState((await finding?.actions?.alert(this.facts)))\n                    if (status === FlowState.EXIT) return\n                }\n                if (finding?.actions?.selection) {\n                    const selection = await finding?.actions?.selection(this.facts)\n                    this.runflowState(selection.flowState, selection.value)\n                }\n            }\n        },\n        async setEncounterFacts() {\n            try {\n                const program = await Store.get('PATIENT_PROGRAM', { patientID: this.patientID })\n                this.facts.outcome = program.outcome\n                this.facts.outcomeStartDate = program.startDate\n            } catch (e) {\n                console.error(e)\n                toastDanger(`${e}`)\n            }\n            this.facts.sessionDate = ProgramService.getSessionDate()\n            this.facts.apiDate = ProgramService.getCachedApiDate() as string\n            this.facts.isBdeMode = ProgramService.isBDE() as boolean\n            this.facts.birthDate = this.patient.getBirthdate()\n            this.facts.encounterName = this.$route.name \n                ? this.$route.name.toString().toUpperCase()\n                : 'N/A'\n            if (ProgramService.isBDE()) {\n                this.providers = await Store.get('PROVIDERS')\n                this.facts.providers = this.providers\n                    .sort((a: any, b: any) => {\n                        const usernameA = a.username.toUpperCase()\n                        const usernameB = b.username.toUpperCase()\n                        return usernameA < usernameB ? -1 : usernameA > usernameB  ? 1 : 0\n                    })\n                    .map((p: any) => {\n                        let name = `${p.username}`\n                        if (!isEmpty(p?.person?.names)) {\n                            const [ latestName ] = p.person?.names || []\n                            name += ` (${latestName.given_name} ${latestName.family_name})`\n                        }\n                        return name\n                    })\n            }\n        },\n        toOption(label: string, other={}) {\n            return {\n                label,\n                value: label,\n                other\n            }\n        },\n        mapStrToOptions(items: string[]) {\n            return items.map(i => ({label: i, value: i}))\n        },\n        patientDashboardUrl(): string {\n            return `/patient/dashboard/${this.patientID}`\n        },\n        gotoPatientDashboard() {\n            return this.$router.push({path: this.patientDashboardUrl()})\n        },\n        nextTask() {\n            return nextTask(this.patientID, this.$router)\n        },\n        yesNoOptions(): Option[] {\n            return [\n                { label: \"Yes\", value: \"Yes\" },\n                { label: \"No\", value: \"No\" }\n            ]\n        },\n        toYesNoOption(label: string, other: any={}): Option {\n            return {\n                label,\n                value: '',\n                other: {\n                    ...other,\n                    values: this.yesNoOptions()\n                }\n            } \n        },\n        mapOptions(options: Array<string>) {\n            return options.map((option) => {\n                return { label: option, value: option }\n            });\n        },\n        yesNoUnknownOptions(): Option[] {\n            return [\n                { label: \"Yes\", value: \"Yes\" },\n                { label: \"No\", value: \"No\" },\n                { label: \"Unknown\", value: \"Unknown\" }\n            ]\n        },\n        resolveObs(obs: any, tag='') {\n            const values: any = Object.values(obs)\n                .filter((d: any) => d && (d.tag === tag || tag === ''))\n                .reduce((accum: any, cur: any) => { \n                    const data = cur.obs ? cur.obs : cur\n                    if (Array.isArray(data)) {\n                        accum = accum.concat(data)\n                    } else if (typeof data === 'function') {\n                        accum.push(data())\n                    } else {\n                        accum.push(data)\n                    }\n                    return accum\n                    }, [])\n            return Promise.all(values)\n        },\n        inArray(arr: Array<any>, expression: (i: any) => boolean): boolean {\n            try {\n                return arr.filter((i: any) => expression(i)).length > 0\n            } catch (e) {\n                return false\n            }\n        },\n        validateSeries(conditions: Array<any>){\n            try {\n                for(const i in conditions) {\n                    const condition = conditions[i]()\n\n                    if (condition) return condition\n                }\n            } catch (e) {\n                return [e]\n            }\n        }\n    }\n})\n","import script from \"./EncounterMixin.vue?vue&type=script&lang=ts\"\nexport * from \"./EncounterMixin.vue?vue&type=script&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { resolveDynamicComponent as _resolveDynamicComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createBlock(_resolveDynamicComponent(_ctx.formType), {\n    fields: _ctx.fields,\n    skipSummary: _ctx.skipSummary,\n    activeField: _ctx.activeField,\n    cancelDestinationPath: _ctx.cancelDestinationPath,\n    onOnFinish: _ctx.onFinish,\n    onFinish: _ctx.onFinishAction,\n    onOnIndex: _ctx.onIndex\n  }, null, 40, [\"fields\", \"skipSummary\", \"activeField\", \"cancelDestinationPath\", \"onOnFinish\", \"onFinish\", \"onOnIndex\"]))\n}","\nimport TouchScreenForm from \"@/components/Forms/TouchScreenForm.vue\";\nimport { defineComponent, PropType } from \"vue\";\nimport { Field } from \"./FieldInterface\";\n\nexport default defineComponent({\n    name: \"HisStandardForm\",\n    components: { TouchScreenForm },\n    emits: [\n        'onFinish',\n        'onIndex'\n    ],\n    data: () => ({\n        formType: 'touch-screen-form' as string\n    }),\n    props: {\n        onFinishAction: {\n            type: Function\n        },\n        skipSummary: {\n            type: Boolean,\n            default: false\n        },\n        activeField: {\n            type: String\n        },\n        fields: {\n            type: Object as PropType<Field[]>,\n            required: true\n        },\n        cancelDestinationPath: {\n            type: String,\n            required: false,\n        }\n    },\n    methods: {\n        onFinish(formData: any, computedData: any) {\n            this.$emit('onFinish', formData, computedData)\n        },\n        onIndex(i: number) {\n            this.$emit('onIndex', i)\n        }\n    }\n})\n","import { render } from \"./HisStandardForm.vue?vue&type=template&id=6daa0375&ts=true\"\nimport script from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\nexport * from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/anthony/Documents/source/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { AppEncounterService } from \"@/services/app_encounter_service\";\n\nexport class AppointmentService extends AppEncounterService {\n  constructor(patientID: number, providerID: number) {\n    super(patientID, 7, providerID);\n  }\n\n  async getNextAppointment() {\n    return AppEncounterService.getJson(`/programs/${this.programID}/patients/${this.patientID}/next_appointment_date`, {date: this.date})\n  }\n  \n  static async getDailiyAppointments(date: any) {\n    const programID = AppEncounterService.getProgramID();\n    return AppEncounterService.getJson(`/programs/${programID}/booked_appointments`, {date: date, paginate: false})\n  }\n\n}","import { infoActionSheet, optionsActionSheet } from \"@/utils/ActionSheets\";\nimport { GuideLineInterface } from \"@/utils/GuidelineEngine\";\nimport HisDate from '@/utils/Date'\n\nexport enum FlowState {\n    SET_PROVIDER = 'SET_PROVIDER',\n    CHANGE_SESSION_DATE = 'change_session_date',\n    GO_TO_PATIENT_DASHBOARD = 'go_to_patient_dashboard',\n    CHANGE_PATIENT_OUTCOME = 'change_outcome',\n    CONTINUE = 'continue',\n    EXIT = 'exit'\n}\nconst dformat = (d: string) => HisDate.toStandardHisDisplayFormat(d)\n\nexport const ENCOUNTER_GUIDELINES: Record<string, GuideLineInterface> = {\n    \"Warn if attempting to create new encounters for a deceased patient\": {\n        priority: 1,\n        actions: {\n            alert: async ({ outcomeStartDate }: any) => {\n                const action = await infoActionSheet(\n                    'Data Integrity Issue Found',\n                    `Patient died on ${dformat(outcomeStartDate)}`,\n                    'Proceeding with this outcome might affect accuracy of some reports',\n                    [\n                        { name: 'Cancel', slot: 'end', color: 'primary'},\n                        { name: 'Change outcome', slot: 'end', color: 'primary'},\n                        { name: 'Continue Anyway', slot: 'end', color: 'danger'}\n                    ]\n                )\n                return action === 'Cancel'\n                    ? FlowState.GO_TO_PATIENT_DASHBOARD\n                    : action === 'Change outcome'\n                    ? FlowState.CHANGE_PATIENT_OUTCOME\n                    : FlowState.CONTINUE\n            }\n        },\n        conditions: {\n            outcome(outcome: string) {\n                return outcome === 'Patient died'\n            },\n            outcomeStartDate(startDate: string, { sessionDate }: any) {\n                return sessionDate >= startDate\n            }\n        }\n    },\n    \"A patient's date of birth must not be less than Session Date\": {\n        priority: 2,\n        actions: {\n            alert: async ({ birthDate, sessionDate}: any) => {\n                const action = await infoActionSheet(\n                    'Data integrity issue found', '',\n                    `Session date ${dformat(sessionDate)} is less than birth date of ${dformat(birthDate)}`,\n                    [\n                        { name: 'Cancel', slot: 'end', color: 'danger'},\n                        { name: 'Change session date', slot: 'end', color: 'success'}\n                    ]\n                )\n                return action === 'Change session date'\n                    ? FlowState.CHANGE_SESSION_DATE\n                    : FlowState.GO_TO_PATIENT_DASHBOARD\n            }\n        },\n        conditions: {\n            birthDate(birthDate: string, { sessionDate }: any) {\n                return sessionDate < birthDate\n            }\n        }\n    },\n    \"Select Encounter provider when in back data entry\": {\n        priority: 3,\n        actions: {\n            selection: async ({ providers, encounterName, sessionDate, apiDate }: any) => {\n                const modal = await optionsActionSheet(\n                    `Please select a provider for ${encounterName}`,\n                    `BDE: ${dformat(sessionDate)} | Current: ${dformat(apiDate)}`,\n                    providers,\n                    [\n                        { name: 'Cancel', color: 'danger', slot: 'start', role: 'default'},\n                        { name: 'Confirm', slot: 'end', role: 'action' }\n                    ]\n                )\n                return modal.action === 'Cancel' \n                    ? { value: -1, flowState: FlowState.GO_TO_PATIENT_DASHBOARD }\n                    : { value: modal.selection, flowState: FlowState.SET_PROVIDER }\n            }\n        },\n        conditions: {\n            isBdeMode(isBDE: boolean) {\n                return isBDE\n            }\n        }\n    }\n}","/**\n * Compares patient facts against a predefined guideline Object.\n*/\nexport interface DescriptionInterface {\n    color?: 'primary' | 'secondary' | 'danger' | 'warning';\n    info: (facts: FactsInterface) => any;\n    text?: string;\n    show: 'onChecked' | 'always';\n}\n\nexport interface GuideLineInterface {\n    title?: string;\n    concept?: string;\n    weight?: number;\n    priority?: number;\n    conditions: ConditionsInteface;\n    actions?: Record<string, any>; //TODO: should <key, Function>\n    data?: Record<string, any>;\n    description?: DescriptionInterface;\n    target?: string;\n    targetEvent?: string;\n}\n\nexport type FactsInterface = Record<string, any>\nexport type ConditionResolver = (value: any, facts: FactsInterface) => boolean | RegExpMatchArray | null\nexport type ConditionsInteface = Record<string, ConditionResolver>\n\n/**\n * Match the facts with guidelines\n * @param facts \n * @param conditions \n * @returns \n */\nfunction isCondition(facts: FactsInterface, conditions: ConditionsInteface): boolean {\n    const state = [] \n    const ignored = [-1, '', null, undefined]\n\n    for(const prop in conditions) {\n        if (!(prop in facts)) \n            continue\n        \n        const value = facts[prop]\n        if (ignored.includes(value)) {\n            state.push(false)\n            continue\n        }\n\n        state.push(conditions[prop](value, facts))\n    }\n    return state.every(Boolean)\n}\n\n/**\n * Sort guidelines in the order of importance/relevance\n * @param findings \n * @returns \n */\nfunction sortByPriority(findings: GuideLineInterface[]) {\n    return findings.sort((a, b) => (a.priority && b.priority) && a.priority < b.priority ? -1 : 1)\n}\n\nfunction sortByWeight(findings: GuideLineInterface[]) {\n    return findings.sort((a, b) => (a.weight && b.weight) && a.weight > b.weight ? -1 : 1)\n}\n\nexport function logFindingsByWeight(guidelines: Record<string, GuideLineInterface>) {\n    const findings: any = Object.keys(guidelines).map(i => ({ name: i, weight: guidelines[i].weight}))\n    console.log(sortByWeight(findings).map((i: any) => `${i.weight} -> ${i.name}`))\n}\n\n/**\n * Check the guideline for matching facts and return matching object \n * @param facts: key value pair for used for searching in guidelines\n * @param guidelines: A dictionary containing fixed rules/validations that conforms to GuideLineInterface\n * @param target: Used for matching a target defined in a guidlines before executing conditions\n * @param targetEvent: used for matching a target event in a guideline before executing conditions\n * @returns\n */\nexport function matchToGuidelines(\n    facts: FactsInterface, \n    guidelines: Record<string, GuideLineInterface>,\n    target='', \n    targetEvent='',\n    sortBy='priority' as 'priority' | 'weight'): Array<GuideLineInterface> {\n    const matches = []\n    for(const guidelineIndex in guidelines) {\n        const data: GuideLineInterface = guidelines[guidelineIndex]\n        const targetValidations = [\n            (data.target && target && data.target != target),\n            (data.targetEvent && targetEvent \n                && data.targetEvent != targetEvent)\n        ]\n\n        if (targetValidations.some(Boolean)) {\n            continue\n        }\n\n        if (isCondition(facts, data.conditions)) {\n            data.title = guidelineIndex\n            if (data.description) {\n                data.description.text = data.description.info(facts)\n            }\n            matches.push(data)\n        }\n    }\n    return sortBy === 'priority' ? sortByPriority(matches) : sortByWeight(matches)\n}\n","/**\n * Map all formElements/components defined in \"@/components/FormElements\" \n * in the Enum below by their file name.\n * \n * Next step is to add FieldType entry in COMPONENT_REFS in the \n * Array below the FieldType Enum\n */\nexport enum FieldType {\n    TT_ASYNC_MULTI_SELECT = 'AsyncMultiSelect',\n    TT_LINKAGE_CODE = 'LinkageCodeInput',\n    TT_MULTI_SELECT_GRID= 'HisMultiSelectGrid',\n    TT_AGE_INPUT='HisAgeInput',\n    TT_GROUP_SELECTOR = 'HisGroupSelector',\n    TT_DATA_TABLE = 'HisDataTable',\n    TT_GRID_SELECTOR = 'HisGridSelector',\n    TT_NOTE = 'HisNote',\n    TT_BARCODE = 'HisBarcodeInput',\n    TT_MONTHLY_DAYS=\"HisMonthlyDays\",\n    TT_TEXT=\"HisTextInput\",\n    TT_NUMBER = \"HisNumberInput\",\n    TT_DATETIME=\"datetime\",\n    TT_SELECT=\"HisSelect\",\n    TT_MULTIPLE_SELECT=\"HisMultipleSelect\",\n    TT_ART_REGIMEN_SELECTION=\"HisArtRegimenSelection\",\n    TT_NEXT_VISIT_INTERVAL_SELECTION=\"HisNextVisitInterval\",\n    TT_TABLE_VIEWER=\"HisTableViewer\",\n    TT_DOSAGE_INPUT=\"HisDosageInput\",\n    TT_YES_NO=\"YesNoSelect\",\n    TT_MULTIPLE_YES_NO=\"MultiYesNoSelect\",\n    TT_SUMMARY=\"HisSummary\",\n    TT_WEIGHT_CHART = \"HisWeightChart\",\n    TT_VITALS_ENTRY=\"HisVitalsEntry\",\n    TT_ADHERENCE_INPUT = \"HisAdherenceInput\",\n    TT_ART_STAGING_SUMMARY = \"ArtStagingSummary\",\n    TT_LAB_ORDERS = \"HisLabOrders\",\n    TT_APPOINTMENTS_ENTRY = \"HisAppointments\",\n    TT_DISPENSATION_INPUT = 'DrugDispensationSelection',\n    TT_PROGRAM_SELECTION = 'ProgramSelection',\n    TT_DATE_PICKER = 'HisDatePicker',\n    TT_PERSON_RESULT_VIEW = 'PersonSearchView',\n    TT_RELATION_SELECTION = 'RelationsSelection',\n    TT_FILING_NUMBER_VIEW = 'FilingNumberView',\n    TT_CARD_SELECTOR = 'HisCardSelector',\n    TT_PERSON_MATCH_VIEW = 'PersonMatchView',\n    TT_FULL_DATE = 'HisDateInput',\n    TT_BATCH_ENTRY = 'HisBatchEntry',\n    TT_BATCH_VERIFICATION = 'HisBatchVerification',\n    TT_BATCH_MOVEMENT = 'HisBatchMovement',\n    TT_COMPLAINTS_PICKER = 'HisComplaintsPicker',\n    TT_RADIOLOGY_PICKER = 'HisRadiologyPicker',\n    TT_IP_ADDRESS = 'HisIPAddress',\n    TT_TEXT_BANNER = 'HisTextBanner',\n    TT_DRUG_DISPENSER = 'GeneralDrugDispenser',\n    TT_CLINIC_HOLIDAY_PICKER = 'HisClinicHolidayPicker',\n    TT_ANC_PREGNANCY_INPUT_CONFIG = 'AncPregnancyInfoConfig',\n    TT_ANC_PREGNANCY_DETAILS_INPUT = 'AncPregnancyDetailsInput',\n    TT_ANC_LMP_DATE_INPUT = 'AncLmpDateInput',\n    TT_ANC_DRUGSET_INPUT = 'AncDrugSetInput',\n    TT_DRUG_TRANSFER_IN = 'DrugTransferInput',\n    TT_PRESCRIPTION_INPUT = 'HisPrescriptionInput',\n    TT_INFINITE_SCROLL_MULTIPLE_SELECT=\"HisInfiniteScrollMultipleSelect\"\n}\n\n// Register FieldTypes here that will be registered at runtime\nexport const COMPONENT_REFS: FieldType[] = [\n    FieldType.TT_ASYNC_MULTI_SELECT,\n    FieldType.TT_LINKAGE_CODE,\n    FieldType.TT_MULTI_SELECT_GRID,\n    FieldType.TT_AGE_INPUT,\n    FieldType.TT_BARCODE,\n    FieldType.TT_NOTE,\n    FieldType.TT_SELECT,\n    FieldType.TT_CARD_SELECTOR,\n    FieldType.TT_MULTIPLE_SELECT,\n    FieldType.TT_TEXT,\n    FieldType.TT_NUMBER,\n    FieldType.TT_MONTHLY_DAYS,\n    FieldType.TT_ART_REGIMEN_SELECTION,\n    FieldType.TT_NEXT_VISIT_INTERVAL_SELECTION,\n    FieldType.TT_TABLE_VIEWER,\n    FieldType.TT_DOSAGE_INPUT,\n    FieldType.TT_YES_NO,\n    FieldType.TT_MULTIPLE_YES_NO,\n    FieldType.TT_WEIGHT_CHART,\n    FieldType.TT_VITALS_ENTRY,\n    FieldType.TT_APPOINTMENTS_ENTRY,\n    FieldType.TT_COMPLAINTS_PICKER,\n    FieldType.TT_CLINIC_HOLIDAY_PICKER,\n    FieldType.TT_SUMMARY,\n    FieldType.TT_ART_STAGING_SUMMARY,\n    FieldType.TT_ADHERENCE_INPUT,\n    FieldType.TT_LAB_ORDERS,\n    FieldType.TT_PERSON_RESULT_VIEW,\n    FieldType.TT_PROGRAM_SELECTION,\n    FieldType.TT_DATE_PICKER,\n    FieldType.TT_RELATION_SELECTION,\n    FieldType.TT_FILING_NUMBER_VIEW,\n    FieldType.TT_PERSON_MATCH_VIEW,\n    FieldType.TT_FULL_DATE,\n    FieldType.TT_BATCH_ENTRY,\n    FieldType.TT_BATCH_VERIFICATION,\n    FieldType.TT_BATCH_MOVEMENT,\n    FieldType.TT_IP_ADDRESS,\n    FieldType.TT_TEXT_BANNER,\n    FieldType.TT_DISPENSATION_INPUT,\n    FieldType.TT_DATA_TABLE,\n    FieldType.TT_GROUP_SELECTOR,\n    FieldType.TT_ANC_PREGNANCY_INPUT_CONFIG,\n    FieldType.TT_ANC_PREGNANCY_DETAILS_INPUT,\n    FieldType.TT_ANC_LMP_DATE_INPUT,\n    FieldType.TT_DRUG_TRANSFER_IN,\n    FieldType.TT_GRID_SELECTOR,\n    FieldType.TT_ANC_DRUGSET_INPUT,\n    FieldType.TT_RADIOLOGY_PICKER,\n    FieldType.TT_PRESCRIPTION_INPUT,\n    FieldType.TT_INFINITE_SCROLL_MULTIPLE_SELECT,\n    FieldType.TT_DRUG_DISPENSER\n]\n","var map = {\n\t\"./AncDrugSetInput.vue\": [\n\t\t\"c99f\",\n\t\t\"TouchFormElement0\"\n\t],\n\t\"./AncLmpDateInput.vue\": [\n\t\t\"101a\",\n\t\t\"TouchFormElement1\"\n\t],\n\t\"./AncPregnancyDetailsInput.vue\": [\n\t\t\"b043\",\n\t\t\"TouchFormElement2\"\n\t],\n\t\"./AncPregnancyInfoConfig.vue\": [\n\t\t\"262e\",\n\t\t\"TouchFormElement3\"\n\t],\n\t\"./ArtStagingSummary.vue\": [\n\t\t\"43db\",\n\t\t\"TouchFormElement4\"\n\t],\n\t\"./AsyncMultiSelect.vue\": [\n\t\t\"5de2\",\n\t\t\"chunk-03993608\",\n\t\t\"TouchFormElement5\"\n\t],\n\t\"./BaseTextInput.vue\": [\n\t\t\"36ad\",\n\t\t\"TouchFormElement6\"\n\t],\n\t\"./DrugDispensationSelection.vue\": [\n\t\t\"05d5\",\n\t\t\"TouchFormElement7\"\n\t],\n\t\"./DrugTransferInput.vue\": [\n\t\t\"de42\",\n\t\t\"chunk-337918c0\",\n\t\t\"TouchFormElement8\"\n\t],\n\t\"./FieldMixin.vue\": [\n\t\t\"51c8\",\n\t\t\"TouchFormElement9\"\n\t],\n\t\"./FilingNumberView.vue\": [\n\t\t\"c650\",\n\t\t\"TouchFormElement10\"\n\t],\n\t\"./GeneralDrugDispenser.vue\": [\n\t\t\"7737\",\n\t\t\"TouchFormElement11\"\n\t],\n\t\"./HisAdherenceInput.vue\": [\n\t\t\"f2c3\",\n\t\t\"chunk-337918c0\",\n\t\t\"TouchFormElement12\"\n\t],\n\t\"./HisAgeInput.vue\": [\n\t\t\"c05f\",\n\t\t\"TouchFormElement13\"\n\t],\n\t\"./HisAppointments.vue\": [\n\t\t\"b2eb\",\n\t\t\"chunk-d64a144c\",\n\t\t\"TouchFormElement14\"\n\t],\n\t\"./HisArtRegimenSelection.vue\": [\n\t\t\"47b9\",\n\t\t\"TouchFormElement15\"\n\t],\n\t\"./HisBarcodeInput.vue\": [\n\t\t\"dd65\",\n\t\t\"TouchFormElement16\"\n\t],\n\t\"./HisBatchEntry.vue\": [\n\t\t\"f2ab\",\n\t\t\"chunk-182277b5\",\n\t\t\"chunk-337918c0\",\n\t\t\"TouchFormElement17\"\n\t],\n\t\"./HisBatchMovement.vue\": [\n\t\t\"5148\",\n\t\t\"chunk-182277b5\",\n\t\t\"chunk-337918c0\",\n\t\t\"TouchFormElement18\"\n\t],\n\t\"./HisBatchVerification.vue\": [\n\t\t\"7b0f\",\n\t\t\"chunk-182277b5\",\n\t\t\"chunk-337918c0\",\n\t\t\"TouchFormElement19\"\n\t],\n\t\"./HisCardSelector.vue\": [\n\t\t\"0734\",\n\t\t\"TouchFormElement20\"\n\t],\n\t\"./HisClinicHolidayPicker.vue\": [\n\t\t\"4030\",\n\t\t\"chunk-d64a144c\",\n\t\t\"TouchFormElement21\"\n\t],\n\t\"./HisComplaintsPicker.vue\": [\n\t\t\"82d1\",\n\t\t\"TouchFormElement22\"\n\t],\n\t\"./HisDataTable.vue\": [\n\t\t\"a6ba\",\n\t\t\"TouchFormElement23\"\n\t],\n\t\"./HisDateInput.vue\": [\n\t\t\"374c\",\n\t\t\"TouchFormElement24\"\n\t],\n\t\"./HisDatePicker.vue\": [\n\t\t\"9b30\",\n\t\t\"chunk-d64a144c\",\n\t\t\"TouchFormElement25\"\n\t],\n\t\"./HisDosageInput.vue\": [\n\t\t\"b34c\",\n\t\t\"chunk-337918c0\",\n\t\t\"TouchFormElement26\"\n\t],\n\t\"./HisGridSelector.vue\": [\n\t\t\"112a\",\n\t\t\"TouchFormElement27\"\n\t],\n\t\"./HisGroupSelector.vue\": [\n\t\t\"81cf\",\n\t\t\"TouchFormElement28\"\n\t],\n\t\"./HisIPAddress.vue\": [\n\t\t\"2a82\",\n\t\t\"TouchFormElement29\"\n\t],\n\t\"./HisInfiniteScrollMultipleSelect.vue\": [\n\t\t\"52a3\",\n\t\t\"TouchFormElement30\"\n\t],\n\t\"./HisLabOrders.vue\": [\n\t\t\"e614\",\n\t\t\"chunk-03993608\",\n\t\t\"TouchFormElement31\"\n\t],\n\t\"./HisMonthlyDays.vue\": [\n\t\t\"69cf\",\n\t\t\"TouchFormElement32\"\n\t],\n\t\"./HisMultiSelectGrid.vue\": [\n\t\t\"0fa3\",\n\t\t\"TouchFormElement33\"\n\t],\n\t\"./HisMultipleSelect.vue\": [\n\t\t\"2fd5\",\n\t\t\"chunk-03993608\",\n\t\t\"TouchFormElement34\"\n\t],\n\t\"./HisNextVisitInterval.vue\": [\n\t\t\"3126\",\n\t\t\"TouchFormElement35\"\n\t],\n\t\"./HisNote.vue\": [\n\t\t\"c927\",\n\t\t\"TouchFormElement36\"\n\t],\n\t\"./HisNumberInput.vue\": [\n\t\t\"5e75\",\n\t\t\"TouchFormElement37\"\n\t],\n\t\"./HisPrescriptionInput.vue\": [\n\t\t\"87e5\",\n\t\t\"chunk-337918c0\",\n\t\t\"TouchFormElement38\"\n\t],\n\t\"./HisRadiologyPicker.vue\": [\n\t\t\"adc7\",\n\t\t\"TouchFormElement39\"\n\t],\n\t\"./HisSelect.vue\": [\n\t\t\"d11f\",\n\t\t\"TouchFormElement40\"\n\t],\n\t\"./HisSummary.vue\": [\n\t\t\"e0bd\",\n\t\t\"TouchFormElement41\"\n\t],\n\t\"./HisTableViewer.vue\": [\n\t\t\"8904\",\n\t\t\"TouchFormElement42\"\n\t],\n\t\"./HisTextBanner.vue\": [\n\t\t\"952c\",\n\t\t\"TouchFormElement43\"\n\t],\n\t\"./HisTextInput.vue\": [\n\t\t\"6ef9\",\n\t\t\"TouchFormElement44\"\n\t],\n\t\"./HisVitalsEntry.vue\": [\n\t\t\"e333\",\n\t\t\"TouchFormElement45\"\n\t],\n\t\"./HisWeightChart.vue\": [\n\t\t\"26a1\",\n\t\t\"TouchFormElement46\"\n\t],\n\t\"./LinkageCodeInput.vue\": [\n\t\t\"ac86\",\n\t\t\"TouchFormElement47\"\n\t],\n\t\"./MultiYesNoSelect.vue\": [\n\t\t\"5fd1\",\n\t\t\"TouchFormElement48\"\n\t],\n\t\"./PersonMatchView.vue\": [\n\t\t\"6591\",\n\t\t\"TouchFormElement49\"\n\t],\n\t\"./PersonSearchView.vue\": [\n\t\t\"28b2\",\n\t\t\"TouchFormElement50\"\n\t],\n\t\"./ProgramSelection.vue\": [\n\t\t\"e3b4\",\n\t\t\"TouchFormElement51\"\n\t],\n\t\"./RelationsSelection.vue\": [\n\t\t\"0e57\",\n\t\t\"TouchFormElement52\"\n\t],\n\t\"./SelectMixin.vue\": [\n\t\t\"82a9\",\n\t\t\"TouchFormElement53\"\n\t],\n\t\"./YesNoSelect.vue\": [\n\t\t\"71f2\",\n\t\t\"TouchFormElement54\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"f159\";\nmodule.exports = webpackAsyncContext;"],"sourceRoot":""}