{"version":3,"sources":["webpack:///./src/components/Keyboard/HisKeypad.vue?2d91","webpack:///./src/components/Keyboard/HisKeypad.vue","webpack:///./src/components/Keyboard/HisKeypad.vue?95fd","webpack:///./src/apps/ART/views/FilingNumberManagement.vue?363a","webpack:///./src/apps/ART/services/filing_number_service.ts","webpack:///./src/apps/ART/views/FilingNumberManagement.vue","webpack:///./src/apps/ART/views/FilingNumberManagement.vue?f2ff","webpack:///./src/components/Keyboard/KbHandler.ts","webpack:///./src/components/Keyboard/HisKeypad.vue?9b6a","webpack:///./src/components/Keyboard/KbLayouts.ts","webpack:///./src/components/Forms/HisStandardForm.vue?f008","webpack:///./src/components/Forms/HisStandardForm.vue","webpack:///./src/components/Forms/HisStandardForm.vue?6820","webpack:///./src/components/Keyboard/BaseKeyboard.vue?6113","webpack:///./src/components/Keyboard/BaseKeyboard.vue","webpack:///./src/components/Keyboard/BaseKeyboard.vue?98d1"],"names":["_hoisted_1","class","render","_ctx","_cache","$props","$setup","$data","$options","_component_ion_input","_resolveComponent","_component_ion_chip","_component_center","_component_base_keyboard","_component_ion_content","_openBlock","_createBlock","default","_withCtx","_createElementVNode","_createVNode","value","disabled","_createTextVNode","_toDisplayString","title","_","btnSize","layout","keypad","onKeyPress","keypress","defineComponent","components","BaseKeyboard","props","type","String","preset","Function","required","strictNumbers","Boolean","data","DEFAULT_KEYPAD","watch","handler","this","toString","immediate","methods","key","match","modalController","dismiss","includes","handleVirtualInput","parseInt","__exports__","_component_his_standard_form","skipSummary","activeField","fieldComponent","onOnIndex","$event","fields","FilingNumberService","Service","constructor","super","patientID","activePrefix","dormantPrefix","getActivePrx","getDormantPrx","getPatientID","setPatientID","formatNumber","num","prefix","search","substring","length","prx","ART_PROP","filingNumberPrefix","split","isActiveFilingNum","filingNumber","RegExp","isDormantFilingNum","postJson","identifier","res","getJson","map","person","patient","Patientservice","getID","getGivenName","getFamilyName","archiveFilingNumber","archivePatient","secondaryPatient","getArchivingCandidates","page","pageSize","getPastFilingNumbers","printFilingNumber","printer","PrintoutService","printLbl","HisStandardForm","service","nextWorkflowRouteName","filingNumberAssignment","query","params","patient_id","getPatient","loadFilingPrefix","getFilingNumberField","getCandidateSelectionField","getFilingNumberHistoryField","archive","assign","onAssignFilingNumber","trail","next_workflow_task","deep","toFID","filingID","assigned","newFilingNumber","Store","invalidate","toastWarning","assignment","primary","label","name","other","activeNumber","dormantNumber","archived","presentLoading","assignFilingNumber","loadingController","isEmpty","new_identifier","archived_identifier","candidate","swapped","active_number","given_name","family_name","dormant_number","message","loading","create","backdropDismiss","present","findByID","_patient","id","getFilingNumber","e","toastDanger","$router","back","modal","component","Keypad","cssClass","componentProps","onDidDismiss","pageNumber","candidates","formatCandidateOptions","state","list","style","color","fontWeight","HisDate","toStandardHisDisplayFormat","appointment_date","FieldType","TT_TABLE_VIEWER","helpText","condition","options","async","columns","rows","d","isActive","voided","date_created","date_voided","config","toolbarInfo","hiddenFooterBtns","footerBtns","slot","visible","onClick","selectorInstance","filingNumbeSearchTerm","filingOptionsBackup","TT_CARD_SELECTOR","validation","val","Validation","onload","instance","onValue","ok","alertConfirmation","swapExistingFilingNumbers","listData","filingNumberSearchKeypad","filingNumbers","TT_FILING_NUMBER_VIEW","dormantPatient","nextTask","$route","kbHandler","newInput","accumulator","casing","output","toLowerCase","toUpperCase","charAt","slice","PRESCRIPTION_KEYPAD","VITALS_KEYPAD","DRUG_DISPENSER_KEYPAD","CD4_COUNT_PAD_LO","SYMBOLS","NUMBER_PAD_LO","MONTHLY_DAYS_LO","ALPHABETICAL_LO","QWERTY_LO","CHARACTERS_AND_NUMBERS_LO","NOTE_PAD_KEYBOARD","LOGIN_KEYBOARD","_resolveDynamicComponent","formType","cancelDestinationPath","onOnFinish","onFinish","onFinishAction","onIndex","TouchScreenForm","emits","Object","formData","computedData","$emit","i","_component_ion_button","_createElementBlock","_Fragment","_renderList","row","rowIndex","btnKey","btnIndex","_normalizeStyle","width","_normalizeClass","dynamicClass","keyPress","_createCommentVNode","IonButton","Array"],"mappings":"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","file":"js/chunk-17d7986d.a90571c7.js","sourcesContent":["import { resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, withCtx as _withCtx, createElementVNode as _createElementVNode, openBlock as _openBlock, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-7454247c\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"keypad\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ion_input = _resolveComponent(\"ion-input\")!\n  const _component_ion_chip = _resolveComponent(\"ion-chip\")!\n  const _component_center = _resolveComponent(\"center\")!\n  const _component_base_keyboard = _resolveComponent(\"base-keyboard\")!\n  const _component_ion_content = _resolveComponent(\"ion-content\")!\n\n  return (_openBlock(), _createBlock(_component_ion_content, null, {\n    default: _withCtx(() => [\n      _createElementVNode(\"div\", _hoisted_1, [\n        _createVNode(_component_ion_input, {\n          value: _ctx.value,\n          disabled: true,\n          class: \"keypad-input\"\n        }, null, 8, [\"value\"]),\n        _createVNode(_component_center, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_chip, null, {\n              default: _withCtx(() => [\n                _createTextVNode(_toDisplayString(_ctx.title || 'keypad'), 1)\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        }),\n        _createVNode(_component_base_keyboard, {\n          btnSize: \"96px\",\n          layout: _ctx.keypad,\n          onKeyPress: _ctx.keypress\n        }, null, 8, [\"layout\", \"onKeyPress\"])\n      ])\n    ]),\n    _: 1\n  }))\n}","\nimport { defineComponent } from 'vue'\nimport BaseKeyboard from '@/components/Keyboard/BaseKeyboard.vue'\nimport { DEFAULT_KEYPAD } from '@/components/Keyboard/KbLayouts'\nimport handleVirtualInput from '@/components/Keyboard/KbHandler'\nimport { modalController } from '@ionic/core'\nexport default defineComponent({\n    components: { BaseKeyboard },\n    props: {\n        title: {\n            type: String\n        },\n        preset: {\n            type: String\n        },\n        onKeyPress: {\n            type: Function,\n            required: true,\n        },\n        strictNumbers: {\n            type: Boolean,\n            default: false\n        }\n    },\n    data: () => ({\n        value: '0',\n        keypad: DEFAULT_KEYPAD\n    }),\n    watch: {\n        preset: { \n            handler(value: string | number) {\n                if (!value) return\n                this.value = value.toString()\n            },\n            immediate: true\n        }\n    },\n    methods: {\n        async keypress(key: any) {\n            if (key.match(/done/i)) {\n                await modalController.dismiss(this.value)\n            } else {\n                if (this.strictNumbers) {\n                    if (key.includes('.') && this.value.includes('.')) return\n                    \n                    if (!key.includes('.') && this.value === '0') this.value = ''\n    \n                    this.value = handleVirtualInput(key, this.value)\n                    \n                    if (!this.value) this.value = '0'\n\n                    // Condition verifies number as interger and emits parsed integer\n                    if (`${parseInt(this.value)}` === this.value) {\n                        this.onKeyPress(parseInt(this.value))\n                    } else {\n                        // helps preserve floating point values \n                        this.onKeyPress(this.value)\n                    }\n                } else {\n                    this.value = handleVirtualInput(key, this.value)\n                    this.onKeyPress(this.value)\n                }\n            }\n        }\n    }\n})\n","import { render } from \"./HisKeypad.vue?vue&type=template&id=7454247c&scoped=true&ts=true\"\nimport script from \"./HisKeypad.vue?vue&type=script&lang=ts\"\nexport * from \"./HisKeypad.vue?vue&type=script&lang=ts\"\n\nimport \"./HisKeypad.vue?vue&type=style&index=0&id=7454247c&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-7454247c\"]])\n\nexport default __exports__","import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_his_standard_form = _resolveComponent(\"his-standard-form\")!\n\n  return (_openBlock(), _createBlock(_component_his_standard_form, {\n    skipSummary: true,\n    activeField: _ctx.fieldComponent,\n    onOnIndex: _cache[0] || (_cache[0] = ($event: any) => (_ctx.fieldComponent='')),\n    fields: _ctx.fields\n  }, null, 8, [\"activeField\", \"fields\"]))\n}","import { Service } from \"@/services/service\";\nimport { PrintoutService } from \"@/services/printout_service\";\nimport { Patientservice } from \"@/services/patient_service\";\nimport ART_PROP from \"../art_global_props\";\n\nexport class FilingNumberService extends Service {\n    patientID: number;\n    activePrefix: string;\n    dormantPrefix: string;\n\n    constructor() {\n        super()\n        this.patientID = 0\n        this.activePrefix = ''\n        this.dormantPrefix = ''\n    }\n\n    getActivePrx() {\n        return this.activePrefix\n    }\n\n    getDormantPrx() {\n        return this.dormantPrefix\n    }\n\n    getPatientID() {\n        return this.patientID\n    }\n\n    setPatientID(patientID: number) {\n        this.patientID = patientID\n    }\n\n    formatNumber(num: string) {\n        const prefix = num.search(this.activePrefix) >= 0 \n            ? this.activePrefix\n            : num.search(this.dormantPrefix) >= 0 \n            ? this.dormantPrefix\n            : ''\n        return prefix ? num.substring(prefix.length, num.length) : num\n    }\n\n    async loadFilingPrefix() {\n        const prx = await ART_PROP.filingNumberPrefix()\n        if (prx) {\n            const [activePrefix, dormantPrefix] = prx.split(',')\n            this.activePrefix = activePrefix\n            this.dormantPrefix = dormantPrefix\n        }\n    }\n\n    isActiveFilingNum(filingNumber: string) {\n        return filingNumber.match(new RegExp(this.activePrefix, 'i'))\n            ? true\n            : false\n    }\n\n    isDormantFilingNum(filingNumber: string) {\n        return filingNumber.match(new RegExp(this.dormantPrefix, 'i'))\n            ? true\n            : false\n    }\n\n    async assignFilingNumber() {\n        return Service.postJson(`patients/${this.patientID}/filing_number`, {})\n    }\n\n    async getFilingNumber(filingNumber: string) {\n        const identifier = `${this.activePrefix}${filingNumber}`\n        const res = await Service.getJson(`search/patients/by_identifier`, {\n            'type_id': 17, \n            'identifier': identifier\n        })\n        if (res) {\n            return res.map((person: any) => {\n                const patient = new Patientservice(person)\n                return {\n                    identifier,\n                    'patient_id': patient.getID(),\n                    'given_name': patient.getGivenName(),\n                    'family_name': patient.getFamilyName(),\n                    'state': 'N/A',\n                    'appointment_date': ''\n                }\n            })\n        }\n        return []\n    }\n\n    archiveFilingNumber() {\n        return Service.getJson(`archive_active_filing_number`, {\n            'patient_id': this.patientID\n        })\n    }\n\n    archivePatient(secondaryPatient: number, identifier: string | number) {\n        return Service.postJson('swap_active_number', {\n            'primary_patient_id': this.patientID,\n            'secondary_patient_id': secondaryPatient,\n            identifier\n        })\n    }\n\n    getArchivingCandidates(page=0, pageSize=10) {\n        return Service.getJson(`archiving_candidates`, {\n            page,'page_size': pageSize\n        })\n    }\n\n    getPastFilingNumbers() {\n        return Service.getJson(`patients/${this.patientID}/past_filing_numbers`)\n    }\n\n    printFilingNumber() {\n        const printer = new PrintoutService()\n        return printer.printLbl(`patients/${this.patientID}/labels/filing_number`) \n    }\n}","\nimport { defineComponent } from 'vue'\nimport { isEmpty } from 'lodash';\nimport { Field, Option } from '@/components/Forms/FieldInterface';\nimport { FieldType } from '@/components/Forms/BaseFormElements';\nimport { loadingController, modalController } from \"@ionic/vue\"\nimport { Patientservice } from '@/services/patient_service';\nimport { FilingNumberService } from '@/apps/ART/services/filing_number_service'\nimport HisStandardForm from \"@/components/Forms/HisStandardForm.vue\";\nimport Validation from \"@/components/Forms/validations/StandardValidations\"\nimport { alertConfirmation, toastDanger, toastWarning  } from \"@/utils/Alerts\"\nimport HisDate from \"@/utils/Date\"\nimport Keypad from \"@/components/Keyboard/HisKeypad.vue\"\nimport { nextTask } from '@/utils/WorkflowTaskHelper';\nimport Store from \"@/composables/ApiStore\"\n\n/**\n * Manages filing number assignment\n * Can view filing number trail\n * Can swap filing numbers between candidates\n */\nexport default defineComponent({\n    components: { HisStandardForm },\n    data: () => ({\n        service: {} as any,\n        patient: {} as any,\n        fieldComponent: '' as string,\n        fields: [] as Array<Field>,\n        nextWorkflowRouteName: '' as string,\n        filingNumberAssignment: {} as Record<string, Option>,\n    }),\n    watch: {\n        /**\n         * Initiates service and Detects parameters \n         * in the url and switch to appropriate actions\n         */\n        '$route': {\n            async handler({query, params}: any) {\n                if (params && params.patient_id) {\n                    this.service = new FilingNumberService()\n                    this.service.setPatientID(params.patient_id)\n                    this.patient = await this.getPatient(params.patient_id)\n                    await this.service.loadFilingPrefix()\n                }\n                if (query) {\n                    this.fields = [\n                        this.getFilingNumberField(),\n                        this.getCandidateSelectionField(),\n                        this.getFilingNumberHistoryField()\n                    ]\n                    if (query.archive === \"true\") {\n                        await this.archiveFilingNumber()\n                        return \n                    }\n                    if (query.assign === \"true\") {\n                        await this.onAssignFilingNumber()\n                    }\n                    if (query.trail === \"true\") {\n                       this.fieldComponent = 'view_filing_history'\n                    }\n                    if (query.next_workflow_task) {\n                        this.nextWorkflowRouteName = query.next_workflow_task\n                    }\n                }             \n            },\n            immediate: true,\n            deep: true\n        }\n    },\n    methods: {\n        /**\n         * Helper method for formatting filing numbers \n         * for display purposes only!\n         */\n        toFID(filingID: string) {\n            return this.service.formatNumber(filingID)\n        },\n        async onAssignFilingNumber() {\n            const assigned = await this.newFilingNumber()\n            if (assigned) {\n                this.filingNumberAssignment = assigned\n                this.fieldComponent = 'filing_number_management'\n                Store.invalidate('ACTIVE_PATIENT')\n            } else {\n                this.fieldComponent = 'select_candidate_to_swap'\n                toastWarning('Out of filing numbers, Please select eligible candidate')\n            }\n        },\n        /**\n         * Assigns and creates filing number assignment object\n         */\n        async newFilingNumber(): Promise<Record<string, Option> | undefined> {\n            const assignment: Record<string, Option> = {\n                primary: {\n                    label: 'Dormant → Active',\n                    value: this.patient.name,\n                    other: {\n                        activeNumber: this.patient.filingID \n                            ? this.toFID(this.patient.filingID)\n                            : 'N/A', \n                        dormantNumber: 'N/A'\n                    }\n                },\n                archived:  {\n                    label: 'Active → Dormant',\n                    value: 'N/A',\n                    other: {\n                        activeNumber: 'N/A', \n                        dormantNumber: 'N/A'\n                    }\n                }\n            }\n            /**\n             * Do assign a new filing number if the patient already\n             * has one\n             */\n            if (this.service.isActiveFilingNum(this.patient.filingID)) {\n                return assignment\n            }\n\n            await this.presentLoading()\n\n            const assigned = await this.service.assignFilingNumber()\n\n            loadingController.dismiss()\n\n            if (isEmpty(assigned)) return\n\n            assignment.primary.other = {\n                activeNumber: this.toFID(\n                    assigned.new_identifier.identifier\n                ),\n                dormantNumber: this.service\n                    .isDormantFilingNum(this.patient.filingID) \n                    ? this.toFID(this.patient.filingID)\n                    : 'N/A'\n            }\n\n            if (!isEmpty(assigned.archived_identifier)) {\n                const patient = await this.getPatient(\n                    assigned.archived_identifier.patient_id\n                )\n                assignment.archived = {\n                    label: 'Active → Dormant',\n                    value: patient.name,\n                    other: {\n                        activeNumber: this.toFID(\n                            assigned.archived_identifier.identifier\n                        ), \n                        dormantNumber: this.toFID(\n                            assigned.new_identifier.identifier\n                        )\n                    }\n                }\n            }\n            return assignment\n        },\n        /**\n         * Swap filing numbers between an active candidate with a dormant candidate\n        */\n        async swapExistingFilingNumbers(candidate: any) {\n            const swapped = await this.service.archivePatient(\n               candidate.patient_id, candidate.identifier\n            )\n            if (swapped) {\n                return {\n                    primary: {\n                        label: 'Dormant → Active',\n                        value: this.patient.name,\n                        other: {\n                            activeNumber: this.toFID(swapped.active_number), \n                            dormantNumber: this.toFID(this.patient.filingID) || 'N/A'\n                        }\n                    },\n                    archived:  {\n                        label: 'Active → Dormant',\n                        value: `${candidate.given_name} ${candidate.family_name}`,\n                        other: {\n                            patientID: candidate.patient_id,\n                            activeNumber: this.toFID(swapped.dormant_number), \n                            dormantNumber:this.toFID(swapped.active_number)\n                        }\n                    }\n                }\n            }\n        },\n        async presentLoading(message=\"Please wait...\") {\n            const loading = await loadingController.create({\n                message, backdropDismiss: false\n            })\n            await loading.present()\n        },\n        async getPatient(patientID: number): Promise<Record<string, number | string>> {\n            const patient = await Patientservice.findByID(patientID)\n            if (patient) {\n                const _patient = new Patientservice(patient)\n                return {\n                    id: _patient.getID(),\n                    filingID: _patient.getFilingNumber(),\n                    name: `${_patient.getGivenName()} ${_patient.getFamilyName()}`\n                }\n            }\n            return {}\n        },\n        /**\n         * Archives currrent patient and routes to the previous page view\n         */\n        async archiveFilingNumber() {\n            await this.presentLoading('Archiving filing number')\n            try {\n                await this.service.archiveFilingNumber()\n                await this.service.printFilingNumber()\n                Store.invalidate('ACTIVE_PATIENT')\n            }catch(e) {\n                toastDanger(`${e}`)\n            }\n            await loadingController.dismiss()\n            this.$router.back()\n        },\n        async filingNumberSearchKeypad() {\n            const modal = await modalController.create({\n                component: Keypad,\n                backdropDismiss: false,\n                cssClass: 'keypad-modal',\n                componentProps: {\n                    title: 'Find Active number',\n                    strictNumbers: false,\n                    onKeyPress: () => {\n                        //TODO: do nothing!\n                    }\n                }\n            })\n            await modal.present()\n            const { data } = await modal.onDidDismiss()\n            return data\n        },\n        async getArchivingCandidates(pageNumber=0): Promise<Option[]> {\n            const candidates = await this.service.getArchivingCandidates(pageNumber)\n            return this.formatCandidateOptions(candidates)\n        },\n        /**\n         * Converts array of objects with candidates to a list options array\n         */\n        formatCandidateOptions(candidates: Array<any>): Option[] {\n            return candidates.map((candidate: any) => ({\n                label: `${candidate.given_name} ${candidate.family_name} (${candidate.state})`,\n                value: candidate.identifier,\n                other: {\n                    data: candidate,\n                    list: [\n                        {\n                            label: 'Filing #',\n                            value: this.toFID(candidate.identifier),\n                            style: {\n                                color: 'green', \n                                fontWeight: 'bold'\n                            }\n                        },\n                        {\n                            label: 'Given name',\n                            value: candidate.given_name\n                        },\n                        {\n                            label: 'Family name',\n                            value: candidate.family_name\n                        },\n                        {\n                            label: 'Outcome',\n                            value: candidate.state.match(/trans/i)\n                                ? 'TO'\n                                : candidate.state.match(/stop/i) \n                                ? 'Tx stopped'\n                                : candidate.state\n                        },\n                        {\n                            label: 'LAD',\n                            value: HisDate.toStandardHisDisplayFormat(\n                                candidate.appointment_date\n                            )\n                        }\n                    ]   \n                }\n            }))\n        },\n        /*\n        * Form field that a table of all filing numbers assigned to a patient\n         */\n        getFilingNumberHistoryField(): Field {\n            return {\n                id: 'view_filing_history',\n                type: FieldType.TT_TABLE_VIEWER,\n                helpText: 'Filing Number Trail',\n                condition: () => false,\n                options: async () => {\n                    const columns = ['Status', 'Filing #', 'Date Created', 'Date voided']\n                    const data = await this.service.getPastFilingNumbers()\n                    const rows = data.map((d: any) => {\n                        const isActive = d.voided === 0\n                        return [\n                            isActive ? 'Active' : 'Voided',\n                            this.toFID(d.identifier),\n                            HisDate.toStandardHisDisplayFormat(d.date_created),\n                            !isActive ? HisDate.toStandardHisDisplayFormat(d.date_voided): 'N/A'\n                        ]\n                    })\n                    return [\n                        {\n                            label: 'Filing Number Trail',\n                            value: 'Trail',\n                            other: { columns, rows }\n                        }\n                    ]\n                },\n                config: {\n                    toolbarInfo: [\n                        {\n                            label: 'Current filing #',\n                            value: this.toFID(this.patient.filingID)\n                        },\n                        {\n                            label: 'Status',\n                            value: this.service.isActiveFilingNum(\n                                this.patient.filingID\n                            )\n                            ?\n                            'Active'\n                            : this.service.isDormantFilingNum(\n                                this.patient.filingID\n                            )\n                            ?\n                            'Dormant'\n                            :\n                            'N/A'\n                        }\n                    ],\n                    hiddenFooterBtns: [\n                        'Clear',\n                        'Next',\n                        'Back',\n                        'Finish'\n                    ],\n                    footerBtns: [\n                        /**\n                         * Navigate to get new filing number if they have dormant one.\n                         */\n                        {\n                            name: 'Get filing #',\n                            slot: 'end',\n                            state: {\n                                visible: {\n                                    default: () => this.service.isDormantFilingNum(\n                                        this.patient.filingID\n                                    )\n                                }\n                            },\n                            onClick: async () => await this.onAssignFilingNumber()\n                        }\n                    ]\n                }\n            }\n        },\n        /**\n         * A form field that displays a list of patients with filing numbers\n         * to swap with\n         */\n        getCandidateSelectionField(): Field {\n            // Keeps track of the component object that's presented on the screen\n            let selectorInstance: any = {}\n            // Candidate list is paginated, tracking page here\n            let pageNumber = 0\n            let filingNumbeSearchTerm = ''\n            // Restore point for archived candidates\n            let filingOptionsBackup: Option[] = []\n\n            return {\n                id: 'select_candidate_to_swap',\n                type: FieldType.TT_CARD_SELECTOR,\n                helpText: 'Filing Number (Archive)',\n                condition: () => false,\n                validation: (val: Option) => Validation.required(val),\n                onload: (instance: any) => selectorInstance = instance,\n                onValue: async (val: Option) => {\n                    if(val) {\n                        const ok = await alertConfirmation(`Do you want to archive ${val.value}`)\n                        if (ok) {\n                            const swapped = await this.swapExistingFilingNumbers(\n                                val.other.data\n                            )\n                            if (swapped) {\n                                this.filingNumberAssignment = swapped\n                                this.fieldComponent = 'filing_number_management'\n                                return true\n                            }                     \n                        }\n                    }\n                    return false\n                },\n                options: () => this.getArchivingCandidates(),\n                config: {\n                    hiddenFooterBtns: [\n                        'Clear',\n                        'Back',\n                        'Finish',\n                        'Next'\n                    ],\n                    footerBtns: [\n                        /**\n                         * Resets listData to previous state after a search term was triggerred.\n                         * Note: Only visible when users searches filing numbers\n                         */\n                        {\n                            name: 'Reset',\n                            slot: 'end',\n                            color: 'warning',\n                            state: {\n                                visible: {\n                                    default: () => filingNumbeSearchTerm ? true : false \n                                }\n                            },\n                            onClick: () => {\n                                // Clear values and restore previous listData prior to search \n                                // results\n                                filingNumbeSearchTerm = ''\n                                selectorInstance.listData = filingOptionsBackup\n                                filingOptionsBackup = []\n                            }\n                        },\n                        /**\n                         * Loads a key pad for searching for a filing candidate\n                         */\n                        {\n                            name: 'Specify',\n                            slot: 'end',\n                            color: 'success',\n                            onClick: async () => {\n                                filingNumbeSearchTerm = await this.filingNumberSearchKeypad()\n                                if (filingNumbeSearchTerm) {\n                                    const filingNumbers = await this.service.getFilingNumber(\n                                        filingNumbeSearchTerm\n                                    )\n                                    // Create a restore point for archived candidates\n                                    filingOptionsBackup = [...selectorInstance.listData]\n                                    selectorInstance.listData = this.formatCandidateOptions(filingNumbers)\n                                }\n                            }\n                        },\n                        /**\n                         * List pagination button that decrements the page number.\n                         * Note: this button will only appear when no filing number were manually searched.\n                         * It will also appear when pageNumber is greater than 1\n                         */\n                        {\n                            name: 'Previous batch',\n                            slot: 'end',\n                            state: {\n                                visible: {\n                                    default: () => !filingNumbeSearchTerm\n                                },\n                                disabled: {\n                                    default: () => pageNumber <= 0 \n                                }\n                            },\n                            onClick: async () => {\n                                pageNumber -= 1\n                                selectorInstance.listData = await this.getArchivingCandidates(pageNumber)\n                            }\n                        },\n                        /**\n                         * List pagination button that increments the page number.\n                         * Note: this button will only appear when no filing number were manually searched\n                         * and if the list has 10 or more items\n                         */\n                        {\n                            name: 'Next batch',\n                            slot: 'end',\n                            state: {\n                                visible: {\n                                    default: () => !filingNumbeSearchTerm\n                                },\n                                disabled: {\n                                    default: () => (\n                                        selectorInstance.listData \n                                        && selectorInstance.listData.length <= 1\n                                    ) \n                                }\n                            },\n                            onClick: async () => {\n                                pageNumber += 1\n                                selectorInstance.listData = await this.getArchivingCandidates(pageNumber)\n                            }\n                        }\n                    ]\n                }\n            }\n        },\n        /**\n         * Form field that displays new filing number assigned to a\n         * Patient\n         */\n        getFilingNumberField(): Field {\n            return {\n                id: \"filing_number_management\",\n                type: FieldType.TT_FILING_NUMBER_VIEW,\n                helpText: \"Filing Number Management\",\n                onload: async () => await this.service.printFilingNumber(),\n                condition: () => false,\n                options: () => [ \n                    this.filingNumberAssignment.primary, \n                    this.filingNumberAssignment.archived \n                ],\n                config: {\n                    hiddenFooterBtns: [\n                        'Cancel',\n                        'Clear',\n                        'Next'\n                    ],\n                    footerBtns: [\n                        {\n                            name: 'Print #',\n                            slot: 'start',\n                            onClick: async () => this.service.printFilingNumber()\n                        },\n                        {\n                            name: 'Print Dormant#',\n                            slot: 'start',\n                            state: {\n                                visible: {\n                                    default: () => this.filingNumberAssignment\n                                        ?.archived\n                                        ?.other\n                                        ?.patientID ? true : false\n                                }\n                            },\n                            onClick: async () => {\n                                const dormantPatient = new FilingNumberService()\n                                dormantPatient.setPatientID(\n                                    this.filingNumberAssignment\n                                    .archived\n                                    .other\n                                    .patientID\n                                )\n                                await dormantPatient.printFilingNumber()\n                            }\n                        },\n                        {\n                            name: 'Continue',\n                            color: 'success',\n                            slot: 'end',\n                            onClick: () => nextTask(this.patient.id, this.$router, this.$route)\n                        }\n                    ]\n                }\n            }\n        }\n    }\n})\n","import { render } from \"./FilingNumberManagement.vue?vue&type=template&id=34eaede2&ts=true\"\nimport script from \"./FilingNumberManagement.vue?vue&type=script&lang=ts\"\nexport * from \"./FilingNumberManagement.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","export default function kbHandler(newInput: string, accumulator: string, casing?: 'lowercase' | 'uppercase'): string {\n    let output = accumulator\n    if (newInput.match(/enter/i)) {\n        return `${output}\\r\\n`\n    }\n    if (newInput.match(/clear/i)) {\n        return ''\n    } else if (newInput.match(/delete|del/i)) {\n        // Override Unknown text with new input\n        if (output.match(/unknown/i) || output.match(/n\\/a/i)) {\n            output = ''\n        } else {\n            output = output.substring(0, output.length - 1)\n        }\n    } else if (newInput.match(/space/i)) {\n        output = `${accumulator} `\n    } else if (newInput.match(/unknown/i)) {\n        output = 'Unknown'\n    } else if (newInput.match(/n\\/a/i)) {\n        output = 'N/A'\n    } else {\n        // Override Unknown text with new input\n        if (output.match(/unknown/i) || output.match(/n\\/a/i)) {\n            output = newInput\n        } else {\n            output = `${accumulator}${newInput}`\n        }\n    }\n    if (typeof output === 'string' && output) {\n        switch (casing) {\n            case 'lowercase':\n                output = output.toLowerCase()\n                break;\n            case 'uppercase':\n                output = output.toUpperCase()\n                break;\n            default:\n                output = output.charAt(0).toUpperCase() + output.slice(1)\n                break;\n        }\n    }\n    return output\n}\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./HisKeypad.vue?vue&type=style&index=0&id=7454247c&scoped=true&lang=css\"","export const DEFAULT_KEYPAD = [\n    ['1', '2', '3'],\n    ['4', '5', '6'],\n    ['7', '8', '9'],\n    ['.', '0', 'Del'],\n    ['',  'Done', '']\n]\nexport const PRESCRIPTION_KEYPAD = [\n    ['1', '2', '3'],\n    ['4', '5', '6'],\n    ['7', '8', '9'],\n    ['Del', '0', '.'],\n    ['Unknown', '', ''],\n]\nexport const VITALS_KEYPAD = [\n    ['1', '2', '3'],\n    ['4', '5', '6'],\n    ['7', '8', '9'],\n    ['.', '0', 'Del'],\n    ['Clear',  '%', '/']\n]\nexport const DRUG_DISPENSER_KEYPAD = [\n    ['1', '2', '3'],\n    ['4', '5', '6'],\n    ['7', '8', '9'],\n    ['Del.', '0', 'Clear'],\n    // ['Reset',  'Close', 'Dispense']\n]\nexport const CD4_COUNT_PAD_LO = [\n    ['1', '2', '3', '<'],\n    ['4', '5', '6', '>'],\n    ['7', '8', '9', '='],\n    ['',  '0', '']\n]\n\nexport const SYMBOLS = [\n    ['1', '2', '3', '+', '-', '/', '*'],\n    ['4', '5', '6', '%', '=', '<', '>', 'Qwerty'],\n    ['7', '8', '9', '.', ','],\n    ['',  '0', '']\n]\n\nexport const NUMBER_PAD_LO = [\n    ['1', '2', '3'],\n    ['4', '5', '6'],\n    ['7', '8', '9'],\n    ['',  '0', '']\n]\n\nexport const MONTHLY_DAYS_LO = [\n    ['1', '2', '3', '4', '5', '6', '7'],\n    ['8', '9', '10', '11', '12', '13', '14'],\n    ['15', '16', '17', '18', '19', '20', '21'],\n    ['22', '23', '24', '25', '26', '27', '28'],\n    ['29', '30', '31']\n]\n\nexport const ALPHABETICAL_LO = [\n    ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', '.'],\n    ['i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q'],\n    ['r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n]\n\nexport const QWERTY_LO = [\n    ['q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p'],\n    ['a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l', \"'\"],\n    ['z', 'x', 'c', 'v', 'b', 'n', 'm',',', '.', 'A-Z']\n]\n\nexport const CHARACTERS_AND_NUMBERS_LO = [\n    ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0'],\n    ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', '-', '.'],\n    ['i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q'],\n    ['r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n]\nexport const NOTE_PAD_KEYBOARD = [\n    ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0', 'Del'],\n    [\"q\", \"w\", \"e\", \"r\", \"t\", \"y\", \"u\", \"i\", \"o\", \"p\", 'Clear'],\n    [\"a\", \"s\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \".\", \"Caps\"],\n    [\"z\", \"x\", \"c\", \"v\", \"b\", \"n\", \"m\", \"<\", \">\", \"/\", \"Enter\"], \n]\n\nexport const LOGIN_KEYBOARD =  [\n    [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"0\"],\n    [\"q\", \"w\", \"e\", \"r\", \"t\", \"y\", \"u\", \"i\", \"o\", \"p\"],\n    [\"a\", \"s\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"Del.\"],\n    [\"z\", \"x\", \"c\", \"v\", \"b\", \"n\", \"m\", \"Caps\", \"Login\"],\n];\n","import { resolveDynamicComponent as _resolveDynamicComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createBlock(_resolveDynamicComponent(_ctx.formType), {\n    fields: _ctx.fields,\n    skipSummary: _ctx.skipSummary,\n    activeField: _ctx.activeField,\n    cancelDestinationPath: _ctx.cancelDestinationPath,\n    onOnFinish: _ctx.onFinish,\n    onFinish: _ctx.onFinishAction,\n    onOnIndex: _ctx.onIndex\n  }, null, 40, [\"fields\", \"skipSummary\", \"activeField\", \"cancelDestinationPath\", \"onOnFinish\", \"onFinish\", \"onOnIndex\"]))\n}","\nimport TouchScreenForm from \"@/components/Forms/TouchScreenForm.vue\";\nimport { defineComponent, PropType } from \"vue\";\nimport { Field } from \"./FieldInterface\";\n\nexport default defineComponent({\n    name: \"HisStandardForm\",\n    components: { TouchScreenForm },\n    emits: [\n        'onFinish',\n        'onIndex'\n    ],\n    data: () => ({\n        formType: 'touch-screen-form' as string\n    }),\n    props: {\n        onFinishAction: {\n            type: Function\n        },\n        skipSummary: {\n            type: Boolean,\n            default: false\n        },\n        activeField: {\n            type: String\n        },\n        fields: {\n            type: Object as PropType<Field[]>,\n            required: true\n        },\n        cancelDestinationPath: {\n            type: String,\n            required: false,\n        }\n    },\n    methods: {\n        onFinish(formData: any, computedData: any) {\n            this.$emit('onFinish', formData, computedData)\n        },\n        onIndex(i: number) {\n            this.$emit('onIndex', i)\n        }\n    }\n})\n","import { render } from \"./HisStandardForm.vue?vue&type=template&id=6daa0375&ts=true\"\nimport script from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\nexport * from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, normalizeClass as _normalizeClass, normalizeStyle as _normalizeStyle, withCtx as _withCtx, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ion_button = _resolveComponent(\"ion-button\")!\n\n  return (_openBlock(), _createElementBlock(\"table\", null, [\n    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.layout, (row, rowIndex) => {\n      return (_openBlock(), _createElementBlock(\"tr\", { key: rowIndex }, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(row, (btnKey, btnIndex) => {\n          return (_openBlock(), _createElementBlock(\"td\", {\n            class: \"his-keyboard-margin\",\n            key: `btn-${btnIndex}`\n          }, [\n            btnKey\n              ? (_openBlock(), _createBlock(_component_ion_button, {\n                  key: 0,\n                  style: _normalizeStyle({width: _ctx.btnSize}),\n                  class: _normalizeClass(`his-keyboard-btn btn-${btnKey}-${_ctx.dynamicClass(row)}`),\n                  onClick: () => _ctx.keyPress(btnKey)\n                }, {\n                  default: _withCtx(() => [\n                    _createTextVNode(_toDisplayString(btnKey), 1)\n                  ]),\n                  _: 2\n                }, 1032, [\"style\", \"class\", \"onClick\"]))\n              : _createCommentVNode(\"\", true)\n          ]))\n        }), 128))\n      ]))\n    }), 128))\n  ]))\n}","\nimport { defineComponent } from \"vue\";\nimport { IonButton } from \"@ionic/vue\";\nexport default defineComponent({\n  components: { IonButton },\n  props: {\n    btnSize: {\n      type: String,\n      default: '90%'\n    },\n    layout: {\n      type: Array,\n      required: true,\n      default: () => []\n    },\n    onKeyPress: {\n      type: Function,\n      required: true,\n    },\n  },\n  methods: {\n    keyPress(key: any) {\n      this.onKeyPress(key);\n    },\n    dynamicClass(row: any){\n      if(row.length == 3 && row[0] == \"Unknown\")\n        return \"Keypad\"\n      return row[0]\n    }\n  },\n});\n","import { render } from \"./BaseKeyboard.vue?vue&type=template&id=15a47ec5&ts=true\"\nimport script from \"./BaseKeyboard.vue?vue&type=script&lang=ts\"\nexport * from \"./BaseKeyboard.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}