{"version":3,"sources":["webpack:///./src/apps/AETC/views/encounters/SocialHistory.vue?2ee8","webpack:///./src/apps/AETC/views/encounters/SocialHistory.vue","webpack:///./src/apps/AETC/views/encounters/SocialHistory.vue?8278","webpack:///./src/views/EncounterMixin.vue","webpack:///./src/views/EncounterMixin.vue?fc39","webpack:///./src/components/Forms/HisStandardForm.vue?8e31","webpack:///./src/components/Forms/HisStandardForm.vue","webpack:///./src/components/Forms/HisStandardForm.vue?5176","webpack:///./src/guidelines/encounter_guidelines.ts","webpack:///./src/utils/GuidelineEngine.ts","webpack:///./src/components/Forms/BaseFormElements.ts","webpack:///./src/components/FormElements lazy ^\\.\\/.*\\.vue$ namespace object","webpack:///./src/apps/ART/services/social_history_service.ts"],"names":["render","_ctx","_cache","$props","$setup","$data","$options","_component_his_standard_form","_resolveComponent","_openBlock","_createBlock","cancelDestinationPath","cancelDestination","fields","onFinishAction","onSubmit","defineComponent","components","HisStandardForm","mixins","EncounterMixinVue","data","socialService","watch","ready","isReady","this","SocialHistoryService","patient","getID","providerID","getFields","immediate","deep","methods","_","computedData","encounter","createEncounter","toastWarning","registrationData","resolveObs","registrationObs","saveObservationList","nextTask","id","helpText","type","FieldType","TT_MULTIPLE_YES_NO","validation","validateSeries","Validation","required","anyEmpty","computedValue","options","obs","map","option","buildValueCoded","label","value","summaryMapValue","other","values","yesNoOptions","TT_SELECT","buildValueText","__exports__","patientID","providers","facts","sessionDate","apiDate","encounterName","isBdeMode","birthDate","outcome","outcomeStartDate","handler","route","params","patient_id","parseInt","Store","get","then","patientData","setEncounterFacts","checkEncounterGuidelines","computed","patientDashboardUrl","runflowState","state","states","FlowState","SET_PROVIDER","selection","username","split","provider","find","person_id","CONTINUE","CHANGE_SESSION_DATE","$router","push","EXIT","CHANGE_PATIENT_OUTCOME","GO_TO_PATIENT_DASHBOARD","gotoPatientDashboard","findings","matchToGuidelines","ENCOUNTER_GUIDELINES","index","_finding$actions","_finding$actions3","finding","actions","alert","_finding$actions2","status","_finding$actions4","flowState","program","startDate","e","console","error","toastDanger","ProgramService","getSessionDate","getCachedApiDate","isBDE","getBirthdate","$route","name","toString","toUpperCase","sort","a","b","usernameA","usernameB","p","_p$person","isEmpty","person","names","_p$person2","latestName","given_name","family_name","toOption","mapStrToOptions","items","i","path","toYesNoOption","mapOptions","yesNoUnknownOptions","tag","Object","filter","d","reduce","accum","cur","Array","isArray","concat","Promise","all","inArray","arr","expression","length","conditions","condition","_resolveDynamicComponent","formType","skipSummary","activeField","onOnFinish","onFinish","onOnIndex","onIndex","TouchScreenForm","emits","props","Function","Boolean","default","String","formData","$emit","dformat","HisDate","toStandardHisDisplayFormat","priority","async","action","infoActionSheet","slot","color","modal","optionsActionSheet","role","isCondition","ignored","undefined","prop","includes","every","sortByPriority","sortByWeight","weight","guidelines","target","targetEvent","sortBy","matches","guidelineIndex","targetValidations","some","title","description","text","info","COMPONENT_REFS","TT_ASYNC_MULTI_SELECT","TT_LINKAGE_CODE","TT_MULTI_SELECT_GRID","TT_AGE_INPUT","TT_BARCODE","TT_NOTE","TT_CARD_SELECTOR","TT_MULTIPLE_SELECT","TT_TEXT","TT_NUMBER","TT_MONTHLY_DAYS","TT_ART_REGIMEN_SELECTION","TT_NEXT_VISIT_INTERVAL_SELECTION","TT_TABLE_VIEWER","TT_DOSAGE_INPUT","TT_YES_NO","TT_WEIGHT_CHART","TT_VITALS_ENTRY","TT_APPOINTMENTS_ENTRY","TT_COMPLAINTS_PICKER","TT_CLINIC_HOLIDAY_PICKER","TT_SUMMARY","TT_ART_STAGING_SUMMARY","TT_ADHERENCE_INPUT","TT_LAB_ORDERS","TT_PERSON_RESULT_VIEW","TT_PROGRAM_SELECTION","TT_DATE_PICKER","TT_RELATION_SELECTION","TT_FILING_NUMBER_VIEW","TT_PERSON_MATCH_VIEW","TT_FULL_DATE","TT_BATCH_ENTRY","TT_BATCH_VERIFICATION","TT_BATCH_MOVEMENT","TT_IP_ADDRESS","TT_TEXT_BANNER","TT_DISPENSATION_INPUT","TT_DATA_TABLE","TT_GROUP_SELECTOR","TT_ANC_PREGNANCY_INPUT_CONFIG","TT_ANC_PREGNANCY_DETAILS_INPUT","TT_ANC_LMP_DATE_INPUT","TT_DRUG_TRANSFER_IN","TT_GRID_SELECTOR","TT_ANC_DRUGSET_INPUT","TT_RADIOLOGY_PICKER","TT_PRESCRIPTION_INPUT","TT_INFINITE_SCROLL_MULTIPLE_SELECT","TT_DRUG_DISPENSER","webpackAsyncContext","req","__webpack_require__","o","resolve","Error","code","ids","slice","keys","module","exports","AppEncounterService","constructor","super"],"mappings":"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AAU8M,mBACV9M,EAAU+M,cACV/M,EAAUgN,sBACVhN,EAAUiN,qBACVjN,EAAUkN,eACVlN,EAAUmN,sBACVnN,EAAUoN,sBACVpN,EAAUqN,qBACVrN,EAAUsN,aACVtN,EAAUuN,eACVvN,EAAUwN,sBACVxN,EAAUyN,kBACVzN,EAAU0N,cACV1N,EAAU2N,eACV3N,EAAU4N,sBACV5N,EAAU6N,cACV7N,EAAU8N,kBACV9N,EAAU+N,8BACV/N,EAAUgO,+BACVhO,EAAUiO,sBACVjO,EAAUkO,oBACVlO,EAAUmO,iBACVnO,EAAUoO,qBACVpO,EAAUqO,oBACVrO,EAAUsO,sBACVtO,EAAUuO,mCACVvO,EAAUwO,oB,qBCpHd,IAAI9N,EAAM,CACT,wBAAyB,CACxB,OACA,qBAED,wBAAyB,CACxB,OACA,qBAED,iCAAkC,CACjC,OACA,qBAED,+BAAgC,CAC/B,OACA,qBAED,0BAA2B,CAC1B,OACA,qBAED,yBAA0B,CACzB,OACA,iBACA,qBAED,sBAAuB,CACtB,OACA,qBAED,kCAAmC,CAClC,OACA,qBAED,0BAA2B,CAC1B,OACA,iBACA,qBAED,mBAAoB,CACnB,OACA,qBAED,yBAA0B,CACzB,OACA,sBAED,6BAA8B,CAC7B,OACA,sBAED,0BAA2B,CAC1B,OACA,iBACA,sBAED,oBAAqB,CACpB,OACA,sBAED,wBAAyB,CACxB,OACA,iBACA,sBAED,+BAAgC,CAC/B,OACA,sBAED,wBAAyB,CACxB,OACA,sBAED,sBAAuB,CACtB,OACA,iBACA,iBACA,sBAED,yBAA0B,CACzB,OACA,iBACA,iBACA,sBAED,6BAA8B,CAC7B,OACA,iBACA,iBACA,sBAED,wBAAyB,CACxB,OACA,sBAED,+BAAgC,CAC/B,OACA,iBACA,sBAED,4BAA6B,CAC5B,OACA,sBAED,qBAAsB,CACrB,OACA,sBAED,qBAAsB,CACrB,OACA,sBAED,sBAAuB,CACtB,OACA,iBACA,sBAED,uBAAwB,CACvB,OACA,iBACA,sBAED,wBAAyB,CACxB,OACA,sBAED,yBAA0B,CACzB,OACA,sBAED,qBAAsB,CACrB,OACA,sBAED,wCAAyC,CACxC,OACA,sBAED,qBAAsB,CACrB,OACA,iBACA,sBAED,uBAAwB,CACvB,OACA,sBAED,2BAA4B,CAC3B,OACA,sBAED,0BAA2B,CAC1B,OACA,iBACA,sBAED,6BAA8B,CAC7B,OACA,sBAED,gBAAiB,CAChB,OACA,sBAED,uBAAwB,CACvB,OACA,sBAED,6BAA8B,CAC7B,OACA,iBACA,sBAED,2BAA4B,CAC3B,OACA,sBAED,kBAAmB,CAClB,OACA,sBAED,mBAAoB,CACnB,OACA,sBAED,uBAAwB,CACvB,OACA,sBAED,sBAAuB,CACtB,OACA,sBAED,qBAAsB,CACrB,OACA,sBAED,uBAAwB,CACvB,OACA,sBAED,uBAAwB,CACvB,OACA,sBAED,yBAA0B,CACzB,OACA,sBAED,yBAA0B,CACzB,OACA,sBAED,wBAAyB,CACxB,OACA,sBAED,yBAA0B,CACzB,OACA,sBAED,yBAA0B,CACzB,OACA,sBAED,2BAA4B,CAC3B,OACA,sBAED,oBAAqB,CACpB,OACA,sBAED,oBAAqB,CACpB,OACA,uBAGF,SAAS+N,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAElO,EAAKgO,GAC9B,OAAO9G,QAAQiH,UAAUtM,MAAK,WAC7B,IAAIwC,EAAI,IAAI+J,MAAM,uBAAyBJ,EAAM,KAEjD,MADA3J,EAAEgK,KAAO,mBACHhK,KAIR,IAAIiK,EAAMtO,EAAIgO,GAAM7O,EAAKmP,EAAI,GAC7B,OAAOpH,QAAQC,IAAImH,EAAIC,MAAM,GAAGvO,IAAIiO,EAAoB5J,IAAIxC,MAAK,WAChE,OAAOoM,EAAoB9O,MAG7B4O,EAAoBS,KAAO,WAC1B,OAAO/H,OAAO+H,KAAKxO,IAEpB+N,EAAoB5O,GAAK,OACzBsP,EAAOC,QAAUX,G,kCChQjB,kDAEM,MAAO9P,UAA6B0Q,OACtCC,YAAYhO,EAAmBxC,GAC3ByQ,MAAMjO,EAAW,GAAIxC","file":"js/chunk-cc975d02.331428da.js","sourcesContent":["import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_his_standard_form = _resolveComponent(\"his-standard-form\")!\n\n  return (_openBlock(), _createBlock(_component_his_standard_form, {\n    cancelDestinationPath: _ctx.cancelDestination,\n    fields: _ctx.fields,\n    onFinishAction: _ctx.onSubmit\n  }, null, 8, [\"cancelDestinationPath\", \"fields\", \"onFinishAction\"]))\n}","\nimport { defineComponent} from 'vue'\nimport HisStandardForm from \"@/components/Forms/HisStandardForm.vue\";\nimport EncounterMixinVue from '@/views/EncounterMixin.vue';\nimport Validation from '@/components/Forms/validations/StandardValidations';\nimport { Field, Option } from '@/components/Forms/FieldInterface';\nimport { FieldType } from '@/components/Forms/BaseFormElements';\nimport { toastWarning } from '@/utils/Alerts';\nimport { SocialHistoryService } from '@/apps/ART/services/social_history_service';\n\nexport default defineComponent({\n  components: { HisStandardForm },\n  mixins: [EncounterMixinVue],\n  data: () => ({\n    socialService: {} as any\n  }),\n  watch: {\n    ready: {\n      async handler(isReady: boolean) {\n        if(isReady){\n          this.socialService = new SocialHistoryService(this.patient.getID(), this.providerID)\n          this.fields = this.getFields()\n        }\n      },\n      immediate: true,\n      deep: true\n    }\n  },\n  methods: {\n    async onSubmit(_: any, computedData: any){\n      const encounter = await this.socialService.createEncounter()\n      if (!encounter) return toastWarning('Unable to create social history encounter')\n      \n      const registrationData = await this.resolveObs({...computedData})\n      const registrationObs = await this.socialService.saveObservationList(registrationData)\n      if (!registrationObs) return toastWarning('Unable to save observations')\n\n      this.nextTask()        \n    },\n    getFields(): Array<Field>{\n      return [\n        {\n          id: \"social_acitivites\",\n          helpText: `Social Activities`,\n          type: FieldType.TT_MULTIPLE_YES_NO,\n          validation: (data: any) => this.validateSeries([\n            () => Validation.required(data), \n            () => Validation.anyEmpty(data)\n          ]),\n          computedValue: (options: Option[]) => ({\n            obs: options.map(option => this.socialService.buildValueCoded(\n              option.label,\n              option.value\n            ))                     \n          }),\n          summaryMapValue: (option: Option) => ({\n            label: option.label,\n            value: option.value\n          }),\n          options: () => [\n            {\n              label: \"Patient smokes\",\n              value: \"\",\n              other: {\n                values: this.yesNoOptions(),\n              },\n            },\n            {\n              label: \"Patient drinks alcohol\",\n              value: \"\",\n              other: {\n                values: this.yesNoOptions(),\n              },\n            },\n          ],\n        },\n        {\n          id: 'marital_status',\n          helpText: 'Marital Status',\n          type: FieldType.TT_SELECT,\n          validation: (value: any) => Validation.required(value),\n          computedValue: ({ value }: Option) => ({\n            obs: this.socialService.buildValueText('Marital status', value)\n          }),\n          options: () => [\n            { label: \"Single\", value: \"Single\" },\n            { label: \"Engaged\", value: \"Engaged\" },\n            { label: \"Married\", value: \"Married\" },\n            { label: \"Separated\", value: \"Separated\" },\n            { label: \"Widowed\", value: \"Widowed\" },\n            { label: \"Other\", value: \"Other\" },\n          ],\n        },\n        {\n          id: 'religion',\n          helpText: 'Religion',\n          type: FieldType.TT_SELECT,\n          validation: (value: any) => Validation.required(value),\n          computedValue: ({ value }: Option) => ({\n            obs: this.socialService.buildValueText('Religion', value)\n          }),\n          options: () => ([\n            { label: 'Catholic', value: 'Catholic' },\n            { label: 'CCAP', value: 'CCAP' },\n            { label: 'SDA', value: 'SDA' },\n            { label: 'Angelican', value: 'Angelican' },\n            { label: 'Muslim', value: 'Muslim' },\n            { label: 'Pentecostalism', value: 'Pentecostalism' },\n            { label: 'Jehovah witness', value: 'Jehovah witness' },\n            { label: 'Other', value: 'Other' },\n          ])\n        },\n      ]\n    }\n  }\n})\n","import { render } from \"./SocialHistory.vue?vue&type=template&id=69e90a18&ts=true\"\nimport script from \"./SocialHistory.vue?vue&type=script&lang=ts\"\nexport * from \"./SocialHistory.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/projects/malawi-emr/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","\n/**\n * @deprecated moved to useEncounter composable\n * \n */\nimport { defineComponent } from 'vue'\nimport { Field, Option } from '@/components/Forms/FieldInterface'\nimport { ProgramService } from \"@/services/program_service\"\nimport { find, isEmpty } from \"lodash\"\nimport { nextTask } from \"@/utils/WorkflowTaskHelper\"\nimport { ENCOUNTER_GUIDELINES, FlowState } from \"@/guidelines/encounter_guidelines\"\nimport { matchToGuidelines } from \"@/utils/GuidelineEngine\"\nimport HisStandardForm from \"@/components/Forms/HisStandardForm.vue\";\nimport { toastDanger } from '@/utils/Alerts'\nimport Store from \"@/composables/ApiStore\"\n\nexport default defineComponent({\n    components: { HisStandardForm },\n    data: () => ({\n        patient: {} as any,\n        fields: [] as Array<Field>,\n        patientID: '' as any,\n        providerID: -1 as number,\n        providers: [] as any,\n        facts: {\n            sessionDate: '' as string,\n            apiDate: '' as string,\n            encounterName: 'N/A' as string,\n            providers: [] as Array<any>,\n            isBdeMode: false as boolean,\n            birthDate: '' as string,\n            outcome: '' as string,\n            outcomeStartDate: '' as string\n        },\n        ready: false\n    }),\n    watch: {\n       '$route': {\n            handler(route: any) {\n                if(route.params.patient_id && this.patientID != route.params.patient_id) {\n                    this.patientID = parseInt(route.params.patient_id);\n                    Store.get('ACTIVE_PATIENT', { patientID: this.patientID})\n                        .then(patientData => {\n                            this.patient = patientData\n                            this.setEncounterFacts().then(() => {\n                                this.checkEncounterGuidelines().then(() => {\n                                    this.ready = true\n                                })\n                            })\n                        })\n                    }\n            },\n            immediate: true,\n            deep: true\n        }\n    },\n    computed: {\n        cancelDestination(): string {\n            return this.patientDashboardUrl()\n        }\n    },\n    methods: {\n        runflowState(state: FlowState, params=null) {\n            const states: any = {}\n            states[FlowState.SET_PROVIDER] = (selection: any) => {\n                const [ username ] = selection.split(' ')\n                const provider = find(this.providers, { username })\n                if (provider) this.providerID = provider.person_id\n                return FlowState.CONTINUE\n            }\n            states[FlowState.CHANGE_SESSION_DATE] = () => { \n                this.$router.push(`/session/date?patient_dashboard_redirection_id=${this.patientID}`)\n                return FlowState.EXIT\n            }\n            states[FlowState.CHANGE_PATIENT_OUTCOME] = () => {\n                this.$router.push(`/patient/programs/${this.patientID}`)\n                return FlowState.EXIT\n            }\n            states[FlowState.GO_TO_PATIENT_DASHBOARD] = () => {\n                this.gotoPatientDashboard()\n                return FlowState.EXIT\n            }\n            if (state in states) {\n                return states[state](params)\n            }\n        },\n        async checkEncounterGuidelines() {\n            const findings = matchToGuidelines(this.facts, ENCOUNTER_GUIDELINES)\n            for(const index in findings) {\n                const finding = findings[index]\n                if (finding?.actions?.alert) {\n                    const status = this.runflowState((await finding?.actions?.alert(this.facts)))\n                    if (status === FlowState.EXIT) return\n                }\n                if (finding?.actions?.selection) {\n                    const selection = await finding?.actions?.selection(this.facts)\n                    this.runflowState(selection.flowState, selection.value)\n                }\n            }\n        },\n        async setEncounterFacts() {\n            try {\n                const program = await Store.get('PATIENT_PROGRAM', { patientID: this.patientID })\n                this.facts.outcome = program.outcome\n                this.facts.outcomeStartDate = program.startDate\n            } catch (e) {\n                console.error(e)\n                toastDanger(`${e}`)\n            }\n            this.facts.sessionDate = ProgramService.getSessionDate()\n            this.facts.apiDate = ProgramService.getCachedApiDate() as string\n            this.facts.isBdeMode = ProgramService.isBDE() as boolean\n            this.facts.birthDate = this.patient.getBirthdate()\n            this.facts.encounterName = this.$route.name \n                ? this.$route.name.toString().toUpperCase()\n                : 'N/A'\n            if (ProgramService.isBDE()) {\n                this.providers = await Store.get('PROVIDERS')\n                this.facts.providers = this.providers\n                    .sort((a: any, b: any) => {\n                        const usernameA = a.username.toUpperCase()\n                        const usernameB = b.username.toUpperCase()\n                        return usernameA < usernameB ? -1 : usernameA > usernameB  ? 1 : 0\n                    })\n                    .map((p: any) => {\n                        let name = `${p.username}`\n                        if (!isEmpty(p?.person?.names)) {\n                            const [ latestName ] = p.person?.names || []\n                            name += ` (${latestName.given_name} ${latestName.family_name})`\n                        }\n                        return name\n                    })\n            }\n        },\n        toOption(label: string, other={}) {\n            return {\n                label,\n                value: label,\n                other\n            }\n        },\n        mapStrToOptions(items: string[]) {\n            return items.map(i => ({label: i, value: i}))\n        },\n        patientDashboardUrl(): string {\n            return `/patient/dashboard/${this.patientID}`\n        },\n        gotoPatientDashboard() {\n            return this.$router.push({path: this.patientDashboardUrl()})\n        },\n        nextTask() {\n            return nextTask(this.patientID, this.$router)\n        },\n        yesNoOptions(): Option[] {\n            return [\n                { label: \"Yes\", value: \"Yes\" },\n                { label: \"No\", value: \"No\" }\n            ]\n        },\n        toYesNoOption(label: string, other: any={}): Option {\n            return {\n                label,\n                value: '',\n                other: {\n                    ...other,\n                    values: this.yesNoOptions()\n                }\n            } \n        },\n        mapOptions(options: Array<string>) {\n            return options.map((option) => {\n                return { label: option, value: option }\n            });\n        },\n        yesNoUnknownOptions(): Option[] {\n            return [\n                { label: \"Yes\", value: \"Yes\" },\n                { label: \"No\", value: \"No\" },\n                { label: \"Unknown\", value: \"Unknown\" }\n            ]\n        },\n        resolveObs(obs: any, tag='') {\n            const values: any = Object.values(obs)\n                .filter((d: any) => d && (d.tag === tag || tag === ''))\n                .reduce((accum: any, cur: any) => { \n                    const data = cur.obs ? cur.obs : cur\n                    if (Array.isArray(data)) {\n                        accum = accum.concat(data)\n                    } else if (typeof data === 'function') {\n                        accum.push(data())\n                    } else {\n                        accum.push(data)\n                    }\n                    return accum\n                    }, [])\n            return Promise.all(values)\n        },\n        inArray(arr: Array<any>, expression: (i: any) => boolean): boolean {\n            try {\n                return arr.filter((i: any) => expression(i)).length > 0\n            } catch (e) {\n                return false\n            }\n        },\n        validateSeries(conditions: Array<any>){\n            try {\n                for(const i in conditions) {\n                    const condition = conditions[i]()\n\n                    if (condition) return condition\n                }\n            } catch (e) {\n                return [e]\n            }\n        }\n    }\n})\n","import script from \"./EncounterMixin.vue?vue&type=script&lang=ts\"\nexport * from \"./EncounterMixin.vue?vue&type=script&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { resolveDynamicComponent as _resolveDynamicComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createBlock(_resolveDynamicComponent(_ctx.formType), {\n    fields: _ctx.fields,\n    skipSummary: _ctx.skipSummary,\n    activeField: _ctx.activeField,\n    cancelDestinationPath: _ctx.cancelDestinationPath,\n    onOnFinish: _ctx.onFinish,\n    onFinish: _ctx.onFinishAction,\n    onOnIndex: _ctx.onIndex\n  }, null, 40, [\"fields\", \"skipSummary\", \"activeField\", \"cancelDestinationPath\", \"onOnFinish\", \"onFinish\", \"onOnIndex\"]))\n}","\nimport TouchScreenForm from \"@/components/Forms/TouchScreenForm.vue\";\nimport { defineComponent, PropType } from \"vue\";\nimport { Field } from \"./FieldInterface\";\n\nexport default defineComponent({\n    name: \"HisStandardForm\",\n    components: { TouchScreenForm },\n    emits: [\n        'onFinish',\n        'onIndex'\n    ],\n    data: () => ({\n        formType: 'touch-screen-form' as string\n    }),\n    props: {\n        onFinishAction: {\n            type: Function\n        },\n        skipSummary: {\n            type: Boolean,\n            default: false\n        },\n        activeField: {\n            type: String\n        },\n        fields: {\n            type: Object as PropType<Field[]>,\n            required: true\n        },\n        cancelDestinationPath: {\n            type: String,\n            required: false,\n        }\n    },\n    methods: {\n        onFinish(formData: any, computedData: any) {\n            this.$emit('onFinish', formData, computedData)\n        },\n        onIndex(i: number) {\n            this.$emit('onIndex', i)\n        }\n    }\n})\n","import { render } from \"./HisStandardForm.vue?vue&type=template&id=6daa0375&ts=true\"\nimport script from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\nexport * from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/projects/malawi-emr/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { infoActionSheet, optionsActionSheet } from \"@/utils/ActionSheets\";\nimport { GuideLineInterface } from \"@/utils/GuidelineEngine\";\nimport HisDate from '@/utils/Date'\n\nexport enum FlowState {\n    SET_PROVIDER = 'SET_PROVIDER',\n    CHANGE_SESSION_DATE = 'change_session_date',\n    GO_TO_PATIENT_DASHBOARD = 'go_to_patient_dashboard',\n    CHANGE_PATIENT_OUTCOME = 'change_outcome',\n    CONTINUE = 'continue',\n    EXIT = 'exit'\n}\nconst dformat = (d: string) => HisDate.toStandardHisDisplayFormat(d)\n\nexport const ENCOUNTER_GUIDELINES: Record<string, GuideLineInterface> = {\n    \"Warn if attempting to create new encounters for a deceased patient\": {\n        priority: 1,\n        actions: {\n            alert: async ({ outcomeStartDate }: any) => {\n                const action = await infoActionSheet(\n                    'Data Integrity Issue Found',\n                    `Patient died on ${dformat(outcomeStartDate)}`,\n                    'Proceeding with this outcome might affect accuracy of some reports',\n                    [\n                        { name: 'Cancel', slot: 'end', color: 'primary'},\n                        { name: 'Change outcome', slot: 'end', color: 'primary'},\n                        { name: 'Continue Anyway', slot: 'end', color: 'danger'}\n                    ]\n                )\n                return action === 'Cancel'\n                    ? FlowState.GO_TO_PATIENT_DASHBOARD\n                    : action === 'Change outcome'\n                    ? FlowState.CHANGE_PATIENT_OUTCOME\n                    : FlowState.CONTINUE\n            }\n        },\n        conditions: {\n            outcome(outcome: string) {\n                return outcome === 'Patient died'\n            },\n            outcomeStartDate(startDate: string, { sessionDate }: any) {\n                return sessionDate >= startDate\n            }\n        }\n    },\n    \"A patient's date of birth must not be less than Session Date\": {\n        priority: 2,\n        actions: {\n            alert: async ({ birthDate, sessionDate}: any) => {\n                const action = await infoActionSheet(\n                    'Data integrity issue found', '',\n                    `Session date ${dformat(sessionDate)} is less than birth date of ${dformat(birthDate)}`,\n                    [\n                        { name: 'Cancel', slot: 'end', color: 'danger'},\n                        { name: 'Change session date', slot: 'end', color: 'success'}\n                    ]\n                )\n                return action === 'Change session date'\n                    ? FlowState.CHANGE_SESSION_DATE\n                    : FlowState.GO_TO_PATIENT_DASHBOARD\n            }\n        },\n        conditions: {\n            birthDate(birthDate: string, { sessionDate }: any) {\n                return sessionDate < birthDate\n            }\n        }\n    },\n    \"Select Encounter provider when in back data entry\": {\n        priority: 3,\n        actions: {\n            selection: async ({ providers, encounterName, sessionDate, apiDate }: any) => {\n                const modal = await optionsActionSheet(\n                    `Please select a provider for ${encounterName}`,\n                    `BDE: ${dformat(sessionDate)} | Current: ${dformat(apiDate)}`,\n                    providers,\n                    [\n                        { name: 'Cancel', color: 'danger', slot: 'start', role: 'default'},\n                        { name: 'Confirm', slot: 'end', role: 'action' }\n                    ]\n                )\n                return modal.action === 'Cancel' \n                    ? { value: -1, flowState: FlowState.GO_TO_PATIENT_DASHBOARD }\n                    : { value: modal.selection, flowState: FlowState.SET_PROVIDER }\n            }\n        },\n        conditions: {\n            isBdeMode(isBDE: boolean) {\n                return isBDE\n            }\n        }\n    }\n}","/**\n * Compares patient facts against a predefined guideline Object.\n*/\nexport interface DescriptionInterface {\n    color?: 'primary' | 'secondary' | 'danger' | 'warning';\n    info: (facts: FactsInterface) => any;\n    text?: string;\n    show: 'onChecked' | 'always';\n}\n\nexport interface GuideLineInterface {\n    title?: string;\n    concept?: string;\n    weight?: number;\n    priority?: number;\n    conditions: ConditionsInteface;\n    actions?: Record<string, any>; //TODO: should <key, Function>\n    data?: Record<string, any>;\n    description?: DescriptionInterface;\n    target?: string;\n    targetEvent?: string;\n}\n\nexport type FactsInterface = Record<string, any>\nexport type ConditionResolver = (value: any, facts: FactsInterface) => boolean | RegExpMatchArray | null\nexport type ConditionsInteface = Record<string, ConditionResolver>\n\n/**\n * Match the facts with guidelines\n * @param facts \n * @param conditions \n * @returns \n */\nfunction isCondition(facts: FactsInterface, conditions: ConditionsInteface): boolean {\n    const state = [] \n    const ignored = [-1, '', null, undefined]\n\n    for(const prop in conditions) {\n        if (!(prop in facts)) \n            continue\n        \n        const value = facts[prop]\n        if (ignored.includes(value)) {\n            state.push(false)\n            continue\n        }\n\n        state.push(conditions[prop](value, facts))\n    }\n    return state.every(Boolean)\n}\n\n/**\n * Sort guidelines in the order of importance/relevance\n * @param findings \n * @returns \n */\nfunction sortByPriority(findings: GuideLineInterface[]) {\n    return findings.sort((a, b) => (a.priority && b.priority) && a.priority < b.priority ? -1 : 1)\n}\n\nfunction sortByWeight(findings: GuideLineInterface[]) {\n    return findings.sort((a, b) => (a.weight && b.weight) && a.weight > b.weight ? -1 : 1)\n}\n\nexport function logFindingsByWeight(guidelines: Record<string, GuideLineInterface>) {\n    const findings: any = Object.keys(guidelines).map(i => ({ name: i, weight: guidelines[i].weight}))\n    console.log(sortByWeight(findings).map((i: any) => `${i.weight} -> ${i.name}`))\n}\n\n/**\n * Check the guideline for matching facts and return matching object \n * @param facts: key value pair for used for searching in guidelines\n * @param guidelines: A dictionary containing fixed rules/validations that conforms to GuideLineInterface\n * @param target: Used for matching a target defined in a guidlines before executing conditions\n * @param targetEvent: used for matching a target event in a guideline before executing conditions\n * @returns\n */\nexport function matchToGuidelines(\n    facts: FactsInterface, \n    guidelines: Record<string, GuideLineInterface>,\n    target='', \n    targetEvent='',\n    sortBy='priority' as 'priority' | 'weight'): Array<GuideLineInterface> {\n    const matches = []\n    for(const guidelineIndex in guidelines) {\n        const data: GuideLineInterface = guidelines[guidelineIndex]\n        const targetValidations = [\n            (data.target && target && data.target != target),\n            (data.targetEvent && targetEvent \n                && data.targetEvent != targetEvent)\n        ]\n\n        if (targetValidations.some(Boolean)) {\n            continue\n        }\n\n        if (isCondition(facts, data.conditions)) {\n            data.title = guidelineIndex\n            if (data.description) {\n                data.description.text = data.description.info(facts)\n            }\n            matches.push(data)\n        }\n    }\n    return sortBy === 'priority' ? sortByPriority(matches) : sortByWeight(matches)\n}\n","/**\n * Map all formElements/components defined in \"@/components/FormElements\" \n * in the Enum below by their file name.\n * \n * Next step is to add FieldType entry in COMPONENT_REFS in the \n * Array below the FieldType Enum\n */\nexport enum FieldType {\n    TT_ASYNC_MULTI_SELECT = 'AsyncMultiSelect',\n    TT_LINKAGE_CODE = 'LinkageCodeInput',\n    TT_MULTI_SELECT_GRID= 'HisMultiSelectGrid',\n    TT_AGE_INPUT='HisAgeInput',\n    TT_GROUP_SELECTOR = 'HisGroupSelector',\n    TT_DATA_TABLE = 'HisDataTable',\n    TT_GRID_SELECTOR = 'HisGridSelector',\n    TT_NOTE = 'HisNote',\n    TT_BARCODE = 'HisBarcodeInput',\n    TT_MONTHLY_DAYS=\"HisMonthlyDays\",\n    TT_TEXT=\"HisTextInput\",\n    TT_NUMBER = \"HisNumberInput\",\n    TT_DATETIME=\"datetime\",\n    TT_SELECT=\"HisSelect\",\n    TT_MULTIPLE_SELECT=\"HisMultipleSelect\",\n    TT_ART_REGIMEN_SELECTION=\"HisArtRegimenSelection\",\n    TT_NEXT_VISIT_INTERVAL_SELECTION=\"HisNextVisitInterval\",\n    TT_TABLE_VIEWER=\"HisTableViewer\",\n    TT_DOSAGE_INPUT=\"HisDosageInput\",\n    TT_YES_NO=\"YesNoSelect\",\n    TT_MULTIPLE_YES_NO=\"MultiYesNoSelect\",\n    TT_SUMMARY=\"HisSummary\",\n    TT_WEIGHT_CHART = \"HisWeightChart\",\n    TT_VITALS_ENTRY=\"HisVitalsEntry\",\n    TT_ADHERENCE_INPUT = \"HisAdherenceInput\",\n    TT_ART_STAGING_SUMMARY = \"ArtStagingSummary\",\n    TT_LAB_ORDERS = \"HisLabOrders\",\n    TT_APPOINTMENTS_ENTRY = \"HisAppointments\",\n    TT_DISPENSATION_INPUT = 'DrugDispensationSelection',\n    TT_PROGRAM_SELECTION = 'ProgramSelection',\n    TT_DATE_PICKER = 'HisDatePicker',\n    TT_PERSON_RESULT_VIEW = 'PersonSearchView',\n    TT_RELATION_SELECTION = 'RelationsSelection',\n    TT_FILING_NUMBER_VIEW = 'FilingNumberView',\n    TT_CARD_SELECTOR = 'HisCardSelector',\n    TT_PERSON_MATCH_VIEW = 'PersonMatchView',\n    TT_FULL_DATE = 'HisDateInput',\n    TT_BATCH_ENTRY = 'HisBatchEntry',\n    TT_BATCH_VERIFICATION = 'HisBatchVerification',\n    TT_BATCH_MOVEMENT = 'HisBatchMovement',\n    TT_COMPLAINTS_PICKER = 'HisComplaintsPicker',\n    TT_RADIOLOGY_PICKER = 'HisRadiologyPicker',\n    TT_IP_ADDRESS = 'HisIPAddress',\n    TT_TEXT_BANNER = 'HisTextBanner',\n    TT_DRUG_DISPENSER = 'GeneralDrugDispenser',\n    TT_CLINIC_HOLIDAY_PICKER = 'HisClinicHolidayPicker',\n    TT_ANC_PREGNANCY_INPUT_CONFIG = 'AncPregnancyInfoConfig',\n    TT_ANC_PREGNANCY_DETAILS_INPUT = 'AncPregnancyDetailsInput',\n    TT_ANC_LMP_DATE_INPUT = 'AncLmpDateInput',\n    TT_ANC_DRUGSET_INPUT = 'AncDrugSetInput',\n    TT_DRUG_TRANSFER_IN = 'DrugTransferInput',\n    TT_PRESCRIPTION_INPUT = 'HisPrescriptionInput',\n    TT_INFINITE_SCROLL_MULTIPLE_SELECT=\"HisInfiniteScrollMultipleSelect\"\n}\n\n// Register FieldTypes here that will be registered at runtime\nexport const COMPONENT_REFS: FieldType[] = [\n    FieldType.TT_ASYNC_MULTI_SELECT,\n    FieldType.TT_LINKAGE_CODE,\n    FieldType.TT_MULTI_SELECT_GRID,\n    FieldType.TT_AGE_INPUT,\n    FieldType.TT_BARCODE,\n    FieldType.TT_NOTE,\n    FieldType.TT_SELECT,\n    FieldType.TT_CARD_SELECTOR,\n    FieldType.TT_MULTIPLE_SELECT,\n    FieldType.TT_TEXT,\n    FieldType.TT_NUMBER,\n    FieldType.TT_MONTHLY_DAYS,\n    FieldType.TT_ART_REGIMEN_SELECTION,\n    FieldType.TT_NEXT_VISIT_INTERVAL_SELECTION,\n    FieldType.TT_TABLE_VIEWER,\n    FieldType.TT_DOSAGE_INPUT,\n    FieldType.TT_YES_NO,\n    FieldType.TT_MULTIPLE_YES_NO,\n    FieldType.TT_WEIGHT_CHART,\n    FieldType.TT_VITALS_ENTRY,\n    FieldType.TT_APPOINTMENTS_ENTRY,\n    FieldType.TT_COMPLAINTS_PICKER,\n    FieldType.TT_CLINIC_HOLIDAY_PICKER,\n    FieldType.TT_SUMMARY,\n    FieldType.TT_ART_STAGING_SUMMARY,\n    FieldType.TT_ADHERENCE_INPUT,\n    FieldType.TT_LAB_ORDERS,\n    FieldType.TT_PERSON_RESULT_VIEW,\n    FieldType.TT_PROGRAM_SELECTION,\n    FieldType.TT_DATE_PICKER,\n    FieldType.TT_RELATION_SELECTION,\n    FieldType.TT_FILING_NUMBER_VIEW,\n    FieldType.TT_PERSON_MATCH_VIEW,\n    FieldType.TT_FULL_DATE,\n    FieldType.TT_BATCH_ENTRY,\n    FieldType.TT_BATCH_VERIFICATION,\n    FieldType.TT_BATCH_MOVEMENT,\n    FieldType.TT_IP_ADDRESS,\n    FieldType.TT_TEXT_BANNER,\n    FieldType.TT_DISPENSATION_INPUT,\n    FieldType.TT_DATA_TABLE,\n    FieldType.TT_GROUP_SELECTOR,\n    FieldType.TT_ANC_PREGNANCY_INPUT_CONFIG,\n    FieldType.TT_ANC_PREGNANCY_DETAILS_INPUT,\n    FieldType.TT_ANC_LMP_DATE_INPUT,\n    FieldType.TT_DRUG_TRANSFER_IN,\n    FieldType.TT_GRID_SELECTOR,\n    FieldType.TT_ANC_DRUGSET_INPUT,\n    FieldType.TT_RADIOLOGY_PICKER,\n    FieldType.TT_PRESCRIPTION_INPUT,\n    FieldType.TT_INFINITE_SCROLL_MULTIPLE_SELECT,\n    FieldType.TT_DRUG_DISPENSER\n]\n","var map = {\n\t\"./AncDrugSetInput.vue\": [\n\t\t\"c99f\",\n\t\t\"TouchFormElement0\"\n\t],\n\t\"./AncLmpDateInput.vue\": [\n\t\t\"101a\",\n\t\t\"TouchFormElement1\"\n\t],\n\t\"./AncPregnancyDetailsInput.vue\": [\n\t\t\"b043\",\n\t\t\"TouchFormElement2\"\n\t],\n\t\"./AncPregnancyInfoConfig.vue\": [\n\t\t\"262e\",\n\t\t\"TouchFormElement3\"\n\t],\n\t\"./ArtStagingSummary.vue\": [\n\t\t\"43db\",\n\t\t\"TouchFormElement4\"\n\t],\n\t\"./AsyncMultiSelect.vue\": [\n\t\t\"5de2\",\n\t\t\"chunk-03993608\",\n\t\t\"TouchFormElement5\"\n\t],\n\t\"./BaseTextInput.vue\": [\n\t\t\"36ad\",\n\t\t\"TouchFormElement6\"\n\t],\n\t\"./DrugDispensationSelection.vue\": [\n\t\t\"05d5\",\n\t\t\"TouchFormElement7\"\n\t],\n\t\"./DrugTransferInput.vue\": [\n\t\t\"de42\",\n\t\t\"chunk-337918c0\",\n\t\t\"TouchFormElement8\"\n\t],\n\t\"./FieldMixin.vue\": [\n\t\t\"51c8\",\n\t\t\"TouchFormElement9\"\n\t],\n\t\"./FilingNumberView.vue\": [\n\t\t\"c650\",\n\t\t\"TouchFormElement10\"\n\t],\n\t\"./GeneralDrugDispenser.vue\": [\n\t\t\"7737\",\n\t\t\"TouchFormElement11\"\n\t],\n\t\"./HisAdherenceInput.vue\": [\n\t\t\"f2c3\",\n\t\t\"chunk-337918c0\",\n\t\t\"TouchFormElement12\"\n\t],\n\t\"./HisAgeInput.vue\": [\n\t\t\"c05f\",\n\t\t\"TouchFormElement13\"\n\t],\n\t\"./HisAppointments.vue\": [\n\t\t\"b2eb\",\n\t\t\"chunk-d64a144c\",\n\t\t\"TouchFormElement14\"\n\t],\n\t\"./HisArtRegimenSelection.vue\": [\n\t\t\"47b9\",\n\t\t\"TouchFormElement15\"\n\t],\n\t\"./HisBarcodeInput.vue\": [\n\t\t\"dd65\",\n\t\t\"TouchFormElement16\"\n\t],\n\t\"./HisBatchEntry.vue\": [\n\t\t\"f2ab\",\n\t\t\"chunk-182277b5\",\n\t\t\"chunk-337918c0\",\n\t\t\"TouchFormElement17\"\n\t],\n\t\"./HisBatchMovement.vue\": [\n\t\t\"5148\",\n\t\t\"chunk-182277b5\",\n\t\t\"chunk-337918c0\",\n\t\t\"TouchFormElement18\"\n\t],\n\t\"./HisBatchVerification.vue\": [\n\t\t\"7b0f\",\n\t\t\"chunk-182277b5\",\n\t\t\"chunk-337918c0\",\n\t\t\"TouchFormElement19\"\n\t],\n\t\"./HisCardSelector.vue\": [\n\t\t\"0734\",\n\t\t\"TouchFormElement20\"\n\t],\n\t\"./HisClinicHolidayPicker.vue\": [\n\t\t\"4030\",\n\t\t\"chunk-d64a144c\",\n\t\t\"TouchFormElement21\"\n\t],\n\t\"./HisComplaintsPicker.vue\": [\n\t\t\"82d1\",\n\t\t\"TouchFormElement22\"\n\t],\n\t\"./HisDataTable.vue\": [\n\t\t\"a6ba\",\n\t\t\"TouchFormElement23\"\n\t],\n\t\"./HisDateInput.vue\": [\n\t\t\"374c\",\n\t\t\"TouchFormElement24\"\n\t],\n\t\"./HisDatePicker.vue\": [\n\t\t\"9b30\",\n\t\t\"chunk-d64a144c\",\n\t\t\"TouchFormElement25\"\n\t],\n\t\"./HisDosageInput.vue\": [\n\t\t\"b34c\",\n\t\t\"chunk-337918c0\",\n\t\t\"TouchFormElement26\"\n\t],\n\t\"./HisGridSelector.vue\": [\n\t\t\"112a\",\n\t\t\"TouchFormElement27\"\n\t],\n\t\"./HisGroupSelector.vue\": [\n\t\t\"81cf\",\n\t\t\"TouchFormElement28\"\n\t],\n\t\"./HisIPAddress.vue\": [\n\t\t\"2a82\",\n\t\t\"TouchFormElement29\"\n\t],\n\t\"./HisInfiniteScrollMultipleSelect.vue\": [\n\t\t\"52a3\",\n\t\t\"TouchFormElement30\"\n\t],\n\t\"./HisLabOrders.vue\": [\n\t\t\"e614\",\n\t\t\"chunk-03993608\",\n\t\t\"TouchFormElement31\"\n\t],\n\t\"./HisMonthlyDays.vue\": [\n\t\t\"69cf\",\n\t\t\"TouchFormElement32\"\n\t],\n\t\"./HisMultiSelectGrid.vue\": [\n\t\t\"0fa3\",\n\t\t\"TouchFormElement33\"\n\t],\n\t\"./HisMultipleSelect.vue\": [\n\t\t\"2fd5\",\n\t\t\"chunk-03993608\",\n\t\t\"TouchFormElement34\"\n\t],\n\t\"./HisNextVisitInterval.vue\": [\n\t\t\"3126\",\n\t\t\"TouchFormElement35\"\n\t],\n\t\"./HisNote.vue\": [\n\t\t\"c927\",\n\t\t\"TouchFormElement36\"\n\t],\n\t\"./HisNumberInput.vue\": [\n\t\t\"5e75\",\n\t\t\"TouchFormElement37\"\n\t],\n\t\"./HisPrescriptionInput.vue\": [\n\t\t\"87e5\",\n\t\t\"chunk-337918c0\",\n\t\t\"TouchFormElement38\"\n\t],\n\t\"./HisRadiologyPicker.vue\": [\n\t\t\"adc7\",\n\t\t\"TouchFormElement39\"\n\t],\n\t\"./HisSelect.vue\": [\n\t\t\"d11f\",\n\t\t\"TouchFormElement40\"\n\t],\n\t\"./HisSummary.vue\": [\n\t\t\"e0bd\",\n\t\t\"TouchFormElement41\"\n\t],\n\t\"./HisTableViewer.vue\": [\n\t\t\"8904\",\n\t\t\"TouchFormElement42\"\n\t],\n\t\"./HisTextBanner.vue\": [\n\t\t\"952c\",\n\t\t\"TouchFormElement43\"\n\t],\n\t\"./HisTextInput.vue\": [\n\t\t\"6ef9\",\n\t\t\"TouchFormElement44\"\n\t],\n\t\"./HisVitalsEntry.vue\": [\n\t\t\"e333\",\n\t\t\"TouchFormElement45\"\n\t],\n\t\"./HisWeightChart.vue\": [\n\t\t\"26a1\",\n\t\t\"TouchFormElement46\"\n\t],\n\t\"./LinkageCodeInput.vue\": [\n\t\t\"ac86\",\n\t\t\"TouchFormElement47\"\n\t],\n\t\"./MultiYesNoSelect.vue\": [\n\t\t\"5fd1\",\n\t\t\"TouchFormElement48\"\n\t],\n\t\"./PersonMatchView.vue\": [\n\t\t\"6591\",\n\t\t\"TouchFormElement49\"\n\t],\n\t\"./PersonSearchView.vue\": [\n\t\t\"28b2\",\n\t\t\"TouchFormElement50\"\n\t],\n\t\"./ProgramSelection.vue\": [\n\t\t\"e3b4\",\n\t\t\"TouchFormElement51\"\n\t],\n\t\"./RelationsSelection.vue\": [\n\t\t\"0e57\",\n\t\t\"TouchFormElement52\"\n\t],\n\t\"./SelectMixin.vue\": [\n\t\t\"82a9\",\n\t\t\"TouchFormElement53\"\n\t],\n\t\"./YesNoSelect.vue\": [\n\t\t\"71f2\",\n\t\t\"TouchFormElement54\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"f159\";\nmodule.exports = webpackAsyncContext;","import { AppEncounterService } from \"@/services/app_encounter_service\"\n\nexport class SocialHistoryService extends AppEncounterService {\n    constructor(patientID: number, providerID: number) {\n        super(patientID, 84, providerID) //TODO: Use encounter type reference name'\n    }\n}"],"sourceRoot":""}