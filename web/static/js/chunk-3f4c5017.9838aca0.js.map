{"version":3,"sources":["webpack:///./src/apps/ART/services/lab_order_service.ts","webpack:///./src/apps/OPD/services/patient_complaints_service.ts","webpack:///./src/components/DataViews/LabOrderModal.vue?7b06","webpack:///./src/guidelines/encounter_guidelines.ts","webpack:///./src/views/EncounterMixin.vue","webpack:///./src/views/EncounterMixin.vue?37b1","webpack:///./src/components/Forms/HisStandardForm.vue?f008","webpack:///./src/components/Forms/HisStandardForm.vue","webpack:///./src/components/Forms/HisStandardForm.vue?6820","webpack:///./src/utils/GuidelineEngine.ts","webpack:///./src/components/DataViews/LabOrderModal.vue?8642","webpack:///./src/components/DataViews/LabOrderModal.vue","webpack:///./src/components/DataViews/LabOrderModal.vue?ba1e","webpack:///./src/components/Forms/BaseFormElements.ts","webpack:///./src/apps/OPD/views/encounters/Complaints.vue?84ff","webpack:///./src/components/FormElements lazy ^\\.\\/.*\\.vue$ namespace object","webpack:///./src/apps/OPD/views/encounters/Complaints.vue?6630","webpack:///./src/apps/OPD/views/encounters/modals/radiology.vue?e724","webpack:///./src/apps/OPD/views/encounters/modals/radiology.vue","webpack:///./src/apps/OPD/views/encounters/modals/radiology.vue?b251","webpack:///./src/apps/OPD/views/encounters/Complaints.vue","webpack:///./src/apps/OPD/views/encounters/Complaints.vue?67d0"],"names":["LabOrderService","AppEncounterService","constructor","patientID","providerID","super","PatientComplaintsService","complaintType","filter","ConceptService","getConceptSet","getObs","getConceptID","this","date","FlowState","dformat","d","HisDate","toStandardHisDisplayFormat","ENCOUNTER_GUIDELINES","priority","actions","alert","async","outcomeStartDate","action","infoActionSheet","name","slot","color","GO_TO_PATIENT_DASHBOARD","CHANGE_PATIENT_OUTCOME","CONTINUE","conditions","outcome","startDate","sessionDate","birthDate","CHANGE_SESSION_DATE","selection","providers","encounterName","apiDate","modal","optionsActionSheet","role","value","flowState","SET_PROVIDER","isBdeMode","isBDE","defineComponent","components","HisStandardForm","data","patient","fields","facts","ready","watch","handler","route","params","patient_id","parseInt","Store","get","then","patientData","setEncounterFacts","checkEncounterGuidelines","immediate","deep","computed","cancelDestination","patientDashboardUrl","methods","runflowState","state","states","username","split","provider","find","person_id","$router","push","EXIT","gotoPatientDashboard","findings","matchToGuidelines","index","finding","status","program","e","console","error","toastDanger","ProgramService","getSessionDate","getCachedApiDate","getBirthdate","$route","toString","toUpperCase","sort","a","b","usernameA","usernameB","map","p","isEmpty","person","names","latestName","given_name","family_name","toOption","label","other","mapStrToOptions","items","i","path","nextTask","yesNoOptions","toYesNoOption","values","mapOptions","options","option","yesNoUnknownOptions","resolveObs","obs","tag","Object","reduce","accum","cur","Array","isArray","concat","Promise","all","inArray","arr","expression","length","validateSeries","condition","__exports__","render","_ctx","_cache","$props","$setup","$data","$options","_openBlock","_createBlock","_resolveDynamicComponent","formType","skipSummary","activeField","cancelDestinationPath","onOnFinish","onFinish","onFinishAction","onOnIndex","onIndex","TouchScreenForm","emits","props","type","Function","Boolean","default","String","required","formData","computedData","$emit","isCondition","ignored","undefined","prop","includes","every","sortByPriority","sortByWeight","weight","guidelines","target","targetEvent","sortBy","matches","guidelineIndex","targetValidations","some","title","description","text","info","_withScopeId","n","_pushScopeId","_popScopeId","_hoisted_1","class","_hoisted_2","key","_hoisted_3","_hoisted_4","_createElementVNode","_hoisted_5","_hoisted_6","style","background","height","_hoisted_7","_hoisted_8","_component_ion_title","_resolveComponent","_component_ion_toolbar","_component_ion_header","_component_ion_label","_component_ion_checkbox","_component_ion_item","_component_ion_list","_component_ion_col","_component_ion_text","_component_BarcodeInput","_component_ion_radio","_component_ion_radio_group","_component_ion_button","_component_ion_row","_component_ion_grid","_component_ion_content","_component_ion_footer","_createElementBlock","_Fragment","_createVNode","_withCtx","_createTextVNode","_","size","overflowY","_renderList","testTypes","disabled","activeIndex","isOrderComplete","detail","_toDisplayString","modelValue","isChecked","$event","onIonChange","onSelectTest","selectedOrders","test","accessionNumber","onOnScan","barcode","onScanEIDbarcode","_createCommentVNode","extendedLabsEnabled","specimens","onClick","addSpecimen","testReasons","finalOrders","specimen","reason","removeOrder","currentIndex","postActivities","closeModal","activities","testFilters","appActivities","getActivities","ART_GLOBAL_PROP","extendedLabEnabled","verifyingBarcode","loadingController","create","message","present","barcodeOk","trim","toastWarning","getTop","v","dismiss","OrderService","accessionNumExists","testName","event","$nextTick","checked","getSpecimens","tests","getTestTypes","vlIndex","findIndex","viralLoad","splice","sorted","t","concept_id","orders","encounter","createEncounter","formattedOrders","buildLabOrders","saveOrdersArray","encounter_id","invalidate","canPrintOrders","alertConfirmation","confirmBtnLabel","cancelBtnLabel","printOrders","modalController","PrintoutService","forEach","url","element","order_id","printLbl","match","reasons","mounted","content","IonButton","IonContent","IonHeader","IonTitle","IonToolbar","IonLabel","IonList","IonItem","BarcodeInput","IonCheckbox","IonRadioGroup","IonRow","FieldType","COMPONENT_REFS","TT_MULTI_SELECT_GRID","TT_AGE_INPUT","TT_BARCODE","TT_NOTE","TT_SELECT","TT_CARD_SELECTOR","TT_MULTIPLE_SELECT","TT_TEXT","TT_NUMBER","TT_MONTHLY_DAYS","TT_ART_REGIMEN_SELECTION","TT_NEXT_VISIT_INTERVAL_SELECTION","TT_TABLE_VIEWER","TT_DOSAGE_INPUT","TT_YES_NO","TT_MULTIPLE_YES_NO","TT_WEIGHT_CHART","TT_VITALS_ENTRY","TT_APPOINTMENTS_ENTRY","TT_COMPLAINTS_PICKER","TT_CLINIC_HOLIDAY_PICKER","TT_SUMMARY","TT_ART_STAGING_SUMMARY","TT_ADHERENCE_INPUT","TT_LAB_ORDERS","TT_PERSON_RESULT_VIEW","TT_PROGRAM_SELECTION","TT_DATE_PICKER","TT_RELATION_SELECTION","TT_FILING_NUMBER_VIEW","TT_PERSON_MATCH_VIEW","TT_FULL_DATE","TT_BATCH_ENTRY","TT_BATCH_VERIFICATION","TT_BATCH_MOVEMENT","TT_IP_ADDRESS","TT_TEXT_BANNER","TT_DISPENSATION_INPUT","TT_DATA_TABLE","TT_GROUP_SELECTOR","TT_ANC_PREGNANCY_INPUT_CONFIG","TT_ANC_PREGNANCY_DETAILS_INPUT","TT_ANC_LMP_DATE_INPUT","TT_DRUG_TRANSFER_IN","TT_GRID_SELECTOR","TT_ANC_DRUGSET_INPUT","TT_RADIOLOGY_PICKER","TT_PRESCRIPTION_INPUT","TT_INFINITE_SCROLL_MULTIPLE_SELECT","TT_DRUG_DISPENSER","webpackAsyncContext","req","__webpack_require__","o","resolve","Error","code","ids","id","slice","keys","module","exports","_component_his_standard_form","_component_ion_page","onSubmit","_component_his_radiology_picker","onOnValue","onValue","emitedSelectedOptions","IonFooter","HisRadiologyPicker","mixins","EncounterMixinVue","radiologyService","isPacsEnabled","isReady","PatientRadiologyService","OPD_GLOBAL_PROP","isPACsEnabled","selected","buildValueCoded","parent","child","buildValueCodedFromConceptId","getSelected","obsObj","savedObsData","saveObservationList","submitToPacs","log","IonPage","complaintsService","todaysDate","ObservationService","presentingComplaints","radiologyBtnName","hasTriageComplaints","getTriagePresentingComplaints","getFields","complaints","component","LabOrderModal","backdropDismiss","cssClass","onDidDismiss","radiology","fetchLatestTriageEncounter","encounters","EncounterService","getEncounters","todayPresentingComplaints","el","toStandardHisFormat","encounter_datetime","observations","buildResults","columns","group","rows","item","obs_group_id","value_text","helpText","config","hiddenFooterBtns","validation","Validation","computedValue","showRadiologyOdersBtn","disableBackBtn","footerBtns","visible","launchOrderSelection","visibleOnStateChange","launchRadiologyOrderSelection","buildSummaryResults","OPDComplaint","triageComplaint"],"mappings":"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","file":"js/chunk-3f4c5017.9838aca0.js","sourcesContent":["import { AppEncounterService } from \"@/services/app_encounter_service\";\nexport class LabOrderService extends AppEncounterService {\n  constructor(patientID: number, providerID: number) {\n    super(patientID, 57, providerID);\n  }\n}","import { AppEncounterService } from \"@/services/app_encounter_service\"\nimport { ConceptService } from '@/services/concept_service';\n\nexport class PatientComplaintsService extends AppEncounterService {\n  constructor(patientID: number, providerID: number) {\n    super(patientID, 122, providerID) \n  }\n\n  static async getComplaintsList(complaintType: string, filter = '') {\n    return ConceptService.getConceptSet(complaintType, filter) \n  }\n  async fetchLatestTriageEncounter() { \n   return await PatientComplaintsService.getObs({\n        'concept_id': ConceptService.getConceptID(\"History of COVID-19 contact\") ,\n        'start_date': this.date,\n        'end_date': this.date,\n        'person_id': this.patientID,\n    })\n  }\n}\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./LabOrderModal.vue?vue&type=style&index=0&id=bc9313da&scoped=true&lang=css\"","import { infoActionSheet, optionsActionSheet } from \"@/utils/ActionSheets\";\nimport { GuideLineInterface } from \"@/utils/GuidelineEngine\";\nimport HisDate from '@/utils/Date'\n\nexport enum FlowState {\n    SET_PROVIDER = 'SET_PROVIDER',\n    CHANGE_SESSION_DATE = 'change_session_date',\n    GO_TO_PATIENT_DASHBOARD = 'go_to_patient_dashboard',\n    CHANGE_PATIENT_OUTCOME = 'change_outcome',\n    CONTINUE = 'continue',\n    EXIT = 'exit'\n}\nconst dformat = (d: string) => HisDate.toStandardHisDisplayFormat(d)\n\nexport const ENCOUNTER_GUIDELINES: Record<string, GuideLineInterface> = {\n    \"Warn if attempting to create new encounters for a deceased patient\": {\n        priority: 1,\n        actions: {\n            alert: async ({ outcomeStartDate }: any) => {\n                const action = await infoActionSheet(\n                    'Data Integrity Issue Found',\n                    `Patient died on ${dformat(outcomeStartDate)}`,\n                    'Proceeding with this outcome might affect accuracy of some reports',\n                    [\n                        { name: 'Cancel', slot: 'end', color: 'primary'},\n                        { name: 'Change outcome', slot: 'end', color: 'primary'},\n                        { name: 'Continue Anyway', slot: 'end', color: 'danger'}\n                    ]\n                )\n                return action === 'Cancel'\n                    ? FlowState.GO_TO_PATIENT_DASHBOARD\n                    : action === 'Change outcome'\n                    ? FlowState.CHANGE_PATIENT_OUTCOME\n                    : FlowState.CONTINUE\n            }\n        },\n        conditions: {\n            outcome(outcome: string) {\n                return outcome === 'Patient died'\n            },\n            outcomeStartDate(startDate: string, { sessionDate }: any) {\n                return sessionDate >= startDate\n            }\n        }\n    },\n    \"A patient's date of birth must not be less than Session Date\": {\n        priority: 2,\n        actions: {\n            alert: async ({ birthDate, sessionDate}: any) => {\n                const action = await infoActionSheet(\n                    'Data integrity issue found', '',\n                    `Session date ${dformat(sessionDate)} is less than birth date of ${dformat(birthDate)}`,\n                    [\n                        { name: 'Cancel', slot: 'end', color: 'danger'},\n                        { name: 'Change session date', slot: 'end', color: 'success'}\n                    ]\n                )\n                return action === 'Change session date'\n                    ? FlowState.CHANGE_SESSION_DATE\n                    : FlowState.GO_TO_PATIENT_DASHBOARD\n            }\n        },\n        conditions: {\n            birthDate(birthDate: string, { sessionDate }: any) {\n                return sessionDate < birthDate\n            }\n        }\n    },\n    \"Select Encounter provider when in back data entry\": {\n        priority: 3,\n        actions: {\n            selection: async ({ providers, encounterName, sessionDate, apiDate }: any) => {\n                const modal = await optionsActionSheet(\n                    `Please select a provider for ${encounterName}`,\n                    `BDE: ${dformat(sessionDate)} | Current: ${dformat(apiDate)}`,\n                    providers,\n                    [\n                        { name: 'Cancel', color: 'danger', slot: 'start', role: 'default'},\n                        { name: 'Confirm', slot: 'end', role: 'action' }\n                    ]\n                )\n                return modal.action === 'Cancel' \n                    ? { value: -1, flowState: FlowState.GO_TO_PATIENT_DASHBOARD }\n                    : { value: modal.selection, flowState: FlowState.SET_PROVIDER }\n            }\n        },\n        conditions: {\n            isBdeMode(isBDE: boolean) {\n                return isBDE\n            }\n        }\n    }\n}","\nimport { defineComponent } from 'vue'\nimport { Field, Option } from '@/components/Forms/FieldInterface'\nimport { ProgramService } from \"@/services/program_service\"\nimport { find, isEmpty } from \"lodash\"\nimport { nextTask } from \"@/utils/WorkflowTaskHelper\"\nimport { ENCOUNTER_GUIDELINES, FlowState } from \"@/guidelines/encounter_guidelines\"\nimport { matchToGuidelines } from \"@/utils/GuidelineEngine\"\nimport HisStandardForm from \"@/components/Forms/HisStandardForm.vue\";\nimport { toastDanger } from '@/utils/Alerts'\nimport Store from \"@/composables/ApiStore\"\n\nexport default defineComponent({\n    components: { HisStandardForm },\n    data: () => ({\n        patient: {} as any,\n        fields: [] as Array<Field>,\n        patientID: '' as any,\n        providerID: -1 as number,\n        providers: [] as any,\n        facts: {\n            sessionDate: '' as string,\n            apiDate: '' as string,\n            encounterName: 'N/A' as string,\n            providers: [] as Array<any>,\n            isBdeMode: false as boolean,\n            birthDate: '' as string,\n            outcome: '' as string,\n            outcomeStartDate: '' as string\n        },\n        ready: false\n    }),\n    watch: {\n       '$route': {\n            handler(route: any) {\n                if(route.params.patient_id && this.patientID != route.params.patient_id) {\n                    this.patientID = parseInt(route.params.patient_id);\n                    Store.get('ACTIVE_PATIENT', { patientID: this.patientID})\n                        .then(patientData => {\n                            this.patient = patientData\n                            this.setEncounterFacts().then(() => {\n                                this.checkEncounterGuidelines().then(() => {\n                                    this.ready = true\n                                })\n                            })\n                        })\n                    }\n            },\n            immediate: true,\n            deep: true\n        }\n    },\n    computed: {\n        cancelDestination(): string {\n            return this.patientDashboardUrl()\n        }\n    },\n    methods: {\n        runflowState(state: FlowState, params=null) {\n            const states: any = {}\n            states[FlowState.SET_PROVIDER] = (selection: any) => {\n                const [ username ] = selection.split(' ')\n                const provider = find(this.providers, { username })\n                if (provider) this.providerID = provider.person_id\n                return FlowState.CONTINUE\n            }\n            states[FlowState.CHANGE_SESSION_DATE] = () => { \n                this.$router.push(`/session/date?patient_dashboard_redirection_id=${this.patientID}`)\n                return FlowState.EXIT\n            }\n            states[FlowState.CHANGE_PATIENT_OUTCOME] = () => {\n                this.$router.push(`/patient/programs/${this.patientID}`)\n                return FlowState.EXIT\n            }\n            states[FlowState.GO_TO_PATIENT_DASHBOARD] = () => {\n                this.gotoPatientDashboard()\n                return FlowState.EXIT\n            }\n            if (state in states) {\n                return states[state](params)\n            }\n        },\n        async checkEncounterGuidelines() {\n            const findings = matchToGuidelines(this.facts, ENCOUNTER_GUIDELINES)\n            for(const index in findings) {\n                const finding = findings[index]\n                if (finding?.actions?.alert) {\n                    const status = this.runflowState((await finding?.actions?.alert(this.facts)))\n                    if (status === FlowState.EXIT) return\n                }\n                if (finding?.actions?.selection) {\n                    const selection = await finding?.actions?.selection(this.facts)\n                    this.runflowState(selection.flowState, selection.value)\n                }\n            }\n        },\n        async setEncounterFacts() {\n            try {\n                const program = await Store.get('PATIENT_PROGRAM', { patientID: this.patientID })\n                this.facts.outcome = program.outcome\n                this.facts.outcomeStartDate = program.startDate\n            } catch (e) {\n                console.error(e)\n                toastDanger(`${e}`)\n            }\n            this.facts.sessionDate = ProgramService.getSessionDate()\n            this.facts.apiDate = ProgramService.getCachedApiDate() as string\n            this.facts.isBdeMode = ProgramService.isBDE() as boolean\n            this.facts.birthDate = this.patient.getBirthdate()\n            this.facts.encounterName = this.$route.name \n                ? this.$route.name.toString().toUpperCase()\n                : 'N/A'\n            if (ProgramService.isBDE()) {\n                this.providers = await Store.get('PROVIDERS')\n                this.facts.providers = this.providers\n                    .sort((a: any, b: any) => {\n                        const usernameA = a.username.toUpperCase()\n                        const usernameB = b.username.toUpperCase()\n                        return usernameA < usernameB ? -1 : usernameA > usernameB  ? 1 : 0\n                    })\n                    .map((p: any) => {\n                        let name = `${p.username}`\n                        if (!isEmpty(p?.person?.names)) {\n                            const [ latestName ] = p.person?.names || []\n                            name += ` (${latestName.given_name} ${latestName.family_name})`\n                        }\n                        return name\n                    })\n            }\n        },\n        toOption(label: string, other={}) {\n            return {\n                label,\n                value: label,\n                other\n            }\n        },\n        mapStrToOptions(items: string[]) {\n            return items.map(i => ({label: i, value: i}))\n        },\n        patientDashboardUrl(): string {\n            return `/patient/dashboard/${this.patientID}`\n        },\n        gotoPatientDashboard() {\n            return this.$router.push({path: this.patientDashboardUrl()})\n        },\n        nextTask() {\n            return nextTask(this.patientID, this.$router)\n        },\n        yesNoOptions(): Option[] {\n            return [\n                { label: \"Yes\", value: \"Yes\" },\n                { label: \"No\", value: \"No\" }\n            ]\n        },\n        toYesNoOption(label: string, other: any={}): Option {\n            return {\n                label,\n                value: '',\n                other: {\n                    ...other,\n                    values: this.yesNoOptions()\n                }\n            } \n        },\n        mapOptions(options: Array<string>) {\n            return options.map((option) => {\n                return { label: option, value: option }\n            });\n        },\n        yesNoUnknownOptions(): Option[] {\n            return [\n                { label: \"Yes\", value: \"Yes\" },\n                { label: \"No\", value: \"No\" },\n                { label: \"Unknown\", value: \"Unknown\" }\n            ]\n        },\n        resolveObs(obs: any, tag='') {\n            const values: any = Object.values(obs)\n                .filter((d: any) => d && (d.tag === tag || tag === ''))\n                .reduce((accum: any, cur: any) => { \n                    const data = cur.obs ? cur.obs : cur\n                    if (Array.isArray(data)) {\n                        accum = accum.concat(data)\n                    } else if (typeof data === 'function') {\n                        accum.push(data())\n                    } else {\n                        accum.push(data)\n                    }\n                    return accum\n                    }, [])\n            return Promise.all(values)\n        },\n        inArray(arr: Array<any>, expression: (i: any) => boolean): boolean {\n            try {\n                return arr.filter((i: any) => expression(i)).length > 0\n            } catch (e) {\n                return false\n            }\n        },\n        validateSeries(conditions: Array<any>){\n            try {\n                for(const i in conditions) {\n                    const condition = conditions[i]()\n\n                    if (condition) return condition\n                }\n            } catch (e) {\n                return [e]\n            }\n        }\n    }\n})\n","import script from \"./EncounterMixin.vue?vue&type=script&lang=ts\"\nexport * from \"./EncounterMixin.vue?vue&type=script&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { resolveDynamicComponent as _resolveDynamicComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createBlock(_resolveDynamicComponent(_ctx.formType), {\n    fields: _ctx.fields,\n    skipSummary: _ctx.skipSummary,\n    activeField: _ctx.activeField,\n    cancelDestinationPath: _ctx.cancelDestinationPath,\n    onOnFinish: _ctx.onFinish,\n    onFinish: _ctx.onFinishAction,\n    onOnIndex: _ctx.onIndex\n  }, null, 40, [\"fields\", \"skipSummary\", \"activeField\", \"cancelDestinationPath\", \"onOnFinish\", \"onFinish\", \"onOnIndex\"]))\n}","\nimport TouchScreenForm from \"@/components/Forms/TouchScreenForm.vue\";\nimport { defineComponent, PropType } from \"vue\";\nimport { Field } from \"./FieldInterface\";\n\nexport default defineComponent({\n    name: \"HisStandardForm\",\n    components: { TouchScreenForm },\n    emits: [\n        'onFinish',\n        'onIndex'\n    ],\n    data: () => ({\n        formType: 'touch-screen-form' as string\n    }),\n    props: {\n        onFinishAction: {\n            type: Function\n        },\n        skipSummary: {\n            type: Boolean,\n            default: false\n        },\n        activeField: {\n            type: String\n        },\n        fields: {\n            type: Object as PropType<Field[]>,\n            required: true\n        },\n        cancelDestinationPath: {\n            type: String,\n            required: false,\n        }\n    },\n    methods: {\n        onFinish(formData: any, computedData: any) {\n            this.$emit('onFinish', formData, computedData)\n        },\n        onIndex(i: number) {\n            this.$emit('onIndex', i)\n        }\n    }\n})\n","import { render } from \"./HisStandardForm.vue?vue&type=template&id=6daa0375&ts=true\"\nimport script from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\nexport * from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","/**\n * Compares patient facts against a predefined guideline Object.\n*/\nexport interface DescriptionInterface {\n    color?: 'primary' | 'secondary' | 'danger' | 'warning';\n    info: Function;\n    text?: string;\n    show: 'onChecked' | 'always';\n}\n\nexport interface GuideLineInterface {\n    title?: string;\n    concept?: string;\n    weight?: number;\n    priority?: number;\n    conditions: Record<string, Function>;\n    actions?: Record<string, any>; //TODO: should <key, Function>\n    data?: Record<string, any>;\n    description?: DescriptionInterface;\n    target?: string;\n    targetEvent?: string;\n}\n\n/**\n * Match the facts with guidelines\n * @param facts \n * @param conditions \n * @returns \n */\nfunction isCondition(facts: Record<string, any>, conditions: Record<string, Function>): boolean {\n    const state = [] \n    const ignored = [-1, '', null, undefined]\n\n    for(const prop in conditions) {\n        if (!(prop in facts)) \n            continue\n        \n        const value = facts[prop]\n        if (ignored.includes(value)) {\n            state.push(false)\n            continue\n        }\n\n        state.push(conditions[prop](value, facts))\n    }\n    return state.every(Boolean)\n}\n\n/**\n * Sort guidelines in the order of importance/relevance\n * @param findings \n * @returns \n */\nfunction sortByPriority(findings: GuideLineInterface[]) {\n    return findings.sort((a, b) => (a.priority && b.priority) && a.priority < b.priority ? -1 : 1)\n}\n\nfunction sortByWeight(findings: GuideLineInterface[]) {\n    return findings.sort((a, b) => (a.weight && b.weight) && a.weight > b.weight ? -1 : 1)\n}\n\nexport function logFindingsByWeight(guidelines: Record<string, GuideLineInterface>) {\n    const findings: any = Object.keys(guidelines).map(i => ({ name: i, weight: guidelines[i].weight}))\n    console.log(sortByWeight(findings).map((i: any) => `${i.weight} -> ${i.name}`))\n}\n\n/**\n * Check the guideline for matching facts and return matching object \n * @param facts: key value pair for used for searching in guidelines\n * @param guidelines: A dictionary containing fixed rules/validations that conforms to GuideLineInterface\n * @param target: Used for matching a target defined in a guidlines before executing conditions\n * @param targetEvent: used for matching a target event in a guideline before executing conditions\n * @returns\n */\nexport function matchToGuidelines(\n    facts: Record<string, any>, \n    guidelines: Record<string, GuideLineInterface>,\n    target='', \n    targetEvent='',\n    sortBy='priority' as 'priority' | 'weight'): Array<GuideLineInterface> {\n    const matches = []\n    for(const guidelineIndex in guidelines) {\n        const data: GuideLineInterface = guidelines[guidelineIndex]\n        const targetValidations = [\n            (data.target && target && data.target != target),\n            (data.targetEvent && targetEvent \n                && data.targetEvent != targetEvent)\n        ]\n\n        if (targetValidations.some(Boolean)) {\n            continue\n        }\n\n        if (isCondition(facts, data.conditions)) {\n            data.title = guidelineIndex\n            if (data.description) {\n                data.description.text = data.description.info(facts)\n            }\n            matches.push(data)\n        }\n    }\n    return sortBy === 'priority' ? sortByPriority(matches) : sortByWeight(matches)\n}\n","import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createBlock as _createBlock, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-bc9313da\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"ion-margin-bottom\" }\nconst _hoisted_2 = { key: 0 }\nconst _hoisted_3 = { class: \"his-md-text side-title\" }\nconst _hoisted_4 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", { class: \"his-md-text side-title\" }, \" Select specimen \", -1))\nconst _hoisted_5 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", { class: \"his-md-text side-title\" }, \" Main test(s) reason \", -1))\nconst _hoisted_6 = { style: {background: 'lightyellow', height: '34vh'} }\nconst _hoisted_7 = { class: \"his-sm-text\" }\nconst _hoisted_8 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"thead\", null, [\n  /*#__PURE__*/_createElementVNode(\"tr\", null, [\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"Test\"),\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"Specimen\"),\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"Reason\"),\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"Action\")\n  ])\n], -1))\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ion_title = _resolveComponent(\"ion-title\")!\n  const _component_ion_toolbar = _resolveComponent(\"ion-toolbar\")!\n  const _component_ion_header = _resolveComponent(\"ion-header\")!\n  const _component_ion_label = _resolveComponent(\"ion-label\")!\n  const _component_ion_checkbox = _resolveComponent(\"ion-checkbox\")!\n  const _component_ion_item = _resolveComponent(\"ion-item\")!\n  const _component_ion_list = _resolveComponent(\"ion-list\")!\n  const _component_ion_col = _resolveComponent(\"ion-col\")!\n  const _component_ion_text = _resolveComponent(\"ion-text\")!\n  const _component_BarcodeInput = _resolveComponent(\"BarcodeInput\")!\n  const _component_ion_radio = _resolveComponent(\"ion-radio\")!\n  const _component_ion_radio_group = _resolveComponent(\"ion-radio-group\")!\n  const _component_ion_button = _resolveComponent(\"ion-button\")!\n  const _component_ion_row = _resolveComponent(\"ion-row\")!\n  const _component_ion_grid = _resolveComponent(\"ion-grid\")!\n  const _component_ion_content = _resolveComponent(\"ion-content\")!\n  const _component_ion_footer = _resolveComponent(\"ion-footer\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(_component_ion_header, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_title, { class: \"his-lg-text\" }, {\n              default: _withCtx(() => [\n                _createTextVNode(\"Lab orders\")\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_content, { style: {\"overflow\":\"hidden\",\"background\":\"grey\",\"height\":\"70vh\"} }, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_grid, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_row, null, {\n              default: _withCtx(() => [\n                _createVNode(_component_ion_col, { size: \"6\" }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_ion_list, { style: {overflowY: 'auto', height:'75vh'} }, {\n                      default: _withCtx(() => [\n                        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.testTypes, (data, index) => {\n                          return (_openBlock(), _createBlock(_component_ion_item, {\n                            class: \"his-sm-text\",\n                            key: data,\n                            disabled: _ctx.activeIndex !== null && _ctx.activeIndex !== index && !_ctx.isOrderComplete,\n                            detail: \"\"\n                          }, {\n                            default: _withCtx(() => [\n                              _createVNode(_component_ion_label, { \"text-wrap\": \"\" }, {\n                                default: _withCtx(() => [\n                                  _createTextVNode(_toDisplayString(data.name), 1)\n                                ]),\n                                _: 2\n                              }, 1024),\n                              _createVNode(_component_ion_checkbox, {\n                                modelValue: data.isChecked,\n                                \"onUpdate:modelValue\": ($event: any) => ((data.isChecked) = $event),\n                                slot: \"start\",\n                                onIonChange: (e) => _ctx.onSelectTest(data.name, index, e)\n                              }, null, 8, [\"modelValue\", \"onUpdate:modelValue\", \"onIonChange\"])\n                            ]),\n                            _: 2\n                          }, 1032, [\"disabled\"]))\n                        }), 128))\n                      ]),\n                      _: 1\n                    })\n                  ]),\n                  _: 1\n                }),\n                (_ctx.activeIndex != null && _ctx.selectedOrders.length > 0)\n                  ? (_openBlock(), _createBlock(_component_ion_col, {\n                      key: 0,\n                      style: {overflowY: 'auto', height:'79vh'}\n                    }, {\n                      default: _withCtx(() => [\n                        _createElementVNode(\"div\", _hoisted_1, [\n                          (/hiv viral load/i.test(_ctx.testTypes[_ctx.activeIndex].name))\n                            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [\n                                _createElementVNode(\"div\", _hoisted_3, [\n                                  _createTextVNode(\" Barcode ID: \"),\n                                  _createVNode(_component_ion_text, {\n                                    color: _ctx.testTypes[_ctx.activeIndex].accessionNumber ? 'success' : 'dark'\n                                  }, {\n                                    default: _withCtx(() => [\n                                      _createElementVNode(\"b\", null, _toDisplayString(_ctx.testTypes[_ctx.activeIndex].accessionNumber || 'None'), 1)\n                                    ]),\n                                    _: 1\n                                  }, 8, [\"color\"])\n                                ]),\n                                _createVNode(_component_BarcodeInput, {\n                                  size: \"small\",\n                                  onOnScan: _cache[0] || (_cache[0] = (barcode) => _ctx.onScanEIDbarcode(barcode))\n                                })\n                              ]))\n                            : _createCommentVNode(\"\", true),\n                          (!_ctx.extendedLabsEnabled)\n                            ? (_openBlock(), _createBlock(_component_ion_list, { key: 1 }, {\n                                default: _withCtx(() => [\n                                  _createVNode(_component_ion_radio_group, {\n                                    modelValue: _ctx.testTypes[_ctx.activeIndex]['specimen'],\n                                    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((_ctx.testTypes[_ctx.activeIndex]['specimen']) = $event))\n                                  }, {\n                                    default: _withCtx(() => [\n                                      _hoisted_4,\n                                      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.specimens, (data) => {\n                                        return (_openBlock(), _createBlock(_component_ion_item, { key: data }, {\n                                          default: _withCtx(() => [\n                                            _createVNode(_component_ion_label, null, {\n                                              default: _withCtx(() => [\n                                                _createTextVNode(_toDisplayString(data.name), 1)\n                                              ]),\n                                              _: 2\n                                            }, 1024),\n                                            _createVNode(_component_ion_radio, {\n                                              slot: \"start\",\n                                              value: data.name,\n                                              onClick: ($event: any) => (_ctx.addSpecimen(data))\n                                            }, null, 8, [\"value\", \"onClick\"])\n                                          ]),\n                                          _: 2\n                                        }, 1024))\n                                      }), 128))\n                                    ]),\n                                    _: 1\n                                  }, 8, [\"modelValue\"])\n                                ]),\n                                _: 1\n                              }))\n                            : _createCommentVNode(\"\", true),\n                          _createVNode(_component_ion_radio_group, {\n                            modelValue: _ctx.testTypes[_ctx.activeIndex]['reason'],\n                            \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((_ctx.testTypes[_ctx.activeIndex]['reason']) = $event))\n                          }, {\n                            default: _withCtx(() => [\n                              _hoisted_5,\n                              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.testReasons, (data) => {\n                                return (_openBlock(), _createBlock(_component_ion_item, {\n                                  class: \"his-sm-text\",\n                                  key: data\n                                }, {\n                                  default: _withCtx(() => [\n                                    _createVNode(_component_ion_label, null, {\n                                      default: _withCtx(() => [\n                                        _createTextVNode(_toDisplayString(data), 1)\n                                      ]),\n                                      _: 2\n                                    }, 1024),\n                                    _createVNode(_component_ion_radio, {\n                                      slot: \"start\",\n                                      value: data\n                                    }, null, 8, [\"value\"])\n                                  ]),\n                                  _: 2\n                                }, 1024))\n                              }), 128))\n                            ]),\n                            _: 1\n                          }, 8, [\"modelValue\"])\n                        ]),\n                        _createElementVNode(\"div\", _hoisted_6, [\n                          _createElementVNode(\"table\", _hoisted_7, [\n                            _hoisted_8,\n                            _createElementVNode(\"tbody\", null, [\n                              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.finalOrders, (data, index) => {\n                                return (_openBlock(), _createElementBlock(\"tr\", { key: index }, [\n                                  _createElementVNode(\"td\", null, _toDisplayString(data.name), 1),\n                                  _createElementVNode(\"td\", null, _toDisplayString(data.specimen || 'N/A'), 1),\n                                  _createElementVNode(\"td\", null, _toDisplayString(data.reason), 1),\n                                  _createElementVNode(\"td\", null, [\n                                    _createVNode(_component_ion_button, {\n                                      onClick: ($event: any) => (_ctx.removeOrder(data.currentIndex)),\n                                      slot: \"end\",\n                                      color: \"danger\"\n                                    }, {\n                                      default: _withCtx(() => [\n                                        _createTextVNode(\"X\")\n                                      ]),\n                                      _: 2\n                                    }, 1032, [\"onClick\"])\n                                  ])\n                                ]))\n                              }), 128))\n                            ])\n                          ])\n                        ])\n                      ]),\n                      _: 1\n                    }))\n                  : _createCommentVNode(\"\", true)\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_footer, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_button, {\n              onClick: _ctx.postActivities,\n              size: \"large\",\n              slot: \"end\",\n              disabled: _ctx.finalOrders.length === 0\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\" Place orders \")\n              ]),\n              _: 1\n            }, 8, [\"onClick\", \"disabled\"]),\n            _createVNode(_component_ion_button, {\n              onClick: _cache[3] || (_cache[3] = ($event: any) => (_ctx.closeModal([]))),\n              size: \"large\",\n              slot: \"start\",\n              color: \"danger\"\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\" Close \")\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    })\n  ], 64))\n}","\nimport {\n  IonContent,\n  IonButton,\n  IonHeader,\n  IonTitle,\n  IonToolbar,\n  IonLabel,\n  modalController,\n  IonList,\n  IonItem,\n  IonCheckbox,\n  IonRadioGroup,\n  IonRow,\nloadingController,\n} from \"@ionic/vue\";\nimport { defineComponent, PropType } from \"vue\";\nimport { alertConfirmation, toastDanger, toastWarning } from \"@/utils/Alerts\"\nimport { ActivityInterface } from \"@/apps/interfaces/AppInterface\"\nimport { OrderService } from \"@/services/order_service\";\nimport { LabOrderService } from \"@/apps/ART/services/lab_order_service\";\nimport { PrintoutService } from \"@/services/printout_service\";\nimport ART_GLOBAL_PROP from \"@/apps/ART/art_global_props\"\nimport Store from \"@/composables/ApiStore\"\nimport { findIndex } from \"lodash\";\nimport BarcodeInput from \"@/components/BarcodeInput.vue\"\n\nexport default defineComponent({\n  name: \"Modal\",\n  props: {\n    activities: {\n      type: Object as PropType<ActivityInterface[]>,\n      required: true\n    },\n    testFilters: {\n      type: Array    \n    },\n    title: {\n      type: String, \n      default: \"\"\n    },\n  },\n  watch: {\n    activities: {\n      handler(activities: Array<ActivityInterface>){\n        if (activities) {\n          this.appActivities = [...activities]\n          this.getActivities();\n        }\n      },\n      immediate: true\n    }\n  },\n  async created() {\n    this.extendedLabsEnabled = await ART_GLOBAL_PROP.extendedLabEnabled()\n  },\n  methods: {\n    async onScanEIDbarcode(barcode: string) {\n      this.verifyingBarcode = !this.verifyingBarcode;\n      if (this.verifyingBarcode) return\n      (await loadingController.create({ message: `Checking ${barcode}`})).present()\n      this.testTypes[this.activeIndex]['accessionNumber'] = null\n      // Expected barcode examples: L5728043 or 57280438\n      const barcodeOk = /^([A-Z]{1})?[0-9]{7,8}$/i.test(`${barcode}`.trim())\n      if (!barcodeOk) {\n        toastWarning(\"Invalid Barcode\")\n        this.verifyingBarcode = false\n        loadingController.getTop().then(v => v && loadingController.dismiss())\n        return ;\n      }\n      /**\n       * Verify with API if barcode was already used:\n      */\n      try {\n        if (!(await OrderService.accessionNumExists(barcode))) {\n          this.testTypes[this.activeIndex]['accessionNumber'] = barcode\n        } else {\n          toastWarning(`Barcode ${barcode} was already used`)\n        }\n      } catch (e) {\n        toastDanger(\"Failed to confirm barcode \" + barcode + \", Please try again later\", 8000)  \n      }\n      this.verifyingBarcode = false\n      loadingController.getTop().then(v => v && loadingController.dismiss())\n    },\n    async onSelectTest(testName: string, index: number, event: any) {\n      this.$nextTick(async () => {\n        this.testTypes[index]['isChecked'] = event.target.checked;\n        if(this.testTypes[index]['isChecked']){\n          this.specimens = await OrderService.getSpecimens(testName);\n          this.testTypes[index]['currentIndex'] = index;\n          this.activeIndex = index;\n        } else {\n          this.removeOrder(index)\n        }\n      })\n    },\n    async getActivities() {\n      const tests: Array<any> = await OrderService.getTestTypes();\n      const vlIndex = findIndex(tests, {name: \"HIV viral load\"})\n      const viralLoad = vlIndex !== -1 ? tests.splice(vlIndex, 1) : null;\n      const sorted = tests.sort((a: any, b: any) => `${a.name}`.toUpperCase() > `${b.name}`.toUpperCase() ? 1: -1)\n        .filter((t: any) => Array.isArray(this.testFilters) ? this.testFilters.includes(t.name) : true)\n      this.testTypes = viralLoad ? [...viralLoad, ...sorted] : sorted\n    },\n    removeOrder(index: number) {\n      this.testTypes[index]['isChecked'] = false;\n      this.testTypes[index]['reason'] = null;\n      this.testTypes[index]['specimen'] = null;\n      this.testTypes[index]['specimenConcept'] = null\n      this.testTypes[index]['accessionNumber'] = null\n      this.activeIndex = null\n      this.specimens = []\n    },\n    addSpecimen(data: any) {\n      this.testTypes[this.activeIndex]['specimenConcept'] = data.concept_id;\n    },\n    async postActivities() {\n      const patientID= `${this.$route.params.patient_id}`;\n      const orders = new LabOrderService(parseInt(patientID), -1); //TODO: get selected provider for this encounter\n      const encounter = await orders.createEncounter();\n\n      if(encounter) {\n        const formattedOrders = await OrderService.buildLabOrders(encounter, this.finalOrders);\n        const d =await  OrderService.saveOrdersArray(encounter.encounter_id, formattedOrders);\n        \n        if(!d) return toastWarning('Unable to save lab orders')\n\n        Store.invalidate('PATIENT_LAB_ORDERS')\n        const canPrintOrders = await alertConfirmation('Lab orders and encounter created!, print out your last orders?', { \n          confirmBtnLabel: 'Yes',\n          cancelBtnLabel: 'No'\n        })\n        if(canPrintOrders) await this.printOrders(d)\n        else await this.closeModal(d)\n      }\n    },\n    async closeModal(orders: []) {\n      await modalController.dismiss(orders)\n    },\n    async printOrders(orders: any) {\n      const p = new PrintoutService();\n      await orders.forEach(async (element: any) => {\n        const url = `lab/labels/order?order_id=${element.order_id}`\n        await p.printLbl(url);\n      });\n      await modalController.dismiss(orders)\n    },\n  },\n  computed: {\n    isOrderComplete(): boolean {\n      if (typeof this.activeIndex != 'number') {\n        return false\n      }\n      if (/hiv viral load/i.test(this.testTypes[this.activeIndex]['name']) && \n        !this.testTypes[this.activeIndex]['accessionNumber']) {\n          return false\n      }\n      if(this.extendedLabsEnabled){\n        return !!this.testTypes[this.activeIndex]['reason'] \n      }\n      return (this.testTypes[this.activeIndex]['specimenConcept'] || this.testTypes[this.activeIndex]['specimen']) \n        && this.testTypes[this.activeIndex]['reason'] \n    },\n    selectedOrders(): any {\n      return this.testTypes.filter((data: any) => data.isChecked === true);\n    },\n    finalOrders(): any {\n      return this.selectedOrders.filter((data: any) => {\n        if (/hiv viral load/i.test(data.name) && !data.accessionNumber) {\n          return false\n        }\n        return data.reason && (data.specimen && !this.extendedLabsEnabled \n          || this.extendedLabsEnabled)\n      })\n    },\n    testReasons(): Array<string> {\n      return this.testTypes[this.activeIndex].name.match(/Viral load/i)\n        ? this.reasons.concat(['Follow up after Low Level Viremia', 'Follow up after High Viral Load'])\n        : this.reasons\n    }\n  },\n  mounted() {\n    this.getActivities();\n  },\n  data() {\n    return {\n      verifyingBarcode: false,\n      content: \"Content\",\n      extendedLabsEnabled: false as boolean,\n      appActivities: [] as Array<ActivityInterface>,\n      testTypes: [] as any,\n      specimens: [],\n      reasons: ['Routine', 'Targeted', 'Confirmatory', 'Stat', 'Repeat / Missing'],\n      activeIndex: null as any\n    };\n  },\n  components: {\n    IonButton,\n    IonContent,\n    IonHeader,\n    IonTitle,\n    IonToolbar,\n    IonLabel,\n    IonList,\n    IonItem,\n    BarcodeInput,\n    IonCheckbox,\n    IonRadioGroup,\n    IonRow,\n  },\n});\n","import { render } from \"./LabOrderModal.vue?vue&type=template&id=bc9313da&scoped=true&ts=true\"\nimport script from \"./LabOrderModal.vue?vue&type=script&lang=ts\"\nexport * from \"./LabOrderModal.vue?vue&type=script&lang=ts\"\n\nimport \"./LabOrderModal.vue?vue&type=style&index=0&id=bc9313da&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-bc9313da\"]])\n\nexport default __exports__","/**\n * Map all formElements/components defined in \"@/components/FormElements\" \n * in the Enum below by their file name.\n * \n * Next step is to add FieldType entry in COMPONENT_REFS in the \n * Array below the FieldType Enum\n */\nexport enum FieldType {\n    TT_MULTI_SELECT_GRID= 'HisMultiSelectGrid',\n    TT_AGE_INPUT='HisAgeInput',\n    TT_GROUP_SELECTOR = 'HisGroupSelector',\n    TT_DATA_TABLE = 'HisDataTable',\n    TT_GRID_SELECTOR = 'HisGridSelector',\n    TT_NOTE = 'HisNote',\n    TT_BARCODE = 'HisBarcodeInput',\n    TT_MONTHLY_DAYS=\"HisMonthlyDays\",\n    TT_TEXT=\"HisTextInput\",\n    TT_NUMBER = \"HisNumberInput\",\n    TT_DATETIME=\"datetime\",\n    TT_SELECT=\"HisSelect\",\n    TT_MULTIPLE_SELECT=\"HisMultipleSelect\",\n    TT_ART_REGIMEN_SELECTION=\"HisArtRegimenSelection\",\n    TT_NEXT_VISIT_INTERVAL_SELECTION=\"HisNextVisitInterval\",\n    TT_TABLE_VIEWER=\"HisTableViewer\",\n    TT_DOSAGE_INPUT=\"HisDosageInput\",\n    TT_YES_NO=\"YesNoSelect\",\n    TT_MULTIPLE_YES_NO=\"MultiYesNoSelect\",\n    TT_SUMMARY=\"HisSummary\",\n    TT_WEIGHT_CHART = \"HisWeightChart\",\n    TT_VITALS_ENTRY=\"HisVitalsEntry\",\n    TT_ADHERENCE_INPUT = \"HisAdherenceInput\",\n    TT_ART_STAGING_SUMMARY = \"ArtStagingSummary\",\n    TT_LAB_ORDERS = \"HisLabOrders\",\n    TT_APPOINTMENTS_ENTRY = \"HisAppointments\",\n    TT_DISPENSATION_INPUT = 'DrugDispensationSelection',\n    TT_PROGRAM_SELECTION = 'ProgramSelection',\n    TT_DATE_PICKER = 'HisDatePicker',\n    TT_PERSON_RESULT_VIEW = 'PersonSearchView',\n    TT_RELATION_SELECTION = 'RelationsSelection',\n    TT_FILING_NUMBER_VIEW = 'FilingNumberView',\n    TT_CARD_SELECTOR = 'HisCardSelector',\n    TT_PERSON_MATCH_VIEW = 'PersonMatchView',\n    TT_FULL_DATE = 'HisDateInput',\n    TT_BATCH_ENTRY = 'HisBatchEntry',\n    TT_BATCH_VERIFICATION = 'HisBatchVerification',\n    TT_BATCH_MOVEMENT = 'HisBatchMovement',\n    TT_COMPLAINTS_PICKER = 'HisComplaintsPicker',\n    TT_RADIOLOGY_PICKER = 'HisRadiologyPicker',\n    TT_IP_ADDRESS = 'HisIPAddress',\n    TT_TEXT_BANNER = 'HisTextBanner',\n    TT_DRUG_DISPENSER = 'GeneralDrugDispenser',\n    TT_CLINIC_HOLIDAY_PICKER = 'HisClinicHolidayPicker',\n    TT_ANC_PREGNANCY_INPUT_CONFIG = 'AncPregnancyInfoConfig',\n    TT_ANC_PREGNANCY_DETAILS_INPUT = 'AncPregnancyDetailsInput',\n    TT_ANC_LMP_DATE_INPUT = 'AncLmpDateInput',\n    TT_ANC_DRUGSET_INPUT = 'AncDrugSetInput',\n    TT_DRUG_TRANSFER_IN = 'DrugTransferInput',\n    TT_PRESCRIPTION_INPUT = 'HisPrescriptionInput',\n    TT_INFINITE_SCROLL_MULTIPLE_SELECT=\"HisInfiniteScrollMultipleSelect\"\n}\n\n// Register FieldTypes here that will be registered at runtime\nexport const COMPONENT_REFS: FieldType[] = [\n    FieldType.TT_MULTI_SELECT_GRID,\n    FieldType.TT_AGE_INPUT,\n    FieldType.TT_BARCODE,\n    FieldType.TT_NOTE,\n    FieldType.TT_SELECT,\n    FieldType.TT_CARD_SELECTOR,\n    FieldType.TT_MULTIPLE_SELECT,\n    FieldType.TT_TEXT,\n    FieldType.TT_NUMBER,\n    FieldType.TT_MONTHLY_DAYS,\n    FieldType.TT_ART_REGIMEN_SELECTION,\n    FieldType.TT_NEXT_VISIT_INTERVAL_SELECTION,\n    FieldType.TT_TABLE_VIEWER,\n    FieldType.TT_DOSAGE_INPUT,\n    FieldType.TT_YES_NO,\n    FieldType.TT_MULTIPLE_YES_NO,\n    FieldType.TT_WEIGHT_CHART,\n    FieldType.TT_VITALS_ENTRY,\n    FieldType.TT_APPOINTMENTS_ENTRY,\n    FieldType.TT_COMPLAINTS_PICKER,\n    FieldType.TT_CLINIC_HOLIDAY_PICKER,\n    FieldType.TT_SUMMARY,\n    FieldType.TT_ART_STAGING_SUMMARY,\n    FieldType.TT_ADHERENCE_INPUT,\n    FieldType.TT_LAB_ORDERS,\n    FieldType.TT_PERSON_RESULT_VIEW,\n    FieldType.TT_PROGRAM_SELECTION,\n    FieldType.TT_DATE_PICKER,\n    FieldType.TT_RELATION_SELECTION,\n    FieldType.TT_FILING_NUMBER_VIEW,\n    FieldType.TT_PERSON_MATCH_VIEW,\n    FieldType.TT_FULL_DATE,\n    FieldType.TT_BATCH_ENTRY,\n    FieldType.TT_BATCH_VERIFICATION,\n    FieldType.TT_BATCH_MOVEMENT,\n    FieldType.TT_IP_ADDRESS,\n    FieldType.TT_TEXT_BANNER,\n    FieldType.TT_DISPENSATION_INPUT,\n    FieldType.TT_DATA_TABLE,\n    FieldType.TT_GROUP_SELECTOR,\n    FieldType.TT_ANC_PREGNANCY_INPUT_CONFIG,\n    FieldType.TT_ANC_PREGNANCY_DETAILS_INPUT,\n    FieldType.TT_ANC_LMP_DATE_INPUT,\n    FieldType.TT_DRUG_TRANSFER_IN,\n    FieldType.TT_GRID_SELECTOR,\n    FieldType.TT_ANC_DRUGSET_INPUT,\n    FieldType.TT_RADIOLOGY_PICKER,\n    FieldType.TT_PRESCRIPTION_INPUT,\n    FieldType.TT_INFINITE_SCROLL_MULTIPLE_SELECT,\n    FieldType.TT_DRUG_DISPENSER\n]\n","export * from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Complaints.vue?vue&type=style&index=0&id=0c1313b4&lang=css\"","var map = {\n\t\"./AncDrugSetInput.vue\": [\n\t\t\"c99f\",\n\t\t\"TouchFormElement0\"\n\t],\n\t\"./AncLmpDateInput.vue\": [\n\t\t\"101a\",\n\t\t\"TouchFormElement1\"\n\t],\n\t\"./AncPregnancyDetailsInput.vue\": [\n\t\t\"b043\",\n\t\t\"TouchFormElement2\"\n\t],\n\t\"./AncPregnancyInfoConfig.vue\": [\n\t\t\"262e\",\n\t\t\"TouchFormElement3\"\n\t],\n\t\"./ArtStagingSummary.vue\": [\n\t\t\"43db\",\n\t\t\"TouchFormElement4\"\n\t],\n\t\"./BaseTextInput.vue\": [\n\t\t\"36ad\",\n\t\t\"TouchFormElement5\"\n\t],\n\t\"./DrugDispensationSelection.vue\": [\n\t\t\"05d5\",\n\t\t\"TouchFormElement6\"\n\t],\n\t\"./DrugTransferInput.vue\": [\n\t\t\"de42\",\n\t\t\"TouchFormElement7\"\n\t],\n\t\"./FieldMixin.vue\": [\n\t\t\"51c8\",\n\t\t\"TouchFormElement8\"\n\t],\n\t\"./FilingNumberView.vue\": [\n\t\t\"c650\",\n\t\t\"TouchFormElement9\"\n\t],\n\t\"./GeneralDrugDispenser.vue\": [\n\t\t\"7737\",\n\t\t\"TouchFormElement10\"\n\t],\n\t\"./HisAdherenceInput.vue\": [\n\t\t\"f2c3\",\n\t\t\"TouchFormElement11\"\n\t],\n\t\"./HisAgeInput.vue\": [\n\t\t\"c05f\",\n\t\t\"TouchFormElement12\"\n\t],\n\t\"./HisAppointments.vue\": [\n\t\t\"b2eb\",\n\t\t\"chunk-366b6f0a\",\n\t\t\"TouchFormElement13\"\n\t],\n\t\"./HisArtRegimenSelection.vue\": [\n\t\t\"47b9\",\n\t\t\"TouchFormElement14\"\n\t],\n\t\"./HisBarcodeInput.vue\": [\n\t\t\"dd65\",\n\t\t\"TouchFormElement15\"\n\t],\n\t\"./HisBatchEntry.vue\": [\n\t\t\"f2ab\",\n\t\t\"chunk-fb7a1668\",\n\t\t\"TouchFormElement16\"\n\t],\n\t\"./HisBatchMovement.vue\": [\n\t\t\"5148\",\n\t\t\"chunk-fb7a1668\",\n\t\t\"TouchFormElement17\"\n\t],\n\t\"./HisBatchVerification.vue\": [\n\t\t\"7b0f\",\n\t\t\"chunk-fb7a1668\",\n\t\t\"TouchFormElement18\"\n\t],\n\t\"./HisCardSelector.vue\": [\n\t\t\"0734\",\n\t\t\"TouchFormElement19\"\n\t],\n\t\"./HisClinicHolidayPicker.vue\": [\n\t\t\"4030\",\n\t\t\"chunk-366b6f0a\",\n\t\t\"TouchFormElement20\"\n\t],\n\t\"./HisComplaintsPicker.vue\": [\n\t\t\"82d1\",\n\t\t\"TouchFormElement21\"\n\t],\n\t\"./HisDataTable.vue\": [\n\t\t\"a6ba\",\n\t\t\"TouchFormElement22\"\n\t],\n\t\"./HisDateInput.vue\": [\n\t\t\"374c\",\n\t\t\"TouchFormElement23\"\n\t],\n\t\"./HisDatePicker.vue\": [\n\t\t\"9b30\",\n\t\t\"chunk-366b6f0a\",\n\t\t\"TouchFormElement24\"\n\t],\n\t\"./HisDosageInput.vue\": [\n\t\t\"b34c\",\n\t\t\"TouchFormElement25\"\n\t],\n\t\"./HisGridSelector.vue\": [\n\t\t\"112a\",\n\t\t\"TouchFormElement26\"\n\t],\n\t\"./HisGroupSelector.vue\": [\n\t\t\"81cf\",\n\t\t\"TouchFormElement27\"\n\t],\n\t\"./HisIPAddress.vue\": [\n\t\t\"2a82\",\n\t\t\"TouchFormElement28\"\n\t],\n\t\"./HisInfiniteScrollMultipleSelect.vue\": [\n\t\t\"52a3\",\n\t\t\"TouchFormElement29\"\n\t],\n\t\"./HisLabOrders.vue\": [\n\t\t\"e614\",\n\t\t\"TouchFormElement30\"\n\t],\n\t\"./HisMonthlyDays.vue\": [\n\t\t\"69cf\",\n\t\t\"TouchFormElement31\"\n\t],\n\t\"./HisMultiSelectGrid.vue\": [\n\t\t\"0fa3\",\n\t\t\"TouchFormElement32\"\n\t],\n\t\"./HisMultipleSelect.vue\": [\n\t\t\"2fd5\",\n\t\t\"chunk-8a3b8db0\",\n\t\t\"TouchFormElement33\"\n\t],\n\t\"./HisNextVisitInterval.vue\": [\n\t\t\"3126\",\n\t\t\"TouchFormElement34\"\n\t],\n\t\"./HisNote.vue\": [\n\t\t\"c927\",\n\t\t\"TouchFormElement35\"\n\t],\n\t\"./HisNumberInput.vue\": [\n\t\t\"5e75\",\n\t\t\"TouchFormElement36\"\n\t],\n\t\"./HisPrescriptionInput.vue\": [\n\t\t\"87e5\",\n\t\t\"TouchFormElement37\"\n\t],\n\t\"./HisRadiologyPicker.vue\": [\n\t\t\"adc7\",\n\t\t\"chunk-3c642140\",\n\t\t\"TouchFormElement38\"\n\t],\n\t\"./HisSelect.vue\": [\n\t\t\"d11f\",\n\t\t\"TouchFormElement39\"\n\t],\n\t\"./HisSummary.vue\": [\n\t\t\"e0bd\",\n\t\t\"TouchFormElement40\"\n\t],\n\t\"./HisTableViewer.vue\": [\n\t\t\"8904\",\n\t\t\"TouchFormElement41\"\n\t],\n\t\"./HisTextBanner.vue\": [\n\t\t\"952c\",\n\t\t\"TouchFormElement42\"\n\t],\n\t\"./HisTextInput.vue\": [\n\t\t\"6ef9\",\n\t\t\"TouchFormElement43\"\n\t],\n\t\"./HisVitalsEntry.vue\": [\n\t\t\"e333\",\n\t\t\"TouchFormElement44\"\n\t],\n\t\"./HisWeightChart.vue\": [\n\t\t\"26a1\",\n\t\t\"TouchFormElement45\"\n\t],\n\t\"./MultiYesNoSelect.vue\": [\n\t\t\"5fd1\",\n\t\t\"TouchFormElement46\"\n\t],\n\t\"./PersonMatchView.vue\": [\n\t\t\"6591\",\n\t\t\"TouchFormElement47\"\n\t],\n\t\"./PersonSearchView.vue\": [\n\t\t\"28b2\",\n\t\t\"TouchFormElement48\"\n\t],\n\t\"./ProgramSelection.vue\": [\n\t\t\"e3b4\",\n\t\t\"TouchFormElement49\"\n\t],\n\t\"./RelationsSelection.vue\": [\n\t\t\"0e57\",\n\t\t\"TouchFormElement50\"\n\t],\n\t\"./SelectMixin.vue\": [\n\t\t\"82a9\",\n\t\t\"TouchFormElement51\"\n\t],\n\t\"./YesNoSelect.vue\": [\n\t\t\"71f2\",\n\t\t\"TouchFormElement52\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"f159\";\nmodule.exports = webpackAsyncContext;","import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_his_standard_form = _resolveComponent(\"his-standard-form\")!\n  const _component_ion_page = _resolveComponent(\"ion-page\")!\n\n  return (_openBlock(), _createBlock(_component_ion_page, null, {\n    default: _withCtx(() => [\n      _createVNode(_component_his_standard_form, {\n        cancelDestinationPath: _ctx.cancelDestination,\n        fields: _ctx.fields,\n        onFinishAction: _ctx.onSubmit,\n        skipSummary: true\n      }, null, 8, [\"cancelDestinationPath\", \"fields\", \"onFinishAction\"])\n    ]),\n    _: 1\n  }))\n}","import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ion_title = _resolveComponent(\"ion-title\")!\n  const _component_ion_toolbar = _resolveComponent(\"ion-toolbar\")!\n  const _component_ion_header = _resolveComponent(\"ion-header\")!\n  const _component_his_radiology_picker = _resolveComponent(\"his-radiology-picker\")!\n  const _component_ion_content = _resolveComponent(\"ion-content\")!\n  const _component_ion_button = _resolveComponent(\"ion-button\")!\n  const _component_ion_footer = _resolveComponent(\"ion-footer\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(_component_ion_header, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_title, { class: \"his-lg-text\" }, {\n              default: _withCtx(() => [\n                _createTextVNode(\"Radiology Examination\")\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_content, { style: {\"overflow\":\"hidden\",\"background\":\"grey\",\"height\":\"70vh\"} }, {\n      default: _withCtx(() => [\n        _createVNode(_component_his_radiology_picker, { onOnValue: _ctx.onValue }, null, 8, [\"onOnValue\"])\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_footer, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_button, {\n              onClick: _cache[0] || (_cache[0] = ($event: any) => (_ctx.onSubmit())),\n              size: \"large\",\n              slot: \"end\",\n              disabled: _ctx.emitedSelectedOptions.length === 0\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\" Place orders \")\n              ]),\n              _: 1\n            }, 8, [\"disabled\"]),\n            _createVNode(_component_ion_button, {\n              onClick: _cache[1] || (_cache[1] = ($event: any) => (_ctx.closeModal())),\n              size: \"large\",\n              slot: \"start\",\n              color: \"danger\"\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\" Close \")\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    })\n  ], 64))\n}","\nimport {\n  IonContent,\n  IonButton,\n  IonHeader,\n  IonTitle,\n  IonToolbar,\n  modalController,\n  IonFooter,\n} from \"@ionic/vue\";\nimport { defineComponent } from 'vue'\nimport EncounterMixinVue from '@/views/EncounterMixin.vue';\nimport { PatientRadiologyService } from \"@/apps/OPD/services/patient_radiology_service\";\nimport HisRadiologyPicker from '@/components/FormElements/HisRadiologyPicker.vue'\nimport OPD_GLOBAL_PROP from \"@/apps/OPD/opd_global_props\";\nimport { isEmpty } from \"lodash\";\n\nexport default defineComponent({\n  name: \"Modal\",\n  components: { \n    IonButton,\n    IonContent,\n    IonHeader,\n    IonTitle,\n    IonToolbar,\n    IonFooter,\n    HisRadiologyPicker\n  },\n  mixins: [EncounterMixinVue],\n  data: () => ({\n    radiologyService: {} as any,\n    isPacsEnabled: false,\n    emitedSelectedOptions: {} as any\n  }),\n  watch: {\n    ready: {\n      async handler(isReady: boolean) {\n        if(isReady){\n          this.radiologyService = new PatientRadiologyService(this.patientID, this.providerID)\n          this.isPacsEnabled = (await OPD_GLOBAL_PROP.isPACsEnabled())\n        }\n      },\n      immediate: true,\n      deep: true\n    }\n  },\n  methods: {\n    async onValue(selected: any) {\n      this.emitedSelectedOptions = selected\n    },\n    async getSelected() {\n      return this.emitedSelectedOptions.map(async (option: any) => ({\n        ...(await this.radiologyService.buildValueCoded('Radiology Orders', option.other.parent)),\n        child: [await this.radiologyService.buildValueCodedFromConceptId(option.other.parent, option.other.concept_id)]\n      }))\n    },\n    async onSubmit(){\n      if(!isEmpty(this.emitedSelectedOptions)) {\n        this.closeModal()\n        let data = await this.getSelected()\n        data = await Promise.all(data)\n        await this.radiologyService.createEncounter()\n        const obsObj = await this.radiologyService.obsObj(data) \n        const savedObsData = await this.radiologyService.saveObservationList(obsObj)\n        await this.radiologyService.printOrders(savedObsData, this.patient)\n        if(this.isPacsEnabled) {\n          try {\n            await this.radiologyService.submitToPacs(savedObsData, this.patient)\n          } catch (error) {\n            console.log(error)\n          }\n        }\n      }\n    },\n    async closeModal() {\n      await modalController.dismiss([])\n    }\n  },\n})\n","import { render } from \"./radiology.vue?vue&type=template&id=1ee1c833&ts=true\"\nimport script from \"./radiology.vue?vue&type=script&lang=ts\"\nexport * from \"./radiology.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","\nimport { defineComponent } from 'vue'\nimport HisStandardForm from \"@/components/Forms/HisStandardForm.vue\";\nimport EncounterMixinVue from '@/views/EncounterMixin.vue';\nimport { PatientComplaintsService } from \"@/apps/OPD/services/patient_complaints_service\";\nimport LabOrderModal from \"@/components/DataViews/LabOrderModal.vue\"\nimport radiology from \"@/apps/OPD/views/encounters/modals/radiology.vue\"\nimport Validation from '@/components/Forms/validations/StandardValidations';\nimport { Field, Option } from '@/components/Forms/FieldInterface';\nimport { FieldType } from '@/components/Forms/BaseFormElements';\nimport { modalController, IonPage } from '@ionic/vue';\nimport { ObservationService } from \"@/services/observation_service\"\nimport { EncounterService } from '@/services/encounter_service'\nimport HisDate from \"@/utils/Date\"\nimport OPD_GLOBAL_PROP from \"@/apps/OPD/opd_global_props\";\n\nexport default defineComponent({\n  components: { HisStandardForm, IonPage },\n  mixins: [EncounterMixinVue],\n  data: () => ({\n    complaintsService: {} as any,\n    todaysDate: ObservationService.getSessionDate(),\n    presentingComplaints: \"\" as any,\n    isPacsEnabled: false,\n    radiologyBtnName: 'Radiology Order',\n    hasTriageComplaints: false,\n  }),\n  watch: {\n    ready: {\n      async handler(isReady: boolean) {\n        if(isReady){\n          this.complaintsService = new PatientComplaintsService(this.patientID, this.providerID)\n          this.isPacsEnabled = (await OPD_GLOBAL_PROP.isPACsEnabled())\n          this.hasTriageComplaints = await this.getTriagePresentingComplaints()\n          this.fields = this.getFields()\n        }\n      },\n      immediate: true,\n      deep: true\n    }\n  },\n  methods: {\n    async onSubmit(_: any, computedData: any){     \n      const data = await Promise.all(computedData.complaints)   \n      await this.complaintsService.createEncounter()    \n      await this.complaintsService.saveObservationList(data)\n      this.nextTask()        \n    },\n    async launchOrderSelection() {\n      const modal = await modalController.create({\n        component: LabOrderModal,\n        backdropDismiss: false,\n        cssClass: 'large-modal'\n      })\n      modal.present()\n      await modal.onDidDismiss()\n    },\n    async launchRadiologyOrderSelection() {\n      const modal = await modalController.create({\n        component: radiology,\n        backdropDismiss: false,\n        cssClass: 'large-modal'\n      })\n      modal.present()\n      await modal.onDidDismiss()\n    },\n    async getTriagePresentingComplaints(){\n      const data =  await this.complaintsService.fetchLatestTriageEncounter();\n      if(!(data.length > 0)){ return false;}\n\n      const encounters = await EncounterService.getEncounters(this.patientID, this.todaysDate)\n      const todayPresentingComplaints = encounters.filter(function (el: any){\n        return el.type.name == \"TRIAGE PRESENTING COMPLAINTS\" &&\n        HisDate.toStandardHisFormat(el.encounter_datetime) == ObservationService.getSessionDate() \n      });\n      if(!(todayPresentingComplaints.length > 0)) {return false;}\n\n      this.presentingComplaints =   todayPresentingComplaints[0].observations;\n      return true;\n    },\n    buildResults() {\n      const columns = [ 'Group','Presenting complaints'];\n      let group = \"\";\n      let rows =this.presentingComplaints.map((item: any) =>{\n        if(item.obs_group_id != null)\n          return [group,item.value_text]\n\n        group = item.value_text;\n      });\n      rows = rows.filter((el: any) =>{\n        return el != undefined\n      })\n      this.presentingComplaints = rows;\n      return [\n        {\n          label: '',\n          value: '',\n          other: { columns, rows},\n        },\n      ];\n    },\n\n    getFields(): Array<Field>{\n      return [\n        {\n          id: \"triage_complaints\",\n          helpText: \"Triaging Complaints\",\n          condition: () => this.hasTriageComplaints,\n          type: FieldType.TT_TABLE_VIEWER,\n          options: (d: any) => this.buildResults(),\n          config: {\n            hiddenFooterBtns: [\"Clear\"],\n          },\n        },\n        {\n          id: 'complaints',\n          helpText: 'Presenting Complaints',\n          type: FieldType.TT_COMPLAINTS_PICKER,\n          validation: (data: any) => Validation.required(data),\n          computedValue: (options: Option[]) => {\n            return options.map(async (option)=> ({\n              ...(await this.complaintsService.buildValueCoded('Presenting complaint', option.other.parent)),\n              child: [await this.complaintsService.buildValueCodedFromConceptId(option.other.parent, option.other.concept_id)]\n            }))\n          },\n          config: {\n            hiddenFooterBtns: [ this.showRadiologyOdersBtn(), this.disableBackBtn()],\n            footerBtns: [\n              {\n                name: \"Lab Order\",\n                size: \"large\",\n                slot: \"end\",\n                color: \"primary\",\n                visible: true,\n                onClick: async () => await this.launchOrderSelection(),\n                visibleOnStateChange: (state: Record<string, any>) => {\n                  return state.index === 1;\n                },\n              },\n              {\n                name: this.radiologyBtnName,\n                size: \"large\",\n                slot: \"end\",\n                color: \"primary\",\n                visible: true,\n                onClick: async () => await this.launchRadiologyOrderSelection(),\n                visibleOnStateChange: (state: Record<string, any>) => {\n                  return state.index === 1;\n                },\n              }\n            ],\n          }\n        },\n        {\n          id: \"all_presenting_complaints\",\n          helpText: \"Summary\",\n          condition: () => this.presentingComplaints.length > 0,\n          type: FieldType.TT_SUMMARY,\n          options: (d: any, b: any) => this.buildSummaryResults(d),\n          config: {\n            hiddenFooterBtns: [\"Clear\"],\n          },\n        },\n      ]\n    },\n    showRadiologyOdersBtn() {\n      if(this.isPacsEnabled) {\n        return ''\n      } else return this.radiologyBtnName\n    },\n    buildSummaryResults(data: any) {\n      const OPDComplaint = data.complaints.map((value: any)=>{\n        return {\n          'label': \"OPD Complaints\",\n          'value': value.label,\n        };\n      })\n      const triageComplaint = this.presentingComplaints.map((value: any)=>{\n        return {\n          'label': 'Triaging Complaints',\n          'value': value[1],\n        };\n      })\n      return OPDComplaint.concat(triageComplaint);\n    },\n    disableBackBtn() {\n      if(this.hasTriageComplaints) {\n        return ''\n      } else return 'Back'\n    }\n  }\n})\n","import { render } from \"./Complaints.vue?vue&type=template&id=0c1313b4&ts=true\"\nimport script from \"./Complaints.vue?vue&type=script&lang=ts\"\nexport * from \"./Complaints.vue?vue&type=script&lang=ts\"\n\nimport \"./Complaints.vue?vue&type=style&index=0&id=0c1313b4&lang=css\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}