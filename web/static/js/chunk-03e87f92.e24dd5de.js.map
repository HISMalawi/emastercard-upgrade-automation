{"version":3,"sources":["webpack:///./src/apps/ART/views/encounters/BPManagement.vue?0726","webpack:///./src/apps/ART/views/encounters/BPManagement.vue","webpack:///./src/apps/ART/views/encounters/BPManagement.vue?cad9","webpack:///./src/apps/ART/services/vitals_service.ts"],"names":["_hoisted_1","key","style","_hoisted_2","slot","_hoisted_3","_createElementVNode","render","_ctx","_cache","$props","$setup","$data","$options","_component_ion_title","_resolveComponent","_component_ion_button","_component_ion_toolbar","_component_ion_header","_component_data_table","_component_ion_content","_component_ion_label","_component_ion_radio","_component_ion_item","_component_ion_col","_component_ion_row","_component_ion_grid","_component_ion_radio_group","_component_ion_footer","_component_ion_page","_openBlock","_createBlock","default","_withCtx","_createVNode","_toDisplayString","date","patientOnBPDrugs","_createElementBlock","_createCommentVNode","_","totalRiskFactors","color","onClick","showRiskFactors","_createTextVNode","config","showIndex","columns","rows","modelValue","action","$event","_Fragment","_renderList","items","item","index","size","label","value","gotoPatientDashboard","showClinicianButton","referPatient","patientHasHyperTensionObs","goToDiagnosis","isEnrolledInHTN","enrollInHTN","onFinish","HEADER_STYLE","background","defineComponent","mixins","EncounterMixinVue","components","DataTable","IonTitle","IonToolbar","IonHeader","IonContent","IonGrid","IonRow","IonButton","IonRadioGroup","IonRadio","IonCol","IonFooter","IonPage","IonItem","IonLabel","data","htn","hasARVNumber","suggestedNumber","table","thTxt","bpGradeColorMap","riskFactors","trail","patientFirstVisit","normatensive","currentDrugs","isAliveOnHTN","HTNProgramID","aliveState","refer","watch","ready","loading","loadingController","create","message","backdropDismiss","present","this","BPManagementService","patientID","providerID","getBPTrail","formatBpTrailRows","isBpNormotensive","getRiskFactors","HisDate","toStandardHisDisplayFormat","Service","getSessionDate","isTransfered","hasHyperTenstion","getTreatmentStatus","getProgramStatus","dismiss","alertTransferIn","getItems","immediate","computed","filter","d","length","UserService","isClinician","isDoctor","methods","encounter","createEncounter","toastWarning","obs","saveValueCodedObs","_this$action","_this$action$other","saveValueTextObs","patientState","state","enrollPatient","other","nextTask","$router","push","path","ob","ObservationService","getFirstValueCoded","match","getFirstValueText","programs","ProgramService","getPatientPrograms","program","name","programState","getPatientStates","concepts","ConceptService","getConceptsByCategory","j","map","async","val","concept","Promise","all","Object","keys","m","concat","colorGrade","grade","getBpGrade","parseInt","sbp","dbp","tdDate","td","join","note","modal","modalController","component","RiskFactorModal","cssClass","componentProps","factors","onDidDismiss","isEmpty","isChecked","infoActionSheet","setHtnTransferred","PatientProgramService","setProgramId","setStateDate","setStateId","enrollProgram","updateState","toastSuccess","e","console","error","transferred","vitals","VitalsService","__exports__","AppEncounterService","constructor","super","isNotEmptyandNumber","vital","isNotEmptyandFloat","_vital$other","modifier","checkMinMax","min","max","p","_val$other","_val$other2","parseFloat","validateAll","validator","isArray","mergeErrors","errors","holder","forEach","element","isValidBPReading","isValidBP","split","bpSystolic","bpDiastolic","values","emptyErrors","minErrors","v"],"mappings":"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","file":"js/chunk-03e87f92.e24dd5de.js","sourcesContent":["import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createTextVNode as _createTextVNode, createBlock as _createBlock, renderList as _renderList, Fragment as _Fragment } from \"vue\"\n\nconst _hoisted_1 = {\n  key: 0,\n  style: {\"color\":\"green\"}\n}\nconst _hoisted_2 = { slot: \"end\" }\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"h1\", { style: {\"text-align\":\"center\"} }, \"Actions\", -1)\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ion_title = _resolveComponent(\"ion-title\")!\n  const _component_ion_button = _resolveComponent(\"ion-button\")!\n  const _component_ion_toolbar = _resolveComponent(\"ion-toolbar\")!\n  const _component_ion_header = _resolveComponent(\"ion-header\")!\n  const _component_data_table = _resolveComponent(\"data-table\")!\n  const _component_ion_content = _resolveComponent(\"ion-content\")!\n  const _component_ion_label = _resolveComponent(\"ion-label\")!\n  const _component_ion_radio = _resolveComponent(\"ion-radio\")!\n  const _component_ion_item = _resolveComponent(\"ion-item\")!\n  const _component_ion_col = _resolveComponent(\"ion-col\")!\n  const _component_ion_row = _resolveComponent(\"ion-row\")!\n  const _component_ion_grid = _resolveComponent(\"ion-grid\")!\n  const _component_ion_radio_group = _resolveComponent(\"ion-radio-group\")!\n  const _component_ion_footer = _resolveComponent(\"ion-footer\")!\n  const _component_ion_page = _resolveComponent(\"ion-page\")!\n\n  return (_openBlock(), _createBlock(_component_ion_page, null, {\n    default: _withCtx(() => [\n      _createVNode(_component_ion_header, null, {\n        default: _withCtx(() => [\n          _createVNode(_component_ion_toolbar, null, {\n            default: _withCtx(() => [\n              _createVNode(_component_ion_title, null, {\n                default: _withCtx(() => [\n                  _createElementVNode(\"span\", null, \"BP management screening on \" + _toDisplayString(_ctx.date), 1),\n                  (_ctx.patientOnBPDrugs)\n                    ? (_openBlock(), _createElementBlock(\"small\", _hoisted_1, \" (Patient already on BP drugs)\"))\n                    : _createCommentVNode(\"\", true)\n                ]),\n                _: 1\n              }),\n              _createElementVNode(\"span\", _hoisted_2, [\n                (_ctx.totalRiskFactors > 0)\n                  ? (_openBlock(), _createBlock(_component_ion_button, {\n                      key: 0,\n                      color: \"danger\",\n                      onClick: _ctx.showRiskFactors\n                    }, {\n                      default: _withCtx(() => [\n                        _createTextVNode(\"View/Edit risk factors \" + _toDisplayString(_ctx.totalRiskFactors), 1)\n                      ]),\n                      _: 1\n                    }, 8, [\"onClick\"]))\n                  : _createCommentVNode(\"\", true),\n                (_ctx.totalRiskFactors === 0)\n                  ? (_openBlock(), _createBlock(_component_ion_button, {\n                      key: 1,\n                      onClick: _ctx.showRiskFactors\n                    }, {\n                      default: _withCtx(() => [\n                        _createTextVNode(\"add riskfactors\")\n                      ]),\n                      _: 1\n                    }, 8, [\"onClick\"]))\n                  : _createCommentVNode(\"\", true)\n              ])\n            ]),\n            _: 1\n          })\n        ]),\n        _: 1\n      }),\n      _createVNode(_component_ion_content, null, {\n        default: _withCtx(() => [\n          _createVNode(_component_data_table, {\n            config: {showIndex: false},\n            columns: _ctx.columns,\n            rows: _ctx.rows\n          }, null, 8, [\"columns\", \"rows\"])\n        ]),\n        _: 1\n      }),\n      _createVNode(_component_ion_footer, null, {\n        default: _withCtx(() => [\n          _createVNode(_component_ion_toolbar, null, {\n            default: _withCtx(() => [\n              _hoisted_3,\n              _createVNode(_component_ion_radio_group, {\n                modelValue: _ctx.action,\n                \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((_ctx.action) = $event))\n              }, {\n                default: _withCtx(() => [\n                  _createVNode(_component_ion_grid, null, {\n                    default: _withCtx(() => [\n                      _createVNode(_component_ion_row, null, {\n                        default: _withCtx(() => [\n                          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.items, (item, index) => {\n                            return (_openBlock(), _createBlock(_component_ion_col, {\n                              size: \"4\",\n                              key: index\n                            }, {\n                              default: _withCtx(() => [\n                                _createVNode(_component_ion_item, null, {\n                                  default: _withCtx(() => [\n                                    _createVNode(_component_ion_label, { style: {\"font-size\":\"1.0rem\",\"font-weight\":\"bold\"} }, {\n                                      default: _withCtx(() => [\n                                        _createTextVNode(_toDisplayString(item.label), 1)\n                                      ]),\n                                      _: 2\n                                    }, 1024),\n                                    _createVNode(_component_ion_radio, { value: item }, null, 8, [\"value\"])\n                                  ]),\n                                  _: 2\n                                }, 1024)\n                              ]),\n                              _: 2\n                            }, 1024))\n                          }), 128))\n                        ]),\n                        _: 1\n                      })\n                    ]),\n                    _: 1\n                  })\n                ]),\n                _: 1\n              }, 8, [\"modelValue\"])\n            ]),\n            _: 1\n          }),\n          _createVNode(_component_ion_toolbar, { color: \"dark\" }, {\n            default: _withCtx(() => [\n              _createVNode(_component_ion_button, {\n                size: \"large\",\n                color: \"danger\",\n                slot: \"start\",\n                onClick: _ctx.gotoPatientDashboard\n              }, {\n                default: _withCtx(() => [\n                  _createTextVNode(\" cancel \")\n                ]),\n                _: 1\n              }, 8, [\"onClick\"]),\n              (_ctx.showClinicianButton)\n                ? (_openBlock(), _createBlock(_component_ion_button, {\n                    key: 0,\n                    size: \"large\",\n                    color: \"danger\",\n                    slot: \"start\",\n                    onClick: _ctx.referPatient\n                  }, {\n                    default: _withCtx(() => [\n                      _createTextVNode(\" Refer to clinician \")\n                    ]),\n                    _: 1\n                  }, 8, [\"onClick\"]))\n                : _createCommentVNode(\"\", true),\n              (!_ctx.patientHasHyperTensionObs)\n                ? (_openBlock(), _createBlock(_component_ion_button, {\n                    key: 1,\n                    size: \"large\",\n                    slot: \"end\",\n                    onClick: _ctx.goToDiagnosis\n                  }, {\n                    default: _withCtx(() => [\n                      _createTextVNode(\" Hypertension Diagnosis \")\n                    ]),\n                    _: 1\n                  }, 8, [\"onClick\"]))\n                : _createCommentVNode(\"\", true),\n              (_ctx.patientHasHyperTensionObs && !_ctx.isEnrolledInHTN)\n                ? (_openBlock(), _createBlock(_component_ion_button, {\n                    key: 2,\n                    size: \"large\",\n                    slot: \"end\",\n                    onClick: _ctx.enrollInHTN\n                  }, {\n                    default: _withCtx(() => [\n                      _createTextVNode(\" Enroll in HTN \")\n                    ]),\n                    _: 1\n                  }, 8, [\"onClick\"]))\n                : _createCommentVNode(\"\", true),\n              (_ctx.patientHasHyperTensionObs)\n                ? (_openBlock(), _createBlock(_component_ion_button, {\n                    key: 3,\n                    size: \"large\",\n                    color: \"success\",\n                    slot: \"end\",\n                    onClick: _ctx.onFinish\n                  }, {\n                    default: _withCtx(() => [\n                      _createTextVNode(\" Finish \")\n                    ]),\n                    _: 1\n                  }, 8, [\"onClick\"]))\n                : _createCommentVNode(\"\", true)\n            ]),\n            _: 1\n          })\n        ]),\n        _: 1\n      })\n    ]),\n    _: 1\n  }))\n}","\nimport { defineComponent } from \"vue\";\nimport {\n  IonToolbar,\n  IonTitle,\n  IonHeader,\n  IonContent,\n  IonGrid,\n  IonRow,\n  IonCol,\n  IonRadioGroup,\n  IonRadio,\n  IonButton,\n  modalController,\n  IonFooter,\n  IonPage,\n  IonItem,\n  IonLabel,\n  loadingController\n} from \"@ionic/vue\";\nimport { toastWarning, toastSuccess } from \"@/utils/Alerts\";\nimport EncounterMixinVue from \"../../../../views/EncounterMixin.vue\";\nimport RiskFactorModal from \"@/components/DataViews/RiskFactorModal.vue\";\nimport { ObservationService } from \"@/services/observation_service\";\nimport { ConceptService } from \"@/services/concept_service\";\nimport { Service } from \"@/services/service\";\nimport HisDate from \"@/utils/Date\";\nimport { isEmpty } from \"lodash\";\nimport { BPManagementService } from \"../../services/htn_service\";\nimport { UserService } from \"@/services/user_service\";\nimport { ProgramService } from \"@/services/program_service\";\nimport { VitalsService } from \"@/apps/ART/services/vitals_service\"\nimport { PatientProgramService } from \"@/services/patient_program_service\";\nimport DataTable from \"@/components/DataViews/tables/ReportDataTable.vue\"\nimport table from \"@/components/DataViews/tables/ReportDataTable\"\nimport { infoActionSheet } from \"@/utils/ActionSheets\";\n\nconst HEADER_STYLE = {\n  background: '#444444',\n}\nexport default defineComponent({\n  mixins: [EncounterMixinVue],\n  components: {\n    DataTable,\n    IonTitle,\n    IonToolbar,\n    IonHeader,\n    IonContent,\n    IonGrid,\n    IonRow,\n    IonButton,\n    IonRadioGroup,\n    IonRadio,\n    IonCol,\n    IonFooter,\n    IonPage,\n    IonItem,\n    IonLabel,\n  },\n  data: () => ({\n    htn: {} as any,\n    hasARVNumber: true,\n    suggestedNumber: \"\" as any,\n    columns: [\n      [\n        table.thTxt(\"Date\", { style: HEADER_STYLE }),\n        table.thTxt(\"Systolic\", { style: HEADER_STYLE }),\n        table.thTxt(\"Diastolic\", { style: HEADER_STYLE }),\n        table.thTxt(\"BP Drugs\", { style: HEADER_STYLE }),\n        table.thTxt(\"Action / Note\", { style: HEADER_STYLE })\n      ]\n    ] as any,\n    bpGradeColorMap: {\n      'N/A': '#ffffff',\n      'normal': '#ffffff',\n      'grade 1': '#FFC3CE',\n      'grade 2': '#F20056',\n      'grade 3': '#FF3333'\n    } as any,\n    rows: [] as any,\n    riskFactors: [] as any,\n    action: null as any,\n    trail: [] as any,\n    date: null as any,\n    patientOnBPDrugs: false,\n    patientFirstVisit: false,\n    normatensive: false,\n    patientHasHyperTensionObs: false,\n    currentDrugs: [],\n    items: [] as any,\n    isEnrolledInHTN: false,\n    isAliveOnHTN: false,\n    HTNProgramID: 20,\n    aliveState: 160,\n    refer: false,\n  }),\n  watch: {\n    ready: {\n      async handler(ready: boolean) {\n        if (!ready) return\n        const loading = await loadingController.create({\n          message: 'Please wait...',\n          backdropDismiss: false\n        })\n        await loading.present()\n               \n        this.htn = new BPManagementService(this.patientID, this.providerID);\n        this.trail = await this.htn.getBPTrail();\n        this.rows = this.formatBpTrailRows(this.trail);\n        this.normatensive = BPManagementService.isBpNormotensive(this.trail)\n        this.riskFactors = await this.getRiskFactors();\n        this.date = HisDate.toStandardHisDisplayFormat(Service.getSessionDate());\n        await this.isTransfered()\n        await this.hasHyperTenstion()\n        await this.getTreatmentStatus()\n        await this.getProgramStatus()\n        loadingController.dismiss()\n        if (this.patientFirstVisit && this.patientOnBPDrugs) await this.alertTransferIn()\n        this.getItems();\n      },\n      immediate: true,\n    },\n  },\n  computed: {\n    totalRiskFactors(): any {\n      return this.riskFactors.filter((d: any) => d.value === \"Yes\").length;\n    },\n    showClinicianButton() {\n      return !(UserService.isClinician() && UserService.isDoctor());\n    },\n  },\n  methods: {\n    async onFinish() {\n      if (this.action || this.refer) {\n        const encounter = await this.htn.createEncounter();\n        if (!encounter) return toastWarning(\"Unable to create encounter\");\n        if (this.refer) {\n          const obs = await this.htn.saveValueCodedObs(\n            \"Refer patient to clinician\",\n            \"Yes\"\n          )\n          if (!obs) return toastWarning(\"Unable to create Obs\");\n          this.gotoPatientDashboard();\n        } else {\n          const obs = await this.htn.saveValueTextObs(\n            \"Plan\",\n            this.action.label\n          );\n\n          if (!obs) return toastWarning(\"Unable to create Obs\")\n          const patientState = {\n            state: this.action.value,\n          }\n          \n          await this.htn.enrollPatient(patientState);\n\n          if (typeof this.action?.other?.action === 'function') {\n            return this.action.other.action()\n          } else {\n            this.nextTask()\n          }\n        }\n      } else {\n        toastWarning(\"Please select an action\");\n      }\n    },\n    referPatient() {\n      this.refer = true;\n      this.onFinish();\n    },\n    goToDiagnosis() {\n      return this.$router.push({\n        path: `/art/encounters/hypertension_diagnosis/${this.patientID}`,\n      })\n    },\n    async hasHyperTenstion() {\n      const ob = await ObservationService.getFirstValueCoded(\n        this.patientID,\n        \"Patient has hypertension\"\n      );\n      this.patientHasHyperTensionObs = `${ob}`.match(/yes|no/i) ? true : false\n    },\n    async isTransfered() {\n      const ob = await ObservationService.getFirstValueCoded(\n        this.patientID,\n        \"Transferred\"\n      );\n      this.patientFirstVisit = !ob\n    },\n    async getTreatmentStatus() {\n      const ob = await ObservationService.getFirstValueText(\n        this.patientID,\n        \"Treatment status\"\n      );\n      this.patientOnBPDrugs = ob && ob.match(/BP Drugs started/i) ? true : false;\n    },\n    async getProgramStatus() {\n      const programs: any[] = await ProgramService.getPatientPrograms(\n        this.patientID\n      );\n      this.isEnrolledInHTN =\n        programs.filter(\n          (program) => program.program.name === \"HYPERTENSION PROGRAM\"\n        ).length > 0;\n      if (this.isEnrolledInHTN) {\n        await this.programState();\n      }\n    },\n    async programState() {\n      const programs: any[] = await ProgramService.getPatientStates(\n        this.patientID, this.HTNProgramID\n      );\n      this.isAliveOnHTN =\n        programs.filter((program) => program.name === \"Alive\").length > 0;\n    },\n    async getRiskFactors() {\n      const concepts = ConceptService.getConceptsByCategory(\"risk factors\");\n      const j = concepts.map(async (concept) => {\n        const val = await ObservationService.getFirstValueCoded(\n          this.patientID,\n          concept.name\n        );\n        return {\n          concept: concept.name,\n          value: val,\n        }\n      })\n      return Promise.all(j);\n    },\n    formatBpTrailRows(trail: any) {\n      return Object.keys(trail).map(m => {\n        const date = HisDate.toStandardHisDisplayFormat(m);\n        this.currentDrugs = this.currentDrugs.concat(trail[m][\"drugs\"]);\n        const colorGrade = () => {\n          const grade: string = BPManagementService.getBpGrade(\n            parseInt(trail[m].sbp),\n            parseInt(trail[m].dbp)\n          )\n          return this.bpGradeColorMap[grade]\n        }\n        const style = {\n          background: colorGrade()\n        }\n        return [\n          table.tdDate(date, { style }),\n          table.td(trail[m].sbp, { style }),\n          table.td(trail[m].dbp, { style }),\n          table.td(trail[m][\"drugs\"].join(\", \"), { style }),\n          table.td(trail[m].note, { style })\n        ]\n      })\n    },\n    async showRiskFactors() {\n      const modal = await modalController.create({\n        component: RiskFactorModal,\n        backdropDismiss: false,\n        cssClass: \"large-modal\",\n        componentProps: {\n          factors: this.riskFactors,\n        },\n      });\n      modal.present();\n      const { data } = await modal.onDidDismiss();\n      if (!isEmpty(data)) {\n        this.riskFactors = data.map((d: any) => {\n          const val = d.isChecked === true ? \"Yes\" : \"No\";\n          return {\n            concept: d.concept,\n            value: val,\n          };\n        });\n      }\n    },\n    async alertTransferIn() {\n      const action = await infoActionSheet(\n        'Transfer in',\n        \"Does the patient want to transfer in for HTN management?\",\n        '',\n        [\n          { \n            name: 'Yes', \n            slot: 'end', \n            color: 'success'\n          },\n          { \n            name: 'No',  \n            slot: 'start', \n            color: 'danger'\n          }\n        ]\n      )\n      if(action === 'Yes') {\n        await this.enrollInHTN();\n        await this.setHtnTransferred('Yes')\n        this.patientFirstVisit = false;\n        await this.getItems();\n      } else {\n        await this.setHtnTransferred('No')\n        this.nextTask()\n      }\n    },\n    async enrollInHTN() {\n      try {\n        const program  = new PatientProgramService(this.patientID)\n        program.setProgramId(this.HTNProgramID)\n        program.setStateDate(ProgramService.getSessionDate())\n        program.setStateId(this.aliveState)\n        await program.enrollProgram()\n        await program.updateState()\n        this.isEnrolledInHTN = true\n        toastSuccess('Patient is now enrolled in HTN')\n      } catch (e) {\n        console.error(e)\n        toastWarning(`${e}`)\n      }\n    },\n    async setHtnTransferred(transferred: 'Yes' | 'No'){\n      const vitals = new VitalsService(this.patientID, this.providerID)\n      const encounter = await vitals.createEncounter()\n      if (!encounter) {\n        toastWarning('Unable to create patient transfer encounter')\n      } else {\n        const obs = await vitals.saveValueCodedObs('Transferred', transferred)\n        if (!obs) {\n          toastWarning('Unable to create observation Transferred for patient')\n        }\n      }\n    },\n    async getItems() {\n      if (this.currentDrugs.length > 0) {\n        this.items = [\n          {\n            label: \"Did not take prescribed drugs\",\n            value: \"on treatment\",\n            other: {\n              action: () => this.$router.push(`/art/encounters/bp_adherence/${this.patientID}`)\n            }\n          },\n          {\n            label: \"Continue drugs\",\n            value: \"on treatment\",\n            other: {\n              action: () => this.$router.push(`/art/encounters/bp_adherence/${this.patientID}`)\n            }\n          },\n          {\n            label: \"Review drugs\",\n            value: \"on treatment\",\n            other: {\n              action: () => this.$router.push(\n                `/art/encounters/bp_adherence/${this.patientID}?review=true`\n              )\n            }\n          },\n        ];\n      } else {\n        this.items = [\n          {\n            label: \"Lifestyle advice given\",\n            value: \"Lifestyle changes only\",\n          },\n          {\n            label: \"Not yet stable on ART\",\n            value: \"Symptomatic but not in treatment\",\n          },\n          {\n            label: \"Patient declining BP drugs \",\n            value: \"Symptomatic but not in treatment\",\n          },\n        ]\n        if (this.normatensive) {\n          this.items.push({\n            label: \"Return to annual screening\",\n            value: \"Alive\",\n          })\n        }\n        this.items.push({\n          label: \"Start anti hypertensives\",\n          value: \"On treatment\",\n          other: {\n            action: () => this.$router.push(\n              `/art/encounters/bp_prescription/${this.patientID}`\n            )\n          }\n        })\n      }\n    }\n  }\n})\n","import { render } from \"./BPManagement.vue?vue&type=template&id=41e2dbe2&ts=true\"\nimport script from \"./BPManagement.vue?vue&type=script&lang=ts\"\nexport * from \"./BPManagement.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/projects/malawi-emr/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { AppEncounterService } from \"@/services/app_encounter_service\";\nimport { isArray } from \"lodash\";\nimport { Option } from '@/components/Forms/FieldInterface';\nexport class VitalsService extends AppEncounterService{\n  constructor(patientID: number, providerID: number) {\n    super(patientID, 6, providerID);\n  }\n  isNotEmptyandNumber(vital: Option) {\n    return `${vital.value}`.match(/^-?\\d+\\.?\\d*$/) ? null : [`Invalid entry for ${vital.label}`]\n  }\n  isNotEmptyandFloat(vital: Option) {\n    return `${vital.value}`.match(/^\\d{1,3}\\.\\d{1,5}$/) \n      ? null \n      : [`Invalid entry for ${vital.label}. Don't forget to add a decimal. e.g. 56.2 ${vital.other?.modifier || ''}`]\n  }\n  checkMinMax(val: Option, min: number, max: number) {\n    const p = [];\n    if (parseFloat(`${val.value}`) < min) {\n      p.push([`${val.label} entered is less than minimum ${min} ${val?.other?.modifier || ''}`])\n    }\n    if (parseFloat(`${val.value}`) > max) {\n      p.push([`${val.label} entered is greater than maximum ${max} ${val?.other?.modifier || ''}`])\n    }\n    return p.length > 0 ? p : null;\n  }\n  validateAll(vitals: Option[]) {\n    const p: any = [];\n    vitals.map((vital: any) => {\n      const j = this.validator(vital);\n      return isArray(j) ? p.push(j) : null\n    })\n    return p.length > 0 ? p : null;\n  }\n\n  mergeErrors(errors: any[]) {\n    const holder: any = [];\n    errors.forEach(element => {\n      if (isArray(element)) {\n        holder.push(element)\n      }\n    });\n    return holder.length > 0 ? holder : null\n  }\n  isValidBPReading(vital: any) {\n    const p = [];\n    const isValidBP =  `${vital.value}`.match(/^\\d{1,3}\\/\\d{1,3}$/g) ? null : ['Invalid BP reading']\n    p.push(isValidBP);\n    if(isValidBP == null) {\n      const value = `${vital.value}`.split('/');\n      \n      const bpSystolic = {\n        label: 'Systolic',\n        value: value[0]\n      };\n      const bpDiastolic = {\n        label: 'Diastolic',\n        value: value[1]\n      };\n      p.push(this.checkMinMax(bpDiastolic, 30, 200))\n      p.push(this.checkMinMax(bpSystolic, 40, 250))\n    }\n    return this.mergeErrors(p)\n  }\n  validator(vital: Option) {\n    const values = [\n      {\n        name: \"Weight\",\n        validator: (val: Option) => {\n          const emptyErrors = this.isNotEmptyandFloat(val);\n          const minErrors = this.checkMinMax(val, 2.0, 250.0);\n          return this.mergeErrors([emptyErrors, minErrors]); \n        },\n      },\n      {\n        name: \"Height\",\n        validator: (val: Option) => {\n          const errors = []\n          errors.push(this.isNotEmptyandNumber(val))\n          errors.push(this.checkMinMax(val, 40, 220))\n          return this.mergeErrors(errors); \n        },\n      }, {\n        name: \"BP\",\n        validator: (val: any) => {\n          return this.isValidBPReading(val)\n        },\n      }, {\n        name: \"Temp\",\n        validator: (val: any) => {\n          const emptyErrors = this.isNotEmptyandNumber(val);\n          const minErrors = this.checkMinMax(val, 30, 42);\n          return this.mergeErrors([emptyErrors, minErrors]); \n        },\n      }, {\n        name: \"SP02\",\n        validator: (val: any) => {\n          const minErrors = this.checkMinMax(val, 40, 100);\n          return this.mergeErrors([minErrors]); \n        },\n      }, {\n        name: \"Pulse\",\n        validator: (val: any) => {\n          const minErrors = this.checkMinMax(val, 50, 120);\n          return this.mergeErrors([minErrors]); \n        },\n      }\n    ]\n    const v = values.filter(element => {\n      return element.name === vital.label;\n    });\n    if (v.length > 0) {\n      return v[0].validator(vital);\n    }\n    return null\n  }\n}"],"sourceRoot":""}