{"version":3,"sources":["webpack:///./src/apps/OPD/views/reports/clinic/Diagnosis.vue?55bf","webpack:///./src/apps/OPD/views/reports/clinic/Diagnosis.vue","webpack:///./src/apps/OPD/views/reports/clinic/Diagnosis.vue?1828","webpack:///./src/apps/OPD/services/opd_report_service.ts"],"names":["render","_ctx","_cache","$props","$setup","$data","$options","_component_report_template","_resolveComponent","_component_ion_page","_openBlock","_createBlock","default","_withCtx","_createVNode","title","rows","fields","columns","period","customInfo","onReportConfiguration","init","_","defineComponent","components","ReportTemplate","IonPage","mixins","ReportMixin","data","reportService","label","value","table","thTxt","sortable","exportable","colspan","created","this","getDateDurationFields","methods","config","OpdReportService","setStartDate","start_date","setEndDate","end_date","getDateIntervalPeriod","buildRows","getDiagnosis","visits","getAttendance","length","totalDiagnosis","diagnosis","Object","values","reduce","a","b","getDrillDownColumns","buildColumn","patients","isEmpty","td","tdLink","async","drilldownData","Promise","all","tableRows","map","p","Patientservice","findByID","patientId","patient","getGivenName","getFamilyName","getGender","getPhoneNumber","getCurrentDistrict","getCurrentVillage","getClosestLandmark","keys","forEach","underSixFemales","get","underSixMales","underFiveFemales","underFiveMales","underFourteenFemales","underFourteenMales","overFourteenFemales","overFourteenMales","push","style","textAlign","sort","__exports__","LA_TYPES","one","two","three","four","NCD_TYPES","MENTAL_HEALTH_DIAGNOSIS","Service","constructor","super","endDate","startDate","epiweek","date","getSessionDate","programID","getProgramID","getPatientsWithNIDs","getReport","getClinicRegistrations","getDrugsGivenWithoutPrescription","getDrugsGivenWithPrescription","url","getJson","getDiagnosisByAddress","getLaPrescriptions","getMalariaReport","printLaReport","printService","PrintoutService","params","v","i","printLbl","Url","parameterizeObjToString","HisDate","toStandardHisDisplayFormat","setEpiWeek","getReportPeriod","buildRequest","payload","minDuration","quarters","year","getCurrentYear","name","start","end"],"mappings":"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","file":"js/chunk-38b20952.b2cd1d71.js","sourcesContent":["import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_report_template = _resolveComponent(\"report-template\")!\n  const _component_ion_page = _resolveComponent(\"ion-page\")!\n\n  return (_openBlock(), _createBlock(_component_ion_page, null, {\n    default: _withCtx(() => [\n      _createVNode(_component_report_template, {\n        title: _ctx.title,\n        rows: _ctx.rows,\n        fields: _ctx.fields,\n        columns: _ctx.columns,\n        period: _ctx.period,\n        customInfo: _ctx.customInfo,\n        onReportConfiguration: _ctx.init\n      }, null, 8, [\"title\", \"rows\", \"fields\", \"columns\", \"period\", \"customInfo\", \"onReportConfiguration\"])\n    ]),\n    _: 1\n  }))\n}","\nimport { defineComponent } from 'vue'\nimport { OpdReportService } from \"@/apps/OPD/services/opd_report_service\"\nimport ReportTemplate from \"@/views/reports/BaseTableReport.vue\"\nimport table, { ColumnInterface, RowInterface } from \"@/components/DataViews/tables/ReportDataTable\"\nimport ReportMixin from '@/apps/ART/views/reports/ReportMixin.vue'\nimport { get, isEmpty } from 'lodash'\nimport { IonPage } from \"@ionic/vue\";\nimport { Patientservice } from '@/services/patient_service'\n\nexport default defineComponent({\n  components: { ReportTemplate, IonPage },\n  mixins: [ReportMixin],\n  data: () => ({\n    title: 'OPD Diagnosis',\n    rows: [] as RowInterface[][],\n    reportService: {} as any,\n    customInfo: {\n      label: \"Total OPD Visits\",\n      value: 0\n    },\n    columns: [\n      [\n        table.thTxt('Age Groups', {\n          sortable: false,\n          exportable: false \n        }),\n        table.thTxt('<6 months', {\n          colspan: 2,\n          sortable: false,\n          exportable: false \n        }),\n        table.thTxt('6 months < 5 yrs', {\n          colspan: 2,\n          sortable: false,\n          exportable: false \n        }),\n        table.thTxt('5 yrs < 14 yrs', {\n          colspan: 2,\n          sortable: false,\n          exportable: false \n        }),\n        table.thTxt('> 14 yrs', {\n          colspan: 2,\n          sortable: false,\n          exportable: false \n        }),\n        table.thTxt('', {\n          sortable: false,\n          exportable: false \n        }),\n      ],\n      [\n        table.thTxt('Diagnosis'),\n        table.thTxt('F', { value: 'Females <6 months' }),\n        table.thTxt('M', { value: 'Males <6 months' }),\n        table.thTxt('F', { value: 'Females 6 months < 5 yrs'}),\n        table.thTxt('M', { value: 'Males 6 months < 5 yrs' }),\n        table.thTxt('F', { value: 'Females 5 yrs < 14 yrs' }),\n        table.thTxt('M', { value: 'Males 5 yrs < 14 yrs' }),\n        table.thTxt('F', { value: 'Females > 14 yrs' }),\n        table.thTxt('M', { value: 'Males > 14 yrs' }),\n        table.thTxt('Total'),\n      ]\n    ] as ColumnInterface[][],\n  }),\n  created(){\n    this.fields = this.getDateDurationFields()\n  },\n  methods: {\n    async init(_: any, config: any){\n      this.reportService = new OpdReportService()\n      this.reportService.setStartDate(config.start_date)\n      this.reportService.setEndDate(config.end_date)\n      this.period = this.reportService.getDateIntervalPeriod()\n      this.rows = this.buildRows((await this.reportService.getDiagnosis()))\n      const visits = await this.reportService.getAttendance()\n      this.customInfo.value = visits.length\n      \n    },\n    totalDiagnosis(diagnosis: Record<string, number>) {\n      return Object.values(diagnosis).reduce((a, b) => a + b, 0)\n    },\n    getDrillDownColumns() {\n      return [[\n        table.thTxt(\"Patient ID\"),\n        table.thTxt(\"First Name\"),\n        table.thTxt(\"Last Name\"),\n        table.thTxt(\"Gender\"),\n        table.thTxt(\"Phone Number\"),\n        table.thTxt(\"Address\")\n      ]]\n    },\n    buildColumn(patients: Array<string>, title='Drilldown Data') {\n      if(isEmpty(patients)) {\n        return table.td(0)\n      }\n      return table.tdLink(patients.length, async () => this.drilldownData(\n        title,\n        this.getDrillDownColumns(),\n        patients,\n        async (tableRows: number[]) => {\n          return await Promise.all(tableRows.map( async (patientId) => {\n            const p = await Patientservice.findByID(patientId)\n            const patient = new Patientservice(p)\n            return [\n              table.td(patientId),\n              table.td(patient.getGivenName()),\n              table.td(patient.getFamilyName()),\n              table.td(patient.getGender()),\n              table.td(patient.getPhoneNumber()),\n              table.td(`${patient.getCurrentDistrict()}, ${patient.getCurrentVillage()}, ${patient.getClosestLandmark()}`)\n            ]\n          }))\n        }\n      ))\n    },\n    buildRows(data: Record<string, any>): RowInterface[][] {\n      if(isEmpty(data)) return []\n      const rows: RowInterface[][] = []\n      Object.keys(data).forEach(diagnosis => {\n        const underSixFemales: Array<string> = get(data[diagnosis], \"F.0-5 months\", [])\n        const underSixMales: Array<string> = get(data[diagnosis], 'M.0-5 months', [])\n        const underFiveFemales: Array<string> = get(data[diagnosis], 'F.6 mth < 5 yrs', [])\n        const underFiveMales: Array<string> = get(data[diagnosis], 'M.6 mth < 5 yrs', [])\n        const underFourteenFemales: Array<string> = get(data[diagnosis], 'F.5-14 yrs', [])\n        const underFourteenMales: Array<string> = get(data[diagnosis], 'M.5-14 yrs', [])\n        const overFourteenFemales: Array<string> = get(data[diagnosis], 'F.>= 14 years', [])\n        const overFourteenMales: Array<string> = get(data[diagnosis], 'M.>= 14 years', [])\n\n        rows.push([\n          table.td(diagnosis, {style: {textAlign: 'left'}}),\n          this.buildColumn(underSixFemales, `under 6 months females diagnosed with ${diagnosis}`),\n          this.buildColumn(underSixMales, `under 6 months males diagnosed with ${diagnosis}`),\n          this.buildColumn(underFiveFemales, `under 5 years females diagnosed with ${diagnosis}`),\n          this.buildColumn(underFiveMales, `under 5 years males diagnosed with ${diagnosis}`),\n          this.buildColumn(underFourteenFemales, `under 14 years females diagnosed with ${diagnosis}`),\n          this.buildColumn(underFourteenMales, `under 14 years males diagnosed with ${diagnosis}`),\n          this.buildColumn(overFourteenFemales, `over 14 years females diagnosed with ${diagnosis}`),\n          this.buildColumn(overFourteenMales, `over 14 years males diagnosed with ${diagnosis}`),\n          this.buildColumn([\n            ...underFiveFemales,\n            ...underFiveMales,\n            ...underSixFemales,\n            ...underSixMales,\n            ...underFourteenFemales,\n            ...underFourteenMales,\n            ...overFourteenFemales,\n            ...overFourteenMales\n          ], `Total diagnosed with ${diagnosis}`),\n        ])\n      })\n\n      return rows.sort((a, b) => {\n        if(a[0].td < b[0].td) return -1\n        if(a[0].td > b[0].td) return 1\n        return 0\n      })\n    },\n  },\n})\n","import { render } from \"./Diagnosis.vue?vue&type=template&id=3e22f9be&ts=true\"\nimport script from \"./Diagnosis.vue?vue&type=script&lang=ts\"\nexport * from \"./Diagnosis.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { Service } from \"@/services/service\";\nimport HisDate from \"@/utils/Date\"\nimport { PrintoutService } from '@/services/printout_service';\nimport Url from \"@/utils/Url\";\n\nexport interface QuarterInterface {\n    name: string;\n    start: string;\n    end: string;\n}\n\nexport const AGE_GROUPS = [\n    '0-5 months', '6-11 months',\n    '12-23 months', '2-4 years', \n    '5-9 years', '10-14 years', \n    '15-17 years', '18-19 years', \n    '20-24 years', '25-29 years', \n    '30-34 years', '35-39 years', \n    '40-44 years', '45-49 years', \n    '50 plus years'\n]\n\nexport const OTHER_AGE_GROUPS = [\n    '<1 year', '1-4 years',\n    '5-9 years', '10-14 years',\n    '15-19 years', '20-24 years',\n    '25-29 years', '30-34 years',\n    '35-39 years', '40-44 years',\n    '45-49 years', '50 plus years'\n]\n\nexport const LA_TYPES: Record<string, string> = {\n    one: 'AL 1', \n    two: 'AL 2', \n    three: 'AL 3', \n    four: 'LA 4'\n}\n\nexport const NCD_TYPES = [\n    'Diabetes',\n    'Hypertension',\n    'Stroke',\n    'Suspected cancer',\n    'Confirmed cancer',\n    'Palliative cancer',\n    'Asthma',\n    'Depression',\n    'Acute psychosis',\n    'Chronic psychosis',\n    'Epilepsy'\n]\n\nexport const MENTAL_HEALTH_DIAGNOSIS = [\n    'Organic mental disorder (Chronic)',\n    'Organic mental disorder (acute)',\n    'Alcohol use mental disorder',\n    'Drug use mental disorder',\n    'Schizophrenia',\n    'Acute and transient psychotic disorder',\n    'Schizo-affective disorder',\n    'Mood-affective disorder (MANIC)',\n    'Mood-affective disorder (BIPOLAR)',\n    'Mood-affective disorder (DEPRESSION)',\n    'Anxiety disorder',\n    'Stress reaction adjustment disorder',\n    'Dissociative conversion disorder',\n    'Somatoform disorder',\n    'Puerperal mental disorder',\n    'Personality/Behaviour disorder',\n    'Mental retardation',\n    'Psychological mental disorder',\n    'Hyperkinetic conduct disorder',\n    'Epilepsy'\n]\n\nexport class OpdReportService extends Service {\n    programID: number;\n    startDate: string;\n    endDate: string;\n    date: string;\n    epiweek: string;\n    constructor() {\n        super()\n        this.endDate = ''\n        this.startDate = ''\n        this.epiweek = ''\n        this.date = Service.getSessionDate()\n        this.programID = Service.getProgramID()\n    }\n\n    getPatientsWithNIDs() {\n        return this.getReport('with_nids')\n    }\n\n    getClinicRegistrations(){\n        return this.getReport('registration');\n    }\n\n    getAttendance(){\n        return this.getReport(`programs/${this.programID}/reports/attendance`)\n    }\n\n    getDrugsGivenWithoutPrescription() {\n        return this.getReport('drugs_given_without_prescription')\n    }\n\n    getDrugsGivenWithPrescription() {\n        return this.getReport('drugs_given_with_prescription')\n    }\n\n    getDiagnosis(){\n        const url = `programs/${this.programID}/reports/diagnosis`\n        return Service.getJson(url, {\n            'start_date': this.startDate,\n            'end_date': this.endDate,\n            'date': this.date\n        })\n    }\n\n    getDiagnosisByAddress(){\n        return this.getReport('diagnosis_by_address')\n    }\n\n    getLaPrescriptions(){\n        const url = `programs/${this.programID}/reports/la_prescriptions`\n        return Service.getJson(url, {\n            'start_date': this.startDate,\n            'end_date': this.endDate,\n            \n        })\n    }\n\n    getMalariaReport(){\n        const url = `programs/${this.programID}/reports/malaria_report`\n        return Service.getJson(url, {\n            'start_date': this.startDate,\n            'end_date': this.endDate,\n            'date': this.date\n        })\n    }\n    \n    printLaReport(data: Record<string, any>){\n        const printService = new PrintoutService()\n        const url = `programs/${this.programID}/barcodes/la_report`\n        const params: Record<string, any> = {\n            \"date[start]\": this.startDate,\n            \"date[end]\": this.endDate\n        }\n        Object.keys(LA_TYPES).forEach((v, i) => {\n            i++\n            params[`${i}[prescription]`] = data[`total_la_${v}_prescribed_drugs`]\n            params[`${i}[dispensed]`] = data[`total_la_${v}_dispensed_drugs`]\n        })\n        return printService.printLbl(`${url}?${Url.parameterizeObjToString(params)}`)\n    }\n\n    getDateIntervalPeriod() {\n        return `${HisDate.toStandardHisDisplayFormat(this.startDate)} - ${HisDate.toStandardHisDisplayFormat(this.endDate)}`\n    }\n\n    setStartDate(startDate: string) {\n        this.startDate = startDate\n    }  \n\n    setEndDate(endDate: string) {\n        this.endDate = endDate\n    }\n\n    setEpiWeek(epiweek: string) {\n        this.epiweek = epiweek\n    }\n\n    getReportPeriod() {\n        return this.startDate && this.endDate\n         ? `${HisDate.toStandardHisDisplayFormat(this.startDate)} - ${HisDate.toStandardHisDisplayFormat(this.endDate)}`\n         : '-'\n    }\n\n    getReport(url: string, params={}) {\n        return Service.getJson(url, this.buildRequest(params))\n    }\n\n    buildRequest(config: Record<string, any> = {}) {\n        const payload: any = {'date': this.date, 'program_id': this.programID}\n        if (this.startDate && this.endDate) {\n            payload['start_date'] = this.startDate\n            payload['end_date'] = this.endDate\n        }\n        if (this.epiweek) {\n            payload['epiweek'] = this.epiweek\n        }\n        return { ...payload, ...config }\n    }\n\n    static getReportQuarters(minDuration= 4) {\n        const quarters: Array<QuarterInterface> = []\n        let year = HisDate.getCurrentYear()\n        for(let i=0; i < minDuration; ++i) {\n            quarters.push({ name: `Q4 ${year}`, start: `${year}-10-01`, end: `${year}-12-31` })\n            quarters.push({ name: `Q3 ${year}`, start: `${year}-07-01`, end: `${year}-09-30` })\n            quarters.push({ name: `Q2 ${year}`, start: `${year}-04-01`, end: `${year}-06-30` })\n            quarters.push({ name: `Q1 ${year}`, start: `${year}-01-01`, end: `${year}-03-31` })\n            --year\n        }\n        return quarters\n    }\n\n}"],"sourceRoot":""}