{"version":3,"sources":["webpack:///./src/components/Keyboard/KbHandler.ts","webpack:///./src/components/Keyboard/KbLayouts.ts","webpack:///./node_modules/fuse.js/dist/fuse.esm.js","webpack:///./src/components/Keyboard/HisKbConfigurations.ts","webpack:///./src/components/Keyboard/BaseKeyboard.vue?b85c","webpack:///./src/components/Keyboard/BaseKeyboard.vue","webpack:///./src/components/Keyboard/BaseKeyboard.vue?76ea","webpack:///./src/components/Keyboard/HisKeyboard.vue?dcb9","webpack:///./src/components/Keyboard/HisKeyboard.vue","webpack:///./src/components/Keyboard/HisKeyboard.vue?396a"],"names":["kbHandler","newInput","accumulator","casing","output","match","substring","length","toLowerCase","toUpperCase","charAt","slice","DEFAULT_KEYPAD","PRESCRIPTION_KEYPAD","FLOAT_KEYPAD","VITALS_KEYPAD","DRUG_DISPENSER_KEYPAD","CD4_COUNT_PAD_LO","SYMBOLS","NUMBER_PAD_LO","NUMBER_ARROW_PAD_LO","MONTHLY_DAYS_LO","ALPHABETICAL_LO","QWERTY_LO","CHARACTERS_AND_NUMBERS_LO","NOTE_PAD_KEYBOARD","LOGIN_KEYBOARD","isArray","value","Array","getTag","INFINITY","baseToString","result","toString","isString","isNumber","isBoolean","isObjectLike","isObject","isDefined","undefined","isBlank","trim","Object","prototype","call","INCORRECT_INDEX_TYPE","LOGICAL_SEARCH_INVALID_QUERY_FOR_KEY","key","PATTERN_LENGTH_TOO_LARGE","max","MISSING_KEY_PROPERTY","name","INVALID_KEY_WEIGHT_VALUE","hasOwn","hasOwnProperty","KeyStore","keys","this","_keys","_keyMap","totalWeight","forEach","obj","createKey","weight","push","id","keyId","JSON","stringify","path","src","getFn","createKeyPath","createKeyId","Error","split","join","get","list","arr","deepGet","index","i","len","MatchOptions","includeMatches","findAllMatches","minMatchCharLength","BasicOptions","isCaseSensitive","includeScore","shouldSort","sortFn","a","b","score","idx","FuzzyOptions","location","threshold","distance","AdvancedOptions","useExtendedSearch","ignoreLocation","ignoreFieldNorm","fieldNormWeight","Config","SPACE","norm","mantissa","cache","Map","m","Math","pow","numTokens","has","n","parseFloat","round","set","clear","FuseIndex","isCreated","setIndexRecords","docs","records","_keysMap","doc","docIndex","_addString","_addObject","size","splice","item","record","v","$","keyIndex","subRecords","stack","nestedArrIndex","pop","subRecord","k","createIndex","myIndex","setKeys","map","setSources","create","parseIndex","data","computeScore$1","pattern","errors","currentLocation","expectedLocation","accuracy","proximity","abs","convertMaskToIndices","matchmask","indices","start","end","MAX_BITS","search","text","patternAlphabet","patternLen","textLen","min","currentThreshold","bestLocation","computeMatches","matchMask","indexOf","lastBitArr","finalScore","binMax","mask","binMin","binMid","floor","finish","bitArr","j","charMatch","isMatch","createPatternAlphabet","char","BitapSearch","options","chunks","addChunk","startIndex","alphabet","remainder","substr","allIndices","totalScore","hasMatches","BaseMatch","getMatch","multiRegex","singleRegex","exp","matches","ExactMatch","super","InverseExactMatch","PrefixExactMatch","startsWith","InversePrefixExactMatch","SuffixExactMatch","endsWith","InverseSuffixExactMatch","FuzzyMatch","_bitapSearch","searchIn","IncludeMatch","searchers","searchersLen","SPACE_RE","OR_TOKEN","parseQuery","query","filter","results","queryItem","found","searcher","token","isMultiMatch","isSingleMatch","MultiMatchSet","Set","type","ExtendedSearch","_","numMatches","qLen","pLen","constructor","registeredSearchers","register","args","createSearcher","searcherClass","condition","LogicalOperator","AND","OR","KeyType","PATH","PATTERN","isExpression","isPath","isLeaf","convertToExplicit","parse","auto","next","isQueryPath","node","children","operator","computeScore","Number","EPSILON","transformMatches","refIndex","transformScore","format","transformers","transformer","Fuse","_keyStore","setCollection","_docs","_myIndex","add","predicate","removeAt","limit","_searchStringList","_searchObjectList","_searchLogical","sort","expression","evaluate","_findMatches","getValueForItemAtKeyId","res","child","resultMap","expResults","version","config","SYMBOLS_CONFIG","NUMBERS_ONLY","NUMBERS_WITH_UNKNOWN","NUMBERS_WITH_ESTIMATE","NUMBERS_WITHOUT_NA_UNKNOWN","NUMBERS","MONTHLY_DAYS","A_TO_Z","QWERTY","KEY_BTN_NAV","btn","keyboard","render","_ctx","_cache","$props","$setup","$data","$options","_component_ion_button","_resolveComponent","_openBlock","_createElementBlock","_Fragment","_renderList","layout","row","rowIndex","btnKey","btnIndex","class","_createBlock","style","_normalizeStyle","width","btnSize","_normalizeClass","dynamicClass","onClick","keyPress","default","_withCtx","_createTextVNode","_toDisplayString","_createCommentVNode","defineComponent","components","IonButton","props","String","required","onKeyPress","Function","methods","__exports__","_hoisted_1","_hoisted_2","_component_base_keyboard","_createElementVNode","activeLayout","_createVNode","keypress","BaseKeyboard","initalKeyboardName","kbConfig","watch","handler","$nextTick","switchKeyboard","immediate","deep","isFunctionKey","kbIndex"],"mappings":"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","file":"js/chunk-03993608.d6d7b0a3.js","sourcesContent":["export default function kbHandler(newInput: string, accumulator: string, casing?: 'lowercase' | 'uppercase'): string {\n    let output = accumulator\n    if (newInput.match(/enter/i)) {\n        return `${output}\\r\\n`\n    }\n    if (newInput.match(/clear/i)) {\n        return ''\n    } else if (newInput.match(/delete|del/i)) {\n        // Override Unknown text with new input\n        if (output.match(/unknown/i) || output.match(/n\\/a/i)) {\n            output = ''\n        } else {\n            output = output.substring(0, output.length - 1)\n        }\n    } else if (newInput.match(/space/i)) {\n        output = `${accumulator} `\n    } else if (newInput.match(/unknown/i)) {\n        output = 'Unknown'\n    } else if (newInput.match(/n\\/a/i)) {\n        output = 'N/A'\n    } else {\n        // Override Unknown text with new input\n        if (output.match(/unknown/i) || output.match(/n\\/a/i)) {\n            output = newInput\n        } else {\n            output = `${accumulator}${newInput}`\n        }\n    }\n    if (typeof output === 'string' && output) {\n        switch (casing) {\n            case 'lowercase':\n                output = output.toLowerCase()\n                break;\n            case 'uppercase':\n                output = output.toUpperCase()\n                break;\n            default:\n                output = output.charAt(0).toUpperCase() + output.slice(1)\n                break;\n        }\n    }\n    return output\n}\n","export const DEFAULT_KEYPAD = [\n    ['1', '2', '3'],\n    ['4', '5', '6'],\n    ['7', '8', '9'],\n    ['.', '0', 'Del'],\n    ['',  'Done', '']\n]\nexport const PRESCRIPTION_KEYPAD = [\n    ['1', '2', '3'],\n    ['4', '5', '6'],\n    ['7', '8', '9'],\n    ['Del', '0', '.'],\n    ['Unknown', '', ''],\n]\nexport const FLOAT_KEYPAD = [\n    ['1', '2', '3'],\n    ['4', '5', '6'],\n    ['7', '8', '9'],\n    ['.', '0', '']\n]\nexport const VITALS_KEYPAD = [\n    ['1', '2', '3'],\n    ['4', '5', '6'],\n    ['7', '8', '9'],\n    ['.', '0', 'Del'],\n    ['Clear',  '%', '/']\n]\nexport const DRUG_DISPENSER_KEYPAD = [\n    ['1', '2', '3'],\n    ['4', '5', '6'],\n    ['7', '8', '9'],\n    ['Del.', '0', 'Clear'],\n    // ['Reset',  'Close', 'Dispense']\n]\nexport const CD4_COUNT_PAD_LO = [\n    ['1', '2', '3', '<'],\n    ['4', '5', '6', '>'],\n    ['7', '8', '9', '='],\n    ['',  '0', '']\n]\n\nexport const SYMBOLS = [\n    ['1', '2', '3', '+', '-', '/', '*'],\n    ['4', '5', '6', '%', '=', '<', '>', 'Qwerty'],\n    ['7', '8', '9', '.', ','],\n    ['',  '0', '']\n]\n\nexport const NUMBER_PAD_LO = [\n    ['1', '2', '3'],\n    ['4', '5', '6'],\n    ['7', '8', '9'],\n    ['',  '0', '']\n]\n\nexport const NUMBER_ARROW_PAD_LO = [\n    ['1', '2', '3'],\n    ['4', '5', '6'],\n    ['7', '8', '9'],\n    ['←',  '0', '→']\n]\n\nexport const MONTHLY_DAYS_LO = [\n    ['1', '2', '3', '4', '5', '6', '7'],\n    ['8', '9', '10', '11', '12', '13', '14'],\n    ['15', '16', '17', '18', '19', '20', '21'],\n    ['22', '23', '24', '25', '26', '27', '28'],\n    ['29', '30', '31']\n]\n\nexport const ALPHABETICAL_LO = [\n    ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', '.'],\n    ['i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q'],\n    ['r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n]\n\nexport const QWERTY_LO = [\n    ['q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p'],\n    ['a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l', \"'\"],\n    ['z', 'x', 'c', 'v', 'b', 'n', 'm',',', '.', 'A-Z']\n]\n\nexport const CHARACTERS_AND_NUMBERS_LO = [\n    ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0'],\n    ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', '-', '.'],\n    ['i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q'],\n    ['r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n]\nexport const NOTE_PAD_KEYBOARD = [\n    ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0', 'Del'],\n    [\"q\", \"w\", \"e\", \"r\", \"t\", \"y\", \"u\", \"i\", \"o\", \"p\", 'Clear'],\n    [\"a\", \"s\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \".\", \"Caps\"],\n    [\"z\", \"x\", \"c\", \"v\", \"b\", \"n\", \"m\", \"<\", \">\", \"/\", \"Enter\"], \n]\n\nexport const LOGIN_KEYBOARD =  [\n    [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"0\"],\n    [\"q\", \"w\", \"e\", \"r\", \"t\", \"y\", \"u\", \"i\", \"o\", \"p\"],\n    [\"a\", \"s\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"Del.\"],\n    [\"z\", \"x\", \"c\", \"v\", \"b\", \"n\", \"m\", \"Caps\", \"Login\"],\n];\n","/**\n * Fuse.js v6.6.2 - Lightweight fuzzy-search (http://fusejs.io)\n *\n * Copyright (c) 2022 Kiro Risk (http://kiro.me)\n * All Rights Reserved. Apache Software License 2.0\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nfunction isArray(value) {\n  return !Array.isArray\n    ? getTag(value) === '[object Array]'\n    : Array.isArray(value)\n}\n\n// Adapted from: https://github.com/lodash/lodash/blob/master/.internal/baseToString.js\nconst INFINITY = 1 / 0;\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value\n  }\n  let result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result\n}\n\nfunction toString(value) {\n  return value == null ? '' : baseToString(value)\n}\n\nfunction isString(value) {\n  return typeof value === 'string'\n}\n\nfunction isNumber(value) {\n  return typeof value === 'number'\n}\n\n// Adapted from: https://github.com/lodash/lodash/blob/master/isBoolean.js\nfunction isBoolean(value) {\n  return (\n    value === true ||\n    value === false ||\n    (isObjectLike(value) && getTag(value) == '[object Boolean]')\n  )\n}\n\nfunction isObject(value) {\n  return typeof value === 'object'\n}\n\n// Checks if `value` is object-like.\nfunction isObjectLike(value) {\n  return isObject(value) && value !== null\n}\n\nfunction isDefined(value) {\n  return value !== undefined && value !== null\n}\n\nfunction isBlank(value) {\n  return !value.trim().length\n}\n\n// Gets the `toStringTag` of `value`.\n// Adapted from: https://github.com/lodash/lodash/blob/master/.internal/getTag.js\nfunction getTag(value) {\n  return value == null\n    ? value === undefined\n      ? '[object Undefined]'\n      : '[object Null]'\n    : Object.prototype.toString.call(value)\n}\n\nconst EXTENDED_SEARCH_UNAVAILABLE = 'Extended search is not available';\n\nconst INCORRECT_INDEX_TYPE = \"Incorrect 'index' type\";\n\nconst LOGICAL_SEARCH_INVALID_QUERY_FOR_KEY = (key) =>\n  `Invalid value for key ${key}`;\n\nconst PATTERN_LENGTH_TOO_LARGE = (max) =>\n  `Pattern length exceeds max of ${max}.`;\n\nconst MISSING_KEY_PROPERTY = (name) => `Missing ${name} property in key`;\n\nconst INVALID_KEY_WEIGHT_VALUE = (key) =>\n  `Property 'weight' in key '${key}' must be a positive integer`;\n\nconst hasOwn = Object.prototype.hasOwnProperty;\n\nclass KeyStore {\n  constructor(keys) {\n    this._keys = [];\n    this._keyMap = {};\n\n    let totalWeight = 0;\n\n    keys.forEach((key) => {\n      let obj = createKey(key);\n\n      totalWeight += obj.weight;\n\n      this._keys.push(obj);\n      this._keyMap[obj.id] = obj;\n\n      totalWeight += obj.weight;\n    });\n\n    // Normalize weights so that their sum is equal to 1\n    this._keys.forEach((key) => {\n      key.weight /= totalWeight;\n    });\n  }\n  get(keyId) {\n    return this._keyMap[keyId]\n  }\n  keys() {\n    return this._keys\n  }\n  toJSON() {\n    return JSON.stringify(this._keys)\n  }\n}\n\nfunction createKey(key) {\n  let path = null;\n  let id = null;\n  let src = null;\n  let weight = 1;\n  let getFn = null;\n\n  if (isString(key) || isArray(key)) {\n    src = key;\n    path = createKeyPath(key);\n    id = createKeyId(key);\n  } else {\n    if (!hasOwn.call(key, 'name')) {\n      throw new Error(MISSING_KEY_PROPERTY('name'))\n    }\n\n    const name = key.name;\n    src = name;\n\n    if (hasOwn.call(key, 'weight')) {\n      weight = key.weight;\n\n      if (weight <= 0) {\n        throw new Error(INVALID_KEY_WEIGHT_VALUE(name))\n      }\n    }\n\n    path = createKeyPath(name);\n    id = createKeyId(name);\n    getFn = key.getFn;\n  }\n\n  return { path, id, weight, src, getFn }\n}\n\nfunction createKeyPath(key) {\n  return isArray(key) ? key : key.split('.')\n}\n\nfunction createKeyId(key) {\n  return isArray(key) ? key.join('.') : key\n}\n\nfunction get(obj, path) {\n  let list = [];\n  let arr = false;\n\n  const deepGet = (obj, path, index) => {\n    if (!isDefined(obj)) {\n      return\n    }\n    if (!path[index]) {\n      // If there's no path left, we've arrived at the object we care about.\n      list.push(obj);\n    } else {\n      let key = path[index];\n\n      const value = obj[key];\n\n      if (!isDefined(value)) {\n        return\n      }\n\n      // If we're at the last value in the path, and if it's a string/number/bool,\n      // add it to the list\n      if (\n        index === path.length - 1 &&\n        (isString(value) || isNumber(value) || isBoolean(value))\n      ) {\n        list.push(toString(value));\n      } else if (isArray(value)) {\n        arr = true;\n        // Search each item in the array.\n        for (let i = 0, len = value.length; i < len; i += 1) {\n          deepGet(value[i], path, index + 1);\n        }\n      } else if (path.length) {\n        // An object. Recurse further.\n        deepGet(value, path, index + 1);\n      }\n    }\n  };\n\n  // Backwards compatibility (since path used to be a string)\n  deepGet(obj, isString(path) ? path.split('.') : path, 0);\n\n  return arr ? list : list[0]\n}\n\nconst MatchOptions = {\n  // Whether the matches should be included in the result set. When `true`, each record in the result\n  // set will include the indices of the matched characters.\n  // These can consequently be used for highlighting purposes.\n  includeMatches: false,\n  // When `true`, the matching function will continue to the end of a search pattern even if\n  // a perfect match has already been located in the string.\n  findAllMatches: false,\n  // Minimum number of characters that must be matched before a result is considered a match\n  minMatchCharLength: 1\n};\n\nconst BasicOptions = {\n  // When `true`, the algorithm continues searching to the end of the input even if a perfect\n  // match is found before the end of the same input.\n  isCaseSensitive: false,\n  // When true, the matching function will continue to the end of a search pattern even if\n  includeScore: false,\n  // List of properties that will be searched. This also supports nested properties.\n  keys: [],\n  // Whether to sort the result list, by score\n  shouldSort: true,\n  // Default sort function: sort by ascending score, ascending index\n  sortFn: (a, b) =>\n    a.score === b.score ? (a.idx < b.idx ? -1 : 1) : a.score < b.score ? -1 : 1\n};\n\nconst FuzzyOptions = {\n  // Approximately where in the text is the pattern expected to be found?\n  location: 0,\n  // At what point does the match algorithm give up. A threshold of '0.0' requires a perfect match\n  // (of both letters and location), a threshold of '1.0' would match anything.\n  threshold: 0.6,\n  // Determines how close the match must be to the fuzzy location (specified above).\n  // An exact letter match which is 'distance' characters away from the fuzzy location\n  // would score as a complete mismatch. A distance of '0' requires the match be at\n  // the exact location specified, a threshold of '1000' would require a perfect match\n  // to be within 800 characters of the fuzzy location to be found using a 0.8 threshold.\n  distance: 100\n};\n\nconst AdvancedOptions = {\n  // When `true`, it enables the use of unix-like search commands\n  useExtendedSearch: false,\n  // The get function to use when fetching an object's properties.\n  // The default will search nested paths *ie foo.bar.baz*\n  getFn: get,\n  // When `true`, search will ignore `location` and `distance`, so it won't matter\n  // where in the string the pattern appears.\n  // More info: https://fusejs.io/concepts/scoring-theory.html#fuzziness-score\n  ignoreLocation: false,\n  // When `true`, the calculation for the relevance score (used for sorting) will\n  // ignore the field-length norm.\n  // More info: https://fusejs.io/concepts/scoring-theory.html#field-length-norm\n  ignoreFieldNorm: false,\n  // The weight to determine how much field length norm effects scoring.\n  fieldNormWeight: 1\n};\n\nvar Config = {\n  ...BasicOptions,\n  ...MatchOptions,\n  ...FuzzyOptions,\n  ...AdvancedOptions\n};\n\nconst SPACE = /[^ ]+/g;\n\n// Field-length norm: the shorter the field, the higher the weight.\n// Set to 3 decimals to reduce index size.\nfunction norm(weight = 1, mantissa = 3) {\n  const cache = new Map();\n  const m = Math.pow(10, mantissa);\n\n  return {\n    get(value) {\n      const numTokens = value.match(SPACE).length;\n\n      if (cache.has(numTokens)) {\n        return cache.get(numTokens)\n      }\n\n      // Default function is 1/sqrt(x), weight makes that variable\n      const norm = 1 / Math.pow(numTokens, 0.5 * weight);\n\n      // In place of `toFixed(mantissa)`, for faster computation\n      const n = parseFloat(Math.round(norm * m) / m);\n\n      cache.set(numTokens, n);\n\n      return n\n    },\n    clear() {\n      cache.clear();\n    }\n  }\n}\n\nclass FuseIndex {\n  constructor({\n    getFn = Config.getFn,\n    fieldNormWeight = Config.fieldNormWeight\n  } = {}) {\n    this.norm = norm(fieldNormWeight, 3);\n    this.getFn = getFn;\n    this.isCreated = false;\n\n    this.setIndexRecords();\n  }\n  setSources(docs = []) {\n    this.docs = docs;\n  }\n  setIndexRecords(records = []) {\n    this.records = records;\n  }\n  setKeys(keys = []) {\n    this.keys = keys;\n    this._keysMap = {};\n    keys.forEach((key, idx) => {\n      this._keysMap[key.id] = idx;\n    });\n  }\n  create() {\n    if (this.isCreated || !this.docs.length) {\n      return\n    }\n\n    this.isCreated = true;\n\n    // List is Array<String>\n    if (isString(this.docs[0])) {\n      this.docs.forEach((doc, docIndex) => {\n        this._addString(doc, docIndex);\n      });\n    } else {\n      // List is Array<Object>\n      this.docs.forEach((doc, docIndex) => {\n        this._addObject(doc, docIndex);\n      });\n    }\n\n    this.norm.clear();\n  }\n  // Adds a doc to the end of the index\n  add(doc) {\n    const idx = this.size();\n\n    if (isString(doc)) {\n      this._addString(doc, idx);\n    } else {\n      this._addObject(doc, idx);\n    }\n  }\n  // Removes the doc at the specified index of the index\n  removeAt(idx) {\n    this.records.splice(idx, 1);\n\n    // Change ref index of every subsquent doc\n    for (let i = idx, len = this.size(); i < len; i += 1) {\n      this.records[i].i -= 1;\n    }\n  }\n  getValueForItemAtKeyId(item, keyId) {\n    return item[this._keysMap[keyId]]\n  }\n  size() {\n    return this.records.length\n  }\n  _addString(doc, docIndex) {\n    if (!isDefined(doc) || isBlank(doc)) {\n      return\n    }\n\n    let record = {\n      v: doc,\n      i: docIndex,\n      n: this.norm.get(doc)\n    };\n\n    this.records.push(record);\n  }\n  _addObject(doc, docIndex) {\n    let record = { i: docIndex, $: {} };\n\n    // Iterate over every key (i.e, path), and fetch the value at that key\n    this.keys.forEach((key, keyIndex) => {\n      let value = key.getFn ? key.getFn(doc) : this.getFn(doc, key.path);\n\n      if (!isDefined(value)) {\n        return\n      }\n\n      if (isArray(value)) {\n        let subRecords = [];\n        const stack = [{ nestedArrIndex: -1, value }];\n\n        while (stack.length) {\n          const { nestedArrIndex, value } = stack.pop();\n\n          if (!isDefined(value)) {\n            continue\n          }\n\n          if (isString(value) && !isBlank(value)) {\n            let subRecord = {\n              v: value,\n              i: nestedArrIndex,\n              n: this.norm.get(value)\n            };\n\n            subRecords.push(subRecord);\n          } else if (isArray(value)) {\n            value.forEach((item, k) => {\n              stack.push({\n                nestedArrIndex: k,\n                value: item\n              });\n            });\n          } else ;\n        }\n        record.$[keyIndex] = subRecords;\n      } else if (isString(value) && !isBlank(value)) {\n        let subRecord = {\n          v: value,\n          n: this.norm.get(value)\n        };\n\n        record.$[keyIndex] = subRecord;\n      }\n    });\n\n    this.records.push(record);\n  }\n  toJSON() {\n    return {\n      keys: this.keys,\n      records: this.records\n    }\n  }\n}\n\nfunction createIndex(\n  keys,\n  docs,\n  { getFn = Config.getFn, fieldNormWeight = Config.fieldNormWeight } = {}\n) {\n  const myIndex = new FuseIndex({ getFn, fieldNormWeight });\n  myIndex.setKeys(keys.map(createKey));\n  myIndex.setSources(docs);\n  myIndex.create();\n  return myIndex\n}\n\nfunction parseIndex(\n  data,\n  { getFn = Config.getFn, fieldNormWeight = Config.fieldNormWeight } = {}\n) {\n  const { keys, records } = data;\n  const myIndex = new FuseIndex({ getFn, fieldNormWeight });\n  myIndex.setKeys(keys);\n  myIndex.setIndexRecords(records);\n  return myIndex\n}\n\nfunction computeScore$1(\n  pattern,\n  {\n    errors = 0,\n    currentLocation = 0,\n    expectedLocation = 0,\n    distance = Config.distance,\n    ignoreLocation = Config.ignoreLocation\n  } = {}\n) {\n  const accuracy = errors / pattern.length;\n\n  if (ignoreLocation) {\n    return accuracy\n  }\n\n  const proximity = Math.abs(expectedLocation - currentLocation);\n\n  if (!distance) {\n    // Dodge divide by zero error.\n    return proximity ? 1.0 : accuracy\n  }\n\n  return accuracy + proximity / distance\n}\n\nfunction convertMaskToIndices(\n  matchmask = [],\n  minMatchCharLength = Config.minMatchCharLength\n) {\n  let indices = [];\n  let start = -1;\n  let end = -1;\n  let i = 0;\n\n  for (let len = matchmask.length; i < len; i += 1) {\n    let match = matchmask[i];\n    if (match && start === -1) {\n      start = i;\n    } else if (!match && start !== -1) {\n      end = i - 1;\n      if (end - start + 1 >= minMatchCharLength) {\n        indices.push([start, end]);\n      }\n      start = -1;\n    }\n  }\n\n  // (i-1 - start) + 1 => i - start\n  if (matchmask[i - 1] && i - start >= minMatchCharLength) {\n    indices.push([start, i - 1]);\n  }\n\n  return indices\n}\n\n// Machine word size\nconst MAX_BITS = 32;\n\nfunction search(\n  text,\n  pattern,\n  patternAlphabet,\n  {\n    location = Config.location,\n    distance = Config.distance,\n    threshold = Config.threshold,\n    findAllMatches = Config.findAllMatches,\n    minMatchCharLength = Config.minMatchCharLength,\n    includeMatches = Config.includeMatches,\n    ignoreLocation = Config.ignoreLocation\n  } = {}\n) {\n  if (pattern.length > MAX_BITS) {\n    throw new Error(PATTERN_LENGTH_TOO_LARGE(MAX_BITS))\n  }\n\n  const patternLen = pattern.length;\n  // Set starting location at beginning text and initialize the alphabet.\n  const textLen = text.length;\n  // Handle the case when location > text.length\n  const expectedLocation = Math.max(0, Math.min(location, textLen));\n  // Highest score beyond which we give up.\n  let currentThreshold = threshold;\n  // Is there a nearby exact match? (speedup)\n  let bestLocation = expectedLocation;\n\n  // Performance: only computer matches when the minMatchCharLength > 1\n  // OR if `includeMatches` is true.\n  const computeMatches = minMatchCharLength > 1 || includeMatches;\n  // A mask of the matches, used for building the indices\n  const matchMask = computeMatches ? Array(textLen) : [];\n\n  let index;\n\n  // Get all exact matches, here for speed up\n  while ((index = text.indexOf(pattern, bestLocation)) > -1) {\n    let score = computeScore$1(pattern, {\n      currentLocation: index,\n      expectedLocation,\n      distance,\n      ignoreLocation\n    });\n\n    currentThreshold = Math.min(score, currentThreshold);\n    bestLocation = index + patternLen;\n\n    if (computeMatches) {\n      let i = 0;\n      while (i < patternLen) {\n        matchMask[index + i] = 1;\n        i += 1;\n      }\n    }\n  }\n\n  // Reset the best location\n  bestLocation = -1;\n\n  let lastBitArr = [];\n  let finalScore = 1;\n  let binMax = patternLen + textLen;\n\n  const mask = 1 << (patternLen - 1);\n\n  for (let i = 0; i < patternLen; i += 1) {\n    // Scan for the best match; each iteration allows for one more error.\n    // Run a binary search to determine how far from the match location we can stray\n    // at this error level.\n    let binMin = 0;\n    let binMid = binMax;\n\n    while (binMin < binMid) {\n      const score = computeScore$1(pattern, {\n        errors: i,\n        currentLocation: expectedLocation + binMid,\n        expectedLocation,\n        distance,\n        ignoreLocation\n      });\n\n      if (score <= currentThreshold) {\n        binMin = binMid;\n      } else {\n        binMax = binMid;\n      }\n\n      binMid = Math.floor((binMax - binMin) / 2 + binMin);\n    }\n\n    // Use the result from this iteration as the maximum for the next.\n    binMax = binMid;\n\n    let start = Math.max(1, expectedLocation - binMid + 1);\n    let finish = findAllMatches\n      ? textLen\n      : Math.min(expectedLocation + binMid, textLen) + patternLen;\n\n    // Initialize the bit array\n    let bitArr = Array(finish + 2);\n\n    bitArr[finish + 1] = (1 << i) - 1;\n\n    for (let j = finish; j >= start; j -= 1) {\n      let currentLocation = j - 1;\n      let charMatch = patternAlphabet[text.charAt(currentLocation)];\n\n      if (computeMatches) {\n        // Speed up: quick bool to int conversion (i.e, `charMatch ? 1 : 0`)\n        matchMask[currentLocation] = +!!charMatch;\n      }\n\n      // First pass: exact match\n      bitArr[j] = ((bitArr[j + 1] << 1) | 1) & charMatch;\n\n      // Subsequent passes: fuzzy match\n      if (i) {\n        bitArr[j] |=\n          ((lastBitArr[j + 1] | lastBitArr[j]) << 1) | 1 | lastBitArr[j + 1];\n      }\n\n      if (bitArr[j] & mask) {\n        finalScore = computeScore$1(pattern, {\n          errors: i,\n          currentLocation,\n          expectedLocation,\n          distance,\n          ignoreLocation\n        });\n\n        // This match will almost certainly be better than any existing match.\n        // But check anyway.\n        if (finalScore <= currentThreshold) {\n          // Indeed it is\n          currentThreshold = finalScore;\n          bestLocation = currentLocation;\n\n          // Already passed `loc`, downhill from here on in.\n          if (bestLocation <= expectedLocation) {\n            break\n          }\n\n          // When passing `bestLocation`, don't exceed our current distance from `expectedLocation`.\n          start = Math.max(1, 2 * expectedLocation - bestLocation);\n        }\n      }\n    }\n\n    // No hope for a (better) match at greater error levels.\n    const score = computeScore$1(pattern, {\n      errors: i + 1,\n      currentLocation: expectedLocation,\n      expectedLocation,\n      distance,\n      ignoreLocation\n    });\n\n    if (score > currentThreshold) {\n      break\n    }\n\n    lastBitArr = bitArr;\n  }\n\n  const result = {\n    isMatch: bestLocation >= 0,\n    // Count exact matches (those with a score of 0) to be \"almost\" exact\n    score: Math.max(0.001, finalScore)\n  };\n\n  if (computeMatches) {\n    const indices = convertMaskToIndices(matchMask, minMatchCharLength);\n    if (!indices.length) {\n      result.isMatch = false;\n    } else if (includeMatches) {\n      result.indices = indices;\n    }\n  }\n\n  return result\n}\n\nfunction createPatternAlphabet(pattern) {\n  let mask = {};\n\n  for (let i = 0, len = pattern.length; i < len; i += 1) {\n    const char = pattern.charAt(i);\n    mask[char] = (mask[char] || 0) | (1 << (len - i - 1));\n  }\n\n  return mask\n}\n\nclass BitapSearch {\n  constructor(\n    pattern,\n    {\n      location = Config.location,\n      threshold = Config.threshold,\n      distance = Config.distance,\n      includeMatches = Config.includeMatches,\n      findAllMatches = Config.findAllMatches,\n      minMatchCharLength = Config.minMatchCharLength,\n      isCaseSensitive = Config.isCaseSensitive,\n      ignoreLocation = Config.ignoreLocation\n    } = {}\n  ) {\n    this.options = {\n      location,\n      threshold,\n      distance,\n      includeMatches,\n      findAllMatches,\n      minMatchCharLength,\n      isCaseSensitive,\n      ignoreLocation\n    };\n\n    this.pattern = isCaseSensitive ? pattern : pattern.toLowerCase();\n\n    this.chunks = [];\n\n    if (!this.pattern.length) {\n      return\n    }\n\n    const addChunk = (pattern, startIndex) => {\n      this.chunks.push({\n        pattern,\n        alphabet: createPatternAlphabet(pattern),\n        startIndex\n      });\n    };\n\n    const len = this.pattern.length;\n\n    if (len > MAX_BITS) {\n      let i = 0;\n      const remainder = len % MAX_BITS;\n      const end = len - remainder;\n\n      while (i < end) {\n        addChunk(this.pattern.substr(i, MAX_BITS), i);\n        i += MAX_BITS;\n      }\n\n      if (remainder) {\n        const startIndex = len - MAX_BITS;\n        addChunk(this.pattern.substr(startIndex), startIndex);\n      }\n    } else {\n      addChunk(this.pattern, 0);\n    }\n  }\n\n  searchIn(text) {\n    const { isCaseSensitive, includeMatches } = this.options;\n\n    if (!isCaseSensitive) {\n      text = text.toLowerCase();\n    }\n\n    // Exact match\n    if (this.pattern === text) {\n      let result = {\n        isMatch: true,\n        score: 0\n      };\n\n      if (includeMatches) {\n        result.indices = [[0, text.length - 1]];\n      }\n\n      return result\n    }\n\n    // Otherwise, use Bitap algorithm\n    const {\n      location,\n      distance,\n      threshold,\n      findAllMatches,\n      minMatchCharLength,\n      ignoreLocation\n    } = this.options;\n\n    let allIndices = [];\n    let totalScore = 0;\n    let hasMatches = false;\n\n    this.chunks.forEach(({ pattern, alphabet, startIndex }) => {\n      const { isMatch, score, indices } = search(text, pattern, alphabet, {\n        location: location + startIndex,\n        distance,\n        threshold,\n        findAllMatches,\n        minMatchCharLength,\n        includeMatches,\n        ignoreLocation\n      });\n\n      if (isMatch) {\n        hasMatches = true;\n      }\n\n      totalScore += score;\n\n      if (isMatch && indices) {\n        allIndices = [...allIndices, ...indices];\n      }\n    });\n\n    let result = {\n      isMatch: hasMatches,\n      score: hasMatches ? totalScore / this.chunks.length : 1\n    };\n\n    if (hasMatches && includeMatches) {\n      result.indices = allIndices;\n    }\n\n    return result\n  }\n}\n\nclass BaseMatch {\n  constructor(pattern) {\n    this.pattern = pattern;\n  }\n  static isMultiMatch(pattern) {\n    return getMatch(pattern, this.multiRegex)\n  }\n  static isSingleMatch(pattern) {\n    return getMatch(pattern, this.singleRegex)\n  }\n  search(/*text*/) {}\n}\n\nfunction getMatch(pattern, exp) {\n  const matches = pattern.match(exp);\n  return matches ? matches[1] : null\n}\n\n// Token: 'file\n\nclass ExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'exact'\n  }\n  static get multiRegex() {\n    return /^=\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^=(.*)$/\n  }\n  search(text) {\n    const isMatch = text === this.pattern;\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [0, this.pattern.length - 1]\n    }\n  }\n}\n\n// Token: !fire\n\nclass InverseExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'inverse-exact'\n  }\n  static get multiRegex() {\n    return /^!\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^!(.*)$/\n  }\n  search(text) {\n    const index = text.indexOf(this.pattern);\n    const isMatch = index === -1;\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [0, text.length - 1]\n    }\n  }\n}\n\n// Token: ^file\n\nclass PrefixExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'prefix-exact'\n  }\n  static get multiRegex() {\n    return /^\\^\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^\\^(.*)$/\n  }\n  search(text) {\n    const isMatch = text.startsWith(this.pattern);\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [0, this.pattern.length - 1]\n    }\n  }\n}\n\n// Token: !^fire\n\nclass InversePrefixExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'inverse-prefix-exact'\n  }\n  static get multiRegex() {\n    return /^!\\^\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^!\\^(.*)$/\n  }\n  search(text) {\n    const isMatch = !text.startsWith(this.pattern);\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [0, text.length - 1]\n    }\n  }\n}\n\n// Token: .file$\n\nclass SuffixExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'suffix-exact'\n  }\n  static get multiRegex() {\n    return /^\"(.*)\"\\$$/\n  }\n  static get singleRegex() {\n    return /^(.*)\\$$/\n  }\n  search(text) {\n    const isMatch = text.endsWith(this.pattern);\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [text.length - this.pattern.length, text.length - 1]\n    }\n  }\n}\n\n// Token: !.file$\n\nclass InverseSuffixExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'inverse-suffix-exact'\n  }\n  static get multiRegex() {\n    return /^!\"(.*)\"\\$$/\n  }\n  static get singleRegex() {\n    return /^!(.*)\\$$/\n  }\n  search(text) {\n    const isMatch = !text.endsWith(this.pattern);\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [0, text.length - 1]\n    }\n  }\n}\n\nclass FuzzyMatch extends BaseMatch {\n  constructor(\n    pattern,\n    {\n      location = Config.location,\n      threshold = Config.threshold,\n      distance = Config.distance,\n      includeMatches = Config.includeMatches,\n      findAllMatches = Config.findAllMatches,\n      minMatchCharLength = Config.minMatchCharLength,\n      isCaseSensitive = Config.isCaseSensitive,\n      ignoreLocation = Config.ignoreLocation\n    } = {}\n  ) {\n    super(pattern);\n    this._bitapSearch = new BitapSearch(pattern, {\n      location,\n      threshold,\n      distance,\n      includeMatches,\n      findAllMatches,\n      minMatchCharLength,\n      isCaseSensitive,\n      ignoreLocation\n    });\n  }\n  static get type() {\n    return 'fuzzy'\n  }\n  static get multiRegex() {\n    return /^\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^(.*)$/\n  }\n  search(text) {\n    return this._bitapSearch.searchIn(text)\n  }\n}\n\n// Token: 'file\n\nclass IncludeMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'include'\n  }\n  static get multiRegex() {\n    return /^'\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^'(.*)$/\n  }\n  search(text) {\n    let location = 0;\n    let index;\n\n    const indices = [];\n    const patternLen = this.pattern.length;\n\n    // Get all exact matches\n    while ((index = text.indexOf(this.pattern, location)) > -1) {\n      location = index + patternLen;\n      indices.push([index, location - 1]);\n    }\n\n    const isMatch = !!indices.length;\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices\n    }\n  }\n}\n\n// ❗Order is important. DO NOT CHANGE.\nconst searchers = [\n  ExactMatch,\n  IncludeMatch,\n  PrefixExactMatch,\n  InversePrefixExactMatch,\n  InverseSuffixExactMatch,\n  SuffixExactMatch,\n  InverseExactMatch,\n  FuzzyMatch\n];\n\nconst searchersLen = searchers.length;\n\n// Regex to split by spaces, but keep anything in quotes together\nconst SPACE_RE = / +(?=(?:[^\\\"]*\\\"[^\\\"]*\\\")*[^\\\"]*$)/;\nconst OR_TOKEN = '|';\n\n// Return a 2D array representation of the query, for simpler parsing.\n// Example:\n// \"^core go$ | rb$ | py$ xy$\" => [[\"^core\", \"go$\"], [\"rb$\"], [\"py$\", \"xy$\"]]\nfunction parseQuery(pattern, options = {}) {\n  return pattern.split(OR_TOKEN).map((item) => {\n    let query = item\n      .trim()\n      .split(SPACE_RE)\n      .filter((item) => item && !!item.trim());\n\n    let results = [];\n    for (let i = 0, len = query.length; i < len; i += 1) {\n      const queryItem = query[i];\n\n      // 1. Handle multiple query match (i.e, once that are quoted, like `\"hello world\"`)\n      let found = false;\n      let idx = -1;\n      while (!found && ++idx < searchersLen) {\n        const searcher = searchers[idx];\n        let token = searcher.isMultiMatch(queryItem);\n        if (token) {\n          results.push(new searcher(token, options));\n          found = true;\n        }\n      }\n\n      if (found) {\n        continue\n      }\n\n      // 2. Handle single query matches (i.e, once that are *not* quoted)\n      idx = -1;\n      while (++idx < searchersLen) {\n        const searcher = searchers[idx];\n        let token = searcher.isSingleMatch(queryItem);\n        if (token) {\n          results.push(new searcher(token, options));\n          break\n        }\n      }\n    }\n\n    return results\n  })\n}\n\n// These extended matchers can return an array of matches, as opposed\n// to a singl match\nconst MultiMatchSet = new Set([FuzzyMatch.type, IncludeMatch.type]);\n\n/**\n * Command-like searching\n * ======================\n *\n * Given multiple search terms delimited by spaces.e.g. `^jscript .python$ ruby !java`,\n * search in a given text.\n *\n * Search syntax:\n *\n * | Token       | Match type                 | Description                            |\n * | ----------- | -------------------------- | -------------------------------------- |\n * | `jscript`   | fuzzy-match                | Items that fuzzy match `jscript`       |\n * | `=scheme`   | exact-match                | Items that are `scheme`                |\n * | `'python`   | include-match              | Items that include `python`            |\n * | `!ruby`     | inverse-exact-match        | Items that do not include `ruby`       |\n * | `^java`     | prefix-exact-match         | Items that start with `java`           |\n * | `!^earlang` | inverse-prefix-exact-match | Items that do not start with `earlang` |\n * | `.js$`      | suffix-exact-match         | Items that end with `.js`              |\n * | `!.go$`     | inverse-suffix-exact-match | Items that do not end with `.go`       |\n *\n * A single pipe character acts as an OR operator. For example, the following\n * query matches entries that start with `core` and end with either`go`, `rb`,\n * or`py`.\n *\n * ```\n * ^core go$ | rb$ | py$\n * ```\n */\nclass ExtendedSearch {\n  constructor(\n    pattern,\n    {\n      isCaseSensitive = Config.isCaseSensitive,\n      includeMatches = Config.includeMatches,\n      minMatchCharLength = Config.minMatchCharLength,\n      ignoreLocation = Config.ignoreLocation,\n      findAllMatches = Config.findAllMatches,\n      location = Config.location,\n      threshold = Config.threshold,\n      distance = Config.distance\n    } = {}\n  ) {\n    this.query = null;\n    this.options = {\n      isCaseSensitive,\n      includeMatches,\n      minMatchCharLength,\n      findAllMatches,\n      ignoreLocation,\n      location,\n      threshold,\n      distance\n    };\n\n    this.pattern = isCaseSensitive ? pattern : pattern.toLowerCase();\n    this.query = parseQuery(this.pattern, this.options);\n  }\n\n  static condition(_, options) {\n    return options.useExtendedSearch\n  }\n\n  searchIn(text) {\n    const query = this.query;\n\n    if (!query) {\n      return {\n        isMatch: false,\n        score: 1\n      }\n    }\n\n    const { includeMatches, isCaseSensitive } = this.options;\n\n    text = isCaseSensitive ? text : text.toLowerCase();\n\n    let numMatches = 0;\n    let allIndices = [];\n    let totalScore = 0;\n\n    // ORs\n    for (let i = 0, qLen = query.length; i < qLen; i += 1) {\n      const searchers = query[i];\n\n      // Reset indices\n      allIndices.length = 0;\n      numMatches = 0;\n\n      // ANDs\n      for (let j = 0, pLen = searchers.length; j < pLen; j += 1) {\n        const searcher = searchers[j];\n        const { isMatch, indices, score } = searcher.search(text);\n\n        if (isMatch) {\n          numMatches += 1;\n          totalScore += score;\n          if (includeMatches) {\n            const type = searcher.constructor.type;\n            if (MultiMatchSet.has(type)) {\n              allIndices = [...allIndices, ...indices];\n            } else {\n              allIndices.push(indices);\n            }\n          }\n        } else {\n          totalScore = 0;\n          numMatches = 0;\n          allIndices.length = 0;\n          break\n        }\n      }\n\n      // OR condition, so if TRUE, return\n      if (numMatches) {\n        let result = {\n          isMatch: true,\n          score: totalScore / numMatches\n        };\n\n        if (includeMatches) {\n          result.indices = allIndices;\n        }\n\n        return result\n      }\n    }\n\n    // Nothing was matched\n    return {\n      isMatch: false,\n      score: 1\n    }\n  }\n}\n\nconst registeredSearchers = [];\n\nfunction register(...args) {\n  registeredSearchers.push(...args);\n}\n\nfunction createSearcher(pattern, options) {\n  for (let i = 0, len = registeredSearchers.length; i < len; i += 1) {\n    let searcherClass = registeredSearchers[i];\n    if (searcherClass.condition(pattern, options)) {\n      return new searcherClass(pattern, options)\n    }\n  }\n\n  return new BitapSearch(pattern, options)\n}\n\nconst LogicalOperator = {\n  AND: '$and',\n  OR: '$or'\n};\n\nconst KeyType = {\n  PATH: '$path',\n  PATTERN: '$val'\n};\n\nconst isExpression = (query) =>\n  !!(query[LogicalOperator.AND] || query[LogicalOperator.OR]);\n\nconst isPath = (query) => !!query[KeyType.PATH];\n\nconst isLeaf = (query) =>\n  !isArray(query) && isObject(query) && !isExpression(query);\n\nconst convertToExplicit = (query) => ({\n  [LogicalOperator.AND]: Object.keys(query).map((key) => ({\n    [key]: query[key]\n  }))\n});\n\n// When `auto` is `true`, the parse function will infer and initialize and add\n// the appropriate `Searcher` instance\nfunction parse(query, options, { auto = true } = {}) {\n  const next = (query) => {\n    let keys = Object.keys(query);\n\n    const isQueryPath = isPath(query);\n\n    if (!isQueryPath && keys.length > 1 && !isExpression(query)) {\n      return next(convertToExplicit(query))\n    }\n\n    if (isLeaf(query)) {\n      const key = isQueryPath ? query[KeyType.PATH] : keys[0];\n\n      const pattern = isQueryPath ? query[KeyType.PATTERN] : query[key];\n\n      if (!isString(pattern)) {\n        throw new Error(LOGICAL_SEARCH_INVALID_QUERY_FOR_KEY(key))\n      }\n\n      const obj = {\n        keyId: createKeyId(key),\n        pattern\n      };\n\n      if (auto) {\n        obj.searcher = createSearcher(pattern, options);\n      }\n\n      return obj\n    }\n\n    let node = {\n      children: [],\n      operator: keys[0]\n    };\n\n    keys.forEach((key) => {\n      const value = query[key];\n\n      if (isArray(value)) {\n        value.forEach((item) => {\n          node.children.push(next(item));\n        });\n      }\n    });\n\n    return node\n  };\n\n  if (!isExpression(query)) {\n    query = convertToExplicit(query);\n  }\n\n  return next(query)\n}\n\n// Practical scoring function\nfunction computeScore(\n  results,\n  { ignoreFieldNorm = Config.ignoreFieldNorm }\n) {\n  results.forEach((result) => {\n    let totalScore = 1;\n\n    result.matches.forEach(({ key, norm, score }) => {\n      const weight = key ? key.weight : null;\n\n      totalScore *= Math.pow(\n        score === 0 && weight ? Number.EPSILON : score,\n        (weight || 1) * (ignoreFieldNorm ? 1 : norm)\n      );\n    });\n\n    result.score = totalScore;\n  });\n}\n\nfunction transformMatches(result, data) {\n  const matches = result.matches;\n  data.matches = [];\n\n  if (!isDefined(matches)) {\n    return\n  }\n\n  matches.forEach((match) => {\n    if (!isDefined(match.indices) || !match.indices.length) {\n      return\n    }\n\n    const { indices, value } = match;\n\n    let obj = {\n      indices,\n      value\n    };\n\n    if (match.key) {\n      obj.key = match.key.src;\n    }\n\n    if (match.idx > -1) {\n      obj.refIndex = match.idx;\n    }\n\n    data.matches.push(obj);\n  });\n}\n\nfunction transformScore(result, data) {\n  data.score = result.score;\n}\n\nfunction format(\n  results,\n  docs,\n  {\n    includeMatches = Config.includeMatches,\n    includeScore = Config.includeScore\n  } = {}\n) {\n  const transformers = [];\n\n  if (includeMatches) transformers.push(transformMatches);\n  if (includeScore) transformers.push(transformScore);\n\n  return results.map((result) => {\n    const { idx } = result;\n\n    const data = {\n      item: docs[idx],\n      refIndex: idx\n    };\n\n    if (transformers.length) {\n      transformers.forEach((transformer) => {\n        transformer(result, data);\n      });\n    }\n\n    return data\n  })\n}\n\nclass Fuse {\n  constructor(docs, options = {}, index) {\n    this.options = { ...Config, ...options };\n\n    if (\n      this.options.useExtendedSearch &&\n      !true\n    ) {\n      throw new Error(EXTENDED_SEARCH_UNAVAILABLE)\n    }\n\n    this._keyStore = new KeyStore(this.options.keys);\n\n    this.setCollection(docs, index);\n  }\n\n  setCollection(docs, index) {\n    this._docs = docs;\n\n    if (index && !(index instanceof FuseIndex)) {\n      throw new Error(INCORRECT_INDEX_TYPE)\n    }\n\n    this._myIndex =\n      index ||\n      createIndex(this.options.keys, this._docs, {\n        getFn: this.options.getFn,\n        fieldNormWeight: this.options.fieldNormWeight\n      });\n  }\n\n  add(doc) {\n    if (!isDefined(doc)) {\n      return\n    }\n\n    this._docs.push(doc);\n    this._myIndex.add(doc);\n  }\n\n  remove(predicate = (/* doc, idx */) => false) {\n    const results = [];\n\n    for (let i = 0, len = this._docs.length; i < len; i += 1) {\n      const doc = this._docs[i];\n      if (predicate(doc, i)) {\n        this.removeAt(i);\n        i -= 1;\n        len -= 1;\n\n        results.push(doc);\n      }\n    }\n\n    return results\n  }\n\n  removeAt(idx) {\n    this._docs.splice(idx, 1);\n    this._myIndex.removeAt(idx);\n  }\n\n  getIndex() {\n    return this._myIndex\n  }\n\n  search(query, { limit = -1 } = {}) {\n    const {\n      includeMatches,\n      includeScore,\n      shouldSort,\n      sortFn,\n      ignoreFieldNorm\n    } = this.options;\n\n    let results = isString(query)\n      ? isString(this._docs[0])\n        ? this._searchStringList(query)\n        : this._searchObjectList(query)\n      : this._searchLogical(query);\n\n    computeScore(results, { ignoreFieldNorm });\n\n    if (shouldSort) {\n      results.sort(sortFn);\n    }\n\n    if (isNumber(limit) && limit > -1) {\n      results = results.slice(0, limit);\n    }\n\n    return format(results, this._docs, {\n      includeMatches,\n      includeScore\n    })\n  }\n\n  _searchStringList(query) {\n    const searcher = createSearcher(query, this.options);\n    const { records } = this._myIndex;\n    const results = [];\n\n    // Iterate over every string in the index\n    records.forEach(({ v: text, i: idx, n: norm }) => {\n      if (!isDefined(text)) {\n        return\n      }\n\n      const { isMatch, score, indices } = searcher.searchIn(text);\n\n      if (isMatch) {\n        results.push({\n          item: text,\n          idx,\n          matches: [{ score, value: text, norm, indices }]\n        });\n      }\n    });\n\n    return results\n  }\n\n  _searchLogical(query) {\n\n    const expression = parse(query, this.options);\n\n    const evaluate = (node, item, idx) => {\n      if (!node.children) {\n        const { keyId, searcher } = node;\n\n        const matches = this._findMatches({\n          key: this._keyStore.get(keyId),\n          value: this._myIndex.getValueForItemAtKeyId(item, keyId),\n          searcher\n        });\n\n        if (matches && matches.length) {\n          return [\n            {\n              idx,\n              item,\n              matches\n            }\n          ]\n        }\n\n        return []\n      }\n\n      const res = [];\n      for (let i = 0, len = node.children.length; i < len; i += 1) {\n        const child = node.children[i];\n        const result = evaluate(child, item, idx);\n        if (result.length) {\n          res.push(...result);\n        } else if (node.operator === LogicalOperator.AND) {\n          return []\n        }\n      }\n      return res\n    };\n\n    const records = this._myIndex.records;\n    const resultMap = {};\n    const results = [];\n\n    records.forEach(({ $: item, i: idx }) => {\n      if (isDefined(item)) {\n        let expResults = evaluate(expression, item, idx);\n\n        if (expResults.length) {\n          // Dedupe when adding\n          if (!resultMap[idx]) {\n            resultMap[idx] = { idx, item, matches: [] };\n            results.push(resultMap[idx]);\n          }\n          expResults.forEach(({ matches }) => {\n            resultMap[idx].matches.push(...matches);\n          });\n        }\n      }\n    });\n\n    return results\n  }\n\n  _searchObjectList(query) {\n    const searcher = createSearcher(query, this.options);\n    const { keys, records } = this._myIndex;\n    const results = [];\n\n    // List is Array<Object>\n    records.forEach(({ $: item, i: idx }) => {\n      if (!isDefined(item)) {\n        return\n      }\n\n      let matches = [];\n\n      // Iterate over every key (i.e, path), and fetch the value at that key\n      keys.forEach((key, keyIndex) => {\n        matches.push(\n          ...this._findMatches({\n            key,\n            value: item[keyIndex],\n            searcher\n          })\n        );\n      });\n\n      if (matches.length) {\n        results.push({\n          idx,\n          item,\n          matches\n        });\n      }\n    });\n\n    return results\n  }\n  _findMatches({ key, value, searcher }) {\n    if (!isDefined(value)) {\n      return []\n    }\n\n    let matches = [];\n\n    if (isArray(value)) {\n      value.forEach(({ v: text, i: idx, n: norm }) => {\n        if (!isDefined(text)) {\n          return\n        }\n\n        const { isMatch, score, indices } = searcher.searchIn(text);\n\n        if (isMatch) {\n          matches.push({\n            score,\n            key,\n            value: text,\n            idx,\n            norm,\n            indices\n          });\n        }\n      });\n    } else {\n      const { v: text, n: norm } = value;\n\n      const { isMatch, score, indices } = searcher.searchIn(text);\n\n      if (isMatch) {\n        matches.push({ score, key, value: text, norm, indices });\n      }\n    }\n\n    return matches\n  }\n}\n\nFuse.version = '6.6.2';\nFuse.createIndex = createIndex;\nFuse.parseIndex = parseIndex;\nFuse.config = Config;\n\n{\n  Fuse.parseQuery = parse;\n}\n\n{\n  register(ExtendedSearch);\n}\n\nexport { Fuse as default };\n","/**\n * Default keyboard configurations.\n * \n * Configuration consists of one or two keyboard layouts\n * to be displayed at once.\n */\n\nimport {\n    NUMBER_PAD_LO,\n    MONTHLY_DAYS_LO,\n    ALPHABETICAL_LO,\n    QWERTY_LO,\n    SYMBOLS,\n} from \"@/components/Keyboard/KbLayouts\";\n\nexport const SYMBOLS_CONFIG = [\n    SYMBOLS,\n    [\n        ['', 'Delete']\n    ]\n]\n\nexport const NUMBERS_ONLY = [\n    NUMBER_PAD_LO,\n    [\n        ['Delete']\n    ]\n]\n\nexport const NUMBERS_WITH_UNKNOWN = [\n    NUMBER_PAD_LO,\n    [\n        ['Delete', 'Unknown']\n    ]\n]\n\nexport const NUMBERS_WITH_ESTIMATE = [\n    NUMBER_PAD_LO,\n    [\n        ['N/A'],\n        ['Delete', 'Unknown']\n    ]\n]\n\nexport const NUMBERS_WITHOUT_NA_UNKNOWN = [\n    NUMBER_PAD_LO,\n    [\n        ['Delete']\n    ]\n]\n\nexport const NUMBERS = [\n    NUMBER_PAD_LO,\n    [\n        ['Unknown', 'Delete'],\n        ['Qwerty', 'A-Z'],\n    ]\n]\n\nexport const MONTHLY_DAYS = [\n    MONTHLY_DAYS_LO,\n    [\n        ['Unknown']\n    ]\n]\n\nexport const A_TO_Z = [\n    ALPHABETICAL_LO,\n    [\n        ['0-9', 'Delete'],\n        ['Qwerty', 'Unknown'],\n        ['', 'Space']\n    ]\n]\n\nexport const QWERTY = [\n    QWERTY_LO,\n    [\n        ['', 'Delete'],\n        ['?123', '0-9'],\n        ['Space', 'Unknown']\n    ]\n]\n\n/**\n * Navigation map for switching between different keyboard layouts\n */\nexport const KEY_BTN_NAV = [\n    {\n        btn: '0-9',\n        keyboard: NUMBERS\n    },\n    {\n        btn: '?123',\n        keyboard: SYMBOLS_CONFIG\n    },\n    {   \n        btn: 'A-Z',\n        keyboard: A_TO_Z \n    },\n    {\n        btn: 'Qwerty',\n        keyboard: QWERTY\n    }\n]\n","import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, normalizeClass as _normalizeClass, normalizeStyle as _normalizeStyle, withCtx as _withCtx, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ion_button = _resolveComponent(\"ion-button\")!\n\n  return (_openBlock(), _createElementBlock(\"table\", null, [\n    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.layout, (row, rowIndex) => {\n      return (_openBlock(), _createElementBlock(\"tr\", { key: rowIndex }, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(row, (btnKey, btnIndex) => {\n          return (_openBlock(), _createElementBlock(\"td\", {\n            class: \"his-keyboard-margin\",\n            key: `btn-${btnIndex}`\n          }, [\n            btnKey\n              ? (_openBlock(), _createBlock(_component_ion_button, {\n                  key: 0,\n                  style: _normalizeStyle({width: _ctx.btnSize}),\n                  class: _normalizeClass(`his-keyboard-btn btn-${btnKey}-${_ctx.dynamicClass(row)}`),\n                  onClick: () => _ctx.keyPress(btnKey)\n                }, {\n                  default: _withCtx(() => [\n                    _createTextVNode(_toDisplayString(btnKey), 1)\n                  ]),\n                  _: 2\n                }, 1032, [\"style\", \"class\", \"onClick\"]))\n              : _createCommentVNode(\"\", true)\n          ]))\n        }), 128))\n      ]))\n    }), 128))\n  ]))\n}","\nimport { defineComponent } from \"vue\";\nimport { IonButton } from \"@ionic/vue\";\nexport default defineComponent({\n  components: { IonButton },\n  props: {\n    btnSize: {\n      type: String,\n      default: '90%'\n    },\n    layout: {\n      type: Array,\n      required: true,\n      default: () => []\n    },\n    onKeyPress: {\n      type: Function,\n      required: true,\n    },\n  },\n  methods: {\n    keyPress(key: any) {\n      this.onKeyPress(key);\n    },\n    dynamicClass(row: any){\n      if(row.length == 3 && row[0] == \"Unknown\")\n        return \"Keypad\"\n      return row[0]\n    }\n  },\n});\n","import { render } from \"./BaseKeyboard.vue?vue&type=template&id=15a47ec5&ts=true\"\nimport script from \"./BaseKeyboard.vue?vue&type=script&lang=ts\"\nexport * from \"./BaseKeyboard.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/projects/malawi-emr/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"his-floating-keyboard\" }\nconst _hoisted_2 = { class: \"his-floating-keyboard-content\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_base_keyboard = _resolveComponent(\"base-keyboard\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", _hoisted_2, [\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.activeLayout, (layout, index) => {\n        return (_openBlock(), _createElementBlock(\"div\", { key: index }, [\n          _createVNode(_component_base_keyboard, {\n            layout: layout,\n            onKeyPress: _ctx.keypress\n          }, null, 8, [\"layout\", \"onKeyPress\"])\n        ]))\n      }), 128))\n    ])\n  ]))\n}","\nimport { defineComponent } from \"vue\";\nimport { KEY_BTN_NAV } from \"@/components/Keyboard/HisKbConfigurations\"\nimport BaseKeyboard from \"@/components/Keyboard/BaseKeyboard.vue\";\nexport default defineComponent({\n  components: { BaseKeyboard},\n  props: {\n    initalKeyboardName: {\n      type: String\n    },\n    kbConfig: {\n      type: Array,\n      required: true\n    },\n    onKeyPress: {\n      type: Function,\n      required: true,\n    },\n  },\n  data: () => ({\n    activeLayout: {} as Array<any>\n  }),\n  watch: {\n    initalKeyboardName: {\n      handler(name: string) {\n        if (name) {\n          this.$nextTick(() => this.switchKeyboard(name))\n        }\n      },\n      immediate: true\n    },\n    kbConfig: {\n      handler(keyboard: Array<any>){\n        if(keyboard) {\n          this.activeLayout = keyboard\n        }\n      },\n      deep: true,\n      immediate: true\n    }\n  },\n  methods: {\n    keypress(key: any) {\n      if (!this.isFunctionKey(key)) {\n        this.onKeyPress(key);\n      }\n    },\n    isFunctionKey(key: string) {  \n      if (this.switchKeyboard(key)) {\n        return true\n      }\n      return false\n    },\n    switchKeyboard(key: string): boolean {\n      const kbIndex = KEY_BTN_NAV.map(item => item.btn).indexOf(key)\n      if (kbIndex >= 0) {\n        this.activeLayout = KEY_BTN_NAV[kbIndex].keyboard\n        return true\n      }\n      return false\n    }\n  },\n});\n","import { render } from \"./HisKeyboard.vue?vue&type=template&id=7167c7d4&ts=true\"\nimport script from \"./HisKeyboard.vue?vue&type=script&lang=ts\"\nexport * from \"./HisKeyboard.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/projects/malawi-emr/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}