{"version":3,"sources":["webpack:///./src/views/NewUser.vue?eb04","webpack:///./src/views/NewUser.vue","webpack:///./src/views/NewUser.vue?b037","webpack:///./src/components/Forms/HisStandardForm.vue?8e31","webpack:///./src/components/Forms/HisStandardForm.vue","webpack:///./src/components/Forms/HisStandardForm.vue?5176","webpack:///./src/services/person_service.ts","webpack:///./src/components/Forms/BaseFormElements.ts","webpack:///./src/components/FormElements lazy ^\\.\\/.*\\.vue$ namespace object"],"names":["render","_ctx","_cache","$props","$setup","$data","$options","_component_his_standard_form","_resolveComponent","_openBlock","_createBlock","key","formKey","fields","skipSummary","activeField","fieldComponent","onOnIndex","$event","onFinishAction","onFinish","defineComponent","components","HisStandardForm","data","activity","presets","programs","userData","isSessionPasswordChange","form","watch","route","query","includes","this","update_password","toUserData","UserService","getCurrentUser","getAvailableApps","getFields","immediate","deep","methods","_","computeValues","create","update","auth","AuthService","sessionDate","getApiDate","resetUserPasswordChangeCheck","$router","push","Store","invalidate","$nextTick","e","RecordConflictError","isEmpty","errors","toastWarning","toastDanger","user","createUser","person","updateUser","id","getProgramName","app","find","programID","applicationName","mapToOption","listOptions","map","item","label","value","getAllRoles","filter","r","role","split","other","userObj","names","user_id","given_name","family_name","username","roles","HisDate","toStandardHisDisplayFormat","date_created","deactivated_on","p","editConditionCheck","attributes","toLcase","val","toString","toLowerCase","helpText","type","FieldType","TT_SELECT","condition","isAdmin","validation","Validation","required","unload","options","async","users","getAllUsers","u","config","showKeyboard","TT_TABLE_VIEWER","dynamicHelpText","created","f","c","table","statusRowIndex","columns","deactivateButton","status","name","style","width","fontWeight","color","action","deactivateUser","rows","toastSuccess","activateUser","navButton","targetField","rowBtns","length","join","hiddenFooterBtns","overrideDefaultFooterBtns","nextBtn","onClick","back","TT_TEXT","computedValue","defaultValue","isName","PersonService","searchGivenName","searchFamilyName","getRoles","proxyID","v","i","defaultComputedOutput","TT_MULTIPLE_SELECT","program","isChecked","validateSeries","hasLengthRangeOf","casing","inputType","verify_password","new_password","__exports__","_resolveDynamicComponent","formType","cancelDestinationPath","onOnFinish","onIndex","TouchScreenForm","emits","props","Function","Boolean","default","String","Object","formData","computedData","$emit","Service","constructor","super","_defineProperty","postJson","putJson","getProgramID","getJson","personId","COMPONENT_REFS","TT_ASYNC_MULTI_SELECT","TT_LINKAGE_CODE","TT_MULTI_SELECT_GRID","TT_AGE_INPUT","TT_BARCODE","TT_NOTE","TT_CARD_SELECTOR","TT_NUMBER","TT_MONTHLY_DAYS","TT_ART_REGIMEN_SELECTION","TT_NEXT_VISIT_INTERVAL_SELECTION","TT_DOSAGE_INPUT","TT_YES_NO","TT_MULTIPLE_YES_NO","TT_WEIGHT_CHART","TT_VITALS_ENTRY","TT_APPOINTMENTS_ENTRY","TT_COMPLAINTS_PICKER","TT_CLINIC_HOLIDAY_PICKER","TT_SUMMARY","TT_ART_STAGING_SUMMARY","TT_ADHERENCE_INPUT","TT_LAB_ORDERS","TT_PERSON_RESULT_VIEW","TT_PROGRAM_SELECTION","TT_DATE_PICKER","TT_RELATION_SELECTION","TT_FILING_NUMBER_VIEW","TT_PERSON_MATCH_VIEW","TT_FULL_DATE","TT_BATCH_ENTRY","TT_BATCH_VERIFICATION","TT_BATCH_MOVEMENT","TT_IP_ADDRESS","TT_TEXT_BANNER","TT_DISPENSATION_INPUT","TT_DATA_TABLE","TT_GROUP_SELECTOR","TT_ANC_PREGNANCY_INPUT_CONFIG","TT_ANC_PREGNANCY_DETAILS_INPUT","TT_ANC_LMP_DATE_INPUT","TT_DRUG_TRANSFER_IN","TT_GRID_SELECTOR","TT_ANC_DRUGSET_INPUT","TT_RADIOLOGY_PICKER","TT_PRESCRIPTION_INPUT","TT_INFINITE_SCROLL_MULTIPLE_SELECT","TT_DRUG_DISPENSER","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","Error","code","ids","all","slice","keys","module","exports"],"mappings":"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A0B,CACzB,OACA,iBACA,qBAED,sBAAuB,CACtB,OACA,qBAED,kCAAmC,CAClC,OACA,qBAED,0BAA2B,CAC1B,OACA,iBACA,qBAED,mBAAoB,CACnB,OACA,qBAED,yBAA0B,CACzB,OACA,sBAED,6BAA8B,CAC7B,OACA,sBAED,0BAA2B,CAC1B,OACA,iBACA,sBAED,oBAAqB,CACpB,OACA,sBAED,wBAAyB,CACxB,OACA,iBACA,sBAED,+BAAgC,CAC/B,OACA,sBAED,wBAAyB,CACxB,OACA,sBAED,sBAAuB,CACtB,OACA,iBACA,iBACA,sBAED,yBAA0B,CACzB,OACA,iBACA,iBACA,sBAED,6BAA8B,CAC7B,OACA,iBACA,iBACA,sBAED,wBAAyB,CACxB,OACA,sBAED,+BAAgC,CAC/B,OACA,iBACA,sBAED,4BAA6B,CAC5B,OACA,sBAED,qBAAsB,CACrB,OACA,sBAED,qBAAsB,CACrB,OACA,sBAED,sBAAuB,CACtB,OACA,iBACA,sBAED,uBAAwB,CACvB,OACA,iBACA,sBAED,wBAAyB,CACxB,OACA,sBAED,yBAA0B,CACzB,OACA,sBAED,qBAAsB,CACrB,OACA,sBAED,wCAAyC,CACxC,OACA,sBAED,qBAAsB,CACrB,OACA,iBACA,sBAED,uBAAwB,CACvB,OACA,sBAED,2BAA4B,CAC3B,OACA,sBAED,0BAA2B,CAC1B,OACA,iBACA,sBAED,6BAA8B,CAC7B,OACA,sBAED,gBAAiB,CAChB,OACA,sBAED,uBAAwB,CACvB,OACA,sBAED,6BAA8B,CAC7B,OACA,iBACA,sBAED,2BAA4B,CAC3B,OACA,sBAED,kBAAmB,CAClB,OACA,sBAED,mBAAoB,CACnB,OACA,sBAED,uBAAwB,CACvB,OACA,sBAED,sBAAuB,CACtB,OACA,sBAED,qBAAsB,CACrB,OACA,sBAED,uBAAwB,CACvB,OACA,sBAED,uBAAwB,CACvB,OACA,sBAED,yBAA0B,CACzB,OACA,sBAED,yBAA0B,CACzB,OACA,sBAED,wBAAyB,CACxB,OACA,sBAED,yBAA0B,CACzB,OACA,sBAED,yBAA0B,CACzB,OACA,sBAED,2BAA4B,CAC3B,OACA,sBAED,oBAAqB,CACpB,OACA,sBAED,oBAAqB,CACpB,OACA,uBAGF,SAAS2K,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAE9K,EAAK4K,GAC9B,OAAOG,QAAQC,UAAUC,MAAK,WAC7B,IAAInM,EAAI,IAAIoM,MAAM,uBAAyBN,EAAM,KAEjD,MADA9L,EAAEqM,KAAO,mBACHrM,KAIR,IAAIsM,EAAMpL,EAAI4K,GAAMpL,EAAK4L,EAAI,GAC7B,OAAOL,QAAQM,IAAID,EAAIE,MAAM,GAAGtL,IAAI6K,EAAoB/L,IAAImM,MAAK,WAChE,OAAOJ,EAAoBrL,MAG7BmL,EAAoBY,KAAO,WAC1B,OAAO1E,OAAO0E,KAAKvL,IAEpB2K,EAAoBnL,GAAK,OACzBgM,EAAOC,QAAUd","file":"js/chunk-7f9f344f.f480d2bb.js","sourcesContent":["import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_his_standard_form = _resolveComponent(\"his-standard-form\")!\n\n  return (_openBlock(), _createBlock(_component_his_standard_form, {\n    key: _ctx.formKey,\n    fields: _ctx.fields,\n    skipSummary: true,\n    activeField: _ctx.fieldComponent,\n    onOnIndex: _cache[0] || (_cache[0] = ($event: any) => (_ctx.fieldComponent='')),\n    onFinishAction: _ctx.onFinish\n  }, null, 8, [\"fields\", \"activeField\", \"onFinishAction\"]))\n}","\nimport { defineComponent } from \"vue\";\nimport { FieldType } from \"@/components/Forms/BaseFormElements\"\nimport { Field, Option } from \"@/components/Forms/FieldInterface\"\nimport HisStandardForm from \"@/components/Forms/HisStandardForm.vue\";\nimport Validation from \"@/components/Forms/validations/StandardValidations\"\nimport { UserService } from \"@/services/user_service\"\nimport { PersonService } from \"@/services/person_service\"\nimport HisDate from \"@/utils/Date\"\nimport { toastWarning, toastSuccess, toastDanger } from \"@/utils/Alerts\"\nimport { RecordConflictError } from \"@/services/service\";\nimport { isEmpty } from \"lodash\";\nimport { find } from \"lodash\";\nimport Store from \"@/composables/ApiStore\"\nimport { AuthService } from \"@/services/auth_service\"\n\nexport default defineComponent({\n  components: { HisStandardForm },\n  data: () => ({\n    formKey: 0 as number,\n    fields: [] as Array<Field>,\n    activity: '' as 'edit' | 'add',\n    presets: {} as any,\n    programs: {} as any,\n    userData: {} as any,\n    fieldComponent: '' as string,\n    isSessionPasswordChange: false as boolean,\n    activeField: '' as string,\n    form: {} as Record<string, Option> | Record<string, null>\n  }),\n  watch: {\n    '$route': {\n        async handler(route: any) {\n            if (!route) {\n                return\n            }\n            const { query } = route\n            if (['edit', 'add'].includes(query.activity)) {\n                this.activity = query.activity\n            } else {\n                this.activity = 'add'\n            }\n            /**\n             * Jump straight to update the current user's password\n             */\n            if (query.update_password) {\n                this.userData = this.toUserData(\n                    (await UserService.getCurrentUser())\n                )\n                this.isSessionPasswordChange = true\n                this.activeField = 'new_password'\n                this.fieldComponent = this.activeField\n            }\n            this.programs = UserService.getAvailableApps()\n            this.fields = this.getFields()\n        },\n        immediate: true,\n        deep: true\n    }\n  },\n  methods: {\n    async onFinish(_: any, computeValues: any) {\n        try {\n            switch(this.activity) {\n                case 'add':\n                    await this.create(computeValues)\n                    this.activity = 'edit'\n                    break;\n                case 'edit':\n                    await this.update(computeValues)\n                    if (this.isSessionPasswordChange) {\n                        const auth = new AuthService()\n                        auth.sessionDate = await UserService.getApiDate()\n                        await auth.resetUserPasswordChangeCheck()\n                        this.$router.push('/')\n                    }\n                    break;\n            }\n            Store.invalidate('PROVIDERS')\n            this.activeField = 'user_info'\n            this.$nextTick(() => this.fieldComponent = this.activeField)\n            this.formKey += 1\n        } catch (e) {\n            if (e instanceof RecordConflictError && !isEmpty(e.errors)) {\n                toastWarning(e.errors)\n            } else {\n                toastDanger(`${e}`)\n            }\n        }\n    },\n    async create(data: any) {\n        const { user } = await UserService.createUser(data)\n        if (user) {\n            return this.userData = this.toUserData(user)\n        }\n        throw 'Unable to create new user, Possibly the user already exists or incorrect info was entered'\n    },\n    async update(data: any) {\n        const person = await UserService.updateUser(this.userData.id, data)\n        if (person) {\n            return this.userData = this.toUserData(person)\n        }\n        throw 'Unable to update user, possibly server error or incorrect information entered'\n    },\n    getProgramName(id: number) {\n        const app = find(this.programs, { programID: id })\n        return app ? app.applicationName : ''\n    },\n    mapToOption(listOptions: Array<string>): Array<Option> {\n        return listOptions.map((item: any) => ({ label: item, value: item })) \n    },\n    async getRoles() {\n        return (await UserService.getAllRoles()).filter((r: any) => {\n            try {\n                return !this.userData.role.split(',').includes(r.role)\n            } catch(e) {\n                return true\n            }\n        }).map((r: any) => ({\n            label: r.role,\n            value: r.role,\n            other: r\n        }))\n    },\n    toUserData(userObj: any) {\n        const names = userObj.person.names[0]\n        return {\n            'id': userObj.user_id,\n            'given_name': names.given_name,\n            'family_name': names.family_name,\n            'username': userObj.username,\n            'role': userObj.roles.map((r: any) => r.role),\n            'created': HisDate.toStandardHisDisplayFormat(userObj.date_created),\n            'status': userObj.deactivated_on ? 'Inactive' : 'Active',\n            'programs': userObj.programs.map((p: any) => p['program_id'])\n        }\n    },\n    editConditionCheck(attributes=[] as Array<string>): boolean {\n        if (this.activity === 'edit') {\n            return attributes.includes(this.activeField)\n        }\n        return true\n    },\n    toLcase(val: Option): string {\n        return val.value.toString().toLowerCase()\n    },\n    getFields: function(): Array<Field> {\n        return [\n            {\n                id: 'select_user',\n                helpText: \"Select Username\",\n                type: FieldType.TT_SELECT,\n                condition: () => this.activity === 'edit' \n                    && UserService.isAdmin(),\n                validation: (val: any) => Validation.required(val),\n                unload: ({other}: Option) => this.userData = this.toUserData(other),\n                options: async () => {\n                    const users: any = await UserService.getAllUsers()\n                    return users.map((u: any) => ({\n                        label: u.username,\n                        value: u.user_id,\n                        other: u\n                    }))\n                },\n                config: {\n                    showKeyboard: true\n                }\n            },\n            {\n                id: 'user_info',\n                helpText: 'User information',\n                type: FieldType.TT_TABLE_VIEWER,\n                dynamicHelpText: () => `User: ${this.userData.username} | Added On: ${this.userData.created}`,\n                condition: () => this.activity === 'edit' && UserService.isAdmin(),\n                options: async (f: any, c: any, table: any) => {\n                    const statusRowIndex = 3\n                    const columns = ['Attributes', 'Values', 'Actions']\n                    const deactivateButton = (status: string) => ({\n                        name: status === 'Active' ? 'Deactivate' : 'Activate' ,\n                        type: 'button',\n                        style: { width: '65%', fontWeight: 'bold' },\n                        color: status === 'Active' ? 'danger' : 'success',\n                        action: async () => {\n                            try {\n                                if (status === 'Active') {\n                                    await UserService.deactivateUser(this.userData.id)\n                                    this.userData.status = 'Inactive'\n                                    table.rows[statusRowIndex] = ['Status', 'Inactive', deactivateButton('Inactive')],\n                                    toastSuccess('User has been deactivated', 400)\n                                }\n                                if (status === 'Inactive') {\n                                    await UserService.activateUser(this.userData.id)\n                                    this.userData.status = 'Active'\n                                    table.rows[statusRowIndex] = ['Status', 'Active', deactivateButton('Active')],\n                                    toastSuccess('User has been activated', 400)\n                                }\n                            } catch(e) {\n                                toastWarning(`${e}`)\n                            }\n                        }\n                    })\n                    const navButton = (name: string, targetField: string) => ({ \n                        name, \n                        type: 'button',\n                        color: 'light',\n                        style: {\n                            fontWeight: 'bold',\n                            width: '65%'\n                        },\n                        action: () => {\n                            this.activeField = targetField\n                            this.fieldComponent = this.activeField\n                        }\n                    })\n                    const rowBtns = [navButton('Add/Append Role', 'roles')]\n                    if (this.userData.role.length > 1) {\n                        rowBtns.push(navButton('Remove Role', 'remove_roles'))\n                    }\n                    const rows = [\n                        ['<b>Name</b>', `${this.userData.given_name} ${this.userData.family_name}`, navButton('Edit Name', 'given_name'), ''],\n                        ['<b>Password</b>', '*******', navButton('Change password', 'new_password'), ''],\n                        ['<b>Role</b>', this.userData.role.join('<br/>'), ...rowBtns],\n                        ['<b>Status</b>', this.userData.status,  deactivateButton(this.userData.status), ''],\n                        ['<b>Programs</b>', this.userData.programs.map((p: number) => this.getProgramName(p)).join('<br/>'),  \n                            navButton('Edit Program', 'programs'), ''],\n                    ]\n                    return [{\n                        label: '',\n                        value: '',\n                        other: { columns, rows }\n                    }]\n                },\n                config: {\n                    hiddenFooterBtns: [\n                        'Clear',\n                    ],\n                    overrideDefaultFooterBtns: {\n                        nextBtn: {\n                            name: 'Finish',\n                            onClick: () => this.$router.back()\n                        }\n                    }\n                }\n            },\n            {\n                id: 'given_name',\n                helpText: 'First name',\n                type: FieldType.TT_TEXT,\n                computedValue: (val: Option) => val.value,\n                defaultValue: () => this.userData.given_name,\n                condition: () => this.editConditionCheck(['given_name']) && UserService.isAdmin(),\n                validation: (val: any) => Validation.isName(val),\n                options: async (form: any) => {\n                    if (!form.given_name || form.given_name.value === null) return []\n\n                    const names = await PersonService.searchGivenName(form.given_name.value)\n                    return this.mapToOption(names)\n                }\n            },\n            {\n                id: 'family_name',\n                helpText: \"Last name\",\n                type: FieldType.TT_TEXT,\n                computedValue: (val: Option) => val.value,\n                defaultValue: () => this.userData.family_name,\n                validation: (val: any) => Validation.isName(val),\n                condition: () => this.editConditionCheck(['given_name']) && UserService.isAdmin(),\n                options: async (form: any) => {\n                    if (!form.family_name || form.family_name.value === null) return []\n\n                    const names = await PersonService.searchFamilyName(form.family_name.value)\n                    return this.mapToOption(names)\n                }\n            },\n            {\n                id: 'roles',\n                helpText: \"Role\",\n                type: FieldType.TT_SELECT,\n                computedValue: (val: Option) => [val.value],\n                condition: () => this.editConditionCheck(['roles']) && UserService.isAdmin(),\n                validation: (val: any) => Validation.required(val),\n                options: () => this.getRoles(),\n                config: {\n                    showKeyboard: true\n                }\n            },\n            {\n                id: 'remove_roles',\n                helpText: \"Remove Roles\",\n                proxyID: 'roles',\n                type: FieldType.TT_SELECT,\n                validation: (v: Option) => Validation.required(v),\n                condition: () => this.editConditionCheck(['remove_roles']) && UserService.isAdmin() && this.activity === 'edit',\n                computedValue: (v: Option) => this.userData.role.filter((i: string) => i != v.label),\n                options: () => this.mapToOption(this.userData.role),\n                config: {\n                    showKeyboard: true\n                }\n            },\n            {\n                id: 'must_append_roles',\n                helpText: \"Would you like to append role?\",\n                type: FieldType.TT_SELECT,\n                computedValue: (val: Option) => val.label === 'Yes' ? true : false,\n                condition: () => this.activity === 'edit' \n                    && this.editConditionCheck(['roles']) \n                    && UserService.isAdmin(),\n                defaultComputedOutput: () => false,\n                validation: (val: any) => Validation.required(val),\n                    options: () => [\n                    {\n                        label: 'Yes', value: 'true'\n                    },\n                    {\n                        label: 'No', value: 'false'\n                    }\n                ]\n            },\n            {\n                id: 'programs',\n                helpText: \"Select Apps\",\n                type: FieldType.TT_MULTIPLE_SELECT,\n                condition: () => UserService.isAdmin() && this.editConditionCheck(['programs']),\n                validation: (val: Option[]) => Validation.required(val),\n                computedValue: (val: Option[]) => val.map((i: Option) => i.value),\n                options: () => {\n                    return this.programs.map((program: any) => {\n                        let isChecked = false\n                        if (this.activity === 'edit') {\n                            isChecked = this.userData.programs.includes(program.programID)\n                        }\n                        return {\n                            label: program.applicationName,\n                            value: program.programID,\n                            isChecked: isChecked\n                        }\n                    })\n                },\n            },\n            {\n                id: 'username',\n                helpText: \"Username\",\n                type: FieldType.TT_TEXT,\n                condition: () => this.editConditionCheck(['nothing to see here']) \n                    && UserService.isAdmin(),\n                computedValue: (val: Option) => this.toLcase(val),\n                validation: (val: any) => Validation.validateSeries([\n                    () => Validation.required(val),\n                    () => Validation.hasLengthRangeOf(val, 4, 15)\n                ]),\n                config: {\n                    casing: 'lowercase'\n                },\n            },\n            {\n                id: 'new_password',\n                proxyID: \"password\",\n                helpText: \"New Password\",\n                type: FieldType.TT_TEXT,\n                computedValue: (val: Option) => this.toLcase(val),\n                condition: () => this.editConditionCheck(['new_password']),\n                validation: (val: any) => Validation.validateSeries([\n                    () => Validation.required(val),\n                    () => Validation.hasLengthRangeOf(val, 4, 15)\n                ]),\n                config: {\n                    inputType: 'password'\n                }\n            },\n            {\n                id: 'verify_password',\n                proxyID: \"password\",\n                helpText: \"Confirm Password\",\n                type: FieldType.TT_TEXT,\n                computedValue: (val: Option) => this.toLcase(val),\n                condition: () => this.editConditionCheck(['new_password']),\n                validation: (val: any, f: any) => Validation.validateSeries([\n                    () => Validation.required(val),\n                    () => {\n                        if (this.toLcase(f.verify_password) != this.toLcase(f.new_password))\n                            return ['New password does not match current password']\n                    }\n                ]),\n                config: {\n                    inputType: 'password'\n                }\n            }\n        ]\n    }\n  }\n})\n","import { render } from \"./NewUser.vue?vue&type=template&id=0842cbfb&ts=true\"\nimport script from \"./NewUser.vue?vue&type=script&lang=ts\"\nexport * from \"./NewUser.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/projects/malawi-emr/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { resolveDynamicComponent as _resolveDynamicComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createBlock(_resolveDynamicComponent(_ctx.formType), {\n    fields: _ctx.fields,\n    skipSummary: _ctx.skipSummary,\n    activeField: _ctx.activeField,\n    cancelDestinationPath: _ctx.cancelDestinationPath,\n    onOnFinish: _ctx.onFinish,\n    onFinish: _ctx.onFinishAction,\n    onOnIndex: _ctx.onIndex\n  }, null, 40, [\"fields\", \"skipSummary\", \"activeField\", \"cancelDestinationPath\", \"onOnFinish\", \"onFinish\", \"onOnIndex\"]))\n}","\nimport TouchScreenForm from \"@/components/Forms/TouchScreenForm.vue\";\nimport { defineComponent, PropType } from \"vue\";\nimport { Field } from \"./FieldInterface\";\n\nexport default defineComponent({\n    name: \"HisStandardForm\",\n    components: { TouchScreenForm },\n    emits: [\n        'onFinish',\n        'onIndex'\n    ],\n    data: () => ({\n        formType: 'touch-screen-form' as string\n    }),\n    props: {\n        onFinishAction: {\n            type: Function\n        },\n        skipSummary: {\n            type: Boolean,\n            default: false\n        },\n        activeField: {\n            type: String\n        },\n        fields: {\n            type: Object as PropType<Field[]>,\n            required: true\n        },\n        cancelDestinationPath: {\n            type: String,\n            required: false,\n        }\n    },\n    methods: {\n        onFinish(formData: any, computedData: any) {\n            this.$emit('onFinish', formData, computedData)\n        },\n        onIndex(i: number) {\n            this.$emit('onIndex', i)\n        }\n    }\n})\n","import { render } from \"./HisStandardForm.vue?vue&type=template&id=6daa0375&ts=true\"\nimport script from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\nexport * from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/projects/malawi-emr/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { Person } from \"@/interfaces/person\"\nimport { Service } from \"./service\"\n\nexport interface NewPerson {\n    person_id?: number;\n    given_name: string;\n    family_name: string;\n    gender: string;\n    birthdate: string;\n    birthdate_estimated: boolean;\n    home_district: string;\n    home_traditional_authority: string;\n    home_village: string;\n    current_district: string;\n    current_traditional_authority: string;\n    current_village: string;\n    landmark: string;\n    cell_phone_number: string;\n    occupation: string;\n    facility_name: string;\n    patient_type?: string;\n    relationship?: string;\n}\n\nexport class PersonService extends Service{\n    person: Person | NewPerson\n    constructor(person: NewPerson | Person){\n        super()\n        this.person = person\n    }\n\n    create() { return Service.postJson('/people', this.person) }\n\n    update(id: number) { return Service.putJson(`people/${id}`, {\n        ...this.person, 'program_id': Service.getProgramID()\n    })}\n\n    static searchFamilyName(name: string) {\n        return super.getJson('/search/family_name', {'search_string': name})\n    }\n\n    static searchGivenName(name: string) {\n        return super.getJson('/search/given_name', {'search_string': name})\n    }\n\n    static async getPersonFullName(personId: string | number) {\n        const names = await super.getJson(`/people/${personId}/names`)\n        return names && names.length ? names[0].given_name + ' ' + names[0].family_name : ''\n    }\n}\n","/**\n * Map all formElements/components defined in \"@/components/FormElements\" \n * in the Enum below by their file name.\n * \n * Next step is to add FieldType entry in COMPONENT_REFS in the \n * Array below the FieldType Enum\n */\nexport enum FieldType {\n    TT_ASYNC_MULTI_SELECT = 'AsyncMultiSelect',\n    TT_LINKAGE_CODE = 'LinkageCodeInput',\n    TT_MULTI_SELECT_GRID= 'HisMultiSelectGrid',\n    TT_AGE_INPUT='HisAgeInput',\n    TT_GROUP_SELECTOR = 'HisGroupSelector',\n    TT_DATA_TABLE = 'HisDataTable',\n    TT_GRID_SELECTOR = 'HisGridSelector',\n    TT_NOTE = 'HisNote',\n    TT_BARCODE = 'HisBarcodeInput',\n    TT_MONTHLY_DAYS=\"HisMonthlyDays\",\n    TT_TEXT=\"HisTextInput\",\n    TT_NUMBER = \"HisNumberInput\",\n    TT_DATETIME=\"datetime\",\n    TT_SELECT=\"HisSelect\",\n    TT_MULTIPLE_SELECT=\"HisMultipleSelect\",\n    TT_ART_REGIMEN_SELECTION=\"HisArtRegimenSelection\",\n    TT_NEXT_VISIT_INTERVAL_SELECTION=\"HisNextVisitInterval\",\n    TT_TABLE_VIEWER=\"HisTableViewer\",\n    TT_DOSAGE_INPUT=\"HisDosageInput\",\n    TT_YES_NO=\"YesNoSelect\",\n    TT_MULTIPLE_YES_NO=\"MultiYesNoSelect\",\n    TT_SUMMARY=\"HisSummary\",\n    TT_WEIGHT_CHART = \"HisWeightChart\",\n    TT_VITALS_ENTRY=\"HisVitalsEntry\",\n    TT_ADHERENCE_INPUT = \"HisAdherenceInput\",\n    TT_ART_STAGING_SUMMARY = \"ArtStagingSummary\",\n    TT_LAB_ORDERS = \"HisLabOrders\",\n    TT_APPOINTMENTS_ENTRY = \"HisAppointments\",\n    TT_DISPENSATION_INPUT = 'DrugDispensationSelection',\n    TT_PROGRAM_SELECTION = 'ProgramSelection',\n    TT_DATE_PICKER = 'HisDatePicker',\n    TT_PERSON_RESULT_VIEW = 'PersonSearchView',\n    TT_RELATION_SELECTION = 'RelationsSelection',\n    TT_FILING_NUMBER_VIEW = 'FilingNumberView',\n    TT_CARD_SELECTOR = 'HisCardSelector',\n    TT_PERSON_MATCH_VIEW = 'PersonMatchView',\n    TT_FULL_DATE = 'HisDateInput',\n    TT_BATCH_ENTRY = 'HisBatchEntry',\n    TT_BATCH_VERIFICATION = 'HisBatchVerification',\n    TT_BATCH_MOVEMENT = 'HisBatchMovement',\n    TT_COMPLAINTS_PICKER = 'HisComplaintsPicker',\n    TT_RADIOLOGY_PICKER = 'HisRadiologyPicker',\n    TT_IP_ADDRESS = 'HisIPAddress',\n    TT_TEXT_BANNER = 'HisTextBanner',\n    TT_DRUG_DISPENSER = 'GeneralDrugDispenser',\n    TT_CLINIC_HOLIDAY_PICKER = 'HisClinicHolidayPicker',\n    TT_ANC_PREGNANCY_INPUT_CONFIG = 'AncPregnancyInfoConfig',\n    TT_ANC_PREGNANCY_DETAILS_INPUT = 'AncPregnancyDetailsInput',\n    TT_ANC_LMP_DATE_INPUT = 'AncLmpDateInput',\n    TT_ANC_DRUGSET_INPUT = 'AncDrugSetInput',\n    TT_DRUG_TRANSFER_IN = 'DrugTransferInput',\n    TT_PRESCRIPTION_INPUT = 'HisPrescriptionInput',\n    TT_INFINITE_SCROLL_MULTIPLE_SELECT=\"HisInfiniteScrollMultipleSelect\"\n}\n\n// Register FieldTypes here that will be registered at runtime\nexport const COMPONENT_REFS: FieldType[] = [\n    FieldType.TT_ASYNC_MULTI_SELECT,\n    FieldType.TT_LINKAGE_CODE,\n    FieldType.TT_MULTI_SELECT_GRID,\n    FieldType.TT_AGE_INPUT,\n    FieldType.TT_BARCODE,\n    FieldType.TT_NOTE,\n    FieldType.TT_SELECT,\n    FieldType.TT_CARD_SELECTOR,\n    FieldType.TT_MULTIPLE_SELECT,\n    FieldType.TT_TEXT,\n    FieldType.TT_NUMBER,\n    FieldType.TT_MONTHLY_DAYS,\n    FieldType.TT_ART_REGIMEN_SELECTION,\n    FieldType.TT_NEXT_VISIT_INTERVAL_SELECTION,\n    FieldType.TT_TABLE_VIEWER,\n    FieldType.TT_DOSAGE_INPUT,\n    FieldType.TT_YES_NO,\n    FieldType.TT_MULTIPLE_YES_NO,\n    FieldType.TT_WEIGHT_CHART,\n    FieldType.TT_VITALS_ENTRY,\n    FieldType.TT_APPOINTMENTS_ENTRY,\n    FieldType.TT_COMPLAINTS_PICKER,\n    FieldType.TT_CLINIC_HOLIDAY_PICKER,\n    FieldType.TT_SUMMARY,\n    FieldType.TT_ART_STAGING_SUMMARY,\n    FieldType.TT_ADHERENCE_INPUT,\n    FieldType.TT_LAB_ORDERS,\n    FieldType.TT_PERSON_RESULT_VIEW,\n    FieldType.TT_PROGRAM_SELECTION,\n    FieldType.TT_DATE_PICKER,\n    FieldType.TT_RELATION_SELECTION,\n    FieldType.TT_FILING_NUMBER_VIEW,\n    FieldType.TT_PERSON_MATCH_VIEW,\n    FieldType.TT_FULL_DATE,\n    FieldType.TT_BATCH_ENTRY,\n    FieldType.TT_BATCH_VERIFICATION,\n    FieldType.TT_BATCH_MOVEMENT,\n    FieldType.TT_IP_ADDRESS,\n    FieldType.TT_TEXT_BANNER,\n    FieldType.TT_DISPENSATION_INPUT,\n    FieldType.TT_DATA_TABLE,\n    FieldType.TT_GROUP_SELECTOR,\n    FieldType.TT_ANC_PREGNANCY_INPUT_CONFIG,\n    FieldType.TT_ANC_PREGNANCY_DETAILS_INPUT,\n    FieldType.TT_ANC_LMP_DATE_INPUT,\n    FieldType.TT_DRUG_TRANSFER_IN,\n    FieldType.TT_GRID_SELECTOR,\n    FieldType.TT_ANC_DRUGSET_INPUT,\n    FieldType.TT_RADIOLOGY_PICKER,\n    FieldType.TT_PRESCRIPTION_INPUT,\n    FieldType.TT_INFINITE_SCROLL_MULTIPLE_SELECT,\n    FieldType.TT_DRUG_DISPENSER\n]\n","var map = {\n\t\"./AncDrugSetInput.vue\": [\n\t\t\"c99f\",\n\t\t\"TouchFormElement0\"\n\t],\n\t\"./AncLmpDateInput.vue\": [\n\t\t\"101a\",\n\t\t\"TouchFormElement1\"\n\t],\n\t\"./AncPregnancyDetailsInput.vue\": [\n\t\t\"b043\",\n\t\t\"TouchFormElement2\"\n\t],\n\t\"./AncPregnancyInfoConfig.vue\": [\n\t\t\"262e\",\n\t\t\"TouchFormElement3\"\n\t],\n\t\"./ArtStagingSummary.vue\": [\n\t\t\"43db\",\n\t\t\"TouchFormElement4\"\n\t],\n\t\"./AsyncMultiSelect.vue\": [\n\t\t\"5de2\",\n\t\t\"chunk-03993608\",\n\t\t\"TouchFormElement5\"\n\t],\n\t\"./BaseTextInput.vue\": [\n\t\t\"36ad\",\n\t\t\"TouchFormElement6\"\n\t],\n\t\"./DrugDispensationSelection.vue\": [\n\t\t\"05d5\",\n\t\t\"TouchFormElement7\"\n\t],\n\t\"./DrugTransferInput.vue\": [\n\t\t\"de42\",\n\t\t\"chunk-337918c0\",\n\t\t\"TouchFormElement8\"\n\t],\n\t\"./FieldMixin.vue\": [\n\t\t\"51c8\",\n\t\t\"TouchFormElement9\"\n\t],\n\t\"./FilingNumberView.vue\": [\n\t\t\"c650\",\n\t\t\"TouchFormElement10\"\n\t],\n\t\"./GeneralDrugDispenser.vue\": [\n\t\t\"7737\",\n\t\t\"TouchFormElement11\"\n\t],\n\t\"./HisAdherenceInput.vue\": [\n\t\t\"f2c3\",\n\t\t\"chunk-337918c0\",\n\t\t\"TouchFormElement12\"\n\t],\n\t\"./HisAgeInput.vue\": [\n\t\t\"c05f\",\n\t\t\"TouchFormElement13\"\n\t],\n\t\"./HisAppointments.vue\": [\n\t\t\"b2eb\",\n\t\t\"chunk-366b6f0a\",\n\t\t\"TouchFormElement14\"\n\t],\n\t\"./HisArtRegimenSelection.vue\": [\n\t\t\"47b9\",\n\t\t\"TouchFormElement15\"\n\t],\n\t\"./HisBarcodeInput.vue\": [\n\t\t\"dd65\",\n\t\t\"TouchFormElement16\"\n\t],\n\t\"./HisBatchEntry.vue\": [\n\t\t\"f2ab\",\n\t\t\"chunk-182277b5\",\n\t\t\"chunk-337918c0\",\n\t\t\"TouchFormElement17\"\n\t],\n\t\"./HisBatchMovement.vue\": [\n\t\t\"5148\",\n\t\t\"chunk-182277b5\",\n\t\t\"chunk-337918c0\",\n\t\t\"TouchFormElement18\"\n\t],\n\t\"./HisBatchVerification.vue\": [\n\t\t\"7b0f\",\n\t\t\"chunk-182277b5\",\n\t\t\"chunk-337918c0\",\n\t\t\"TouchFormElement19\"\n\t],\n\t\"./HisCardSelector.vue\": [\n\t\t\"0734\",\n\t\t\"TouchFormElement20\"\n\t],\n\t\"./HisClinicHolidayPicker.vue\": [\n\t\t\"4030\",\n\t\t\"chunk-366b6f0a\",\n\t\t\"TouchFormElement21\"\n\t],\n\t\"./HisComplaintsPicker.vue\": [\n\t\t\"82d1\",\n\t\t\"TouchFormElement22\"\n\t],\n\t\"./HisDataTable.vue\": [\n\t\t\"a6ba\",\n\t\t\"TouchFormElement23\"\n\t],\n\t\"./HisDateInput.vue\": [\n\t\t\"374c\",\n\t\t\"TouchFormElement24\"\n\t],\n\t\"./HisDatePicker.vue\": [\n\t\t\"9b30\",\n\t\t\"chunk-366b6f0a\",\n\t\t\"TouchFormElement25\"\n\t],\n\t\"./HisDosageInput.vue\": [\n\t\t\"b34c\",\n\t\t\"chunk-337918c0\",\n\t\t\"TouchFormElement26\"\n\t],\n\t\"./HisGridSelector.vue\": [\n\t\t\"112a\",\n\t\t\"TouchFormElement27\"\n\t],\n\t\"./HisGroupSelector.vue\": [\n\t\t\"81cf\",\n\t\t\"TouchFormElement28\"\n\t],\n\t\"./HisIPAddress.vue\": [\n\t\t\"2a82\",\n\t\t\"TouchFormElement29\"\n\t],\n\t\"./HisInfiniteScrollMultipleSelect.vue\": [\n\t\t\"52a3\",\n\t\t\"TouchFormElement30\"\n\t],\n\t\"./HisLabOrders.vue\": [\n\t\t\"e614\",\n\t\t\"chunk-03993608\",\n\t\t\"TouchFormElement31\"\n\t],\n\t\"./HisMonthlyDays.vue\": [\n\t\t\"69cf\",\n\t\t\"TouchFormElement32\"\n\t],\n\t\"./HisMultiSelectGrid.vue\": [\n\t\t\"0fa3\",\n\t\t\"TouchFormElement33\"\n\t],\n\t\"./HisMultipleSelect.vue\": [\n\t\t\"2fd5\",\n\t\t\"chunk-03993608\",\n\t\t\"TouchFormElement34\"\n\t],\n\t\"./HisNextVisitInterval.vue\": [\n\t\t\"3126\",\n\t\t\"TouchFormElement35\"\n\t],\n\t\"./HisNote.vue\": [\n\t\t\"c927\",\n\t\t\"TouchFormElement36\"\n\t],\n\t\"./HisNumberInput.vue\": [\n\t\t\"5e75\",\n\t\t\"TouchFormElement37\"\n\t],\n\t\"./HisPrescriptionInput.vue\": [\n\t\t\"87e5\",\n\t\t\"chunk-337918c0\",\n\t\t\"TouchFormElement38\"\n\t],\n\t\"./HisRadiologyPicker.vue\": [\n\t\t\"adc7\",\n\t\t\"TouchFormElement39\"\n\t],\n\t\"./HisSelect.vue\": [\n\t\t\"d11f\",\n\t\t\"TouchFormElement40\"\n\t],\n\t\"./HisSummary.vue\": [\n\t\t\"e0bd\",\n\t\t\"TouchFormElement41\"\n\t],\n\t\"./HisTableViewer.vue\": [\n\t\t\"8904\",\n\t\t\"TouchFormElement42\"\n\t],\n\t\"./HisTextBanner.vue\": [\n\t\t\"952c\",\n\t\t\"TouchFormElement43\"\n\t],\n\t\"./HisTextInput.vue\": [\n\t\t\"6ef9\",\n\t\t\"TouchFormElement44\"\n\t],\n\t\"./HisVitalsEntry.vue\": [\n\t\t\"e333\",\n\t\t\"TouchFormElement45\"\n\t],\n\t\"./HisWeightChart.vue\": [\n\t\t\"26a1\",\n\t\t\"TouchFormElement46\"\n\t],\n\t\"./LinkageCodeInput.vue\": [\n\t\t\"ac86\",\n\t\t\"TouchFormElement47\"\n\t],\n\t\"./MultiYesNoSelect.vue\": [\n\t\t\"5fd1\",\n\t\t\"TouchFormElement48\"\n\t],\n\t\"./PersonMatchView.vue\": [\n\t\t\"6591\",\n\t\t\"TouchFormElement49\"\n\t],\n\t\"./PersonSearchView.vue\": [\n\t\t\"28b2\",\n\t\t\"TouchFormElement50\"\n\t],\n\t\"./ProgramSelection.vue\": [\n\t\t\"e3b4\",\n\t\t\"TouchFormElement51\"\n\t],\n\t\"./RelationsSelection.vue\": [\n\t\t\"0e57\",\n\t\t\"TouchFormElement52\"\n\t],\n\t\"./SelectMixin.vue\": [\n\t\t\"82a9\",\n\t\t\"TouchFormElement53\"\n\t],\n\t\"./YesNoSelect.vue\": [\n\t\t\"71f2\",\n\t\t\"TouchFormElement54\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"f159\";\nmodule.exports = webpackAsyncContext;"],"sourceRoot":""}