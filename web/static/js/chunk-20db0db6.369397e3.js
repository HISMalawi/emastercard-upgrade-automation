(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-20db0db6"],{"1f9a":function(e,t,i){"use strict";i.d(t,"a",(function(){return l}));var n=i("ade3"),a=i("1c74"),s=i("ad60"),r=i("d10e");class o extends a["e"]{constructor(){super()}static create(e){return super.postJson("/person_attributes",e)}}var d=i("4db7");class l extends a["e"]{constructor(){super(),Object(n["a"])(this,"personId",void 0),this.personId=0}getPersonID(){return this.personId}setPersonID(e){this.personId=e}async registerPatient(e,t){await this.createPerson(e),await this.createPersonAttributes(t);const i=await this.createPatient();return await this.printPatient(),i}async registerGuardian(e){return this.createPerson(e)}updatePerson(e){return new r["a"](e).update(this.personId)}async createPerson(e){const t=await new r["a"](e).create();return this.personId=t.person_id,t}createPatient(){return s["a"].createPatient(this.personId)}async createPersonAttributes(e){for(const t in e)await o.create({...e[t],person_id:this.personId})}printPatient(){return new d["a"](this.personId).printNidLbl()}}},"8d15":function(e,t,i){"use strict";i.r(t);var n=i("7a23");function a(e,t,i,a,s,r){const o=Object(n["resolveComponent"])("his-standard-form"),d=Object(n["resolveComponent"])("ion-page");return Object(n["openBlock"])(),Object(n["createBlock"])(d,null,{default:Object(n["withCtx"])(()=>[Object(n["createVNode"])(o,{onOnIndex:t[0]||(t[0]=t=>e.fieldComponent=""),skipSummary:!0,activeField:e.fieldComponent,fields:e.fields,onFinishAction:e.onFinish},null,8,["activeField","fields","onFinishAction"])]),_:1})}i("14d9");var s=i("d95e"),r=i("7920"),o=i("b446"),d=i("2706"),l=i("23e6"),c=i("9283"),h=i("50e7"),u=i("2ef0"),p=i("80b5"),m=i("1f9a"),_=i("3e53"),g=i("0fa1"),b=i("0011"),y=i("fa73"),f=i("b5e4"),C=i("8df6"),v=i("d867"),D=i("7f35"),F=i("5a0c"),I=i.n(F),P=i("8734"),T=i("8e8b"),A=Object(n["defineComponent"])({components:{HisStandardForm:r["a"],IonPage:v["IonPage"]},data:()=>({app:_["a"].getActiveApp(),ddeInstance:{},ddeDocID:"",ddeIsReassign:!1,skipSummary:!1,currentAddressAttributes:["current_region","current_district","current_village","current_traditional_authority"],homeAddressAttributes:["home_region","home_district","home_traditional_authority","home_village"],hasIncompleteData:!1,patient:{},editPersonData:{},editPerson:-1,personAttribute:"",activeField:"",fieldComponent:"",fields:[],isMilitarySite:!1,presets:{},registrationSummary:{},form:{},ddeEnabled:!1}),watch:{$route:{async handler({query:e}){this.ddeInstance=new y["a"],e.edit_person?(this.ddeIsReassign=e.dde_reassign,this.ddeDocID=e.doc_id,this.ddeInstance.setPatientID(e.edit_person),e.person_attribute&&(this.personAttribute=e.person_attribute),await this.initEditMode(e.edit_person)):this.presets=e,this.fields=this.getFields()},immediate:!0,deep:!0}},methods:{getFields(){let e=[];return e.push(this.personIndexField()),e.push(this.givenNameField()),e.push(this.familyNameField()),e.push(this.genderField()),e.push(this.searchResultField()),e=e.concat(this.dobFields()),e.push(this.homeRegionField()),e.push(this.homeDistrictField()),e.push(this.homeTAField()),e.push(this.homeVillageField()),e.push(this.currentRegionField()),e.push(this.currentDistrictField()),e.push(this.currentTAField()),e.push(this.currentVillage()),e=e.concat(this.landmarkFields()),e.push(this.cellPhoneField()),e.push(this.patientTypeField()),e.push(this.facilityLocationField()),e.push(this.occupationField()),e.push(this.relationshipField()),e.push(this.possibleDuplicatesField()),e.push(this.patientRegistrationSummary()),e},isEditMode(){return this.editPerson>=1},async initEditMode(e){this.editPerson=e,this.patient=await T["a"].get("ACTIVE_PATIENT",{patientID:parseInt(""+this.editPerson)});const{ancestryDistrict:t,ancestryTA:i,ancestryVillage:n,currentDistrict:a,currentVillage:s,currentTA:r}=this.patient.getAddresses();this.editPersonData={given_name:this.patient.getGivenName(),family_name:this.patient.getFamilyName(),gender:this.patient.getGender(),birthdate:this.patient.getBirthdate(),home_district:t,home_traditional_authority:i,home_village:n,current_district:a,current_village:s,current_traditional_authority:r,cell_phone_number:this.patient.getPhoneNumber(),landmark:this.patient.getClosestLandmark(),occupation:this.patient.getOccupation()},this.presets=this.editPersonData,this.skipSummary=!0,this.personAttribute&&(this.activeField=this.personAttribute,this.fieldComponent=this.activeField)},async onFinish(e,t){return this.isEditMode()?this.update(t):this.create(e,t)},async create(e,t){let i=p["a"].resolvePerson(t);i="true"==this.presets.nationalIDStatus?this.appendNationalIDData(i):i;const n=this.resolvePersonAttributes(t),a=new m["a"],s=new l["a"](await a.registerPatient(i,n)),r=a.getPersonID();if(T["a"].set("ACTIVE_PATIENT",s),"true"==this.presets.nationalIDStatus&&(this.patient=s,await this.patient.updateMWNationalId(this.presets.malawiNationalID)),this.app.onRegisterPatient){const e=await this.app.onRegisterPatient(r,i,n,this.$router,this.$route);if(e)return}if("Yes"===i.relationship)return this.$router.push("/guardian/registration/"+r);await Object(g["b"])(r,this.$router)},appendNationalIDData(e){return Object.assign(e,{given_name:this.presets.given_name,family_name:this.presets.family_name,gender:this.presets.gender,birthdate:this.presets.birthdate,birthdate_estimated:!1})},async update(e){const t=p["a"].resolvePerson(e),i=new m["a"];i.setPersonID(this.editPerson),await i.updatePerson(t);for(const n in t)n in this.editPersonData&&(this.editPersonData[n]=t[n]);if(T["a"].invalidate("ACTIVE_PATIENT"),!this.personAttribute)return this.fieldComponent="edit_user";this.$router.back()},editConditionCheck(e=[]){return!(this.isEditMode()&&!e.includes(this.activeField))},async confirmPatient(){if(this.ddeEnabled&&(!this.patient.getDocID()||this.patient.getDocID()&&this.patient.getNationalID().match(/unknown/i)))try{await this.patient.assignNpid(),await this.patient.printNationalID(),await Object(P["a"])(300)}catch(e){Object(f["c"])("Failed to assign new NPID: "+e)}this.$router.push("/patients/confirm?person_id="+this.patient.getID())},resolvePersonAttributes(e){return Object.values(e).filter(e=>Object(u["isPlainObject"])(e)&&"personAttributes"in e).map(({personAttributes:e})=>e)},mapToOption(e){return e.map(e=>({label:e,value:e}))},givenNameField(){const e=p["a"].getGivenNameField();return e.condition=()=>this.editConditionCheck(["given_name"])&&"true"!=this.presets.nationalIDStatus,e.defaultValue=()=>this.presets.given_name,e},familyNameField(){const e=p["a"].getFamilyNameField();return e.condition=()=>this.editConditionCheck(["family_name"])&&"true"!=this.presets.nationalIDStatus,e.defaultValue=()=>this.presets.family_name,e},genderField(){const e="ANC"===this.app.applicationName,t="CxCa"===this.app.applicationName,i=p["a"].getGenderField();return i.requireNext=this.isEditMode(),i.defaultValue=()=>this.presets.gender,i.condition=()=>!(!this.isEditMode()&&(e||t))&&(this.editConditionCheck(["gender"])&&"true"!=this.presets.nationalIDStatus),!e&&!t||this.isEditMode()||(i.defaultOutput=()=>({label:"Female",value:"F"}),i.defaultComputedOutput=()=>({person:"F"})),i.beforeNext=async e=>{const t=e.value,i=this.presets.gender;if(this.isEditMode()&&t!=i){const e=await Object(D["a"])("Warning",`Changing gender from ${i} to ${t}`,"This change will cause data inconsistency and will affect alot of Reports.",[{name:"Cancel",slot:"start"},{name:"Change gender",slot:"end",color:"danger"}]);return"Change gender"===e}return!0},i},dobFields(){const e=p["a"].getDobConfig();if(e.defaultValue=()=>this.presets.birthdate,e.condition=()=>this.editConditionCheck(["year_birth_date","month_birth_date","day_birth_date"]),"ANC"===this.app.applicationName){const t=l["a"].getSessionDate(),i=12;e.maxDate=()=>I()(t).subtract(i,"years").format(c["b"])}return Object(o["b"])(e)},homeRegionField(){const e=p["a"].getHomeRegionField();return e.condition=()=>this.editConditionCheck(this.homeAddressAttributes),e},homeDistrictField(){const e=p["a"].getHomeDistrictField();return e.condition=()=>this.editConditionCheck(this.homeAddressAttributes),e},homeTAField(){const e=p["a"].getHomeTaField();return e.condition=e=>this.editConditionCheck(this.homeAddressAttributes)&&!e.home_region.label.match(/foreign/i),e},homeVillageField(){const e=p["a"].getHomeVillageField();return e.condition=e=>this.editConditionCheck(this.homeAddressAttributes)&&!e.home_region.label.match(/foreign/i),e},currentRegionField(){const e=p["a"].getCurrentRegionField();return e.condition=()=>this.editConditionCheck(this.currentAddressAttributes),e},currentDistrictField(){const e=p["a"].getCurrentDistrictField();return e.condition=()=>this.editConditionCheck(this.currentAddressAttributes),e},currentTAField(){const e=p["a"].getCurrentTAfield();return e.condition=e=>this.editConditionCheck(this.currentAddressAttributes)&&!e.current_region.label.match(/foreign/i),e},currentVillage(){const e=p["a"].getCurrentVillageField();return e.condition=e=>this.editConditionCheck(this.currentAddressAttributes)&&!e.current_region.label.match(/foreign/i),e},cellPhoneField(){const e=p["a"].getCellNumberField();return e.condition=()=>this.editConditionCheck(["cell_phone_number"]),e.defaultValue=()=>this.presets.cell_phone_number,e},facilityLocationField(){const e=p["a"].getFacilityLocationField();return e.condition=e=>["Drug Refill","External consultation"].includes(e.patient_type.value),e},landmarkFields(){const e=p["a"].getLandmarkFields();return e[0].condition=()=>this.editConditionCheck(["default_landmarks"]),e},patientTypeField(){return{id:"patient_type",helpText:"Type of patient",type:s["b"].TT_SELECT,computedValue:e=>({person:e.value}),condition:()=>this.editConditionCheck(["patient_type"])&&"ART"===this.app.applicationName,validation:e=>d["a"].required(e),options:()=>C["a"].getPatientTypes()}},occupationField(){return{id:"occupation",helpText:"Occupation",type:s["b"].TT_SELECT,init:async()=>(this.isMilitarySite=await T["a"].get("IS_MILITARY_SITE"),!0),computedValue:e=>({person:e.value}),condition:()=>this.editConditionCheck(["occupation"])&&this.isMilitarySite,validation:e=>d["a"].required(e),options:()=>this.mapToOption(["Military","Civilian"])}},regimentField(){return{id:"person_regiment_id",helpText:"Regiment ID",type:s["b"].TT_TEXT,computedValue:({value:e})=>({personAttributes:{person_attribute_type_id:35,value:e}}),condition:e=>this.editConditionCheck(["person_regiment_id","occupation"])&&e.occupation&&e.occupation.value.match(/Military/i),validation:e=>d["a"].required(e)}},rankField(){return{id:"rank",helpText:"Rank",type:s["b"].TT_SELECT,validation:e=>d["a"].required(e),computedValue:({value:e})=>({personAttributes:{person_attribute_type_id:36,value:e}}),condition:e=>this.editConditionCheck(["rank","occupation"])&&e.occupation&&e.occupation.value.match(/Military/i),options:()=>this.mapToOption(["First Lieutenant","Captain","Major","Lieutenant Colonel","Colonel","Brigadier General","Lieutenant General","General","Private","Corporal","Lance Corporal","Seargent","Staff Seargent","Warrant Officer class 1","Warrant Officer class 2"])}},dateJoinedMilitaryFields(){return Object(o["b"])({id:"person_date_joined_military",helpText:"Joined Military",required:!0,condition:e=>this.editConditionCheck(["year_person_date_joined_military","month_person_date_joined_military","day_person_date_joined_military","occupation"])&&e.occupation&&e.occupation.value.match(/Military/i),minDate:()=>c["c"].estimateDateFromAge(100),maxDate:()=>h["a"].getSessionDate(),estimation:{allowUnknown:!1},computeValue:e=>({date:e,personAttributes:{person_attribute_type_id:37,value:e}})})},relationshipField(){const e="CxCa"===this.app.applicationName,t="OPD"===this.app.applicationName,i="Registration"===this.app.applicationName;return{id:"relationship",helpText:"Register guardian?",type:s["b"].TT_SELECT,computedValue:e=>({person:e.value}),condition:()=>this.editConditionCheck(["relationship"])&&!e&&!t&&!i,validation:e=>d["a"].required(e),options:()=>this.mapToOption(["Yes","No"])}},searchResultField(){return{id:"results",helpText:"Search results",type:s["b"].TT_PERSON_RESULT_VIEW,init:async()=>(this.isEditMode()||(this.ddeEnabled=await T["a"].get("IS_DDE_ENABLED")),!0),dynamicHelpText:e=>"true"==this.presets.nationalIDStatus?`Search results for "${this.presets.given_name} ${this.presets.family_name} | ${this.presets.gender}"`:`Search results for "${e.given_name.value} ${e.family_name.value} | ${e.gender.label}"`,appearInSummary:()=>!1,condition:()=>!this.isEditMode(),validation:e=>d["a"].required(e),options:async e=>{let t;if("true"==this.presets.nationalIDStatus?(this.presets.gender="Male"==this.presets.gender?"M":"F",t={given_name:this.presets.given_name,family_name:this.presets.family_name,gender:this.presets.gender}):t={given_name:e.given_name.value,family_name:e.family_name.value,gender:e.gender.value},this.ddeEnabled){const e=await this.ddeInstance.searchDemographics(t);return e.map(e=>{const t=p["a"].getPersonAttributeOptions(e);return t.other.options.push({label:"Patient Type",value:e.patient_type}),t.other.options.push({label:"Doc ID",value:e.doc_id}),t})}const i=await l["a"].search(t);return i.map(e=>p["a"].getPersonAttributeOptions(e))},config:{hiddenFooterBtns:["Clear","Next","Back"],footerBtns:[{name:"Edit Search",slot:"end",onClick:()=>{this.fieldComponent="given_name"}},{name:"New Patient",slot:"end",onClick:()=>{"true"!=this.presets.nationalIDStatus?this.fieldComponent="year_birth_date":this.fieldComponent="home_region"}},{name:"Continue",color:"success",slot:"end",state:{disabled:{default:()=>!0,onValue(e,t){return Object(u["isEmpty"])(t.results)}}},onClick:e=>e.results.other.patientID?this.$router.push("/patients/confirm?person_id="+e.results.value):this.$router.push("/patients/confirm?patient_barcode="+e.results.value)}]}}},possibleDuplicatesField(){let e={},t={};return{id:"possible_duplicates",helpText:"Possible Duplicate(s)",type:s["b"].TT_PERSON_MATCH_VIEW,condition:async(i,n)=>!!(this.ddeEnabled&&this.editPerson<=0)&&(e=p["a"].resolvePerson(n),t=await this.ddeInstance.checkPotentialDuplicates(e),t.length>=1),options:async()=>{const i=e=>c["c"].toStandardHisDisplayFormat(e);return t.map(({score:t,person:n})=>{const a=`${n.given_name} ${n.family_name}`;return{label:a,value:n.patient_id,other:{score:100*t+"%",newPerson:e,foundPerson:n,docID:n.id,comparisons:[["Name",`${e.given_name} ${e.family_name}`,`${n.given_name} ${n.family_name}`],["Gender",e.gender,n.gender],["Birthdate",i(e.birthdate),i(n.birthdate)],["Home District",e.home_district,n.home_district],["Home TA",e.home_traditional_authority,n.home_traditional_authority]]}}})},config:{hiddenFooterBtns:["Clear","Next"],footerBtns:[{name:"Not Duplicate",slot:"start",state:{visible:{default:()=>!1,onValue:(e,t)=>!Object(u["isEmpty"])(t.possible_duplicates)}},onClick:()=>{this.fieldComponent="_NEXT_FIELD_"}},{name:"Select",slot:"end",color:"success",state:{visible:{default:()=>!1,onValue:(e,t)=>!Object(u["isEmpty"])(t.possible_duplicates)}},onClick:e=>{this.ddeInstance.importPatient(e.possible_duplicates.other.docID).then(e=>{this.$router.push("/patients/confirm?person_id="+e.patient_id)}).catch(()=>{this.$router.push("/patients/confirm?person_id="+e.possible_duplicates.value)})}}]}}},personIndexField(){return{id:"edit_user",helpText:"Edit Demographics",type:s["b"].TT_TABLE_VIEWER,init:async()=>(this.isEditMode()&&(this.ddeEnabled=await T["a"].get("IS_DDE_ENABLED"),this.isMilitarySite=await T["a"].get("IS_MILITARY_SITE")),!0),condition:()=>this.isEditMode(),options:async()=>{const e=e=>({name:"Edit",type:"button",action:()=>{this.activeField=e,this.fieldComponent=this.activeField}}),t=["Attributes","Values","Edit"],i=[["Given Name",this.editPersonData.given_name,e("given_name")],["Family Name",this.editPersonData.family_name,e("family_name")],["Gender",this.editPersonData.gender,e("gender")],["Birthdate",c["c"].toStandardHisDisplayFormat(this.editPersonData.birthdate),e("year_birth_date")],["Cell Phone Number",this.editPersonData.cell_phone_number,e("cell_phone_number")],["Home District",this.editPersonData.home_district,e("home_region")],["Home TA",this.editPersonData.home_traditional_authority,e("home_region")],["Home Village",this.editPersonData.home_village,e("home_region")],["Current district",this.editPersonData.current_district,e("current_region")],["Current Village",this.editPersonData.current_village,e("current_region")],["Current T/A",this.editPersonData.current_traditional_authority,e("current_region")],["Landmark",this.editPersonData.landmark,e("default_landmarks")]];this.isMilitarySite&&i.push(["Occupation",this.editPersonData.occupation,e("occupation")]);const n={indexes:[],class:"his-empty-set-color"};return i.forEach((e,t)=>{Object(b["d"])(e[1])&&n.indexes.push(t)}),this.hasIncompleteData=n.indexes.length>=1,[{label:"",value:"",other:{rows:i,columns:t,rowColors:[n]}}]},config:{footerBtns:[{name:"Reassign",slot:"end",color:"success",state:{visible:{default:()=>!1,onload:()=>this.ddeEnabled&&this.ddeIsReassign&&!this.hasIncompleteData}},onClick:async()=>{try{await this.ddeInstance.reassignNpid(this.ddeDocID,this.editPerson),await this.ddeInstance.printNpid(),this.$router.push("/patients/confirm?person_id="+this.editPerson)}catch(e){Object(f["e"])(""+e)}}},{name:"Confirm",slot:"end",color:"warning",state:{visible:{onload:()=>!this.ddeIsReassign&&!this.hasIncompleteData}},onClick:async()=>this.confirmPatient()}],hiddenFooterBtns:["Clear","Next"]}}},patientRegistrationSummary(){return{id:"registration_summary",helpText:"Summary",type:s["b"].TT_SUMMARY,condition:()=>!this.skipSummary,options:(e,t)=>this.buildRegistrationSummary(t),config:{hiddenFooterBtns:["Clear"]}}},buildRegistrationSummary(e){e=Object.keys(e).map((function(t,i){if(null!=e[t])return{label:t.replace(/_/g," ").replace(/(^\w|\s\w)/g,e=>e.toUpperCase()),value:"birth_date"==t?e[t]["date"]:e[t]["person"]}})),e=e.filter(e=>void 0!=e);const t=[{label:"Given Name",value:this.presets.given_name},{label:"Family Name",value:this.presets.family_name},{label:"Gender",value:this.presets.gender},{label:"Birthdate",value:this.presets.birthdate},{label:"Malawi National ID",value:this.presets.malawiNationalID}];return"true"==this.presets.nationalIDStatus&&(e=t.concat(e)),e}}}),E=i("d959"),w=i.n(E);const k=w()(A,[["render",a]]);t["default"]=k}}]);
//# sourceMappingURL=chunk-20db0db6.369397e3.js.map