{"version":3,"sources":["webpack:///./src/guidelines/encounter_guidelines.ts","webpack:///./src/views/EncounterMixin.vue","webpack:///./src/views/EncounterMixin.vue?fc39","webpack:///./src/components/Forms/HisStandardForm.vue?8e31","webpack:///./src/components/Forms/HisStandardForm.vue","webpack:///./src/components/Forms/HisStandardForm.vue?5176","webpack:///./src/apps/ART/views/encounters/Vitals.vue?3109","webpack:///./src/apps/ART/views/encounters/Vitals.vue","webpack:///./src/apps/ART/views/encounters/Vitals.vue?9c95","webpack:///./src/apps/ART/services/vitals_service.ts","webpack:///./src/utils/GuidelineEngine.ts","webpack:///./src/components/Forms/BaseFormElements.ts","webpack:///./src/components/FormElements lazy ^\\.\\/.*\\.vue$ namespace object"],"names":["FlowState","dformat","d","HisDate","toStandardHisDisplayFormat","ENCOUNTER_GUIDELINES","priority","actions","alert","async","outcomeStartDate","action","infoActionSheet","name","slot","color","GO_TO_PATIENT_DASHBOARD","CHANGE_PATIENT_OUTCOME","CONTINUE","conditions","outcome","startDate","sessionDate","birthDate","CHANGE_SESSION_DATE","selection","providers","encounterName","apiDate","modal","optionsActionSheet","role","value","flowState","SET_PROVIDER","isBdeMode","isBDE","defineComponent","components","HisStandardForm","data","patient","fields","patientID","providerID","facts","ready","watch","handler","route","params","patient_id","this","parseInt","Store","get","then","patientData","setEncounterFacts","checkEncounterGuidelines","immediate","deep","computed","cancelDestination","patientDashboardUrl","methods","runflowState","state","states","username","split","provider","find","person_id","$router","push","EXIT","gotoPatientDashboard","findings","matchToGuidelines","index","_finding$actions","_finding$actions3","finding","_finding$actions2","status","_finding$actions4","program","e","console","error","toastDanger","ProgramService","getSessionDate","getCachedApiDate","getBirthdate","$route","toString","toUpperCase","sort","a","b","usernameA","usernameB","map","p","_p$person","isEmpty","person","names","_p$person2","latestName","given_name","family_name","toOption","label","other","mapStrToOptions","items","i","path","nextTask","yesNoOptions","toYesNoOption","values","mapOptions","options","option","yesNoUnknownOptions","resolveObs","obs","tag","Object","filter","reduce","accum","cur","Array","isArray","concat","Promise","all","inArray","arr","expression","length","validateSeries","condition","__exports__","render","_ctx","_cache","$props","$setup","$data","$options","_openBlock","_createBlock","_resolveDynamicComponent","formType","skipSummary","activeField","cancelDestinationPath","onOnFinish","onFinish","onFinishAction","onOnIndex","onIndex","TouchScreenForm","emits","props","type","Function","Boolean","default","String","required","formData","computedData","$emit","_component_his_standard_form","_resolveComponent","onOnskip","$event","mixins","EncounterMixinVue","app","HisApp","getActiveApp","age","gender","hasBPinfo","finalHeightValue","recentHeight","recentHeightObsID","HTNEnabled","optionWhiteList","hasHTNObs","vitals","weightForHeight","medianWeightandHeight","canEditHeight","patientAgeAtPrevRecordedHeight","init","VitalsService","getAge","getGender","getFields","getOptions","modifier","icon","visible","o","includes","canCheckWeightHeight","canCheckBp","encounter","createEncounter","toastWarning","buildObs","observations","saveObservationList","toastSuccess","mapObs","sanitizeVitals","element","on_htn_medication","buildValueText","splitBP","forEach","bpSystolic","bpDiastolic","getBMI","weight","getVal","height","currentWeightPercentile","parseFloat","toFixed","currentHeightPercentile","currentHeightRounded","Math","floor","medianWeightHeight","weightForHeightPercentile","isNaN","BMI","BMIService","calculateBMI","val","key","j","buildValueNumber","validateVitals","l","checkRequiredVitals","v","validateAll","id","helpText","FieldType","TT_SELECT","_this$app","applicationName","getAll","validation","Validation","TT_VITALS_ENTRY","query","vital_options","lastHeight","getRecentHeightObs","dayjs","diff","getMedianWeightHeight","getWeightForHeightValues","beforeNext","heightOption","enteredHeight","prevHeight","prevHeightBtnTxt","newHeightBtnTxt","alertConfirmation","voidObs","config","hiddenFooterBtns","onUpdateAlertStatus","weightOption","result","onChangeOption","activeItem","errs","validator","AppEncounterService","constructor","super","isNotEmptyandNumber","vital","match","isNotEmptyandFloat","_vital$other","checkMinMax","min","max","_val$other","_val$other2","mergeErrors","errors","holder","isValidBPReading","isValidBP","emptyErrors","minErrors","isCondition","ignored","undefined","prop","every","sortByPriority","sortByWeight","guidelines","target","targetEvent","sortBy","matches","guidelineIndex","targetValidations","some","title","description","text","info","COMPONENT_REFS","TT_MULTI_SELECT_GRID","TT_AGE_INPUT","TT_BARCODE","TT_NOTE","TT_CARD_SELECTOR","TT_MULTIPLE_SELECT","TT_TEXT","TT_NUMBER","TT_MONTHLY_DAYS","TT_ART_REGIMEN_SELECTION","TT_NEXT_VISIT_INTERVAL_SELECTION","TT_TABLE_VIEWER","TT_DOSAGE_INPUT","TT_YES_NO","TT_MULTIPLE_YES_NO","TT_WEIGHT_CHART","TT_APPOINTMENTS_ENTRY","TT_COMPLAINTS_PICKER","TT_CLINIC_HOLIDAY_PICKER","TT_SUMMARY","TT_ART_STAGING_SUMMARY","TT_ADHERENCE_INPUT","TT_LAB_ORDERS","TT_PERSON_RESULT_VIEW","TT_PROGRAM_SELECTION","TT_DATE_PICKER","TT_RELATION_SELECTION","TT_FILING_NUMBER_VIEW","TT_PERSON_MATCH_VIEW","TT_FULL_DATE","TT_BATCH_ENTRY","TT_BATCH_VERIFICATION","TT_BATCH_MOVEMENT","TT_IP_ADDRESS","TT_TEXT_BANNER","TT_DISPENSATION_INPUT","TT_DATA_TABLE","TT_GROUP_SELECTOR","TT_ANC_PREGNANCY_INPUT_CONFIG","TT_ANC_PREGNANCY_DETAILS_INPUT","TT_ANC_LMP_DATE_INPUT","TT_DRUG_TRANSFER_IN","TT_GRID_SELECTOR","TT_ANC_DRUGSET_INPUT","TT_RADIOLOGY_PICKER","TT_PRESCRIPTION_INPUT","TT_INFINITE_SCROLL_MULTIPLE_SELECT","TT_DRUG_DISPENSER","webpackAsyncContext","req","__webpack_require__","resolve","Error","code","ids","slice","keys","module","exports"],"mappings":"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","file":"js/chunk-5f703f32.8cd6cfec.js","sourcesContent":["import { infoActionSheet, optionsActionSheet } from \"@/utils/ActionSheets\";\nimport { GuideLineInterface } from \"@/utils/GuidelineEngine\";\nimport HisDate from '@/utils/Date'\n\nexport enum FlowState {\n    SET_PROVIDER = 'SET_PROVIDER',\n    CHANGE_SESSION_DATE = 'change_session_date',\n    GO_TO_PATIENT_DASHBOARD = 'go_to_patient_dashboard',\n    CHANGE_PATIENT_OUTCOME = 'change_outcome',\n    CONTINUE = 'continue',\n    EXIT = 'exit'\n}\nconst dformat = (d: string) => HisDate.toStandardHisDisplayFormat(d)\n\nexport const ENCOUNTER_GUIDELINES: Record<string, GuideLineInterface> = {\n    \"Warn if attempting to create new encounters for a deceased patient\": {\n        priority: 1,\n        actions: {\n            alert: async ({ outcomeStartDate }: any) => {\n                const action = await infoActionSheet(\n                    'Data Integrity Issue Found',\n                    `Patient died on ${dformat(outcomeStartDate)}`,\n                    'Proceeding with this outcome might affect accuracy of some reports',\n                    [\n                        { name: 'Cancel', slot: 'end', color: 'primary'},\n                        { name: 'Change outcome', slot: 'end', color: 'primary'},\n                        { name: 'Continue Anyway', slot: 'end', color: 'danger'}\n                    ]\n                )\n                return action === 'Cancel'\n                    ? FlowState.GO_TO_PATIENT_DASHBOARD\n                    : action === 'Change outcome'\n                    ? FlowState.CHANGE_PATIENT_OUTCOME\n                    : FlowState.CONTINUE\n            }\n        },\n        conditions: {\n            outcome(outcome: string) {\n                return outcome === 'Patient died'\n            },\n            outcomeStartDate(startDate: string, { sessionDate }: any) {\n                return sessionDate >= startDate\n            }\n        }\n    },\n    \"A patient's date of birth must not be less than Session Date\": {\n        priority: 2,\n        actions: {\n            alert: async ({ birthDate, sessionDate}: any) => {\n                const action = await infoActionSheet(\n                    'Data integrity issue found', '',\n                    `Session date ${dformat(sessionDate)} is less than birth date of ${dformat(birthDate)}`,\n                    [\n                        { name: 'Cancel', slot: 'end', color: 'danger'},\n                        { name: 'Change session date', slot: 'end', color: 'success'}\n                    ]\n                )\n                return action === 'Change session date'\n                    ? FlowState.CHANGE_SESSION_DATE\n                    : FlowState.GO_TO_PATIENT_DASHBOARD\n            }\n        },\n        conditions: {\n            birthDate(birthDate: string, { sessionDate }: any) {\n                return sessionDate < birthDate\n            }\n        }\n    },\n    \"Select Encounter provider when in back data entry\": {\n        priority: 3,\n        actions: {\n            selection: async ({ providers, encounterName, sessionDate, apiDate }: any) => {\n                const modal = await optionsActionSheet(\n                    `Please select a provider for ${encounterName}`,\n                    `BDE: ${dformat(sessionDate)} | Current: ${dformat(apiDate)}`,\n                    providers,\n                    [\n                        { name: 'Cancel', color: 'danger', slot: 'start', role: 'default'},\n                        { name: 'Confirm', slot: 'end', role: 'action' }\n                    ]\n                )\n                return modal.action === 'Cancel' \n                    ? { value: -1, flowState: FlowState.GO_TO_PATIENT_DASHBOARD }\n                    : { value: modal.selection, flowState: FlowState.SET_PROVIDER }\n            }\n        },\n        conditions: {\n            isBdeMode(isBDE: boolean) {\n                return isBDE\n            }\n        }\n    }\n}","\nimport { defineComponent } from 'vue'\nimport { Field, Option } from '@/components/Forms/FieldInterface'\nimport { ProgramService } from \"@/services/program_service\"\nimport { find, isEmpty } from \"lodash\"\nimport { nextTask } from \"@/utils/WorkflowTaskHelper\"\nimport { ENCOUNTER_GUIDELINES, FlowState } from \"@/guidelines/encounter_guidelines\"\nimport { matchToGuidelines } from \"@/utils/GuidelineEngine\"\nimport HisStandardForm from \"@/components/Forms/HisStandardForm.vue\";\nimport { toastDanger } from '@/utils/Alerts'\nimport Store from \"@/composables/ApiStore\"\n\nexport default defineComponent({\n    components: { HisStandardForm },\n    data: () => ({\n        patient: {} as any,\n        fields: [] as Array<Field>,\n        patientID: '' as any,\n        providerID: -1 as number,\n        providers: [] as any,\n        facts: {\n            sessionDate: '' as string,\n            apiDate: '' as string,\n            encounterName: 'N/A' as string,\n            providers: [] as Array<any>,\n            isBdeMode: false as boolean,\n            birthDate: '' as string,\n            outcome: '' as string,\n            outcomeStartDate: '' as string\n        },\n        ready: false\n    }),\n    watch: {\n       '$route': {\n            handler(route: any) {\n                if(route.params.patient_id && this.patientID != route.params.patient_id) {\n                    this.patientID = parseInt(route.params.patient_id);\n                    Store.get('ACTIVE_PATIENT', { patientID: this.patientID})\n                        .then(patientData => {\n                            this.patient = patientData\n                            this.setEncounterFacts().then(() => {\n                                this.checkEncounterGuidelines().then(() => {\n                                    this.ready = true\n                                })\n                            })\n                        })\n                    }\n            },\n            immediate: true,\n            deep: true\n        }\n    },\n    computed: {\n        cancelDestination(): string {\n            return this.patientDashboardUrl()\n        }\n    },\n    methods: {\n        runflowState(state: FlowState, params=null) {\n            const states: any = {}\n            states[FlowState.SET_PROVIDER] = (selection: any) => {\n                const [ username ] = selection.split(' ')\n                const provider = find(this.providers, { username })\n                if (provider) this.providerID = provider.person_id\n                return FlowState.CONTINUE\n            }\n            states[FlowState.CHANGE_SESSION_DATE] = () => { \n                this.$router.push(`/session/date?patient_dashboard_redirection_id=${this.patientID}`)\n                return FlowState.EXIT\n            }\n            states[FlowState.CHANGE_PATIENT_OUTCOME] = () => {\n                this.$router.push(`/patient/programs/${this.patientID}`)\n                return FlowState.EXIT\n            }\n            states[FlowState.GO_TO_PATIENT_DASHBOARD] = () => {\n                this.gotoPatientDashboard()\n                return FlowState.EXIT\n            }\n            if (state in states) {\n                return states[state](params)\n            }\n        },\n        async checkEncounterGuidelines() {\n            const findings = matchToGuidelines(this.facts, ENCOUNTER_GUIDELINES)\n            for(const index in findings) {\n                const finding = findings[index]\n                if (finding?.actions?.alert) {\n                    const status = this.runflowState((await finding?.actions?.alert(this.facts)))\n                    if (status === FlowState.EXIT) return\n                }\n                if (finding?.actions?.selection) {\n                    const selection = await finding?.actions?.selection(this.facts)\n                    this.runflowState(selection.flowState, selection.value)\n                }\n            }\n        },\n        async setEncounterFacts() {\n            try {\n                const program = await Store.get('PATIENT_PROGRAM', { patientID: this.patientID })\n                this.facts.outcome = program.outcome\n                this.facts.outcomeStartDate = program.startDate\n            } catch (e) {\n                console.error(e)\n                toastDanger(`${e}`)\n            }\n            this.facts.sessionDate = ProgramService.getSessionDate()\n            this.facts.apiDate = ProgramService.getCachedApiDate() as string\n            this.facts.isBdeMode = ProgramService.isBDE() as boolean\n            this.facts.birthDate = this.patient.getBirthdate()\n            this.facts.encounterName = this.$route.name \n                ? this.$route.name.toString().toUpperCase()\n                : 'N/A'\n            if (ProgramService.isBDE()) {\n                this.providers = await Store.get('PROVIDERS')\n                this.facts.providers = this.providers\n                    .sort((a: any, b: any) => {\n                        const usernameA = a.username.toUpperCase()\n                        const usernameB = b.username.toUpperCase()\n                        return usernameA < usernameB ? -1 : usernameA > usernameB  ? 1 : 0\n                    })\n                    .map((p: any) => {\n                        let name = `${p.username}`\n                        if (!isEmpty(p?.person?.names)) {\n                            const [ latestName ] = p.person?.names || []\n                            name += ` (${latestName.given_name} ${latestName.family_name})`\n                        }\n                        return name\n                    })\n            }\n        },\n        toOption(label: string, other={}) {\n            return {\n                label,\n                value: label,\n                other\n            }\n        },\n        mapStrToOptions(items: string[]) {\n            return items.map(i => ({label: i, value: i}))\n        },\n        patientDashboardUrl(): string {\n            return `/patient/dashboard/${this.patientID}`\n        },\n        gotoPatientDashboard() {\n            return this.$router.push({path: this.patientDashboardUrl()})\n        },\n        nextTask() {\n            return nextTask(this.patientID, this.$router)\n        },\n        yesNoOptions(): Option[] {\n            return [\n                { label: \"Yes\", value: \"Yes\" },\n                { label: \"No\", value: \"No\" }\n            ]\n        },\n        toYesNoOption(label: string, other: any={}): Option {\n            return {\n                label,\n                value: '',\n                other: {\n                    ...other,\n                    values: this.yesNoOptions()\n                }\n            } \n        },\n        mapOptions(options: Array<string>) {\n            return options.map((option) => {\n                return { label: option, value: option }\n            });\n        },\n        yesNoUnknownOptions(): Option[] {\n            return [\n                { label: \"Yes\", value: \"Yes\" },\n                { label: \"No\", value: \"No\" },\n                { label: \"Unknown\", value: \"Unknown\" }\n            ]\n        },\n        resolveObs(obs: any, tag='') {\n            const values: any = Object.values(obs)\n                .filter((d: any) => d && (d.tag === tag || tag === ''))\n                .reduce((accum: any, cur: any) => { \n                    const data = cur.obs ? cur.obs : cur\n                    if (Array.isArray(data)) {\n                        accum = accum.concat(data)\n                    } else if (typeof data === 'function') {\n                        accum.push(data())\n                    } else {\n                        accum.push(data)\n                    }\n                    return accum\n                    }, [])\n            return Promise.all(values)\n        },\n        inArray(arr: Array<any>, expression: (i: any) => boolean): boolean {\n            try {\n                return arr.filter((i: any) => expression(i)).length > 0\n            } catch (e) {\n                return false\n            }\n        },\n        validateSeries(conditions: Array<any>){\n            try {\n                for(const i in conditions) {\n                    const condition = conditions[i]()\n\n                    if (condition) return condition\n                }\n            } catch (e) {\n                return [e]\n            }\n        }\n    }\n})\n","import script from \"./EncounterMixin.vue?vue&type=script&lang=ts\"\nexport * from \"./EncounterMixin.vue?vue&type=script&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { resolveDynamicComponent as _resolveDynamicComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createBlock(_resolveDynamicComponent(_ctx.formType), {\n    fields: _ctx.fields,\n    skipSummary: _ctx.skipSummary,\n    activeField: _ctx.activeField,\n    cancelDestinationPath: _ctx.cancelDestinationPath,\n    onOnFinish: _ctx.onFinish,\n    onFinish: _ctx.onFinishAction,\n    onOnIndex: _ctx.onIndex\n  }, null, 40, [\"fields\", \"skipSummary\", \"activeField\", \"cancelDestinationPath\", \"onOnFinish\", \"onFinish\", \"onOnIndex\"]))\n}","\nimport TouchScreenForm from \"@/components/Forms/TouchScreenForm.vue\";\nimport { defineComponent, PropType } from \"vue\";\nimport { Field } from \"./FieldInterface\";\n\nexport default defineComponent({\n    name: \"HisStandardForm\",\n    components: { TouchScreenForm },\n    emits: [\n        'onFinish',\n        'onIndex'\n    ],\n    data: () => ({\n        formType: 'touch-screen-form' as string\n    }),\n    props: {\n        onFinishAction: {\n            type: Function\n        },\n        skipSummary: {\n            type: Boolean,\n            default: false\n        },\n        activeField: {\n            type: String\n        },\n        fields: {\n            type: Object as PropType<Field[]>,\n            required: true\n        },\n        cancelDestinationPath: {\n            type: String,\n            required: false,\n        }\n    },\n    methods: {\n        onFinish(formData: any, computedData: any) {\n            this.$emit('onFinish', formData, computedData)\n        },\n        onIndex(i: number) {\n            this.$emit('onIndex', i)\n        }\n    }\n})\n","import { render } from \"./HisStandardForm.vue?vue&type=template&id=6daa0375&ts=true\"\nimport script from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\nexport * from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/projects/malawi-emr/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_his_standard_form = _resolveComponent(\"his-standard-form\")!\n\n  return (_openBlock(), _createBlock(_component_his_standard_form, {\n    fields: _ctx.fields,\n    activeField: _ctx.activeField,\n    onOnskip: _cache[0] || (_cache[0] = ($event: any) => (_ctx.activeField = '')),\n    onFinishAction: _ctx.onFinish,\n    skipSummary: true,\n    cancelDestinationPath: _ctx.cancelDestination\n  }, null, 8, [\"fields\", \"activeField\", \"onFinishAction\", \"cancelDestinationPath\"]))\n}","\nimport { defineComponent } from \"vue\";\nimport { Field, Option } from \"@/components/Forms/FieldInterface\";\nimport { FieldType } from \"@/components/Forms/BaseFormElements\";\nimport HisStandardForm from \"@/components/Forms/HisStandardForm.vue\";\nimport Validation from \"@/components/Forms/validations/StandardValidations\";\nimport { VitalsService } from \"@/apps/ART/services/vitals_service\";\nimport { alertConfirmation, toastSuccess, toastWarning } from \"@/utils/Alerts\";\nimport EncounterMixinVue from \"../../../../views/EncounterMixin.vue\";\nimport { BMIService } from \"@/services/bmi_service\";\nimport { ProgramService } from \"@/services/program_service\";\nimport { find, isEmpty } from \"lodash\";\nimport HisApp from \"@/apps/app_lib\"\nimport { infoActionSheet } from \"@/utils/ActionSheets\"\nimport dayjs from \"dayjs\";\nimport Store from \"@/composables/ApiStore\"\n\nexport default defineComponent({\n  mixins: [EncounterMixinVue],\n  components: { HisStandardForm },\n  data: () => ({\n    app: HisApp.getActiveApp() as any,\n    activeField: \"\",\n    age: null as any,\n    gender: null as any,\n    hasBPinfo: false,\n    finalHeightValue: null as number | null,\n    recentHeight: null,\n    recentHeightObsID: -1,\n    HTNEnabled: false,\n    optionWhiteList: [] as string[],\n    hasHTNObs: false,\n    vitals: {} as any,\n    weightForHeight: {} as any,\n    medianWeightandHeight: {} as any,\n    canEditHeight: false as boolean,\n    patientAgeAtPrevRecordedHeight: -1 as number\n  }),\n  watch: {\n    ready: {\n      handler(ready) {\n        if (ready) this.init()\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    init() {\n      this.vitals = new VitalsService(this.patientID, this.providerID);\n      this.age = this.patient.getAge();\n      this.gender = this.patient.getGender();\n      this.fields = this.getFields();\n    },\n    getOptions() {\n      let recentHeight = ''\n      if (this.recentHeight) {\n        if (this.age > 18 || this.patientAgeAtPrevRecordedHeight >= 18 ) {\n          recentHeight = this.recentHeight || ''\n        }\n      }\n      const options = [\n        {\n          label: \"Weight\",\n          value: \"\",\n          other: {\n            modifier: \"KG\",\n            icon: \"weight\",\n            required: true,\n          },\n        },\n        {\n          label: \"Height\",\n          value: `${recentHeight}`,\n          other: {\n            modifier: \"CM\",\n            icon: \"height\",\n            recentHeight: this.recentHeight,\n            visible: this.canEditHeight,\n            required: this.canEditHeight\n          },\n        },\n        { label: \"BP\", value: \"\", other: { modifier: \"mmHG\", icon: \"bp\" } },\n        {\n          label: \"Temp\",\n          value: \"\",\n          other: { modifier: \"°C\", icon: \"temp\" },\n        },\n        {\n          label: \"SP02\",\n          value: \"\",\n          other: { modifier: \"%\", icon: \"spo2\" },\n        },\n        {\n          label: \"Pulse\",\n          value: \"\",\n          other: { modifier: \"BPM\", icon: \"pulse-rate\" },\n        },\n        {\n          label: \"Age\",\n          value: this.age,\n          other: { modifier: \"Years old\", icon: \"\", visible: false },\n        }\n      ]\n\n      if (!isEmpty(this.optionWhiteList)) {\n        return options.filter((o: any) => this.optionWhiteList.includes(o.label))\n          .map((o: any) => {\n            o.other.required = true\n            return o\n          })\n      }\n      return options\n    },\n    canCheckWeightHeight() {\n      return isEmpty(this.optionWhiteList) || this.optionWhiteList.includes('Height') \n        && this.optionWhiteList.includes('Weight')\n    },\n    canCheckBp() {\n      return isEmpty(this.optionWhiteList) || this.optionWhiteList.includes('BP')\n    },\n    async onFinish(formData: any) {\n      const encounter = await this.vitals.createEncounter();\n\n      if (!encounter) return toastWarning(\"Unable to create treatment encounter\");\n\n      const obs = await this.buildObs(formData);\n      const observations = await this.vitals.saveObservationList(obs);\n\n      if (!observations) return toastWarning(\"Unable to save patient observations\");\n\n      toastSuccess(\"Observations and encounter created!\");\n\n      this.nextTask();\n    },\n    async buildObs(formData: any) {\n      const observations: any = await this.mapObs(\n        this.sanitizeVitals(formData.vitals).filter(\n          (element) => element.label !== \"BP\"\n        ).map((e: any) => {\n          if (e.label === 'Height' && e.other.visible && this.finalHeightValue) {\n            e.value = this.finalHeightValue\n          }\n          return e\n        })\n      );\n      if (this.HTNEnabled && !this.hasHTNObs && formData.on_htn_medication) {\n        const obs = await this.vitals.buildValueText(\n          \"Treatment status\",\n          formData.on_htn_medication.value\n        );\n        observations.push(obs);\n      }\n      return observations;\n    },\n    splitBP(formData: Option[]) {\n      const p: Option[] = [];\n      formData.forEach((element) => {\n        if (element.label === \"BP\") {\n          const value = `${element.value}`.split(\"/\");\n          const bpSystolic = value[0];\n          const bpDiastolic = value[1];\n\n          p.push({ label: \"Systolic\", value: bpSystolic });\n          p.push({ label: \"Diastolic\", value: bpDiastolic });\n        }\n      });\n      return p;\n    },\n    getBMI(formData: Option[]) {\n      const weight = this.getVal(formData, \"Weight\");\n      const height = this.getVal(formData, \"Height\");\n      const obs: any = [];\n      if (this.age <= 14) {\n        const currentWeightPercentile = (\n          (weight / parseFloat(this.medianWeightandHeight[\"weight\"])) *\n          100\n        ).toFixed(0);\n        const currentHeightPercentile = (\n          (height / parseFloat(this.medianWeightandHeight[\"height\"])) *\n          100\n        ).toFixed(0);\n        const currentHeightRounded =\n          (height % Math.floor(height) < 0.5 ? 0 : 0.5) + Math.floor(height);\n        const medianWeightHeight =\n          this.weightForHeight[currentHeightRounded.toFixed(1)];\n        const weightForHeightPercentile = (\n          (weight / medianWeightHeight) *\n          100\n        ).toFixed(0);\n        if(!isNaN(parseFloat(weightForHeightPercentile))) {\n          obs.push({\n            label: \"Weight for height percent of median\",\n            value: weightForHeightPercentile,\n          });\n        }\n        obs.push({\n          label: \"Weight for age percent of median\",\n          value: currentWeightPercentile,\n        });\n        obs.push({\n          label: \"Height for age percent of median\",\n          value: currentHeightPercentile,\n        });\n      } else {\n        const BMI = BMIService.calculateBMI(weight, height);\n        obs.push({ label: \"BMI\", value: BMI });\n      }\n      return obs;\n    },\n    getVal(formData: Option[], val: string): number {\n      const value = formData.filter((key: any) => key.label === val);\n      return value[0].value === \"\" ? 0 : parseFloat(`${value[0].value}`);\n    },\n    async mapObs(vitals: any) {\n      const j = vitals.map(async (element: any) => {\n        const obs = await this.vitals.buildValueNumber(\n          element.label,\n          element.value\n        );\n        return obs;\n      });\n      return Promise.all(j);\n    },\n    validateVitals(vitals: any) {\n      const l = this.checkRequiredVitals(vitals);\n      if (l.length > 0) {\n        return l.map((val) => {\n          return [`${val.label} can not be empty`];\n        });\n      }\n      const v = this.sanitizeVitals(vitals);\n      return this.vitals.validateAll(v);\n    },\n    sanitizeVitals(vitals: Array<Option>) {\n      let p = vitals.filter((element) => {\n        if (element.label === \"Height\" && element.other.required == false) {\n          return false;\n        }\n        return element.value !== \"\" && element.label !== \"Age\";\n      })\n      if (this.canCheckBp()) {\n        p = p.concat(this.splitBP(p))\n      }\n      if (this.canCheckWeightHeight()){\n        p = p.concat(this.getBMI(vitals))\n      }\n      return p\n    },\n    checkRequiredVitals(vitals: Array<Option>) {\n      return vitals.filter((element) => {\n        return element.value === \"\" && element.other.required === true;\n      });\n    },\n    getFields(): Array<Field> {\n      return [\n        {\n          id: \"on_htn_medication\",\n          helpText: \"Already taking drugs for blood pressure?\",\n          type: FieldType.TT_SELECT,\n          init: async () => {\n            if (this.app?.applicationName === 'ART') {\n              this.HTNEnabled = await Store.get('IS_ART_HTN_ENABLED')\n              if (this.HTNEnabled) {\n                await VitalsService.getAll(this.patientID, \"Treatment status\").then(\n                  (data: any) => {\n                    this.hasHTNObs = data && data.length > 0;\n                  }\n                )\n              }\n            }\n            return true\n          },\n          validation: (val: any) => Validation.required(val),\n          condition: () => {\n            return this.HTNEnabled && !this.hasHTNObs;\n          },\n          options: () => [\n            {\n              label: \"Yes\",\n              value: \"BP Drugs started\",\n            },\n            {\n              label: \"No\",\n              value: \"Not on BP Drugs\",\n            },\n          ],\n        },\n        {\n          id: \"vitals\",\n          helpText: \"Vitals entry\",\n          type: FieldType.TT_VITALS_ENTRY,\n          init: async () => {\n            const optionWhiteList = this.$route.query.vital_options as string\n            if (optionWhiteList) this.optionWhiteList = optionWhiteList.split(',')\n            if (this.canCheckWeightHeight()) {\n              const lastHeight = await this.patient.getRecentHeightObs();\n              if (!isEmpty(lastHeight)) {\n                this.patientAgeAtPrevRecordedHeight = dayjs(lastHeight['obs_datetime'])\n                  .diff(this.patient.getBirthdate(), 'year')\n                this.recentHeight = lastHeight['value_numeric'];\n                this.recentHeightObsID = lastHeight['obs_id'];\n                /**\n                 * For a scenario where a patient's height was last updated when they were a minor\n                 * and they return as an adult, provide an option to update their height.\n                 */\n                this.canEditHeight = this.patientAgeAtPrevRecordedHeight < 18 || this.age < 18\n              } else {\n                this.canEditHeight = true\n              }\n              if (this.age <= 14) {\n                this.medianWeightandHeight = await this.patient.getMedianWeightHeight();\n                this.weightForHeight = await ProgramService.getWeightForHeightValues();\n              }\n            }\n            return true\n          },\n          validation: (value: any) => this.validateVitals(value),\n          beforeNext: async (val: Option[]) => {\n            const heightOption = find(val, { label: \"Height\" });\n            if (heightOption && this.recentHeight && heightOption.other.visible) {\n              const enteredHeight = parseInt(`${heightOption.value || 0}`);\n              const prevHeight = parseInt(`${this.recentHeight || 0}`);\n\n              /** Warn if inconsistent height is detected */\n              if (enteredHeight < prevHeight) {\n                const prevHeightBtnTxt = `Use ${prevHeight} CM`\n                const newHeightBtnTxt = `Use ${enteredHeight} CM`\n                const action = await infoActionSheet(\n                  `Previous Height \"${prevHeight} CM\"`,\n                  `Current Height \"${enteredHeight} CM\"`,\n                  `Inconsistent Height Reading (Height can not be lower than previous height of \" ${this.recentHeight} \"CM. Please SELECT the correct height.)`,\n                  [\n                    {\n                      name: prevHeightBtnTxt,\n                      slot: 'start',\n                      color: 'success'\n                    },\n                    {\n                      name: newHeightBtnTxt,\n                      slot: 'end',\n                      color: 'danger'\n                    }\n                  ]\n                )\n                if (action === newHeightBtnTxt && this.recentHeightObsID) {\n                  if ((await alertConfirmation(\n                    `Do you want to void height observation for ${prevHeight}`\n                  ))) {\n                    await VitalsService.voidObs(this.recentHeightObsID)\n                  }\n                } else {\n                  this.finalHeightValue = prevHeight\n                }\n              }\n            }\n            return true\n          },\n          config: {\n            hiddenFooterBtns : [\n              'Clear'\n            ],\n            onUpdateAlertStatus: async (params: Option[]) => {\n              const weightOption = find(params, { label: 'Weight'})\n              const heightOption = find(params, { label: 'Height'})\n\n              if (!(weightOption && heightOption)) return\n\n              const weight = parseFloat(weightOption.value as string)\n              const height = parseFloat(heightOption.value as string)\n\n              if (weight <= 0 || height <=0) return { \n                label: 'BMI',\n                value: 'N/A',\n                color: '', \n                status: ''\n              }\n\n              const BMI = await BMIService.getBMI(weight, height, this.gender, this.age);\n\n              return {\n                label: 'BMI',\n                value: BMI.index,\n                color: BMI.color, \n                status: BMI.result\n              }\n            },\n            onChangeOption: (activeItem: any) => {\n              if (!activeItem.value && activeItem.other.required) {\n                throw `Value for ${activeItem.label} is required`\n              }else if (activeItem.value) {\n                const errs = this.vitals.validator(activeItem)\n                if(errs && errs.length) throw errs\n              }\n            }\n          },\n          options: () => this.getOptions(),\n        },\n      ];\n    },\n  },\n});\n","import { render } from \"./Vitals.vue?vue&type=template&id=0953bc40&ts=true\"\nimport script from \"./Vitals.vue?vue&type=script&lang=ts\"\nexport * from \"./Vitals.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/projects/malawi-emr/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { AppEncounterService } from \"@/services/app_encounter_service\";\nimport { isArray } from \"lodash\";\nimport { Option } from '@/components/Forms/FieldInterface';\nexport class VitalsService extends AppEncounterService{\n  constructor(patientID: number, providerID: number) {\n    super(patientID, 6, providerID);\n  }\n  isNotEmptyandNumber(vital: Option) {\n    return `${vital.value}`.match(/^-?\\d+\\.?\\d*$/) ? null : [`Invalid entry for ${vital.label}`]\n  }\n  isNotEmptyandFloat(vital: Option) {\n    return `${vital.value}`.match(/^\\d{1,3}\\.\\d{1,5}$/) \n      ? null \n      : [`Invalid entry for ${vital.label}. Don't forget to add a decimal. e.g. 56.2 ${vital.other?.modifier || ''}`]\n  }\n  checkMinMax(val: Option, min: number, max: number) {\n    const p = [];\n    if (parseFloat(`${val.value}`) < min) {\n      p.push([`${val.label} entered is less than minimum ${min} ${val?.other?.modifier || ''}`])\n    }\n    if (parseFloat(`${val.value}`) > max) {\n      p.push([`${val.label} entered is greater than maximum ${max} ${val?.other?.modifier || ''}`])\n    }\n    return p.length > 0 ? p : null;\n  }\n  validateAll(vitals: Option[]) {\n    const p: any = [];\n    vitals.map((vital: any) => {\n      const j = this.validator(vital);\n      return isArray(j) ? p.push(j) : null\n    })\n    return p.length > 0 ? p : null;\n  }\n\n  mergeErrors(errors: any[]) {\n    const holder: any = [];\n    errors.forEach(element => {\n      if (isArray(element)) {\n        holder.push(element)\n      }\n    });\n    return holder.length > 0 ? holder : null\n  }\n  isValidBPReading(vital: any) {\n    const p = [];\n    const isValidBP =  `${vital.value}`.match(/^\\d{1,3}\\/\\d{1,3}$/g) ? null : ['Invalid BP reading']\n    p.push(isValidBP);\n    if(isValidBP == null) {\n      const value = `${vital.value}`.split('/');\n      \n      const bpSystolic = {\n        label: 'Systolic',\n        value: value[0]\n      };\n      const bpDiastolic = {\n        label: 'Diastolic',\n        value: value[1]\n      };\n      p.push(this.checkMinMax(bpDiastolic, 30, 200))\n      p.push(this.checkMinMax(bpSystolic, 40, 250))\n    }\n    return this.mergeErrors(p)\n  }\n  validator(vital: Option) {\n    const values = [\n      {\n        name: \"Weight\",\n        validator: (val: Option) => {\n          const emptyErrors = this.isNotEmptyandFloat(val);\n          const minErrors = this.checkMinMax(val, 2.0, 250.0);\n          return this.mergeErrors([emptyErrors, minErrors]); \n        },\n      },\n      {\n        name: \"Height\",\n        validator: (val: Option) => {\n          const errors = []\n          errors.push(this.isNotEmptyandNumber(val))\n          errors.push(this.checkMinMax(val, 40, 220))\n          return this.mergeErrors(errors); \n        },\n      }, {\n        name: \"BP\",\n        validator: (val: any) => {\n          return this.isValidBPReading(val)\n        },\n      }, {\n        name: \"Temp\",\n        validator: (val: any) => {\n          const emptyErrors = this.isNotEmptyandNumber(val);\n          const minErrors = this.checkMinMax(val, 30, 42);\n          return this.mergeErrors([emptyErrors, minErrors]); \n        },\n      }, {\n        name: \"SP02\",\n        validator: (val: any) => {\n          const minErrors = this.checkMinMax(val, 40, 100);\n          return this.mergeErrors([minErrors]); \n        },\n      }, {\n        name: \"Pulse\",\n        validator: (val: any) => {\n          const minErrors = this.checkMinMax(val, 50, 120);\n          return this.mergeErrors([minErrors]); \n        },\n      }\n    ]\n    const v = values.filter(element => {\n      return element.name === vital.label;\n    });\n    if (v.length > 0) {\n      return v[0].validator(vital);\n    }\n    return null\n  }\n}","/**\n * Compares patient facts against a predefined guideline Object.\n*/\nexport interface DescriptionInterface {\n    color?: 'primary' | 'secondary' | 'danger' | 'warning';\n    info: Function;\n    text?: string;\n    show: 'onChecked' | 'always';\n}\n\nexport interface GuideLineInterface {\n    title?: string;\n    concept?: string;\n    weight?: number;\n    priority?: number;\n    conditions: Record<string, Function>;\n    actions?: Record<string, any>; //TODO: should <key, Function>\n    data?: Record<string, any>;\n    description?: DescriptionInterface;\n    target?: string;\n    targetEvent?: string;\n}\n\n/**\n * Match the facts with guidelines\n * @param facts \n * @param conditions \n * @returns \n */\nfunction isCondition(facts: Record<string, any>, conditions: Record<string, Function>): boolean {\n    const state = [] \n    const ignored = [-1, '', null, undefined]\n\n    for(const prop in conditions) {\n        if (!(prop in facts)) \n            continue\n        \n        const value = facts[prop]\n        if (ignored.includes(value)) {\n            state.push(false)\n            continue\n        }\n\n        state.push(conditions[prop](value, facts))\n    }\n    return state.every(Boolean)\n}\n\n/**\n * Sort guidelines in the order of importance/relevance\n * @param findings \n * @returns \n */\nfunction sortByPriority(findings: GuideLineInterface[]) {\n    return findings.sort((a, b) => (a.priority && b.priority) && a.priority < b.priority ? -1 : 1)\n}\n\nfunction sortByWeight(findings: GuideLineInterface[]) {\n    return findings.sort((a, b) => (a.weight && b.weight) && a.weight > b.weight ? -1 : 1)\n}\n\nexport function logFindingsByWeight(guidelines: Record<string, GuideLineInterface>) {\n    const findings: any = Object.keys(guidelines).map(i => ({ name: i, weight: guidelines[i].weight}))\n    console.log(sortByWeight(findings).map((i: any) => `${i.weight} -> ${i.name}`))\n}\n\n/**\n * Check the guideline for matching facts and return matching object \n * @param facts: key value pair for used for searching in guidelines\n * @param guidelines: A dictionary containing fixed rules/validations that conforms to GuideLineInterface\n * @param target: Used for matching a target defined in a guidlines before executing conditions\n * @param targetEvent: used for matching a target event in a guideline before executing conditions\n * @returns\n */\nexport function matchToGuidelines(\n    facts: Record<string, any>, \n    guidelines: Record<string, GuideLineInterface>,\n    target='', \n    targetEvent='',\n    sortBy='priority' as 'priority' | 'weight'): Array<GuideLineInterface> {\n    const matches = []\n    for(const guidelineIndex in guidelines) {\n        const data: GuideLineInterface = guidelines[guidelineIndex]\n        const targetValidations = [\n            (data.target && target && data.target != target),\n            (data.targetEvent && targetEvent \n                && data.targetEvent != targetEvent)\n        ]\n\n        if (targetValidations.some(Boolean)) {\n            continue\n        }\n\n        if (isCondition(facts, data.conditions)) {\n            data.title = guidelineIndex\n            if (data.description) {\n                data.description.text = data.description.info(facts)\n            }\n            matches.push(data)\n        }\n    }\n    return sortBy === 'priority' ? sortByPriority(matches) : sortByWeight(matches)\n}\n","/**\n * Map all formElements/components defined in \"@/components/FormElements\" \n * in the Enum below by their file name.\n * \n * Next step is to add FieldType entry in COMPONENT_REFS in the \n * Array below the FieldType Enum\n */\nexport enum FieldType {\n    TT_MULTI_SELECT_GRID= 'HisMultiSelectGrid',\n    TT_AGE_INPUT='HisAgeInput',\n    TT_GROUP_SELECTOR = 'HisGroupSelector',\n    TT_DATA_TABLE = 'HisDataTable',\n    TT_GRID_SELECTOR = 'HisGridSelector',\n    TT_NOTE = 'HisNote',\n    TT_BARCODE = 'HisBarcodeInput',\n    TT_MONTHLY_DAYS=\"HisMonthlyDays\",\n    TT_TEXT=\"HisTextInput\",\n    TT_NUMBER = \"HisNumberInput\",\n    TT_DATETIME=\"datetime\",\n    TT_SELECT=\"HisSelect\",\n    TT_MULTIPLE_SELECT=\"HisMultipleSelect\",\n    TT_ART_REGIMEN_SELECTION=\"HisArtRegimenSelection\",\n    TT_NEXT_VISIT_INTERVAL_SELECTION=\"HisNextVisitInterval\",\n    TT_TABLE_VIEWER=\"HisTableViewer\",\n    TT_DOSAGE_INPUT=\"HisDosageInput\",\n    TT_YES_NO=\"YesNoSelect\",\n    TT_MULTIPLE_YES_NO=\"MultiYesNoSelect\",\n    TT_SUMMARY=\"HisSummary\",\n    TT_WEIGHT_CHART = \"HisWeightChart\",\n    TT_VITALS_ENTRY=\"HisVitalsEntry\",\n    TT_ADHERENCE_INPUT = \"HisAdherenceInput\",\n    TT_ART_STAGING_SUMMARY = \"ArtStagingSummary\",\n    TT_LAB_ORDERS = \"HisLabOrders\",\n    TT_APPOINTMENTS_ENTRY = \"HisAppointments\",\n    TT_DISPENSATION_INPUT = 'DrugDispensationSelection',\n    TT_PROGRAM_SELECTION = 'ProgramSelection',\n    TT_DATE_PICKER = 'HisDatePicker',\n    TT_PERSON_RESULT_VIEW = 'PersonSearchView',\n    TT_RELATION_SELECTION = 'RelationsSelection',\n    TT_FILING_NUMBER_VIEW = 'FilingNumberView',\n    TT_CARD_SELECTOR = 'HisCardSelector',\n    TT_PERSON_MATCH_VIEW = 'PersonMatchView',\n    TT_FULL_DATE = 'HisDateInput',\n    TT_BATCH_ENTRY = 'HisBatchEntry',\n    TT_BATCH_VERIFICATION = 'HisBatchVerification',\n    TT_BATCH_MOVEMENT = 'HisBatchMovement',\n    TT_COMPLAINTS_PICKER = 'HisComplaintsPicker',\n    TT_RADIOLOGY_PICKER = 'HisRadiologyPicker',\n    TT_IP_ADDRESS = 'HisIPAddress',\n    TT_TEXT_BANNER = 'HisTextBanner',\n    TT_DRUG_DISPENSER = 'GeneralDrugDispenser',\n    TT_CLINIC_HOLIDAY_PICKER = 'HisClinicHolidayPicker',\n    TT_ANC_PREGNANCY_INPUT_CONFIG = 'AncPregnancyInfoConfig',\n    TT_ANC_PREGNANCY_DETAILS_INPUT = 'AncPregnancyDetailsInput',\n    TT_ANC_LMP_DATE_INPUT = 'AncLmpDateInput',\n    TT_ANC_DRUGSET_INPUT = 'AncDrugSetInput',\n    TT_DRUG_TRANSFER_IN = 'DrugTransferInput',\n    TT_PRESCRIPTION_INPUT = 'HisPrescriptionInput',\n    TT_INFINITE_SCROLL_MULTIPLE_SELECT=\"HisInfiniteScrollMultipleSelect\"\n}\n\n// Register FieldTypes here that will be registered at runtime\nexport const COMPONENT_REFS: FieldType[] = [\n    FieldType.TT_MULTI_SELECT_GRID,\n    FieldType.TT_AGE_INPUT,\n    FieldType.TT_BARCODE,\n    FieldType.TT_NOTE,\n    FieldType.TT_SELECT,\n    FieldType.TT_CARD_SELECTOR,\n    FieldType.TT_MULTIPLE_SELECT,\n    FieldType.TT_TEXT,\n    FieldType.TT_NUMBER,\n    FieldType.TT_MONTHLY_DAYS,\n    FieldType.TT_ART_REGIMEN_SELECTION,\n    FieldType.TT_NEXT_VISIT_INTERVAL_SELECTION,\n    FieldType.TT_TABLE_VIEWER,\n    FieldType.TT_DOSAGE_INPUT,\n    FieldType.TT_YES_NO,\n    FieldType.TT_MULTIPLE_YES_NO,\n    FieldType.TT_WEIGHT_CHART,\n    FieldType.TT_VITALS_ENTRY,\n    FieldType.TT_APPOINTMENTS_ENTRY,\n    FieldType.TT_COMPLAINTS_PICKER,\n    FieldType.TT_CLINIC_HOLIDAY_PICKER,\n    FieldType.TT_SUMMARY,\n    FieldType.TT_ART_STAGING_SUMMARY,\n    FieldType.TT_ADHERENCE_INPUT,\n    FieldType.TT_LAB_ORDERS,\n    FieldType.TT_PERSON_RESULT_VIEW,\n    FieldType.TT_PROGRAM_SELECTION,\n    FieldType.TT_DATE_PICKER,\n    FieldType.TT_RELATION_SELECTION,\n    FieldType.TT_FILING_NUMBER_VIEW,\n    FieldType.TT_PERSON_MATCH_VIEW,\n    FieldType.TT_FULL_DATE,\n    FieldType.TT_BATCH_ENTRY,\n    FieldType.TT_BATCH_VERIFICATION,\n    FieldType.TT_BATCH_MOVEMENT,\n    FieldType.TT_IP_ADDRESS,\n    FieldType.TT_TEXT_BANNER,\n    FieldType.TT_DISPENSATION_INPUT,\n    FieldType.TT_DATA_TABLE,\n    FieldType.TT_GROUP_SELECTOR,\n    FieldType.TT_ANC_PREGNANCY_INPUT_CONFIG,\n    FieldType.TT_ANC_PREGNANCY_DETAILS_INPUT,\n    FieldType.TT_ANC_LMP_DATE_INPUT,\n    FieldType.TT_DRUG_TRANSFER_IN,\n    FieldType.TT_GRID_SELECTOR,\n    FieldType.TT_ANC_DRUGSET_INPUT,\n    FieldType.TT_RADIOLOGY_PICKER,\n    FieldType.TT_PRESCRIPTION_INPUT,\n    FieldType.TT_INFINITE_SCROLL_MULTIPLE_SELECT,\n    FieldType.TT_DRUG_DISPENSER\n]\n","var map = {\n\t\"./AncDrugSetInput.vue\": [\n\t\t\"c99f\",\n\t\t\"TouchFormElement0\"\n\t],\n\t\"./AncLmpDateInput.vue\": [\n\t\t\"101a\",\n\t\t\"TouchFormElement1\"\n\t],\n\t\"./AncPregnancyDetailsInput.vue\": [\n\t\t\"b043\",\n\t\t\"TouchFormElement2\"\n\t],\n\t\"./AncPregnancyInfoConfig.vue\": [\n\t\t\"262e\",\n\t\t\"TouchFormElement3\"\n\t],\n\t\"./ArtStagingSummary.vue\": [\n\t\t\"43db\",\n\t\t\"TouchFormElement4\"\n\t],\n\t\"./BaseTextInput.vue\": [\n\t\t\"36ad\",\n\t\t\"TouchFormElement5\"\n\t],\n\t\"./DrugDispensationSelection.vue\": [\n\t\t\"05d5\",\n\t\t\"TouchFormElement6\"\n\t],\n\t\"./DrugTransferInput.vue\": [\n\t\t\"de42\",\n\t\t\"TouchFormElement7\"\n\t],\n\t\"./FieldMixin.vue\": [\n\t\t\"51c8\",\n\t\t\"TouchFormElement8\"\n\t],\n\t\"./FilingNumberView.vue\": [\n\t\t\"c650\",\n\t\t\"TouchFormElement9\"\n\t],\n\t\"./GeneralDrugDispenser.vue\": [\n\t\t\"7737\",\n\t\t\"TouchFormElement10\"\n\t],\n\t\"./HisAdherenceInput.vue\": [\n\t\t\"f2c3\",\n\t\t\"TouchFormElement11\"\n\t],\n\t\"./HisAgeInput.vue\": [\n\t\t\"c05f\",\n\t\t\"TouchFormElement12\"\n\t],\n\t\"./HisAppointments.vue\": [\n\t\t\"b2eb\",\n\t\t\"chunk-366b6f0a\",\n\t\t\"TouchFormElement13\"\n\t],\n\t\"./HisArtRegimenSelection.vue\": [\n\t\t\"47b9\",\n\t\t\"TouchFormElement14\"\n\t],\n\t\"./HisBarcodeInput.vue\": [\n\t\t\"dd65\",\n\t\t\"TouchFormElement15\"\n\t],\n\t\"./HisBatchEntry.vue\": [\n\t\t\"f2ab\",\n\t\t\"chunk-182277b5\",\n\t\t\"TouchFormElement16\"\n\t],\n\t\"./HisBatchMovement.vue\": [\n\t\t\"5148\",\n\t\t\"chunk-182277b5\",\n\t\t\"TouchFormElement17\"\n\t],\n\t\"./HisBatchVerification.vue\": [\n\t\t\"7b0f\",\n\t\t\"chunk-182277b5\",\n\t\t\"TouchFormElement18\"\n\t],\n\t\"./HisCardSelector.vue\": [\n\t\t\"0734\",\n\t\t\"TouchFormElement19\"\n\t],\n\t\"./HisClinicHolidayPicker.vue\": [\n\t\t\"4030\",\n\t\t\"chunk-366b6f0a\",\n\t\t\"TouchFormElement20\"\n\t],\n\t\"./HisComplaintsPicker.vue\": [\n\t\t\"82d1\",\n\t\t\"TouchFormElement21\"\n\t],\n\t\"./HisDataTable.vue\": [\n\t\t\"a6ba\",\n\t\t\"TouchFormElement22\"\n\t],\n\t\"./HisDateInput.vue\": [\n\t\t\"374c\",\n\t\t\"TouchFormElement23\"\n\t],\n\t\"./HisDatePicker.vue\": [\n\t\t\"9b30\",\n\t\t\"chunk-366b6f0a\",\n\t\t\"TouchFormElement24\"\n\t],\n\t\"./HisDosageInput.vue\": [\n\t\t\"b34c\",\n\t\t\"TouchFormElement25\"\n\t],\n\t\"./HisGridSelector.vue\": [\n\t\t\"112a\",\n\t\t\"TouchFormElement26\"\n\t],\n\t\"./HisGroupSelector.vue\": [\n\t\t\"81cf\",\n\t\t\"TouchFormElement27\"\n\t],\n\t\"./HisIPAddress.vue\": [\n\t\t\"2a82\",\n\t\t\"TouchFormElement28\"\n\t],\n\t\"./HisInfiniteScrollMultipleSelect.vue\": [\n\t\t\"52a3\",\n\t\t\"TouchFormElement29\"\n\t],\n\t\"./HisLabOrders.vue\": [\n\t\t\"e614\",\n\t\t\"TouchFormElement30\"\n\t],\n\t\"./HisMonthlyDays.vue\": [\n\t\t\"69cf\",\n\t\t\"TouchFormElement31\"\n\t],\n\t\"./HisMultiSelectGrid.vue\": [\n\t\t\"0fa3\",\n\t\t\"TouchFormElement32\"\n\t],\n\t\"./HisMultipleSelect.vue\": [\n\t\t\"2fd5\",\n\t\t\"chunk-45847ec4\",\n\t\t\"TouchFormElement33\"\n\t],\n\t\"./HisNextVisitInterval.vue\": [\n\t\t\"3126\",\n\t\t\"TouchFormElement34\"\n\t],\n\t\"./HisNote.vue\": [\n\t\t\"c927\",\n\t\t\"TouchFormElement35\"\n\t],\n\t\"./HisNumberInput.vue\": [\n\t\t\"5e75\",\n\t\t\"TouchFormElement36\"\n\t],\n\t\"./HisPrescriptionInput.vue\": [\n\t\t\"87e5\",\n\t\t\"TouchFormElement37\"\n\t],\n\t\"./HisRadiologyPicker.vue\": [\n\t\t\"adc7\",\n\t\t\"chunk-418a3f72\",\n\t\t\"TouchFormElement38\"\n\t],\n\t\"./HisSelect.vue\": [\n\t\t\"d11f\",\n\t\t\"TouchFormElement39\"\n\t],\n\t\"./HisSummary.vue\": [\n\t\t\"e0bd\",\n\t\t\"TouchFormElement40\"\n\t],\n\t\"./HisTableViewer.vue\": [\n\t\t\"8904\",\n\t\t\"TouchFormElement41\"\n\t],\n\t\"./HisTextBanner.vue\": [\n\t\t\"952c\",\n\t\t\"TouchFormElement42\"\n\t],\n\t\"./HisTextInput.vue\": [\n\t\t\"6ef9\",\n\t\t\"TouchFormElement43\"\n\t],\n\t\"./HisVitalsEntry.vue\": [\n\t\t\"e333\",\n\t\t\"TouchFormElement44\"\n\t],\n\t\"./HisWeightChart.vue\": [\n\t\t\"26a1\",\n\t\t\"TouchFormElement45\"\n\t],\n\t\"./MultiYesNoSelect.vue\": [\n\t\t\"5fd1\",\n\t\t\"TouchFormElement46\"\n\t],\n\t\"./PersonMatchView.vue\": [\n\t\t\"6591\",\n\t\t\"TouchFormElement47\"\n\t],\n\t\"./PersonSearchView.vue\": [\n\t\t\"28b2\",\n\t\t\"TouchFormElement48\"\n\t],\n\t\"./ProgramSelection.vue\": [\n\t\t\"e3b4\",\n\t\t\"TouchFormElement49\"\n\t],\n\t\"./RelationsSelection.vue\": [\n\t\t\"0e57\",\n\t\t\"TouchFormElement50\"\n\t],\n\t\"./SelectMixin.vue\": [\n\t\t\"82a9\",\n\t\t\"TouchFormElement51\"\n\t],\n\t\"./YesNoSelect.vue\": [\n\t\t\"71f2\",\n\t\t\"TouchFormElement52\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"f159\";\nmodule.exports = webpackAsyncContext;"],"sourceRoot":""}