{"version":3,"sources":["webpack:///./src/apps/ART/views/reports/ReportMixin.vue","webpack:///./src/apps/ART/views/reports/ReportMixin.vue?5c96","webpack:///./src/views/reports/BaseTableReport.vue?a90b","webpack:///./src/views/reports/BaseTableReport.vue","webpack:///./src/views/reports/BaseTableReport.vue?3283","webpack:///./src/components/Forms/HisStandardForm.vue?8e31","webpack:///./src/components/Forms/HisStandardForm.vue","webpack:///./src/components/Forms/HisStandardForm.vue?5176","webpack:///./src/apps/CxCa/views/reports/pepfar/CCTypeOfScreen.vue?65fa","webpack:///./src/apps/CxCa/views/reports/pepfar/CCTypeOfScreen.vue","webpack:///./src/apps/CxCa/views/reports/pepfar/CCTypeOfScreen.vue?57b4","webpack:///./src/apps/CxCa/services/reports/cxca_report_service.ts","webpack:///./src/views/reports/BaseTableReport.vue?4500"],"names":["defineComponent","data","app","App","getActiveApp","fields","report","reportReady","period","startDate","endDate","customFileName","isMilitarySite","drillDownCache","methods","formatGender","gender","fmtGender","toDate","date","HisDate","toStandardHisDisplayFormat","sortByArvNumber","attr","sort","a","b","this","getArvInt","e","console","error","arv","arvNumStr","split","arvNumInt","parseInt","tdARV","params","table","td","sortValue","confirmPatient","patient","$router","push","title","columns","asyncRows","canExport","modal","modalController","create","component","DrilldownTable","cssClass","componentProps","showFilters","rowsPerPage","paginated","showReportStamp","footerColor","onFinish","dismiss","present","rows","rowParser","getDefaultDrillDownTable","thTxt","async","ARV_NUM_INDEX","t","tableRows","map","id","index","isArray","defaultRow","num","key","slice","Patientservice","findByID","row","getArvNumber","getGender","tdDate","getBirthdate","toString","tdBtn","path","Promise","all","runTableDrill","drilldownData","drill","values","length","tdLink","getQuaterOptions","quarters","ArtReportService","getReportQuarters","q","label","name","value","start","other","getDateDurationFields","useQuarter","setCustomQuarterPeriod","maxQuarter","maxDate","Service","getSessionDate","minDate","helpText","type","FieldType","TT_SELECT","condition","validation","val","Validation","required","options","items","generateDateFields","f","quarter","estimation","allowUnknown","computeValue","unload","d","s","c","end_date","_","start_date","init","Store","get","computedValue","v","_this$app","applicationName","__exports__","_hoisted_1","class","_hoisted_2","_hoisted_3","render","_ctx","_cache","$props","$setup","$data","$options","_component_his_standard_form","_resolveComponent","_component_ion_img","_component_ion_thumbnail","_component_ion_label","_component_report_filter","_component_ion_toolbar","_component_ion_header","_component_report_table","_component_ion_content","_component_pagination","_component_ion_chip","_component_ion_footer","_component_his_footer","_component_ion_page","_openBlock","_createElementBlock","_Fragment","_withDirectives","_createVNode","onOnFinish","skipSummary","_vShow","showForm","_createCommentVNode","_createBlock","default","_withCtx","slot","src","logo","_createElementVNode","_createTextVNode","_toDisplayString","customInfo","showPerPageFilter","disableSearchFilter","isTableLoading","disablePerPageFilter","totalRowCount","customFilter","onOnItemsPerPage","i","itemsPerPage","onOnItemsVLtype","itemsVLtype","onOnSearchFilter","searchFilter","config","tableCssTheme","newPage","currentPage","onOnIsLoading","l","onOnTableRows","r","onOnPagination","p","totalPages","onOnActiveColumns","activeColumns","onOnActiveRows","activeRows","perPage","maxVisibleButtons","onOnChangePage","color","coreVersion","apiVersion","btns","components","HisStandardForm","IonHeader","ReportTable","HisFooter","IonPage","IonContent","IonToolbar","Pagination","ReportFilter","IonFooter","IonChip","IonLabel","props","String","Function","encryptPDF","Boolean","Object","Array","customBtns","canExportPDf","canExportCsv","onReportConfiguration","showVLFilter","Number","reportPrefix","formData","computeFormData","isLoadingData","getApiVersion","getCoreVersion","siteUUID","getSiteUUID","getFileName","_this$reportPrefix","_this$period","getLocationName","removeTags","replace","pdfEncryptionData","password","getUserName","encryption","userPassword","ownerPassword","userPermissions","computedData","presentLoading","loadingController","toastDanger","loading","message","backdropDismiss","created","size","visible","onClick","toExportableFormat","toCsv","mode","option","infoActionSheet","toTablePDF","reloadReport","_resolveDynamicComponent","formType","activeField","cancelDestinationPath","onFinishAction","onOnIndex","onIndex","TouchScreenForm","emits","$emit","_component_report_template","ReportTemplate","mixins","ReportMixin","reportService","CxCaReportService","setStartDate","setEndDate","getPepfarReport","buildRows","age_group","constructor","super","_defineProperty","programID","getProgramID","reportName","getReport","getClinicReport","getMohReport","getDateIntervalPeriod","getReportPeriod","url","getJson","buildRequest","payload","minDuration","year","getCurrentYear","end"],"mappings":"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","file":"js/chunk-d70365b4.becb6743.js","sourcesContent":["\nimport { Service } from \"@/services/service\"\nimport { defineComponent } from 'vue'\nimport { Field } from '@/components/Forms/FieldInterface'\nimport { generateDateFields } from \"@/utils/HisFormHelpers/MultiFieldDateHelper\"\nimport { Patientservice } from \"@/services/patient_service\"\nimport HisDate from \"@/utils/Date\"\nimport { modalController } from \"@ionic/vue\";\nimport DrilldownTable from \"@/apps/ART/views/reports/BasicReportTemplate.vue\"\nimport { ArtReportService } from \"@/apps/ART/services/reports/art_report_service\"\nimport { FieldType } from \"@/components/Forms/BaseFormElements\"\nimport { Option } from '@/components/Forms/FieldInterface'\nimport Validation from \"@/components/Forms/validations/StandardValidations\"\nimport table, { AsyncTableRowHandler } from \"@/components/DataViews/tables/ReportDataTable\"\nimport { isArray } from \"lodash\"\nimport Store from \"@/composables/ApiStore\"\nimport App from \"@/apps/app_lib\"\nimport { formatGender as fmtGender } from \"@/utils/Strs\";\n\n\nexport default defineComponent({\n    data: () => ({\n        app: App.getActiveApp(),\n        fields: [] as Array<Field>,\n        report: {} as any,\n        reportReady: false as boolean,\n        period: '' as string,\n        startDate: '' as string,\n        endDate: '' as string,\n        customFileName: '' as string,\n        isMilitarySite: false as boolean,\n        drillDownCache: {} as Record<number, Array<any>>\n    }),\n    methods: {\n        formatGender(gender: string) {\n            return fmtGender(gender)\n        },\n        toDate(date: string) {\n            return HisDate.toStandardHisDisplayFormat(date)\n        },\n        sortByArvNumber(data: Array<any>, attr='arv_number') {\n            try {\n                return data.sort((a: any, b: any) => this.getArvInt(a[attr]) > this.getArvInt(b[attr]) ? 1 : -1)\n            } catch(e) {\n                console.error(e)\n                return data\n            }\n        },\n        getArvInt(arv: string) {\n            if (typeof arv === 'string') {\n                const arvNumStr = arv.split('-')[2]\n                const arvNumInt = parseInt(arvNumStr)\n                return typeof arvNumInt === 'number' ? arvNumInt : 0 \n            }\n            return 0\n        },\n        tdARV(arv: string, params={}) {\n            return table.td(arv, { sortValue: this.getArvInt(arv), ...params})\n        },\n        confirmPatient(patient: number) {\n            return this.$router.push(`/patients/confirm?person_id=${patient}`)\n        },\n        async drilldownAsyncRows(title: string, columns: Array<any>, asyncRows: AsyncTableRowHandler, canExport=true) {\n            const modal = await modalController.create({\n                component: DrilldownTable,\n                cssClass: 'large-modal',\n                componentProps: { \n                    title, \n                    columns, \n                    asyncRows,\n                    canExport,\n                    showFilters: true,\n                    rowsPerPage: 50,\n                    paginated: true,\n                    showReportStamp: false,\n                    footerColor: 'light',\n                    onFinish: () => modalController.dismiss()\n                }\n            })\n            modal.present()\n        },\n        async drilldownData(title: string, columns: Array<any>, rows: Array<any>, rowParser: any) {\n            const modal = await modalController.create({\n                component: DrilldownTable,\n                cssClass: 'large-modal',\n                componentProps: { \n                    title, \n                    columns, \n                    rows,\n                    rowParser,\n                    rowsPerPage: 50,\n                    showFilters: true,\n                    paginated: true,\n                    showReportStamp: false,\n                    footerColor: 'light',\n                    onFinish: () => modalController.dismiss()\n                }\n            })\n            modal.present()\n        },\n        getDefaultDrillDownTable() {\n            const columns = [\n                [\n                    table.thTxt('ARV number'), \n                    table.thTxt('Gender'),\n                    table.thTxt('Birth Date'), \n                    table.thTxt('Actions')\n                ]\n            ]\n            const rowParser = async (tableRows: Array<any[]>) => {\n                let ARV_NUM_INDEX = 0\n                const t = tableRows.map(async (defaultRow: Array<any>) => {\n                    let id: any = null\n                    let index: null | number = null\n                    if (isArray(defaultRow)) {\n                        const [num, key ] = defaultRow\n                        index = num\n                        if (key in this.drillDownCache) {\n                            return [index, ...this.drillDownCache[key].slice(1)]\n                        }\n                    } else {\n                        id = defaultRow\n                        if (id in this.drillDownCache) {\n                            return this.drillDownCache[id]\n                        }\n                    }\n    \n                    const data = await Patientservice.findByID(id)\n                    const patient = new Patientservice(data)\n                    const row = []\n                    if (index) {\n                        ARV_NUM_INDEX = 1\n                        row.push(index)\n                    } \n                    row.push(this.tdARV(patient.getArvNumber()))\n                    row.push(table.td(this.formatGender(patient.getGender())))\n                    row.push(table.tdDate(patient.getBirthdate().toString()))\n                    row.push(table.tdBtn('Show', async () => {\n                        await modalController.dismiss({})\n                        this.$router.push({ path: `/patient/dashboard/${id}`})\n                    }))\n                    this.drillDownCache[id] = row\n                    return row\n                })\n                const rows = await Promise.all(t)\n                return rows.sort((a: any, b: any) => \n                        a[ARV_NUM_INDEX].sortValue > b[ARV_NUM_INDEX].sortValue \n                        ? 1 : -1)\n            }\n            return { rowParser, columns }\n        },\n        runTableDrill(data: any, title='Drilldown patients') {\n            const { columns, rowParser } = this.getDefaultDrillDownTable()\n            this.drilldownData(title, columns, data, rowParser)\n        },\n        drill(values: Array<number>, title='Drill table') {\n            if (values && values.length > 0) {\n                return table.tdLink(\n                    values.length, \n                    () => this.runTableDrill(values, title)\n                )\n            }\n            return table.td(0)\n        },\n        getQuaterOptions() {\n            const quarters = ArtReportService.getReportQuarters()\n            return quarters.map((q: any) => ({\n                label: q.name, value: q.start, other: q\n            }))\n        },\n        getDateDurationFields(\n            useQuarter=false, \n            setCustomQuarterPeriod=false, \n            maxQuarter=5, \n            maxDate=Service.getSessionDate() as string | null,\n        ): Array<Field> {\n            const minDate = '2000-01-01'\n            return [\n                {\n                    id: 'quarter',\n                    helpText: 'Select Quarter',\n                    type: FieldType.TT_SELECT,\n                    condition: () => useQuarter,\n                    validation: (val: Option) => Validation.required(val),\n                    options: () => {\n                        const quarters = ArtReportService.getReportQuarters(maxQuarter)\n                        let items: Array<Option> = quarters.map((q: any) => ({\n                            label: q.name,\n                            value: q.start,\n                            other: q\n                        }))\n                        if (setCustomQuarterPeriod) {\n                            items = [\n                                {\n                                    label: 'Set custom period',\n                                    value: 'custom_period',\n                                    other: {}\n                                },\n                                ...items\n                            ]\n                        }\n                        return items\n                    }\n                },\n                ...generateDateFields({\n                    id: 'start_date',\n                    helpText: 'Start',\n                    required: true,\n                    condition: (f: any) => f.quarter && f.quarter.value === 'custom_period' || !useQuarter,\n                    minDate: () => minDate,\n                    maxDate: () => maxDate,\n                    estimation: {\n                        allowUnknown: false\n                    },\n                    computeValue: (date: string) => date \n                }),\n                ...generateDateFields({\n                    id: 'end_date',\n                    helpText: 'End',\n                    required: true,\n                    condition: (f: any) => f.quarter && f.quarter.value === 'custom_period' || !useQuarter,\n                    unload: (d: any, s: any, f: any, c: any) => {\n                        if (s === 'next') {\n                            this.endDate = c.end_date\n                        }\n                    },\n                    minDate: (_: any, c: any) => c.start_date,\n                    maxDate: () => maxDate,\n                    estimation: {\n                        allowUnknown: false\n                    },\n                    computeValue: (date: string) => date\n                }),\n                {\n                    id: 'occupation',\n                    helpText: \"Report Group\",\n                    type: FieldType.TT_SELECT,\n                    init: async () => {\n                        this.isMilitarySite = await Store.get('IS_MILITARY_SITE')\n                        return true\n                    },\n                    computedValue: (v: Option) => v.value, \n                    condition: () => this.app?.applicationName === 'ART' && this.isMilitarySite,\n                    validation: (val: Option) => Validation.required(val),\n                    options: () => {\n                        return [\n                            { label: 'All', value: 'All'},\n                            { label: 'Military', value: 'Military'},\n                            { label: 'Civilian', value: 'Civilian'},\n                        ]\n                    }\n                }\n            ]\n        }\n    }\n})\n","import script from \"./ReportMixin.vue?vue&type=script&lang=ts\"\nexport * from \"./ReportMixin.vue?vue&type=script&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { resolveComponent as _resolveComponent, vShow as _vShow, createVNode as _createVNode, withDirectives as _withDirectives, withCtx as _withCtx, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createBlock as _createBlock, Fragment as _Fragment, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-36f19a06\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"header-text-list\" }\nconst _hoisted_2 = { key: 0 }\nconst _hoisted_3 = { class: \"report-content\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_his_standard_form = _resolveComponent(\"his-standard-form\")!\n  const _component_ion_img = _resolveComponent(\"ion-img\")!\n  const _component_ion_thumbnail = _resolveComponent(\"ion-thumbnail\")!\n  const _component_ion_label = _resolveComponent(\"ion-label\")!\n  const _component_report_filter = _resolveComponent(\"report-filter\")!\n  const _component_ion_toolbar = _resolveComponent(\"ion-toolbar\")!\n  const _component_ion_header = _resolveComponent(\"ion-header\")!\n  const _component_report_table = _resolveComponent(\"report-table\")!\n  const _component_ion_content = _resolveComponent(\"ion-content\")!\n  const _component_pagination = _resolveComponent(\"pagination\")!\n  const _component_ion_chip = _resolveComponent(\"ion-chip\")!\n  const _component_ion_footer = _resolveComponent(\"ion-footer\")!\n  const _component_his_footer = _resolveComponent(\"his-footer\")!\n  const _component_ion_page = _resolveComponent(\"ion-page\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _withDirectives(_createVNode(_component_his_standard_form, {\n      onOnFinish: _ctx.onFinish,\n      skipSummary: true,\n      fields: _ctx.fields\n    }, null, 8, [\"onOnFinish\", \"fields\"]), [\n      [_vShow, _ctx.showForm]\n    ]),\n    (!_ctx.showForm)\n      ? (_openBlock(), _createBlock(_component_ion_page, { key: 0 }, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_header, null, {\n              default: _withCtx(() => [\n                _createVNode(_component_ion_toolbar, null, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_ion_thumbnail, { slot: \"start\" }, {\n                      default: _withCtx(() => [\n                        _createVNode(_component_ion_img, { src: _ctx.logo }, null, 8, [\"src\"])\n                      ]),\n                      _: 1\n                    }),\n                    _createVNode(_component_ion_label, null, {\n                      default: _withCtx(() => [\n                        _createElementVNode(\"ul\", _hoisted_1, [\n                          _createElementVNode(\"li\", null, [\n                            _createTextVNode(\"Title \"),\n                            _createElementVNode(\"b\", null, _toDisplayString(_ctx.title), 1)\n                          ]),\n                          _createElementVNode(\"li\", null, [\n                            _createTextVNode(\"Period \"),\n                            _createElementVNode(\"b\", null, _toDisplayString(_ctx.period), 1)\n                          ]),\n                          (_ctx.customInfo)\n                            ? (_openBlock(), _createElementBlock(\"li\", _hoisted_2, [\n                                _createTextVNode(_toDisplayString(_ctx.customInfo.label) + \" \", 1),\n                                _createElementVNode(\"b\", null, _toDisplayString(_ctx.customInfo.value), 1)\n                              ]))\n                            : _createCommentVNode(\"\", true)\n                        ])\n                      ]),\n                      _: 1\n                    }),\n                    _createVNode(_component_report_filter, {\n                      slot: \"end\",\n                      showPerPageFilter: _ctx.showFilters || _ctx.paginated,\n                      disableSearchFilter: _ctx.isTableLoading,\n                      disablePerPageFilter: _ctx.isTableLoading,\n                      totalRowCount: _ctx.tableRows.length,\n                      customFilter: _ctx.customFilter,\n                      onOnItemsPerPage: _cache[0] || (_cache[0] = (i) => _ctx.itemsPerPage = i),\n                      onOnItemsVLtype: _cache[1] || (_cache[1] = (f) => _ctx.itemsVLtype = f),\n                      onOnSearchFilter: _cache[2] || (_cache[2] = (f) => _ctx.searchFilter = f)\n                    }, null, 8, [\"showPerPageFilter\", \"disableSearchFilter\", \"disablePerPageFilter\", \"totalRowCount\", \"customFilter\"])\n                  ]),\n                  _: 1\n                })\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_ion_content, null, {\n              default: _withCtx(() => [\n                _createElementVNode(\"div\", _hoisted_3, [\n                  _createVNode(_component_report_table, {\n                    rows: _ctx.rows,\n                    paginated: _ctx.paginated,\n                    asyncRows: _ctx.asyncRows,\n                    rowParser: _ctx.rowParser,\n                    config: {..._ctx.config, tableCssTheme: _ctx.tableCssTheme},\n                    columns: _ctx.columns,\n                    showFilters: _ctx.showFilters,\n                    newPage: _ctx.currentPage,\n                    searchFilter: _ctx.searchFilter,\n                    rowsPerPage: _ctx.itemsPerPage,\n                    onOnIsLoading: _cache[3] || (_cache[3] = (l) => _ctx.isTableLoading = l),\n                    onOnTableRows: _cache[4] || (_cache[4] = (r) => _ctx.tableRows = r),\n                    onOnPagination: _cache[5] || (_cache[5] = (p) => _ctx.totalPages = p.length),\n                    onOnActiveColumns: _cache[6] || (_cache[6] = (c) => _ctx.activeColumns = c),\n                    onOnActiveRows: _cache[7] || (_cache[7] = (r) => _ctx.activeRows = r)\n                  }, null, 8, [\"rows\", \"paginated\", \"asyncRows\", \"rowParser\", \"config\", \"columns\", \"showFilters\", \"newPage\", \"searchFilter\", \"rowsPerPage\"])\n                ])\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_ion_footer, null, {\n              default: _withCtx(() => [\n                (!_ctx.searchFilter && _ctx.paginated || !_ctx.searchFilter && _ctx.totalPages > 0 && _ctx.paginated)\n                  ? (_openBlock(), _createBlock(_component_ion_toolbar, { key: 0 }, {\n                      default: _withCtx(() => [\n                        _createVNode(_component_pagination, {\n                          perPage: _ctx.itemsPerPage,\n                          maxVisibleButtons: 10,\n                          totalPages: _ctx.totalPages,\n                          onOnChangePage: _cache[8] || (_cache[8] = (p) => _ctx.currentPage=p)\n                        }, null, 8, [\"perPage\", \"totalPages\"])\n                      ]),\n                      _: 1\n                    }))\n                  : _createCommentVNode(\"\", true),\n                (_ctx.showReportStamp)\n                  ? (_openBlock(), _createBlock(_component_ion_toolbar, { key: 1 }, {\n                      default: _withCtx(() => [\n                        _createVNode(_component_ion_chip, { color: \"primary\" }, {\n                          default: _withCtx(() => [\n                            _createTextVNode(\"Date Created: \"),\n                            _createElementVNode(\"b\", null, _toDisplayString(_ctx.date), 1)\n                          ]),\n                          _: 1\n                        }),\n                        _createVNode(_component_ion_chip, { color: \"primary\" }, {\n                          default: _withCtx(() => [\n                            _createTextVNode(\"His-Core Version: \"),\n                            _createElementVNode(\"b\", null, _toDisplayString(_ctx.coreVersion), 1)\n                          ]),\n                          _: 1\n                        }),\n                        _createVNode(_component_ion_chip, { color: \"primary\" }, {\n                          default: _withCtx(() => [\n                            _createTextVNode(\"API Version: \"),\n                            _createElementVNode(\"b\", null, _toDisplayString(_ctx.apiVersion), 1)\n                          ]),\n                          _: 1\n                        })\n                      ]),\n                      _: 1\n                    }))\n                  : _createCommentVNode(\"\", true)\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_his_footer, {\n              color: _ctx.footerColor,\n              btns: _ctx.btns\n            }, null, 8, [\"color\", \"btns\"])\n          ]),\n          _: 1\n        }))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}","\nimport { defineComponent, PropType } from \"vue\";\nimport HisFooter from \"@/components/HisDynamicNavFooter.vue\";\nimport ReportTable from \"@/components/DataViews/tables/ReportDataTable.vue\"\nimport { toCsv, toTablePDF } from \"@/utils/Export\"\nimport { toExportableFormat, ColumnInterface, RowInterface} from \"@/components/DataViews/tables/ReportDataTable\" \nimport HisStandardForm from \"@/components/Forms/HisStandardForm.vue\";\nimport { Field, Option } from '@/components/Forms/FieldInterface';\nimport { \n  IonPage,\n  IonHeader,\n  IonContent,\n  IonToolbar,\n  loadingController,\n  IonChip, \n  IonFooter,\n  IonLabel\n} from \"@ionic/vue\"\nimport { Service } from \"@/services/service\"\nimport HisDate from \"@/utils/Date\"\nimport ReportFilter from \"@/components/ReportFilter.vue\"\nimport Pagination from \"@/components/Pagination.vue\"\nimport { toastDanger } from \"@/utils/Alerts\";\nimport { EncryptionOptions } from \"jspdf\";\nimport { infoActionSheet } from \"@/utils/ActionSheets\";\nimport { removeTags } from \"@/utils/Strs\";\n\nexport default defineComponent({\n  components: { \n    HisStandardForm,   \n    IonHeader,\n    ReportTable, \n    HisFooter, \n    IonPage, \n    IonContent, \n    IonToolbar,\n    Pagination, \n    ReportFilter,  \n    IonFooter,\n    IonChip, \n    IonLabel\n  },\n  props: {\n      title: {\n      type: String,\n      required: true,\n    },\n    customFilter: {\n      type: Function\n    },\n    period: {\n      type: String,\n      default: '',\n    },\n    encryptPDF: {\n      type: Boolean,\n      default: false\n    },\n    config: {\n      type: Object as PropType<Record<string, any>>\n    },\n    fields: {\n      type: Array as PropType<Field[]>,\n      default: () => []\n    },\n    columns: {\n      type: Array as PropType<Array<ColumnInterface[]>>,\n      required: true\n    },\n    rows: {\n      type: Array as PropType<Array<RowInterface[]>>,\n      required: true\n    },\n    paginated: {\n        type: Boolean,\n        default: false\n    },\n    customBtns: {\n      type: Array,\n      default: () => []\n    },\n    canExportPDf: {\n      type: Boolean,\n      default: true\n    },\n    canExportCsv: {\n      type: Boolean,\n      default: true\n    },\n    onReportConfiguration: {\n      type: Function,\n      required: false\n    },\n    rowParser: {\n      type: Function as PropType<((data: any) => any[][])>\n    },\n    showFilters: {\n      type: Boolean,\n      default: false\n    },\n    showVLFilter: {\n      type: Boolean,\n      default: false\n    },\n    rowsPerPage: {\n      type: Number\n    },\n    asyncRows: {\n      type: Function as PropType<() => Promise<any[][]>>\n    },\n    footerColor: {\n      type: String,\n      default: 'dark'\n    },\n    customFileName: {\n      type: String,\n      default: ''\n    },\n    canExport: {\n      type: Boolean,\n      default: true\n    },\n    showReportStamp: {\n      type: Boolean,\n      default: true\n    },\n    customInfo: {\n      type: Object as PropType<Option>\n    },\n    reportPrefix: {\n      type: String,\n      default: \"\"\n    }\n\n  },\n  data: () => ({\n    formData: {} as any,\n    computeFormData: {} as any,\n    btns: [] as Array<any>,\n    isLoadingData: false as boolean,\n    showForm: false as boolean,\n    logo: \"/assets/images/login-logos/Malawi-Coat_of_arms_of_arms.png\" as string,\n    isTableLoading: false as boolean,\n    searchFilter: '' as string,\n    itemsPerPage: 50 as number,\n    itemsVLtype: '' as string,\n    currentPage: 0 as number,\n    tableRows: [] as any,\n    totalPages: 0 as number,\n    activeColumns: [] as any,\n    activeRows: [] as any,\n    date: HisDate.toStandardHisDisplayFormat(Service.getSessionDate()),\n    apiVersion: Service.getApiVersion(),\n    coreVersion: Service.getCoreVersion(),\n    siteUUID: Service.getSiteUUID() as string,\n    tableCssTheme: 'opd-report-theme',\n  }),\n  methods: {\n    getFileName() {\n      return `${this.reportPrefix ?? \"\"} ${Service.getLocationName()} ${removeTags(this.title).replace(this.reportPrefix, \"\")} ${this.period ?? this.date}`\n    },\n    pdfEncryptionData(): Record<\"encryption\", EncryptionOptions> {\n      const password = Service.getUserName()\n      return {\n        encryption: {\n          userPassword: password,\n          ownerPassword: password,\n          userPermissions: [\"print\"]\n        }\n      }\n    },\n    async onFinish(formData: any, computedData: any) {\n      this.formData = formData\n      this.computeFormData = computedData\n      this.showForm = false\n      await this.presentLoading()\n      try {\n        if(this.onReportConfiguration) await this.onReportConfiguration(this.formData, this.computeFormData)\n        loadingController.dismiss ()\n      }catch(e) {\n        console.error(e)\n        toastDanger(`${e}`)\n        loadingController.dismiss()\n      }\n    },\n    async reloadReport() {\n      await this.onFinish(this.formData, this.computeFormData)\n    },\n    async presentLoading() {\n      const loading = await loadingController\n        .create({\n          message: 'Please wait...',\n          backdropDismiss: false\n        })\n      await loading.present()\n    }\n  },\n  created() {\n    this.showForm = !!this.fields.length\n    this.btns = this.customBtns\n    this.btns.push(\n      {\n        name: \"CSV\",\n        size: \"large\",\n        slot: \"start\",\n        color: \"primary\",\n        visible: this.canExportCsv,\n        onClick: async () => {\n          const {columns, rows} = toExportableFormat(this.columns, this.rows, 'csvMode')\n          toCsv(columns, [\n            ...rows,\n            [`Date Created: ${this.date}`],\n            [`Period: ${this.period}`],\n            [`HIS-Core Version: ${this.coreVersion}`],\n            [`API Version: ${this.apiVersion}`],\n            [`Site UUID: ${this.siteUUID}`]\n          ], this.getFileName())\n        }\n      },\n      {\n        name: \"PDF\",\n        size: \"large\",\n        slot: \"start\",\n        color: \"primary\",\n        visible: this.canExportPDf,\n        onClick: async () => {\n          let mode: 'pdfMode' | 'ignorePDFColumnexport' = 'pdfMode'\n          if (this.encryptPDF) {\n            const option = await infoActionSheet(\n              'Security warning',\n              'PDF may contain private data that will require a password to unlock',\n              'To access private data choose Secure PDF over Regular PDF',\n              [\n                { \n                  name: \"Secure PDF\",\n                  slot: \"start\",\n                  color: \"success\"\n                },\n                { \n                  name: \"Regular PDF\",\n                  slot: \"start\",\n                  color: \"success\"\n                }\n              ],\n              'his-danger-color'\n            )\n            mode = option === 'Secure PDF' ? 'pdfMode' : 'ignorePDFColumnexport'\n          }\n          const {columns, rows} = toExportableFormat(this.activeColumns, this.activeRows, mode)\n          toTablePDF(\n            columns, \n            rows, \n            this.getFileName(),\n            false,\n            this.encryptPDF && mode !='ignorePDFColumnexport' ? this.pdfEncryptionData() : {}\n          )\n        }\n      },\n      {\n        name: \"Back\",\n        size: \"large\",\n        slot: \"end\",\n        color: \"primary\",\n        visible: true,\n        onClick: () => this.showForm = true\n      },\n      {\n        name: \"Refresh\",\n        size: \"large\",\n        slot: \"end\",\n        color: \"warning\",\n        visible: true,\n        onClick: () => this.reloadReport()\n      },\n      {\n        name: \"Finish\",\n        size: \"large\",\n        slot: \"end\",\n        color: \"success\",\n        visible: true,\n        onClick: () => this.$router.push({ path:'/' })\n      }\n    )\n  }\n})\n","import { render } from \"./BaseTableReport.vue?vue&type=template&id=36f19a06&scoped=true&ts=true\"\nimport script from \"./BaseTableReport.vue?vue&type=script&lang=ts\"\nexport * from \"./BaseTableReport.vue?vue&type=script&lang=ts\"\n\nimport \"./BaseTableReport.vue?vue&type=style&index=0&id=36f19a06&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/daniel/projects/malawi-emr/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-36f19a06\"]])\n\nexport default __exports__","import { resolveDynamicComponent as _resolveDynamicComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createBlock(_resolveDynamicComponent(_ctx.formType), {\n    fields: _ctx.fields,\n    skipSummary: _ctx.skipSummary,\n    activeField: _ctx.activeField,\n    cancelDestinationPath: _ctx.cancelDestinationPath,\n    onOnFinish: _ctx.onFinish,\n    onFinish: _ctx.onFinishAction,\n    onOnIndex: _ctx.onIndex\n  }, null, 40, [\"fields\", \"skipSummary\", \"activeField\", \"cancelDestinationPath\", \"onOnFinish\", \"onFinish\", \"onOnIndex\"]))\n}","\nimport TouchScreenForm from \"@/components/Forms/TouchScreenForm.vue\";\nimport { defineComponent, PropType } from \"vue\";\nimport { Field } from \"./FieldInterface\";\n\nexport default defineComponent({\n    name: \"HisStandardForm\",\n    components: { TouchScreenForm },\n    emits: [\n        'onFinish',\n        'onIndex'\n    ],\n    data: () => ({\n        formType: 'touch-screen-form' as string\n    }),\n    props: {\n        onFinishAction: {\n            type: Function\n        },\n        skipSummary: {\n            type: Boolean,\n            default: false\n        },\n        activeField: {\n            type: String\n        },\n        fields: {\n            type: Object as PropType<Field[]>,\n            required: true\n        },\n        cancelDestinationPath: {\n            type: String,\n            required: false,\n        }\n    },\n    methods: {\n        onFinish(formData: any, computedData: any) {\n            this.$emit('onFinish', formData, computedData)\n        },\n        onIndex(i: number) {\n            this.$emit('onIndex', i)\n        }\n    }\n})\n","import { render } from \"./HisStandardForm.vue?vue&type=template&id=6daa0375&ts=true\"\nimport script from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\nexport * from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/projects/malawi-emr/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_report_template = _resolveComponent(\"report-template\")!\n  const _component_ion_page = _resolveComponent(\"ion-page\")!\n\n  return (_openBlock(), _createBlock(_component_ion_page, null, {\n    default: _withCtx(() => [\n      _createVNode(_component_report_template, {\n        title: _ctx.title,\n        rows: _ctx.rows,\n        fields: _ctx.fields,\n        columns: _ctx.columns,\n        period: _ctx.period,\n        onReportConfiguration: _ctx.init\n      }, null, 8, [\"title\", \"rows\", \"fields\", \"columns\", \"period\", \"onReportConfiguration\"])\n    ]),\n    _: 1\n  }))\n}","\nimport { defineComponent } from 'vue'\nimport ReportTemplate from \"@/views/reports/BaseTableReport.vue\"\nimport table, { ColumnInterface, RowInterface } from \"@/components/DataViews/tables/ReportDataTable\"\nimport ReportMixin from '@/apps/ART/views/reports/ReportMixin.vue'\nimport { IonPage } from \"@ionic/vue\";\nimport { CxCaReportService } from '@/apps/CxCa/services/reports/cxca_report_service'\nexport default defineComponent({\n\n  components: { ReportTemplate, IonPage },\n  mixins: [ReportMixin],\n  data: () => ({\n    title: 'CC Type of Screen',\n    rows: [] as RowInterface[], \n    reportService: {} as any,\n    columns: [\n      [\n        table.thTxt('Fine Age'),\n        table.thTxt('CXCA_SCRN_First screen'),\n        table.thTxt('CXCA_SCRN_Rescreen'),\n        table.thTxt('CXCA_SCRN_Follow Up Screen'),\n      ]\n    ] as ColumnInterface[][],\n  }),\n  created(){\n    this.fields = this.getDateDurationFields()\n  },\n  methods: {\n    async init(_: any, config: any){\n      this.reportService = new CxCaReportService()\n      this.reportService.setStartDate(config.start_date)\n      this.reportService.setEndDate(config.end_date)\n      const data = await this.reportService.getPepfarReport('CC Type of Screen');\n      this.rows = this.buildRows(data)\n      \n    },\n    buildRows(data: any): RowInterface[] {\n      return data.map((d: any) => ([\n        table.td(d.age_group),\n        table.td(d['first_screen'].length),\n        table.td(d['rescreen'].length),\n        table.td(d['follow_up_screen'].length),\n      ]))\n    },\n  },\n})\n","import { render } from \"./CCTypeOfScreen.vue?vue&type=template&id=457cfc8e&ts=true\"\nimport script from \"./CCTypeOfScreen.vue?vue&type=script&lang=ts\"\nexport * from \"./CCTypeOfScreen.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/projects/malawi-emr/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { Service } from \"@/services/service\";\nimport HisDate from \"@/utils/Date\"\n\nexport interface QuarterInterface {\n    name: string;\n    start: string;\n    end: string;\n}\n\n\n\nexport const AGE_GROUPS = [\n    '15-19 years', '20-24 years',\n    '25-29 years', '30-34 years',\n    '35-39 years', '40-44 years',\n    '45-49 years', '50 plus years'\n]\n\n\nexport class CxCaReportService extends Service {\n    programID: number;\n    startDate: string;\n    endDate: string;\n    date: string;\n    constructor() {\n        super()\n        this.endDate = ''\n        this.startDate = ''\n        this.date = Service.getSessionDate()\n        this.programID = Service.getProgramID()\n    }\n\n    getPepfarReport(reportName: string) {\n        return this.getReport('pepfar_cxca', {'report_name': reportName})\n    }\n    getClinicReport(reportName: string) {\n        return this.getReport('screened_for_cxca', {'report_name': reportName})\n    }\n    getMohReport(reportName: string) {\n        return this.getReport('screened_for_cxca', {'report_name': reportName})\n    }\n    \n    getDateIntervalPeriod() {\n        return `${HisDate.toStandardHisDisplayFormat(this.startDate)} - ${HisDate.toStandardHisDisplayFormat(this.endDate)}`\n    }\n\n    setStartDate(startDate: string) {\n        this.startDate = startDate\n    }  \n\n    setEndDate(endDate: string) {\n        this.endDate = endDate\n    }\n\n   \n\n    getReportPeriod() {\n        return this.startDate && this.endDate\n         ? `${HisDate.toStandardHisDisplayFormat(this.startDate)} - ${HisDate.toStandardHisDisplayFormat(this.endDate)}`\n         : '-'\n    }\n\n    getReport(url: string, params={}) {\n        return Service.getJson(url, this.buildRequest(params))\n    }\n\n    buildRequest(config: Record<string, any> = {}) {\n        const payload: any = {'date': this.date, 'program_id': 24}\n        if (this.startDate && this.endDate) {\n            payload['start_date'] = this.startDate\n            payload['end_date'] = this.endDate\n        }\n        return { ...payload, ...config }\n    }\n\n    static getReportQuarters(minDuration= 4) {\n        const quarters: Array<QuarterInterface> = []\n        let year = HisDate.getCurrentYear()\n        for(let i=0; i < minDuration; ++i) {\n            quarters.push({ name: `Q4 ${year}`, start: `${year}-10-01`, end: `${year}-12-31` })\n            quarters.push({ name: `Q3 ${year}`, start: `${year}-07-01`, end: `${year}-09-30` })\n            quarters.push({ name: `Q2 ${year}`, start: `${year}-04-01`, end: `${year}-06-30` })\n            quarters.push({ name: `Q1 ${year}`, start: `${year}-01-01`, end: `${year}-03-31` })\n            --year\n        }\n        return quarters\n    }\n\n}","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./BaseTableReport.vue?vue&type=style&index=0&id=36f19a06&scoped=true&lang=css\""],"sourceRoot":""}