{"version":3,"sources":["webpack:///./src/apps/ART/views/reports/clinic/ClinicAppointments.vue?654c","webpack:///./src/apps/ART/views/reports/clinic/ClinicAppointments.vue","webpack:///./src/apps/ART/views/reports/clinic/ClinicAppointments.vue?b900","webpack:///./src/apps/ART/views/reports/ReportMixin.vue","webpack:///./src/apps/ART/views/reports/ReportMixin.vue?5c96","webpack:///./src/views/reports/BaseTableReport.vue?3225","webpack:///./src/views/reports/BaseTableReport.vue","webpack:///./src/views/reports/BaseTableReport.vue?3283","webpack:///./src/apps/ART/services/reports/art_report_service.ts","webpack:///./src/components/Forms/HisStandardForm.vue?8e31","webpack:///./src/components/Forms/HisStandardForm.vue","webpack:///./src/components/Forms/HisStandardForm.vue?5176","webpack:///./src/apps/ART/services/reports/patient_report_service.ts","webpack:///./src/views/reports/BaseTableReport.vue?a0a9"],"names":["render","_ctx","_cache","$props","$setup","$data","$options","_component_report_template","_resolveComponent","_component_ion_page","_openBlock","_createBlock","default","_withCtx","_createVNode","title","period","rows","fields","columns","showtitleOnly","config","showIndex","onReportConfiguration","onPeriod","_","defineComponent","mixins","ReportMixin","components","ReportTemplate","IonPage","data","date","appointments","table","thTxt","exportable","created","this","report","PatientReportService","id","helpText","type","FieldType","TT_DATE_PICKER","defaultValue","getSessionDate","validation","val","Validation","required","onValue","async","setStartDate","getBookedAppointments","infoItems","label","value","length","methods","form","HisDate","toStandardHisDisplayFormat","setRows","sort","asc","d","given_name","forEach","push","tdARV","arv_number","td","family_name","formatGender","gender","tdDate","birthdate","district","village","land_mark","cell_phone","tdBtn","confirmPatient","person_id","__exports__","reportReady","startDate","endDate","customFileName","drillDownCache","upCaseGender","toUpperCase","test","toDate","sortByArvNumber","attr","a","b","getArvInt","e","console","error","arv","prfx","art","arvNumStr","split","arvNumInt","parseInt","params","sortValue","patient","$router","asyncRows","canExport","modal","modalController","create","component","DrilldownTable","cssClass","componentProps","showFilters","rowsPerPage","paginated","showReportStamp","footerColor","onFinish","dismiss","present","rowParser","getDefaultDrillDownTable","ARV_NUM_INDEX","t","tableRows","map","index","isArray","defaultRow","num","key","oldIndex","rest","Patientservice","findByID","row","getArvNumber","getGender","getBirthdate","toString","path","Promise","all","runTableDrill","drilldownData","drill","values","tdLink","getQuaterOptions","quarters","ArtReportService","getReportQuarters","q","name","start","other","getDateDurationFields","useQuarter","setCustomQuarterPeriod","maxQuarter","maxDate","Service","minDate","TT_SELECT","condition","options","items","generateDateFields","f","quarter","estimation","allowUnknown","computeValue","unload","s","c","end_date","start_date","_hoisted_1","class","_hoisted_2","_hoisted_3","_component_his_standard_form","_component_ion_img","_component_ion_thumbnail","_component_ion_label","_component_report_filter","_component_ion_toolbar","_component_ion_header","_component_report_table","_component_ion_content","_component_pagination","_component_ion_chip","_component_ion_footer","_component_his_footer","_createElementBlock","_Fragment","_withDirectives","onOnFinish","skipSummary","_vShow","showForm","_createCommentVNode","slot","src","logo","_createElementVNode","_createTextVNode","_toDisplayString","customInfo","showPerPageFilter","disableSearchFilter","isTableLoading","disablePerPageFilter","totalRowCount","onOnItemsPerPage","i","itemsPerPage","onOnSearchFilter","searchFilter","tableCssTheme","newPage","currentPage","onOnIsLoading","l","onOnTableRows","r","onOnPagination","p","totalPages","onOnActiveColumns","activeColumns","onOnActiveRows","activeRows","perPage","maxVisibleButtons","onOnChangePage","color","coreVersion","apiVersion","btns","HisStandardForm","IonHeader","ReportTable","HisFooter","IonContent","IonToolbar","Pagination","ReportFilter","IonFooter","IonChip","IonLabel","props","String","Object","Array","Boolean","customBtns","canExportPDf","canExportCsv","Function","Number","formData","computeFormData","isLoadingData","getApiVersion","getCoreVersion","siteUUID","getSiteUUID","getFileName","getLocationName","computedData","presentLoading","loadingController","toastDanger","loading","message","backdropDismiss","size","visible","onClick","toExportableFormat","toCsv","toTablePDF","reloadReport","constructor","super","programID","getProgramID","getDateIntervalPeriod","setEndDate","setQuarter","getReport","url","getJson","buildRequest","getMaternalStatus","patientIds","reportDefinition","Url","parameterizeObjToString","postJson","payload","year","daysInMonth","m","dayjs","startMonth","endMonth","qtr","end","qtrBounds","getQuarterBounds","getFullYear","Date","qtrName","maxQuarters","qtrs","currDate","currYear","curYr","getMonth","getDate","currentQtr","getQtrByDate","buildQtrObj","_resolveDynamicComponent","formType","activeField","cancelDestinationPath","onFinishAction","onOnIndex","onIndex","TouchScreenForm","emits","$emit","AGE_GROUPS","getViralLoadResults","range","getOtherOutcome","outcome","getPatientVisitTypes","getClientsDueForVl","getClientRentention","getExternalConsultationClients","getMissedAppointments","getPregnantWomen","getArchivingCandidates","getIncompleteVisits"],"mappings":"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","file":"js/chunk-197e9401.37bf167b.js","sourcesContent":["import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_report_template = _resolveComponent(\"report-template\")!\n  const _component_ion_page = _resolveComponent(\"ion-page\")!\n\n  return (_openBlock(), _createBlock(_component_ion_page, null, {\n    default: _withCtx(() => [\n      _createVNode(_component_report_template, {\n        title: _ctx.title,\n        period: _ctx.period,\n        rows: _ctx.rows,\n        fields: _ctx.fields,\n        columns: _ctx.columns,\n        showtitleOnly: true,\n        config: {\n                showIndex: false\n            },\n        onReportConfiguration: _ctx.onPeriod\n      }, null, 8, [\"title\", \"period\", \"rows\", \"fields\", \"columns\", \"onReportConfiguration\"])\n    ]),\n    _: 1\n  }))\n}","\nimport { defineComponent } from 'vue'\nimport { PatientReportService } from \"@/apps/ART/services/reports/patient_report_service\"\nimport ReportMixin from \"@/apps/ART/views/reports/ReportMixin.vue\"\nimport ReportTemplate from \"@/views/reports/BaseTableReport.vue\"\nimport { FieldType } from '@/components/Forms/BaseFormElements'\nimport Validation from \"@/components/Forms/validations/StandardValidations\"\nimport HisDate from \"@/utils/Date\"\nimport table from \"@/components/DataViews/tables/ReportDataTable\"\nimport { IonPage } from \"@ionic/vue\"\nimport { sort } from 'fast-sort'\n\nexport default defineComponent({\n    mixins: [ReportMixin],\n    components: { ReportTemplate, IonPage },\n    data: () => ({\n        title: 'Booked clients',\n        date: '' as string,\n        rows: [] as Array<any>,\n        appointments: {} as Record<string, any>,\n        columns: [\n            [\n                table.thTxt('ARV#'),\n                table.thTxt('First name', { exportable: false }),\n                table.thTxt('Last name', { exportable: false }) ,\n                table.thTxt('Gender'),\n                table.thTxt('birthdate'),\n                table.thTxt('Current Address', {exportable: false}),\n                table.thTxt('Actions')\n            ]\n        ]\n    }),\n    created() {\n        this.report = new PatientReportService()\n        this.fields = [\n            {\n                id: 'date',\n                helpText: 'Select date',\n                type: FieldType.TT_DATE_PICKER,\n                defaultValue: () => PatientReportService.getSessionDate(),\n                validation: (val: any) => Validation.required(val),\n                onValue: async (date: string) => {\n                    this.report.setStartDate(date)\n                    if (!this.appointments[date]) {\n                        this.appointments[date] = (await this.report.getBookedAppointments(date)) || []\n                    }\n                    return true\n                },\n                config: {\n                    infoItems: (date: string) => {\n                        return [{\n                            label: 'Appointments',\n                            value: this.appointments[date]?.length || 0\n                        }]\n                   } \n                }\n            }\n        ]\n    },\n    methods: {\n        onPeriod(form: any) {\n            this.rows = []\n            this.period = HisDate.toStandardHisDisplayFormat(form.date)\n            this.setRows(this.appointments[form.date])\n        },\n        setRows(data: Array<any>) {\n            sort(data).asc((d: any) => d.given_name).forEach((data: any) => {\n                this.rows.push([\n                    this.tdARV(data.arv_number || 'N/A'),\n                    table.td(data.given_name),\n                    table.td(data.family_name),\n                    table.td(this.formatGender(data.gender)),\n                    table.tdDate(data.birthdate),\n                    table.td(\n                       `District: <br/> <b>${data.district}</b><br/>\n                        Village: <br/> <b>${data.village}</b><br/>\n                        Land-mark: <br/> <b>${data.land_mark}</b><br/>\n                        Cellphone: <br/> <b>${data.cell_phone}</b>`\n                    ),\n                    table.tdBtn('Select', () => this.confirmPatient(data.person_id))\n                ])\n            })\n        }\n    }\n})\n","import { render } from \"./ClinicAppointments.vue?vue&type=template&id=d7a72892&ts=true\"\nimport script from \"./ClinicAppointments.vue?vue&type=script&lang=ts\"\nexport * from \"./ClinicAppointments.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/mary/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","\nimport { Service } from \"@/services/service\"\nimport { defineComponent } from 'vue'\nimport { Field } from '@/components/Forms/FieldInterface'\nimport { generateDateFields } from \"@/utils/HisFormHelpers/MultiFieldDateHelper\"\nimport { Patientservice } from \"@/services/patient_service\"\nimport HisDate from \"@/utils/Date\"\nimport { modalController } from \"@ionic/vue\";\nimport DrilldownTable from \"@/apps/ART/views/reports/BasicReportTemplate.vue\"\nimport { ArtReportService } from \"@/apps/ART/services/reports/art_report_service\"\nimport { FieldType } from \"@/components/Forms/BaseFormElements\"\nimport { Option } from '@/components/Forms/FieldInterface'\nimport Validation from \"@/components/Forms/validations/StandardValidations\"\nimport table from \"@/components/DataViews/tables/ReportDataTable\"\nimport { isArray } from \"lodash\"\nimport { toGenderString } from \"@/utils/Strs\"\n\nexport default defineComponent({\n    data: () => ({\n        fields: [] as Array<Field>,\n        report: {} as any,\n        reportReady: false as boolean,\n        period: '' as string,\n        startDate: '' as string,\n        endDate: '' as string,\n        customFileName: '' as string,\n        drillDownCache: {} as Record<number, Array<any>>\n    }),\n    methods: {\n        formatGender(gender: string) {\n            const upCaseGender = `${gender}`.toUpperCase()\n            if (upCaseGender === 'M' || upCaseGender === 'MALE') {\n                return 'Male'\n            }\n            if (upCaseGender === 'F' || upCaseGender === 'FEMALE') {\n                return 'Female'\n            }\n            if (/fbf|fnp|fp/i.test(gender)) {\n                return upCaseGender\n            }\n            return gender\n        },\n        toDate(date: string) {\n            return HisDate.toStandardHisDisplayFormat(date)\n        },\n        sortByArvNumber(data: Array<any>, attr='arv_number') {\n            try {\n                return data.sort((a: any, b: any) => this.getArvInt(a[attr]) > this.getArvInt(b[attr]) ? 1 : -1)\n            } catch(e) {\n                console.error(e)\n                return data\n            }\n        },\n        getArvInt(arv: string) {\n            if (typeof arv === 'string') {\n                const [prfx, art, arvNumStr] = arv.split('-')\n                const arvNumInt = parseInt(arvNumStr)\n                return typeof arvNumInt === 'number' ? arvNumInt : 0 \n            }\n            return 0\n        },\n        tdARV(arv: string, params={}) {\n            return table.td(arv, { sortValue: this.getArvInt(arv), ...params})\n        },\n        confirmPatient(patient: number) {\n            return this.$router.push(`/patients/confirm?person_id=${patient}`)\n        },\n        async drilldownAsyncRows(title: string, columns: Array<any>, asyncRows: Function, canExport=true) {\n            const modal = await modalController.create({\n                component: DrilldownTable,\n                cssClass: 'large-modal',\n                componentProps: { \n                    title, \n                    columns, \n                    asyncRows,\n                    canExport,\n                    showFilters: true,\n                    rowsPerPage: 50,\n                    paginated: true,\n                    showReportStamp: false,\n                    footerColor: 'light',\n                    onFinish: () => modalController.dismiss()\n                }\n            })\n            modal.present()\n        },\n        async drilldownData(title: string, columns: Array<any>, rows: Array<any>, rowParser: any) {\n            const modal = await modalController.create({\n                component: DrilldownTable,\n                cssClass: 'large-modal',\n                componentProps: { \n                    title, \n                    columns, \n                    rows,\n                    rowParser,\n                    rowsPerPage: 50,\n                    showFilters: true,\n                    paginated: true,\n                    showReportStamp: false,\n                    footerColor: 'light',\n                    onFinish: () => modalController.dismiss()\n                }\n            })\n            modal.present()\n        },\n        getDefaultDrillDownTable() {\n            const columns = [\n                [\n                    table.thTxt('ARV number'), \n                    table.thTxt('Gender'),\n                    table.thTxt('Birth Date'), \n                    table.thTxt('Actions')\n                ]\n            ]\n            const rowParser = async (tableRows: Array<any[]>) => {\n                let ARV_NUM_INDEX = 0\n                const t = tableRows.map(async (defaultRow: Array<any>) => {\n                    let id: any = null\n                    let index: null | number = null\n                    if (isArray(defaultRow)) {\n                        const [num, key ] = defaultRow\n                        index = num\n                        if (key in this.drillDownCache) {\n                            const [oldIndex, ...rest] = this.drillDownCache[key]\n                            return [index, ...rest] // Assign new index number and maintain patient record\n                        }\n                    } else {\n                        id = defaultRow\n                        if (id in this.drillDownCache) {\n                            return this.drillDownCache[id]\n                        }\n                    }\n    \n                    const data = await Patientservice.findByID(id)\n                    const patient = new Patientservice(data)\n                    const row = []\n                    if (index) {\n                        ARV_NUM_INDEX = 1\n                        row.push(index)\n                    } \n                    row.push(this.tdARV(patient.getArvNumber()))\n                    row.push(table.td(this.formatGender(patient.getGender())))\n                    row.push(table.tdDate(patient.getBirthdate().toString()))\n                    row.push(table.tdBtn('Show', async () => {\n                        await modalController.dismiss({})\n                        this.$router.push({ path: `/patient/dashboard/${id}`})\n                    }))\n                    this.drillDownCache[id] = row\n                    return row\n                })\n                const rows = await Promise.all(t)\n                return rows.sort((a: any, b: any) => \n                        a[ARV_NUM_INDEX].sortValue > b[ARV_NUM_INDEX].sortValue \n                        ? 1 : -1)\n            }\n            return { rowParser, columns }\n        },\n        runTableDrill(data: any, title='Drilldown patients') {\n            const { columns, rowParser } = this.getDefaultDrillDownTable()\n            this.drilldownData(title, columns, data, rowParser)\n        },\n        drill(values: Array<number>, title='Drill table') {\n            if (values && values.length > 0) {\n                return table.tdLink(\n                    values.length, \n                    () => this.runTableDrill(values, title)\n                )\n            }\n            return table.td(0)\n        },\n        getQuaterOptions() {\n            const quarters = ArtReportService.getReportQuarters()\n            return quarters.map((q: any) => ({\n                label: q.name, value: q.start, other: q\n            }))\n        },\n        getDateDurationFields(\n            useQuarter=false, \n            setCustomQuarterPeriod=false, \n            maxQuarter=5, \n            maxDate=Service.getSessionDate() as string | null,\n        ): Array<Field> {\n            const minDate = '2000-01-01'\n            return [\n                {\n                    id: 'quarter',\n                    helpText: 'Select Quarter',\n                    type: FieldType.TT_SELECT,\n                    condition: () => useQuarter,\n                    validation: (val: Option) => Validation.required(val),\n                    options: () => {\n                        const quarters = ArtReportService.getReportQuarters(maxQuarter)\n                        let items: Array<Option> = quarters.map((q: any) => ({\n                            label: q.name,\n                            value: q.start,\n                            other: q\n                        }))\n                        if (setCustomQuarterPeriod) {\n                            items = [\n                                {\n                                    label: 'Set custom period',\n                                    value: 'custom_period',\n                                    other: {}\n                                },\n                                ...items\n                            ]\n                        }\n                        return items\n                    }\n                },\n                ...generateDateFields({\n                    id: 'start_date',\n                    helpText: 'Start',\n                    required: true,\n                    condition: (f: any) => f.quarter && f.quarter.value === 'custom_period' || !useQuarter,\n                    minDate: () => minDate,\n                    maxDate: () => maxDate,\n                    estimation: {\n                        allowUnknown: false\n                    },\n                    computeValue: (date: string) => date \n                }),\n                ...generateDateFields({\n                    id: 'end_date',\n                    helpText: 'End',\n                    required: true,\n                    condition: (f: any) => f.quarter && f.quarter.value === 'custom_period' || !useQuarter,\n                    unload: (d: any, s: any, f: any, c: any) => {\n                        if (s === 'next') {\n                            this.endDate = c.end_date\n                        }\n                    },\n                    minDate: (_: any, c: any) => c.start_date,\n                    maxDate: () => maxDate,\n                    estimation: {\n                        allowUnknown: false\n                    },\n                    computeValue: (date: string) => date\n                })\n            ]\n        }\n    }\n})\n","import script from \"./ReportMixin.vue?vue&type=script&lang=ts\"\nexport * from \"./ReportMixin.vue?vue&type=script&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { resolveComponent as _resolveComponent, vShow as _vShow, createVNode as _createVNode, withDirectives as _withDirectives, withCtx as _withCtx, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createBlock as _createBlock, Fragment as _Fragment, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-70df9616\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"header-text-list\" }\nconst _hoisted_2 = { key: 0 }\nconst _hoisted_3 = { class: \"report-content\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_his_standard_form = _resolveComponent(\"his-standard-form\")!\n  const _component_ion_img = _resolveComponent(\"ion-img\")!\n  const _component_ion_thumbnail = _resolveComponent(\"ion-thumbnail\")!\n  const _component_ion_label = _resolveComponent(\"ion-label\")!\n  const _component_report_filter = _resolveComponent(\"report-filter\")!\n  const _component_ion_toolbar = _resolveComponent(\"ion-toolbar\")!\n  const _component_ion_header = _resolveComponent(\"ion-header\")!\n  const _component_report_table = _resolveComponent(\"report-table\")!\n  const _component_ion_content = _resolveComponent(\"ion-content\")!\n  const _component_pagination = _resolveComponent(\"pagination\")!\n  const _component_ion_chip = _resolveComponent(\"ion-chip\")!\n  const _component_ion_footer = _resolveComponent(\"ion-footer\")!\n  const _component_his_footer = _resolveComponent(\"his-footer\")!\n  const _component_ion_page = _resolveComponent(\"ion-page\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _withDirectives(_createVNode(_component_his_standard_form, {\n      onOnFinish: _ctx.onFinish,\n      skipSummary: true,\n      fields: _ctx.fields\n    }, null, 8, [\"onOnFinish\", \"fields\"]), [\n      [_vShow, _ctx.showForm]\n    ]),\n    (!_ctx.showForm)\n      ? (_openBlock(), _createBlock(_component_ion_page, { key: 0 }, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_header, null, {\n              default: _withCtx(() => [\n                _createVNode(_component_ion_toolbar, null, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_ion_thumbnail, { slot: \"start\" }, {\n                      default: _withCtx(() => [\n                        _createVNode(_component_ion_img, { src: _ctx.logo }, null, 8, [\"src\"])\n                      ]),\n                      _: 1\n                    }),\n                    _createVNode(_component_ion_label, null, {\n                      default: _withCtx(() => [\n                        _createElementVNode(\"ul\", _hoisted_1, [\n                          _createElementVNode(\"li\", null, [\n                            _createTextVNode(\"Title \"),\n                            _createElementVNode(\"b\", null, _toDisplayString(_ctx.title), 1)\n                          ]),\n                          _createElementVNode(\"li\", null, [\n                            _createTextVNode(\"Period \"),\n                            _createElementVNode(\"b\", null, _toDisplayString(_ctx.period), 1)\n                          ]),\n                          (_ctx.customInfo)\n                            ? (_openBlock(), _createElementBlock(\"li\", _hoisted_2, [\n                                _createTextVNode(_toDisplayString(_ctx.customInfo.label) + \" \", 1),\n                                _createElementVNode(\"b\", null, _toDisplayString(_ctx.customInfo.value), 1)\n                              ]))\n                            : _createCommentVNode(\"\", true)\n                        ])\n                      ]),\n                      _: 1\n                    }),\n                    _createVNode(_component_report_filter, {\n                      slot: \"end\",\n                      showPerPageFilter: _ctx.showFilters || _ctx.paginated,\n                      disableSearchFilter: _ctx.isTableLoading,\n                      disablePerPageFilter: _ctx.isTableLoading,\n                      totalRowCount: _ctx.tableRows.length,\n                      onOnItemsPerPage: _cache[0] || (_cache[0] = (i) => _ctx.itemsPerPage = i),\n                      onOnSearchFilter: _cache[1] || (_cache[1] = (f) => _ctx.searchFilter = f)\n                    }, null, 8, [\"showPerPageFilter\", \"disableSearchFilter\", \"disablePerPageFilter\", \"totalRowCount\"])\n                  ]),\n                  _: 1\n                })\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_ion_content, null, {\n              default: _withCtx(() => [\n                _createElementVNode(\"div\", _hoisted_3, [\n                  _createVNode(_component_report_table, {\n                    rows: _ctx.rows,\n                    paginated: _ctx.paginated,\n                    asyncRows: _ctx.asyncRows,\n                    rowParser: _ctx.rowParser,\n                    config: {..._ctx.config, tableCssTheme: _ctx.tableCssTheme},\n                    columns: _ctx.columns,\n                    showFilters: _ctx.showFilters,\n                    newPage: _ctx.currentPage,\n                    searchFilter: _ctx.searchFilter,\n                    rowsPerPage: _ctx.itemsPerPage,\n                    onOnIsLoading: _cache[2] || (_cache[2] = (l) => _ctx.isTableLoading = l),\n                    onOnTableRows: _cache[3] || (_cache[3] = (r) => _ctx.tableRows = r),\n                    onOnPagination: _cache[4] || (_cache[4] = (p) => _ctx.totalPages = p.length),\n                    onOnActiveColumns: _cache[5] || (_cache[5] = (c) => _ctx.activeColumns = c),\n                    onOnActiveRows: _cache[6] || (_cache[6] = (r) => _ctx.activeRows = r)\n                  }, null, 8, [\"rows\", \"paginated\", \"asyncRows\", \"rowParser\", \"config\", \"columns\", \"showFilters\", \"newPage\", \"searchFilter\", \"rowsPerPage\"])\n                ])\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_ion_footer, null, {\n              default: _withCtx(() => [\n                (!_ctx.searchFilter && _ctx.paginated || !_ctx.searchFilter && _ctx.totalPages > 0 && _ctx.paginated)\n                  ? (_openBlock(), _createBlock(_component_ion_toolbar, { key: 0 }, {\n                      default: _withCtx(() => [\n                        _createVNode(_component_pagination, {\n                          perPage: _ctx.itemsPerPage,\n                          maxVisibleButtons: 10,\n                          totalPages: _ctx.totalPages,\n                          onOnChangePage: _cache[7] || (_cache[7] = (p) => _ctx.currentPage=p)\n                        }, null, 8, [\"perPage\", \"totalPages\"])\n                      ]),\n                      _: 1\n                    }))\n                  : _createCommentVNode(\"\", true),\n                (_ctx.showReportStamp)\n                  ? (_openBlock(), _createBlock(_component_ion_toolbar, { key: 1 }, {\n                      default: _withCtx(() => [\n                        _createVNode(_component_ion_chip, { color: \"primary\" }, {\n                          default: _withCtx(() => [\n                            _createTextVNode(\"Date Created: \"),\n                            _createElementVNode(\"b\", null, _toDisplayString(_ctx.date), 1)\n                          ]),\n                          _: 1\n                        }),\n                        _createVNode(_component_ion_chip, { color: \"primary\" }, {\n                          default: _withCtx(() => [\n                            _createTextVNode(\"His-Core Version: \"),\n                            _createElementVNode(\"b\", null, _toDisplayString(_ctx.coreVersion), 1)\n                          ]),\n                          _: 1\n                        }),\n                        _createVNode(_component_ion_chip, { color: \"primary\" }, {\n                          default: _withCtx(() => [\n                            _createTextVNode(\"API Version: \"),\n                            _createElementVNode(\"b\", null, _toDisplayString(_ctx.apiVersion), 1)\n                          ]),\n                          _: 1\n                        })\n                      ]),\n                      _: 1\n                    }))\n                  : _createCommentVNode(\"\", true)\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_his_footer, {\n              color: _ctx.footerColor,\n              btns: _ctx.btns\n            }, null, 8, [\"color\", \"btns\"])\n          ]),\n          _: 1\n        }))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}","\nimport { defineComponent, PropType } from \"vue\";\nimport HisFooter from \"@/components/HisDynamicNavFooter.vue\";\nimport ReportTable from \"@/components/DataViews/tables/ReportDataTable.vue\"\nimport { toCsv, toTablePDF } from \"@/utils/Export\"\nimport { toExportableFormat, ColumnInterface, RowInterface} from \"@/components/DataViews/tables/ReportDataTable\" \nimport HisStandardForm from \"@/components/Forms/HisStandardForm.vue\";\nimport { Field, Option } from '@/components/Forms/FieldInterface';\nimport { \n  IonPage,\n  IonHeader,\n  IonContent,\n  IonToolbar,\n  loadingController,\n  IonChip, \n  IonFooter,\n  IonLabel\n} from \"@ionic/vue\"\nimport { Service } from \"@/services/service\"\nimport HisDate from \"@/utils/Date\"\nimport ReportFilter from \"@/components/ReportFilter.vue\"\nimport Pagination from \"@/components/Pagination.vue\"\nimport { toastDanger } from \"@/utils/Alerts\";\n\nexport default defineComponent({\n  components: { \n    HisStandardForm,   \n    IonHeader,\n    ReportTable, \n    HisFooter, \n    IonPage, \n    IonContent, \n    IonToolbar,\n    Pagination, \n    ReportFilter,  \n    IonFooter,\n    IonChip, \n    IonLabel\n  },\n  props: {\n      title: {\n      type: String,\n      required: true,\n    },\n    period: {\n      type: String,\n      default: '',\n    },\n    config: {\n      type: Object as PropType<Record<string, any>>\n    },\n    fields: {\n      type: Array as PropType<Field[]>,\n      default: () => []\n    },\n    columns: {\n      type: Array as PropType<Array<ColumnInterface[]>>,\n      required: true\n    },\n    rows: {\n      type: Array as PropType<Array<RowInterface[]>>,\n      required: true\n    },\n    paginated: {\n        type: Boolean,\n        default: false\n    },\n    customBtns: {\n      type: Array,\n      default: () => []\n    },\n    canExportPDf: {\n      type: Boolean,\n      default: true\n    },\n    canExportCsv: {\n      type: Boolean,\n      default: true\n    },\n    onReportConfiguration: {\n      type: Function,\n      required: false\n    },\n    rowParser: {\n      type: Function as PropType<((data: any) => any[][])>\n    },\n    showFilters: {\n      type: Boolean,\n      default: false\n    },\n    rowsPerPage: {\n      type: Number\n    },\n    asyncRows: {\n      type: Function as PropType<() => Promise<any[][]>>\n    },\n    footerColor: {\n      type: String,\n      default: 'dark'\n    },\n    customFileName: {\n      type: String,\n      default: ''\n    },\n    canExport: {\n      type: Boolean,\n      default: true\n    },\n    showReportStamp: {\n      type: Boolean,\n      default: true\n    },\n    customInfo: {\n      type: Object as PropType<Option>\n    }\n  },\n  data: () => ({\n    formData: {} as any,\n    computeFormData: {} as any,\n    btns: [] as Array<any>,\n    isLoadingData: false as boolean,\n    showForm: false as boolean,\n    logo: \"/assets/images/login-logos/Malawi-Coat_of_arms_of_arms.png\" as string,\n    isTableLoading: false as boolean,\n    searchFilter: '' as string,\n    itemsPerPage: 50 as number,\n    currentPage: 0 as number,\n    tableRows: [] as any,\n    totalPages: 0 as number,\n    activeColumns: [] as any,\n    activeRows: [] as any,\n    date: HisDate.toStandardHisDisplayFormat(Service.getSessionDate()),\n    apiVersion: Service.getApiVersion(),\n    coreVersion: Service.getCoreVersion(),\n    siteUUID: Service.getSiteUUID() as string,\n    tableCssTheme: 'opd-report-theme',\n  }),\n  methods: {\n    getFileName() {\n      return `${Service.getLocationName()} ${this.title} ${this.period}`\n    },\n    async onFinish(formData: any, computedData: any) {\n      this.formData = formData\n      this.computeFormData = computedData\n      this.showForm = false\n      await this.presentLoading()\n      try {\n        if(this.onReportConfiguration) await this.onReportConfiguration(this.formData, this.computeFormData)\n        loadingController.dismiss ()\n      }catch(e) {\n        console.error(e)\n        toastDanger(`${e}`)\n        loadingController.dismiss()\n      }\n    },\n    async reloadReport() {\n      await this.onFinish(this.formData, this.computeFormData)\n    },\n    async presentLoading() {\n      const loading = await loadingController\n        .create({\n          message: 'Please wait...',\n          backdropDismiss: false\n        })\n      await loading.present()\n    }\n  },\n  created() {\n    this.showForm = !!this.fields.length\n    this.btns = this.customBtns\n    this.btns.push(\n      {\n        name: \"CSV\",\n        size: \"large\",\n        slot: \"start\",\n        color: \"primary\",\n        visible: this.canExportCsv,\n        onClick: async () => {\n          const {columns, rows} = toExportableFormat(this.columns, this.rows)\n          toCsv(columns, [\n            ...rows,\n            [`Date Created: ${this.date}`],\n            [`Period: ${this.period}`],\n            [`HIS-Core Version: ${this.coreVersion}`],\n            [`API Version: ${this.apiVersion}`],\n            [`Site UUID: ${this.siteUUID}`]\n          ], this.getFileName())\n        }\n      },\n      {\n        name: \"PDF\",\n        size: \"large\",\n        slot: \"start\",\n        color: \"primary\",\n        visible: this.canExportPDf,\n        onClick: async () => {\n          const {columns, rows} = toExportableFormat(this.columns, this.rows)\n          toTablePDF(columns, rows, this.getFileName())\n        }\n      },\n      {\n        name: \"Back\",\n        size: \"large\",\n        slot: \"end\",\n        color: \"primary\",\n        visible: true,\n        onClick: () => this.showForm = true\n      },\n      {\n        name: \"Refresh\",\n        size: \"large\",\n        slot: \"end\",\n        color: \"warning\",\n        visible: true,\n        onClick: () => this.reloadReport()\n      },\n      {\n        name: \"Finish\",\n        size: \"large\",\n        slot: \"end\",\n        color: \"success\",\n        visible: true,\n        onClick: () => this.$router.push({ path:'/' })\n      }\n    )\n  }\n})\n","import { render } from \"./BaseTableReport.vue?vue&type=template&id=70df9616&scoped=true&ts=true\"\nimport script from \"./BaseTableReport.vue?vue&type=script&lang=ts\"\nexport * from \"./BaseTableReport.vue?vue&type=script&lang=ts\"\n\nimport \"./BaseTableReport.vue?vue&type=style&index=0&id=70df9616&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/mary/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-70df9616\"]])\n\nexport default __exports__","import { Service } from \"@/services/service\";\nimport HisDate from \"@/utils/Date\"\nimport Url from \"@/utils/Url\";\nimport dayjs from \"dayjs\";\n\nexport interface QuarterInterface {\n    name: string;\n    start: string;\n    end: string;\n}\n\nexport class ArtReportService extends Service {\n    programID: number;\n    startDate: string;\n    endDate: string;\n    date: string;\n    quarter: string\n    constructor() {\n        super()\n        this.endDate = ''\n        this.startDate = ''\n        this.quarter = ''\n        this.date = Service.getSessionDate()\n        this.programID = Service.getProgramID()\n    }\n\n    getDateIntervalPeriod() {\n        return `${HisDate.toStandardHisDisplayFormat(this.startDate)} - ${HisDate.toStandardHisDisplayFormat(this.endDate)}`\n    }\n\n    setStartDate(startDate: string) {\n        this.startDate = startDate\n    }  \n\n    setEndDate(endDate: string) {\n        this.endDate = endDate\n    }\n\n    setQuarter(quarter: string) {\n        this.quarter = quarter\n    }\n\n    getReport(url: string, params={}) {\n        return Service.getJson(url, this.buildRequest(params))\n    }\n\n    getMaternalStatus(patientIds: number[], reportDefinition = 'pepfar') {\n        const params = Url.parameterizeObjToString(this.buildRequest({ 'report_definition': reportDefinition }))\n        return Service.postJson(`vl_maternal_status?${params}`, {\n            'patient_ids': patientIds\n        })\n    }\n\n    buildRequest(config: Record<string, any> = {}) {\n        const payload: any = {'date': this.date, 'program_id': this.programID}\n        if (this.startDate && this.endDate) {\n            payload['start_date'] = this.startDate\n            payload['end_date'] = this.endDate\n        }\n        if (this.quarter) {\n            payload['quarter'] = this.quarter\n        }\n        return { ...payload, ...config }\n    }\n\n    static getQuarterBounds(year: number) {\n        const daysInMonth = (m: string) => dayjs(`${year}-${m}-01`).daysInMonth()\n        const startMonth = (m: string) => `${year}-${m}-01 00:00`\n        const endMonth = (m: string) => `${year}-${m}-${daysInMonth(m)} 00:00`\n\n        return {\n            'Q1': {\n                qtr: 1,\n                start: startMonth('01'),\n                end: endMonth('03')\n            },\n            'Q2': {\n                qtr: 2,\n                start: startMonth('04'),\n                end: endMonth('06')\n            },\n            'Q3': {\n                qtr: 3,\n                start: startMonth('07'),\n                end: endMonth('09')\n            },\n            'Q4': {\n                qtr: 4,\n                start: startMonth('10'),\n                end: endMonth('12')\n            }\n        }\n    }\n\n    static getQtrByDate(date: Date) {\n        const qtrBounds: any = this.getQuarterBounds(date.getFullYear())\n        for(const qtr in qtrBounds) {\n            const { start, end } = qtrBounds[qtr]\n            if (date >= new Date(start) && date <= new Date(end)) {\n                return qtrBounds[qtr]\n            }\n        }\n        return null\n    }\n\n    static buildQtrObj(qtrName: string, year: number): QuarterInterface {\n        const qtrBounds: any = this.getQuarterBounds(year)\n        const { start, end } = qtrBounds[qtrName]\n        return {\n            start,\n            end,\n            name: `${qtrName} ${year}`,\n        }\n    }\n\n    static getReportQuarters(maxQuarters=5) {\n        const qtrs: QuarterInterface[] = [];\n        let currDate = new Date();\n        let currYear = currDate.getFullYear();\n        const curYr = currYear\n        \n        currDate = new Date(`${curYr}-${currDate.getMonth() + 1}-${currDate.getDate()} 00:00`);\n        const currentQtr = this.getQtrByDate(currDate);\n        let qtr = currentQtr.qtr;\n        let i = 0;\n\n        if (qtr === 4) qtrs.push(this.buildQtrObj('Q1', currYear + 1))\n\n        while (i < maxQuarters) {\n          // Add following quarter\n          if (i === 0 && qtr < 4) qtrs.push(this.buildQtrObj(`Q${qtr + 1}`, currYear))\n\n          qtrs.push(this.buildQtrObj(`Q${qtr}`, currYear))\n          qtr = qtr > 0 ? (qtr -= 1) : qtr;\n          currYear = qtr == 0 ? currYear - 1 : currYear;\n          qtr =  qtr == 0 ? ( qtr += 4) : qtr;\n          i++;\n        }\n        return qtrs;\n    }\n}\n","import { resolveDynamicComponent as _resolveDynamicComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createBlock(_resolveDynamicComponent(_ctx.formType), {\n    fields: _ctx.fields,\n    skipSummary: _ctx.skipSummary,\n    activeField: _ctx.activeField,\n    cancelDestinationPath: _ctx.cancelDestinationPath,\n    onOnFinish: _ctx.onFinish,\n    onFinish: _ctx.onFinishAction,\n    onOnIndex: _ctx.onIndex\n  }, null, 40, [\"fields\", \"skipSummary\", \"activeField\", \"cancelDestinationPath\", \"onOnFinish\", \"onFinish\", \"onOnIndex\"]))\n}","\nimport TouchScreenForm from \"@/components/Forms/TouchScreenForm.vue\";\nimport { defineComponent, PropType } from \"vue\";\nimport { Field } from \"./FieldInterface\";\n\nexport default defineComponent({\n    name: \"HisStandardForm\",\n    components: { TouchScreenForm },\n    emits: [\n        'onFinish',\n        'onIndex'\n    ],\n    data: () => ({\n        formType: 'touch-screen-form' as string\n    }),\n    props: {\n        onFinishAction: {\n            type: Function\n        },\n        skipSummary: {\n            type: Boolean,\n            default: false\n        },\n        activeField: {\n            type: String\n        },\n        fields: {\n            type: Object as PropType<Field[]>,\n            required: true\n        },\n        cancelDestinationPath: {\n            type: String,\n            required: false,\n        }\n    },\n    methods: {\n        onFinish(formData: any, computedData: any) {\n            this.$emit('onFinish', formData, computedData)\n        },\n        onIndex(i: number) {\n            this.$emit('onIndex', i)\n        }\n    }\n})\n","import { render } from \"./HisStandardForm.vue?vue&type=template&id=6daa0375&ts=true\"\nimport script from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\nexport * from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/mary/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { ArtReportService } from \"./art_report_service\";\n\nexport const AGE_GROUPS = [\n    '<1 year',\n    '1-4 years', \n    '5-9 years', \n    '10-14 years', \n    '15-19 years', \n    '20-24 years', \n    '25-29 years', \n    '30-34 years', \n    '35-39 years', \n    '40-44 years', \n    '45-49 years', \n    '50-54 years',\n    '55-59 years',\n    '60-64 years',\n    '65-69 years',\n    '70-74 years',\n    '75-79 years',\n    '80-84 years',\n    '85-89 years',\n    '90 plus years'\n]\n\nexport class PatientReportService extends ArtReportService {\n    constructor() {\n        super()\n    }\n    \n    getBookedAppointments(date: string) {\n        return ArtReportService.getJson(`programs/${this.programID}/scheduled_appointments`, { date })\n    }\n\n    getViralLoadResults(range: string) {\n        return this.getReport(`/programs/${this.programID}/reports/high_vl_patients`, { range })\n    }\n\n    getOtherOutcome(outcome: string) {\n        return this.getReport('patient_outcome_list', { outcome })\n    }\n\n    getPatientVisitTypes() {\n        return this.getReport('patient_visit_types')\n    }\n\n    getClientsDueForVl() {\n        return this.getReport('clients_due_vl')\n    }\n\n    getClientRentention() {\n        return this.getReport(`/programs/${this.programID}/reports/retention`)\n    }\n\n    getExternalConsultationClients() {\n        return this.getReport(`${this.programID}/external_consultation_clients`)\n    }\n\n    getMissedAppointments() {\n        return this.getReport('missed_appointments')\n    }\n\n    getPregnantWomen() {\n        return this.getReport(`/programs/${this.programID}/reports/pregnant_patients`)\n    }\n\n    getArchivingCandidates() {\n        return ArtReportService.getJson(`programs/${this.programID}/reports/archiving_candidates`, { \n            'start_date': this.date\n        })\n    }\n\n    getIncompleteVisits() {\n        return this.getReport('incomplete_visits', {\n            \"tool_name\": \"INCOMPLETE VISITS\",\n        })\n    }\n}\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./BaseTableReport.vue?vue&type=style&index=0&id=70df9616&scoped=true&lang=css\""],"sourceRoot":""}