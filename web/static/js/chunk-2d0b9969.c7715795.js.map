{"version":3,"sources":["webpack:///./src/apps/SPINE/services/patient_admit_service.ts","webpack:///./src/apps/SPINE/views/encounters/AdmitPatient.vue","webpack:///./src/apps/SPINE/views/encounters/AdmitPatient.vue?ef87"],"names":["PatientAdmitService","AppEncounterService","constructor","patientID","providerID","super","_defineComponent","__name","setup","__props","fields","ref","admitService","goToNextTask","patientDashboardUrl","useEncounter","provider","patient","value","push","getInternalSectionsField","async","onSubmit","_fdata","cdata","obs","Promise","all","internal_sections","createEncounter","saveObservationList","id","helpText","type","FieldType","TT_SELECT","validation","Validation","required","computedValue","v","buildValueText","label","options","LocationService","getInternalSections","config","showKeyboard","footerBtns","name","slot","color","onClick","f","c","field","filter","length","toastWarning","filtered","some","i","toLowerCase","alertConfirmation","data","createInternalSection","toUpperCase","listData","toastDanger","_ctx","_cache","_openBlock","_createBlock","_unref","IonPage","default","_withCtx","_createVNode","HisStandardForm","cancelDestinationPath","onFinishAction","skipSummary","_","__exports__"],"mappings":"2NAEM,MAAOA,UAA4BC,OACrCC,YAAYC,EAAmBC,GAC3BC,MAAMF,EAAW,GAAIC,I,4BCWDE,+BAAiB,CAC3CC,OAAQ,eACRC,MAAMC,GAER,MAAMC,EAASC,iBAAkB,IACjC,IAAIC,EAEJ,MAAM,aAAEC,EAAY,oBAAEC,GAAwBC,eAAa,CAACC,EAAUC,KACpEL,EAAe,IAAIZ,EAAoBiB,EAASD,GAChDN,EAAOQ,MAAMC,KAAKC,OAGpBC,eAAeC,EAASC,EAAaC,GACnC,MAAMC,QAAYC,QAAQC,IAAI,CAACH,EAAMI,0BAC/BhB,EAAaiB,wBACbjB,EAAakB,oBAAoBL,GACvCZ,IAGF,SAASO,IACP,MAAO,CACLW,GAAI,oBACJC,SAAU,+BACVC,KAAMC,OAAUC,UAChBC,WAAalB,GAAemB,OAAWC,SAASpB,GAChDqB,cAAgBC,GAAc5B,EAAa6B,eAAe,gBAAiBD,EAAEE,OAC7EC,QAASA,IAAMC,OAAgBC,sBAC/BC,OAAQ,CACNC,cAAc,EACdC,WAAY,CAAC,CACXC,KAAM,cACNC,KAAM,MACNC,MAAO,UACPC,QAAS/B,MAAOgC,EAAQC,EAAQC,KAC9B,GAA2B,iBAAhBA,EAAMC,QAAsBD,EAAMC,OAAOC,OAAS,EAC3D,OAAOC,eAAa,qCAEtB,GAAIH,EAAMI,SAASC,KAAMC,GAAcA,EAAEnB,MAAMoB,gBAAkBP,EAAMC,OAAOM,eAC5E,OAAOJ,eAAa,4BAEtB,SAAWK,eAAkB,wCAA0C,CACrE,MAAMC,QAAapB,OAAgBqB,sBAAsBV,EAAMC,OAAOU,eAClEF,GACFT,EAAMC,OAASQ,EAAKf,KACpBM,EAAMY,SAAW,CAAC,CAACzB,MAAOsB,EAAKf,KAAM/B,MAAO8C,EAAKjC,OAAQwB,EAAMY,WAE/DC,eAAY,iBAAiBb,EAAMC,cASjD,MAAO,CAACa,EAAUC,KACRC,yBAAcC,yBAAaC,mBAAOC,cAAU,KAAM,CACxDC,QAASC,qBAAS,IAAM,CACtBC,yBAAaC,OAAiB,CAC5BC,sBAAuBN,mBAAO3D,GAC9BJ,OAAQA,EAAOQ,MACf8D,eAAgB1D,EAChB2D,aAAa,GACZ,KAAM,EAAG,CAAC,wBAAyB,aAExCC,EAAG,QC7EP,MAAMC,EAAc,EAEL","file":"js/chunk-2d0b9969.c7715795.js","sourcesContent":["import { AppEncounterService } from \"@/services/app_encounter_service\"\n\nexport class PatientAdmitService extends AppEncounterService {\n    constructor(patientID: number, providerID: number) {\n        super(patientID, 42, providerID) \n    }\n}","import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nimport { ref } from 'vue'\nimport HisStandardForm from \"@/components/Forms/HisStandardForm.vue\";\nimport Validation from '@/components/Forms/validations/StandardValidations';\nimport { Field, Option } from '@/components/Forms/FieldInterface';\nimport { FieldType } from '@/components/Forms/BaseFormElements';\nimport { IonPage } from '@ionic/vue';\nimport useEncounter from \"@/composables/useEncounter\";\nimport { PatientAdmitService } from \"../../services/patient_admit_service\";\nimport { LocationService } from '@/services/location_service';\nimport { alertConfirmation, toastDanger, toastWarning } from '@/utils/Alerts';\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'AdmitPatient',\n  setup(__props) {\n\nconst fields = ref<Array<Field>>([]);\nlet admitService: PatientAdmitService;\n\nconst { goToNextTask, patientDashboardUrl } = useEncounter((provider, patient) => {\n  admitService = new PatientAdmitService(patient, provider);\n  fields.value.push(getInternalSectionsField());\n});\n\nasync function onSubmit(_fdata: any, cdata: any) {\n  const obs = await Promise.all([cdata.internal_sections]);\n  await admitService.createEncounter();\n  await admitService.saveObservationList(obs);\n  goToNextTask();\n}\n\nfunction getInternalSectionsField(): Field {\n  return {\n    id: 'internal_sections',\n    helpText: 'Select Ward/internal section',\n    type: FieldType.TT_SELECT,\n    validation: (value: any) => Validation.required(value),\n    computedValue: (v: Option) => admitService.buildValueText('Admit to ward', v.label),\n    options: () => LocationService.getInternalSections(),\n    config: { \n      showKeyboard: true,\n      footerBtns: [{\n        name: 'Add Section',\n        slot: 'end',\n        color: 'success',\n        onClick: async (f: any, c: any, field: any) => {\n          if (typeof field.filter != 'string' || field.filter.length < 3) {\n            return toastWarning(`Please enter a valid section name`)\n          }\n          if (field.filtered.some((i: Option) => i.label.toLowerCase() === field.filter.toLowerCase())) {\n            return toastWarning(`Section already existing`)\n          }\n          if ((await alertConfirmation(`Do you want to add internal section?`))) {\n            const data = await LocationService.createInternalSection(field.filter.toUpperCase())\n            if (data) {\n              field.filter = data.name\n              field.listData = [{label: data.name, value: data.id}, ...field.listData]\n            } else {\n              toastDanger(`Unable to add ${field.filter}`)\n            }\n          }\n        }\n      }]\n    }\n  }\n}\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createBlock(_unref(IonPage), null, {\n    default: _withCtx(() => [\n      _createVNode(HisStandardForm, {\n        cancelDestinationPath: _unref(patientDashboardUrl),\n        fields: fields.value,\n        onFinishAction: onSubmit,\n        skipSummary: true\n      }, null, 8, [\"cancelDestinationPath\", \"fields\"])\n    ]),\n    _: 1\n  }))\n}\n}\n\n})","import script from \"./AdmitPatient.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./AdmitPatient.vue?vue&type=script&lang=ts&setup=true\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"sourceRoot":""}