{"version":3,"sources":["webpack:///./src/apps/ANC/Views/Encounters/Examination.vue?591c","webpack:///./src/apps/ANC/Services/anc_examination_service.ts","webpack:///./src/apps/ANC/Views/Encounters/Examination.vue","webpack:///./src/apps/ANC/Views/Encounters/Examination.vue?02c1","webpack:///./src/components/Keyboard/KbLayouts.ts","webpack:///./src/components/Keyboard/HisKbConfigurations.ts","webpack:///./src/guidelines/encounter_guidelines.ts","webpack:///./src/views/EncounterMixin.vue","webpack:///./src/views/EncounterMixin.vue?fc39","webpack:///./src/components/Forms/HisStandardForm.vue?8e31","webpack:///./src/components/Forms/HisStandardForm.vue","webpack:///./src/components/Forms/HisStandardForm.vue?5176","webpack:///./src/utils/GuidelineEngine.ts","webpack:///./src/components/Forms/BaseFormElements.ts","webpack:///./src/components/FormElements lazy ^\\.\\/.*\\.vue$ namespace object","webpack:///./src/apps/ANC/Services/anc_current_pregnancy.ts"],"names":["render","_ctx","_cache","$props","$setup","$data","$options","_component_his_standard_form","_resolveComponent","_component_ion_page","_openBlock","_createBlock","default","_withCtx","_createVNode","fields","skipSummary","onFinishAction","onFinish","cancelDestinationPath","cancelDestination","_","FUNDAL_CM_TO_WEEKS","AncExaminationService","AppEncounterService","constructor","patientID","providerID","super","_defineProperty","this","gestationWeeks","expectedFundalHeightForGestationWeeks","getEquivalentFundalHeight","res","getJson","programID","dateofLmp","p","AncCurrentPregnancyService","parseInt","calculateWeekOfFirstVisit","getEquivalentFundalWeeks","fundalHeight","cm","weeks","defineComponent","components","IonPage","mixins","EncounterMixinVue","data","service","watch","ready","loadPregnancyStatus","getFields","immediate","methods","computedData","createEncounter","saveObservationList","resolveObs","nextTask","diagnosisOptions","onMap","ConceptService","getConceptsByCategory","name","map","c","toOption","isChecked","id","helpText","type","FieldType","TT_SELECT","validation","v","Validation","required","computedValue","buildValueCoded","value","options","yesNoOptions","buildValueText","condition","f","ultrasound","label","mapStrToOptions","TT_GROUP_SELECTOR","validateSeries","_v$other","_v$other2","_v$other3","other","subGroupOptions","isEmpty","subGroupOptionValue","subgroupTitle","_v$other4","_v$other5","_v$other5$subGroupOpt","_v$other5$subGroupOpt2","_v$other6","_v$other6$subGroupOpt","_v$other7","_v$other7$subGroupOpt","_v$other8","_v$other8$subGroupOpt","obs","_v$other9","_v$other9$subGroupOpt","push","concept","presentation","TT_NUMBER","dynamicHelpText","title","beforeNext","async","match","includes","alertConfirmation","expectedFundalHeight","val","rangeOf","buildValueNumber","buildObs","config","keypad","NUMBERS_WITH_UNKNOWN","min","max","ok","fetal_heart_beat","fetal_movement_felt","yesNoUnknownOptions","TT_MULTIPLE_SELECT","d","onValueUpdate","listData","l","o","footerBtns","slot","onClickComponentEvents","refreshOptions","onClick","__exports__","DEFAULT_KEYPAD","PRESCRIPTION_KEYPAD","FLOAT_KEYPAD","VITALS_KEYPAD","DRUG_DISPENSER_KEYPAD","CD4_COUNT_PAD_LO","SYMBOLS","NUMBER_PAD_LO","NUMBER_ARROW_PAD_LO","MONTHLY_DAYS_LO","ALPHABETICAL_LO","QWERTY_LO","CHARACTERS_AND_NUMBERS_LO","NOTE_PAD_KEYBOARD","LOGIN_KEYBOARD","SYMBOLS_CONFIG","NUMBERS_ONLY","NUMBERS_WITH_ESTIMATE","NUMBERS_WITHOUT_NA_UNKNOWN","NUMBERS","MONTHLY_DAYS","A_TO_Z","QWERTY","KEY_BTN_NAV","btn","keyboard","FlowState","dformat","HisDate","toStandardHisDisplayFormat","ENCOUNTER_GUIDELINES","priority","actions","alert","outcomeStartDate","action","infoActionSheet","color","GO_TO_PATIENT_DASHBOARD","CHANGE_PATIENT_OUTCOME","CONTINUE","conditions","outcome","startDate","sessionDate","birthDate","CHANGE_SESSION_DATE","selection","providers","encounterName","apiDate","modal","optionsActionSheet","role","flowState","SET_PROVIDER","isBdeMode","isBDE","HisStandardForm","patient","facts","handler","route","params","patient_id","Store","get","then","patientData","setEncounterFacts","checkEncounterGuidelines","deep","computed","patientDashboardUrl","runflowState","state","states","username","split","provider","find","person_id","$router","EXIT","gotoPatientDashboard","findings","matchToGuidelines","index","_finding$actions","_finding$actions3","finding","_finding$actions2","status","_finding$actions4","program","e","console","error","toastDanger","ProgramService","getSessionDate","getCachedApiDate","getBirthdate","$route","toString","toUpperCase","sort","a","b","usernameA","usernameB","_p$person","person","names","_p$person2","latestName","given_name","family_name","items","i","path","toYesNoOption","values","mapOptions","option","tag","Object","filter","reduce","accum","cur","Array","isArray","concat","Promise","all","inArray","arr","expression","length","_resolveDynamicComponent","formType","activeField","onOnFinish","onOnIndex","onIndex","TouchScreenForm","emits","props","Function","Boolean","String","formData","$emit","isCondition","ignored","undefined","prop","every","sortByPriority","sortByWeight","weight","guidelines","target","targetEvent","sortBy","matches","guidelineIndex","targetValidations","some","description","text","info","COMPONENT_REFS","TT_LINKAGE_CODE","TT_MULTI_SELECT_GRID","TT_AGE_INPUT","TT_BARCODE","TT_NOTE","TT_CARD_SELECTOR","TT_TEXT","TT_MONTHLY_DAYS","TT_ART_REGIMEN_SELECTION","TT_NEXT_VISIT_INTERVAL_SELECTION","TT_TABLE_VIEWER","TT_DOSAGE_INPUT","TT_YES_NO","TT_MULTIPLE_YES_NO","TT_WEIGHT_CHART","TT_VITALS_ENTRY","TT_APPOINTMENTS_ENTRY","TT_COMPLAINTS_PICKER","TT_CLINIC_HOLIDAY_PICKER","TT_SUMMARY","TT_ART_STAGING_SUMMARY","TT_ADHERENCE_INPUT","TT_LAB_ORDERS","TT_PERSON_RESULT_VIEW","TT_PROGRAM_SELECTION","TT_DATE_PICKER","TT_RELATION_SELECTION","TT_FILING_NUMBER_VIEW","TT_PERSON_MATCH_VIEW","TT_FULL_DATE","TT_BATCH_ENTRY","TT_BATCH_VERIFICATION","TT_BATCH_MOVEMENT","TT_IP_ADDRESS","TT_TEXT_BANNER","TT_DISPENSATION_INPUT","TT_DATA_TABLE","TT_ANC_PREGNANCY_INPUT_CONFIG","TT_ANC_PREGNANCY_DETAILS_INPUT","TT_ANC_LMP_DATE_INPUT","TT_DRUG_TRANSFER_IN","TT_GRID_SELECTOR","TT_ANC_DRUGSET_INPUT","TT_RADIOLOGY_PICKER","TT_PRESCRIPTION_INPUT","TT_INFINITE_SCROLL_MULTIPLE_SELECT","TT_DRUG_DISPENSER","webpackAsyncContext","req","__webpack_require__","resolve","Error","code","ids","slice","keys","module","exports","PatientProgramService","enrollProgram","setStateDate","date","setStateId","updateState","lnmpDate","theDate","Date","setDate","getDate","today","s","Math","floor","calculateGestationDateFromPeriod","period","dayjs","subtract","endOf","format","estimateDelieveryDate","setMonth","getMonth","month","AppendleadingZero","day","getFullYear"],"mappings":"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0B,CACzB,OACA,iBACA,iBACA,sBAED,6BAA8B,CAC7B,OACA,iBACA,iBACA,sBAED,wBAAyB,CACxB,OACA,sBAED,+BAAgC,CAC/B,OACA,iBACA,sBAED,4BAA6B,CAC5B,OACA,sBAED,qBAAsB,CACrB,OACA,sBAED,qBAAsB,CACrB,OACA,sBAED,sBAAuB,CACtB,OACA,iBACA,sBAED,uBAAwB,CACvB,OACA,iBACA,sBAED,wBAAyB,CACxB,OACA,sBAED,yBAA0B,CACzB,OACA,sBAED,qBAAsB,CACrB,OACA,sBAED,wCAAyC,CACxC,OACA,sBAED,qBAAsB,CACrB,OACA,sBAED,uBAAwB,CACvB,OACA,sBAED,2BAA4B,CAC3B,OACA,sBAED,0BAA2B,CAC1B,OACA,iBACA,sBAED,6BAA8B,CAC7B,OACA,sBAED,gBAAiB,CAChB,OACA,sBAED,uBAAwB,CACvB,OACA,sBAED,6BAA8B,CAC7B,OACA,iBACA,sBAED,2BAA4B,CAC3B,OACA,iBACA,sBAED,kBAAmB,CAClB,OACA,sBAED,mBAAoB,CACnB,OACA,sBAED,uBAAwB,CACvB,OACA,sBAED,sBAAuB,CACtB,OACA,sBAED,qBAAsB,CACrB,OACA,sBAED,uBAAwB,CACvB,OACA,sBAED,uBAAwB,CACvB,OACA,sBAED,yBAA0B,CACzB,OACA,sBAED,yBAA0B,CACzB,OACA,sBAED,wBAAyB,CACxB,OACA,sBAED,yBAA0B,CACzB,OACA,sBAED,yBAA0B,CACzB,OACA,sBAED,2BAA4B,CAC3B,OACA,sBAED,oBAAqB,CACpB,OACA,sBAED,oBAAqB,CACpB,OACA,uBAGF,SAASiT,EAAoBC,GAC5B,IAAIC,EAAoBtO,EAAE7E,EAAKkT,GAC9B,OAAOxF,QAAQ0F,UAAU7J,MAAK,WAC7B,IAAI4B,EAAI,IAAIkI,MAAM,uBAAyBH,EAAM,KAEjD,MADA/H,EAAEmI,KAAO,mBACHnI,KAIR,IAAIoI,EAAMvT,EAAIkT,GAAM9S,EAAKmT,EAAI,GAC7B,OAAO7F,QAAQC,IAAI4F,EAAIC,MAAM,GAAGxT,IAAImT,EAAoBhI,IAAI5B,MAAK,WAChE,OAAO4J,EAAoB/S,MAG7B6S,EAAoBQ,KAAO,WAC1B,OAAOvG,OAAOuG,KAAKzT,IAEpBiT,EAAoB7S,GAAK,OACzBsT,EAAOC,QAAUV,G,kCC3PjB,+FAKM,MAAO/U,UAAmCf,OAC5CC,YAAYC,EAAmBC,GAC3BC,MAAMF,EAAW,GAAIC,GAGzB,sBACI,MAAM4N,EAAU,IAAI0I,OAAsBnW,KAAKJ,iBAIzC6N,EAAQ2I,gBACd3I,EAAQ4I,aAAarW,KAAKsW,MAC1B7I,EAAQ8I,WAAW,WACb9I,EAAQ+I,cAGlB7V,0BAA0B8V,GACtB,MAAMC,EAAe,IAAIC,KAAKF,GAC9BC,EAAQE,QAAQF,EAAQG,UAAY,GACpC,MAAMC,EAAa,IAAIH,KAAK3W,KAAK6W,WAC3BE,EAAID,EAAQJ,EAClB,OAAOxF,OAAO8F,KAAKC,MAAMF,EAAI,SAGjCG,iCAAiCC,GAC7B,OAAOC,IAAMpX,KAAKsW,MAAMe,SAASF,EAAQ,UAAUG,MAAM,SAASC,OAAO,cAG7EC,sBAAsBf,GAClB,MAAMC,EAAe,IAAIC,KAAKF,GAC9BC,EAAQE,QAAQF,EAAQG,UAAY,GACpCH,EAAQe,SAASf,EAAQgB,WAAa,GACtC,MAAMC,EAAQC,eAAkBlB,EAAQgB,WAAW,GAC7CG,EAAMD,eAAkBlB,EAAQG,WACtC,MAAO,GAAGH,EAAQoB,iBAAiBH,KAASE","file":"js/chunk-7471d23c.37ca7e2d.js","sourcesContent":["import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_his_standard_form = _resolveComponent(\"his-standard-form\")!\n  const _component_ion_page = _resolveComponent(\"ion-page\")!\n\n  return (_openBlock(), _createBlock(_component_ion_page, null, {\n    default: _withCtx(() => [\n      _createVNode(_component_his_standard_form, {\n        fields: _ctx.fields,\n        skipSummary: true,\n        onFinishAction: _ctx.onFinish,\n        cancelDestinationPath: _ctx.cancelDestination\n      }, null, 8, [\"fields\", \"onFinishAction\", \"cancelDestinationPath\"])\n    ]),\n    _: 1\n  }))\n}","import { AppEncounterService } from \"@/services/app_encounter_service\";\nimport { AncCurrentPregnancyService } from \"@/apps/ANC/Services/anc_current_pregnancy\";\n\nexport const FUNDAL_CM_TO_WEEKS: Record<string, number> = {\n  '12' : 13,\n  '13' : 14,\n  '14' : 16,\n  '15' : 17,\n  '16' : 18,\n  '17' : 19,\n  '18' : 20,\n  '19' : 21,\n  '20' : 22,\n  '21' : 24,\n  '22' : 25,\n  '23' : 25, // Not in the actual CM to Weeks chart reference documentation in clinics..\n  '24' : 27,\n  '25' : 28,\n  '26' : 29,\n  '27' : 30,\n  '28' : 32,\n  '29' : 33,\n  '30' : 34,\n  '31' : 35,\n  '32' : 36,\n  '33' : 37,\n  '34' : 38,\n  '35' : 39,\n  '36' : 40,\n  '37' : 42\n}\n\nexport class AncExaminationService extends AppEncounterService {\n  gestationWeeks: number;\n  constructor(patientID: number, providerID: number){\n    super(patientID, 98, providerID)\n    this.gestationWeeks = 0\n  }\n\n  expectedFundalHeightForGestationWeeks() {\n    return this.getEquivalentFundalHeight(this.gestationWeeks)\n  }\n\n  async loadPregnancyStatus() {\n    const res = await AppEncounterService.getJson(`programs/${this.programID}/patients/${this.patientID}`)\n    if (res) {\n      const dateofLmp = res['date_of_lnmp']\n      if (dateofLmp) {\n        const p = new AncCurrentPregnancyService(this.patientID, this.providerID)\n        this.gestationWeeks = parseInt(p.calculateWeekOfFirstVisit(res['date_of_lnmp']))\n      }\n    }\n  }\n\n  getEquivalentFundalWeeks(fundalHeight: number): number {\n    if (fundalHeight < 12) {\n      return FUNDAL_CM_TO_WEEKS['12']\n    }\n    if (fundalHeight > 37) {\n      return FUNDAL_CM_TO_WEEKS['37']\n    }\n    return FUNDAL_CM_TO_WEEKS[fundalHeight]\n  }\n\n  getEquivalentFundalHeight(gestationWeeks: number) {\n    for (const cm in FUNDAL_CM_TO_WEEKS) {\n      const weeks = FUNDAL_CM_TO_WEEKS[cm]\n      if (gestationWeeks <= weeks) { \n        return parseInt(cm)\n      }\n    }\n    return gestationWeeks > 42 ? 37 : gestationWeeks < 13 ? 12 : 0\n  }\n}\n","\nimport EncounterMixinVue from '@/views/EncounterMixin.vue'\nimport { FieldType } from \"@/components/Forms/BaseFormElements\"\nimport { defineComponent } from 'vue'\nimport { AncExaminationService } from \"@/apps/ANC/Services/anc_examination_service\"\nimport { Field, Option } from '@/components/Forms/FieldInterface'\nimport Validation from \"@/components/Forms/validations/StandardValidations\"\nimport { IonPage } from \"@ionic/vue\"\nimport { ConceptService } from '@/services/concept_service'\nimport { isEmpty } from 'lodash'\nimport { alertConfirmation } from '@/utils/Alerts'\nimport { NUMBERS_WITH_UNKNOWN } from \"@/components/Keyboard/HisKbConfigurations\"\n\nexport default defineComponent({\n  components: { IonPage },\n  mixins: [EncounterMixinVue],\n  data: () => ({\n    service: {} as any\n  }),\n  watch: {\n    ready: {\n      async handler(ready: boolean) {\n        if (ready) {\n            this.service = new AncExaminationService(this.patientID, this.providerID)\n            await this.service.loadPregnancyStatus()\n            this.fields = this.getFields() as Field[]\n        } \n      },\n      immediate: true\n    }\n  },\n  methods: {\n    async onFinish(_: any, computedData: any) {\n      await this.service.createEncounter()\n      await this.service.saveObservationList((await this.resolveObs(computedData)))\n      this.nextTask()\n    },\n    diagnosisOptions(onMap: (item: Option) => Option) {\n        return [...ConceptService.getConceptsByCategory('anc_diagnosis'),{ name: 'None'}]\n            .map((c: any) => (onMap({\n                ...this.toOption(c.name), isChecked: false \n            })))\n    },\n    getFields() {\n      return [\n        {\n          id: 'ultrasound',\n          helpText: 'Ultrasound scan results available',\n          type: FieldType.TT_SELECT,\n          validation: (v: Option) => Validation.required(v),\n          computedValue: (v: Option) => this.service.buildValueCoded(\n            'Ultrasound', v.value\n          ),\n          options: () => this.yesNoOptions()\n        },\n        {\n            id: 'multiple_gestation',\n            helpText: 'Number of fetuses',\n            type: FieldType.TT_SELECT,\n            validation: (v: Option) => Validation.required(v),\n            computedValue: (v: Option) => this.service.buildValueText(\n                'Multiple gestation', v.value),\n            condition: (f: any) => f.ultrasound.value === 'Yes',\n            options: () => [\n                { label: 'One', value: 1 },\n                { label: 'Two', value: 2 },\n                { label: 'Three', value: 3 },\n                { label: 'Four', value: 4 },\n                { label: 'Unknown', value: 'Unknown' }\n            ]\n        },\n        {\n            id: 'liquor',\n            helpText: 'Liquor',\n            type: FieldType.TT_SELECT,\n            validation: (v: Option) => Validation.required(v),\n            computedValue: (v: Option) => this.service.buildValueText(\n                'LIQUOR', v.value),\n            condition: (f: any) => f.ultrasound.value === 'Yes',\n            options: () => this.mapStrToOptions([\n                'Adequate',\n                'Not adequate',\n                'Unknown'\n            ])\n        },\n        {\n            id: 'lie',\n            helpText: 'Lie',\n            type: FieldType.TT_SELECT,\n            validation: (v: Option) => Validation.required(v),\n            computedValue: (v: Option) => this.service.buildValueText(\n                'Lie', v.value),\n            condition: (f: any) => f.ultrasound.value === 'Yes',\n            options: () => this.mapStrToOptions([\n                'Longitudinal',\n                'Transverse',\n                'Unknown'\n            ])\n        },\n        {\n            id: 'fetal_heart_movement_seen',\n            helpText: 'Fetal heart movement seen',\n            type: FieldType.TT_SELECT,\n            validation: (v: Option) => Validation.required(v),\n            computedValue: (v: Option) => this.service.buildValueCoded(\n                'Fetal heart movement seen', v.value),\n            condition: (f: any) => f.ultrasound.value === 'Yes',\n            options: () => this.yesNoOptions()\n        },\n        {\n            id: 'presentation',\n            helpText: 'Presentation',\n            type: FieldType.TT_GROUP_SELECTOR,\n            validation: (v: Option) => this.validateSeries([\n                () => Validation.required(v),\n                () => {\n                    /**\n                     * Validate if Presentation's value is selected\n                     */\n                    if (v && !v.value) {\n                        return [`Presentation cannot be Empty!`]\n                    } \n                    return null\n                },\n                () => {\n                    /**\n                     * Validate if option has subgroup options but value is not selected\n                     */\n                    if (v && v?.other?.subGroupOptions && isEmpty(v?.other?.subGroupOptionValue)) {\n                        return [`${v?.other?.subgroupTitle || 'Subgroup'} has no value selected`]\n                    }\n                    return null\n                },\n                () => {\n                    /**\n                     * Validate if the subgroup with Options has selected items\n                     */\n                    if (v && !isEmpty(v?.other?.subGroupOptionValue) \n                        && !isEmpty(v?.other?.subGroupOptionValue?.other?.options)\n                        && !v?.other?.subGroupOptionValue?.value) {\n                            return [`${v?.other?.subGroupOptionValue?.label}'s value isnt selected`]\n                        }\n                    return null\n                }\n            ]),\n            computedValue: (v: Option) => {\n                const obs = [this.service.buildValueText('Presentation', v.label)]\n                if (v?.other?.subGroupOptionValue?.value) {\n                    obs.push(this.service.buildValueText(\n                        'Position', v?.other?.subGroupOptionValue?.value\n                    ))\n                }\n                return obs\n            },\n            options: (f: any) => {\n                const toOption = (label: string, value='',other={}) => ({\n                    label, value, other\n                })\n                const subGroupOptions = [\n                    toOption('Vertex', '', {\n                        options: this.mapStrToOptions([\n                            'Left Occipito Anterior',\n                            'Left Occipito Transverse',\n                            'Left Occipito Posterior',\n                            'Right Occipito Anterior',\n                            'Right Occipito Transverse',\n                            'Right Occipito Posterior',\n                            'Unknown'\n                        ])\n                    }),\n                    this.toOption('Oblique'),\n                    this.toOption('Transverse'),\n                    this.toOption('Breech',{\n                        options: this.mapStrToOptions([\n                            'Left Sacro Anterior',\n                            'Left Sacro Transverse',\n                            'Left Sacro Posterior',\n                            'Right Sacro Anterior',\n                            'Right Sacro Transverse',\n                            'Right Sacro Posterior',\n                            'Unknown'\n                        ])\n                    }),\n                    toOption('Face', '', {\n                        concept: 'Position',\n                        options: this.mapStrToOptions([\n                            'Left Mento Anterior',\n                            'Left Mento Transverse',\n                            'Left Mento Posterior',\n                            'Right Mento Anterior',\n                            'Right Mento Transverse',\n                            'Right Mento Posterior',\n                            'Unknown'\n                        ])\n                    }),\n                    toOption('Shoulder', '', {\n                        options: this.mapStrToOptions([\n                            'Left Acromion Dorsal Anterior',\n                            'Left Acromion Dorsal Transverse',\n                            'Left Acromion Dorsal Posterior',\n                            'Right Acromion Dorsal Anterior',\n                            'Right Acromion Dorsal Transverse',\n                            'Right Acromion Dorsal Posterior',\n                            'Unknown'\n                        ])\n                    })\n                ]\n                return f.presentation  ? f.presentation : [\n                    toOption('Cephalic', '', {\n                        subGroupOptions,\n                        subgroupTitle: 'Cephalic Position',\n                        options: this.mapStrToOptions([\n                            'Right Occipito Anterior',\n                            'Left Occipito Anterior',\n                            'Unknown'\n                        ])\n                    }),\n                    toOption('Breech', '', {\n                        subGroupOptions,\n                        subgroupTitle: 'Breech Position',\n                        options: this.mapStrToOptions([\n                            'Right Sacro Anterior',\n                            'Left Sacro Anterior',\n                            'Unknown'\n                        ]),\n                    }),\n                    this.toOption('Ball'),\n                    this.toOption('Nil palpable')\n                ] as Option[]\n            }\n        },\n        {\n            id: 'enter_fundal_height',\n            helpText: 'Fundal height (cm)',\n            type: FieldType.TT_NUMBER,\n            dynamicHelpText: () => {\n                const title = 'Fundal height (cm)'\n                if (this.service.gestationWeeks) {\n                    return `${title} (${this.service.gestationWeeks}wks/${this.service.getEquivalentFundalHeight(this.service.gestationWeeks)} cm)`\n                }\n                return title\n            },\n            beforeNext: async (v: Option, f: any) => {\n                if (v && `${v.value}`.match(/unknown/i) && !['Nil palpable', 'Ball'].includes(f.presentation.value)) {\n                    return (await alertConfirmation(`Do you want to proceed with Unknown Fundal height?`)) ? true : false\n                }\n                const expectedFundalHeight = this.service.expectedFundalHeightForGestationWeeks()\n                const val: string | number = v ? parseInt(v.value as string) : -1\n                if (this.service.gestationWeeks && (v && typeof val === 'number') \n                    && (val < expectedFundalHeight || val > expectedFundalHeight)) {\n                    return (await alertConfirmation(`\n                        Fundal height is not equal to expected ${expectedFundalHeight} cm from gestation weeks of ${this.service.gestationWeeks} .\n                        Are you sure about this value?`\n                    )) ? true : false\n                }\n                return true\n            },\n            validation: (v: Option) => this.validateSeries([\n                () => Validation.required(v),\n                () => v && !`${v.value}`.match(/unknown/i) \n                    ? Validation.rangeOf(v, 10, 45) \n                    : null\n            ]),\n            computedValue: (v: Option) => {\n                return v.value != 'Unknown' \n                    ? this.service.buildValueNumber('Fundus', v.value as number)\n                    : this.service.buildObs('Fundus', {\n                        'value_coded': v.value,\n                        'value_numeric': 0\n                    })\n            },\n            config: {\n                keypad: NUMBERS_WITH_UNKNOWN\n            }\n        },\n        {\n            id: 'fetal_heart_beat',\n            helpText: 'Fetal heart beat',\n            type: FieldType.TT_SELECT,\n            validation: (v: Option) => Validation.required(v),\n            computedValue: (v: Option) => this.service.buildValueText(\n                'Fetal Heart Beat', v.value),\n            options: () => this.mapStrToOptions([\n                'Heard',\n                'Not heard'\n            ])\n        },\n        {\n            id: 'fetal_heart_rate',\n            helpText: 'Fetal heart rate',\n            type: FieldType.TT_NUMBER,\n            validation: (v: Option) => Validation.required(v),\n            beforeNext: async (v: Option) => {\n                const min = 120\n                const max = 140\n                const val: string | number = v ? parseInt(v.value as string) : -1\n                if (v && typeof val === 'number') {\n                    if (val < min || val > max) {\n                        const ok = await alertConfirmation(`\n                            The value is out of Range of ${min} - ${max}.\n                            Are you sure about this value?`\n                        )\n                        return ok ? true : false\n                    }\n                }\n                return true\n            },\n            condition: (f: any) => f.fetal_heart_beat.value === 'Heard',\n            computedValue: (v: Option) => {\n                return v.value != 'Unknown'\n                    ? this.service.buildValueNumber('Fetal heart movement seen', `${v.value}`)\n                    : this.service.buildObs('Fetal heart movement seen', {\n                        'value_numeric': 0, 'value_coded': v.value\n                    })\n            },\n            config: {\n                keypad: NUMBERS_WITH_UNKNOWN\n            }\n        },\n        {\n            id: 'enter_fetal_movement',\n            helpText: 'Fetal movement heard',\n            type: FieldType.TT_SELECT,\n            validation: (v: Option) => Validation.required(v),\n            computedValue: (v: Option) => this.service.buildValueCoded(\n                'Fetal movement heard', `${v.value}`),\n            options: () => this.yesNoOptions()\n        },\n        {\n            id: 'fetal_movement_felt',\n            helpText: 'Fetal movement felt',\n            type: FieldType.TT_SELECT,\n            validation: (v: Option) => Validation.required(v),\n            condition: (f: any) => !['Ball', 'Nil palpable'].includes(f.presentation.label),\n            computedValue: (v: Option) => this.service.buildValueCoded('Fetal movement felt', `${v.value}`),\n            options: () => this.yesNoOptions()\n        },\n        {\n            id: 'last_fmf',\n            helpText: 'Last fetal movement felt (in Weeks)',\n            type: FieldType.TT_NUMBER,\n            validation: (v: Option) => Validation.required(v),\n            condition: (f: any) => f.fetal_movement_felt.value != 'Unknown',\n            computedValue: (v: Option) => {\n                return v.value != 'Unknown'\n                    ? this.service.buildValueNumber('Last Fetal movement felt', v.value as number)\n                    : this.service.buildObs('Last Fetal movement felt', {\n                        'value_numeric': 0, 'value_coded': v.value\n                    })\n            },\n            options: () => this.yesNoUnknownOptions()\n        },\n        {\n            id: 'diagnosis',\n            helpText: 'Diagnosis',\n            type: FieldType.TT_MULTIPLE_SELECT,\n            validation: (v: Option) => Validation.required(v),\n            computedValue: (v: Option[]) => {\n                if (v && v.map(d => d.value).includes('None')) {\n                    return []\n                }\n                return v.map(d => this.service.buildValueCoded(d.label, 'Yes'))\n            },\n            onValueUpdate(listData: Option[], value: Option) {\n                return listData.map(l => {\n                    if (value.value === 'None' && l.value !='None') {\n                        l.isChecked = false\n                    }\n                    if (value.value != 'None' && value.isChecked && l.value === 'None') {\n                        l.isChecked = false\n                    }\n                    return l\n                })\n            },\n            options: () => this.diagnosisOptions(o => o),\n            config: {\n                footerBtns: [\n                    {\n                        name: \"None\",\n                        slot: \"end\",\n                        onClickComponentEvents: {\n                            refreshOptions: () => {\n                                return this.diagnosisOptions(o => {\n                                    o.isChecked = o.label === 'None'\n                                    return o\n                                })\n                            }\n                        },\n                        onClick: () => 'None'\n                    }\n                ]\n            }\n        }\n      ]\n    }\n  }\n})\n","import { render } from \"./Examination.vue?vue&type=template&id=64dbe1c6&ts=true\"\nimport script from \"./Examination.vue?vue&type=script&lang=ts\"\nexport * from \"./Examination.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/projects/malawi-emr/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","export const DEFAULT_KEYPAD = [\n    ['1', '2', '3'],\n    ['4', '5', '6'],\n    ['7', '8', '9'],\n    ['.', '0', 'Del'],\n    ['',  'Done', '']\n]\nexport const PRESCRIPTION_KEYPAD = [\n    ['1', '2', '3'],\n    ['4', '5', '6'],\n    ['7', '8', '9'],\n    ['Del', '0', '.'],\n    ['Unknown', '', ''],\n]\nexport const FLOAT_KEYPAD = [\n    ['1', '2', '3'],\n    ['4', '5', '6'],\n    ['7', '8', '9'],\n    ['.', '0', '']\n]\nexport const VITALS_KEYPAD = [\n    ['1', '2', '3'],\n    ['4', '5', '6'],\n    ['7', '8', '9'],\n    ['.', '0', 'Del'],\n    ['Clear',  '%', '/']\n]\nexport const DRUG_DISPENSER_KEYPAD = [\n    ['1', '2', '3'],\n    ['4', '5', '6'],\n    ['7', '8', '9'],\n    ['Del.', '0', 'Clear'],\n    // ['Reset',  'Close', 'Dispense']\n]\nexport const CD4_COUNT_PAD_LO = [\n    ['1', '2', '3', '<'],\n    ['4', '5', '6', '>'],\n    ['7', '8', '9', '='],\n    ['',  '0', '']\n]\n\nexport const SYMBOLS = [\n    ['1', '2', '3', '+', '-', '/', '*'],\n    ['4', '5', '6', '%', '=', '<', '>', 'Qwerty'],\n    ['7', '8', '9', '.', ','],\n    ['',  '0', '']\n]\n\nexport const NUMBER_PAD_LO = [\n    ['1', '2', '3'],\n    ['4', '5', '6'],\n    ['7', '8', '9'],\n    ['',  '0', '']\n]\n\nexport const NUMBER_ARROW_PAD_LO = [\n    ['1', '2', '3'],\n    ['4', '5', '6'],\n    ['7', '8', '9'],\n    ['←',  '0', '→']\n]\n\nexport const MONTHLY_DAYS_LO = [\n    ['1', '2', '3', '4', '5', '6', '7'],\n    ['8', '9', '10', '11', '12', '13', '14'],\n    ['15', '16', '17', '18', '19', '20', '21'],\n    ['22', '23', '24', '25', '26', '27', '28'],\n    ['29', '30', '31']\n]\n\nexport const ALPHABETICAL_LO = [\n    ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', '.'],\n    ['i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q'],\n    ['r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n]\n\nexport const QWERTY_LO = [\n    ['q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p'],\n    ['a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l', \"'\"],\n    ['z', 'x', 'c', 'v', 'b', 'n', 'm',',', '.', 'A-Z']\n]\n\nexport const CHARACTERS_AND_NUMBERS_LO = [\n    ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0'],\n    ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', '-', '.'],\n    ['i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q'],\n    ['r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n]\nexport const NOTE_PAD_KEYBOARD = [\n    ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0', 'Del'],\n    [\"q\", \"w\", \"e\", \"r\", \"t\", \"y\", \"u\", \"i\", \"o\", \"p\", 'Clear'],\n    [\"a\", \"s\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \".\", \"Caps\"],\n    [\"z\", \"x\", \"c\", \"v\", \"b\", \"n\", \"m\", \"<\", \">\", \"/\", \"Enter\"], \n]\n\nexport const LOGIN_KEYBOARD =  [\n    [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"0\"],\n    [\"q\", \"w\", \"e\", \"r\", \"t\", \"y\", \"u\", \"i\", \"o\", \"p\"],\n    [\"a\", \"s\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"Del.\"],\n    [\"z\", \"x\", \"c\", \"v\", \"b\", \"n\", \"m\", \"Caps\", \"Login\"],\n];\n","/**\n * Default keyboard configurations.\n * \n * Configuration consists of one or two keyboard layouts\n * to be displayed at once.\n */\n\nimport {\n    NUMBER_PAD_LO,\n    MONTHLY_DAYS_LO,\n    ALPHABETICAL_LO,\n    QWERTY_LO,\n    SYMBOLS,\n} from \"@/components/Keyboard/KbLayouts\";\n\nexport const SYMBOLS_CONFIG = [\n    SYMBOLS,\n    [\n        ['', 'Delete']\n    ]\n]\n\nexport const NUMBERS_ONLY = [\n    NUMBER_PAD_LO,\n    [\n        ['Delete']\n    ]\n]\n\nexport const NUMBERS_WITH_UNKNOWN = [\n    NUMBER_PAD_LO,\n    [\n        ['Delete', 'Unknown']\n    ]\n]\n\nexport const NUMBERS_WITH_ESTIMATE = [\n    NUMBER_PAD_LO,\n    [\n        ['N/A'],\n        ['Delete', 'Unknown']\n    ]\n]\n\nexport const NUMBERS_WITHOUT_NA_UNKNOWN = [\n    NUMBER_PAD_LO,\n    [\n        ['Delete']\n    ]\n]\n\nexport const NUMBERS = [\n    NUMBER_PAD_LO,\n    [\n        ['Unknown', 'Delete'],\n        ['Qwerty', 'A-Z'],\n    ]\n]\n\nexport const MONTHLY_DAYS = [\n    MONTHLY_DAYS_LO,\n    [\n        ['Unknown']\n    ]\n]\n\nexport const A_TO_Z = [\n    ALPHABETICAL_LO,\n    [\n        ['0-9', 'Delete'],\n        ['Qwerty', 'Unknown'],\n        ['', 'Space']\n    ]\n]\n\nexport const QWERTY = [\n    QWERTY_LO,\n    [\n        ['', 'Delete'],\n        ['?123', '0-9'],\n        ['Space', 'Unknown']\n    ]\n]\n\n/**\n * Navigation map for switching between different keyboard layouts\n */\nexport const KEY_BTN_NAV = [\n    {\n        btn: '0-9',\n        keyboard: NUMBERS\n    },\n    {\n        btn: '?123',\n        keyboard: SYMBOLS_CONFIG\n    },\n    {   \n        btn: 'A-Z',\n        keyboard: A_TO_Z \n    },\n    {\n        btn: 'Qwerty',\n        keyboard: QWERTY\n    }\n]\n","import { infoActionSheet, optionsActionSheet } from \"@/utils/ActionSheets\";\nimport { GuideLineInterface } from \"@/utils/GuidelineEngine\";\nimport HisDate from '@/utils/Date'\n\nexport enum FlowState {\n    SET_PROVIDER = 'SET_PROVIDER',\n    CHANGE_SESSION_DATE = 'change_session_date',\n    GO_TO_PATIENT_DASHBOARD = 'go_to_patient_dashboard',\n    CHANGE_PATIENT_OUTCOME = 'change_outcome',\n    CONTINUE = 'continue',\n    EXIT = 'exit'\n}\nconst dformat = (d: string) => HisDate.toStandardHisDisplayFormat(d)\n\nexport const ENCOUNTER_GUIDELINES: Record<string, GuideLineInterface> = {\n    \"Warn if attempting to create new encounters for a deceased patient\": {\n        priority: 1,\n        actions: {\n            alert: async ({ outcomeStartDate }: any) => {\n                const action = await infoActionSheet(\n                    'Data Integrity Issue Found',\n                    `Patient died on ${dformat(outcomeStartDate)}`,\n                    'Proceeding with this outcome might affect accuracy of some reports',\n                    [\n                        { name: 'Cancel', slot: 'end', color: 'primary'},\n                        { name: 'Change outcome', slot: 'end', color: 'primary'},\n                        { name: 'Continue Anyway', slot: 'end', color: 'danger'}\n                    ]\n                )\n                return action === 'Cancel'\n                    ? FlowState.GO_TO_PATIENT_DASHBOARD\n                    : action === 'Change outcome'\n                    ? FlowState.CHANGE_PATIENT_OUTCOME\n                    : FlowState.CONTINUE\n            }\n        },\n        conditions: {\n            outcome(outcome: string) {\n                return outcome === 'Patient died'\n            },\n            outcomeStartDate(startDate: string, { sessionDate }: any) {\n                return sessionDate >= startDate\n            }\n        }\n    },\n    \"A patient's date of birth must not be less than Session Date\": {\n        priority: 2,\n        actions: {\n            alert: async ({ birthDate, sessionDate}: any) => {\n                const action = await infoActionSheet(\n                    'Data integrity issue found', '',\n                    `Session date ${dformat(sessionDate)} is less than birth date of ${dformat(birthDate)}`,\n                    [\n                        { name: 'Cancel', slot: 'end', color: 'danger'},\n                        { name: 'Change session date', slot: 'end', color: 'success'}\n                    ]\n                )\n                return action === 'Change session date'\n                    ? FlowState.CHANGE_SESSION_DATE\n                    : FlowState.GO_TO_PATIENT_DASHBOARD\n            }\n        },\n        conditions: {\n            birthDate(birthDate: string, { sessionDate }: any) {\n                return sessionDate < birthDate\n            }\n        }\n    },\n    \"Select Encounter provider when in back data entry\": {\n        priority: 3,\n        actions: {\n            selection: async ({ providers, encounterName, sessionDate, apiDate }: any) => {\n                const modal = await optionsActionSheet(\n                    `Please select a provider for ${encounterName}`,\n                    `BDE: ${dformat(sessionDate)} | Current: ${dformat(apiDate)}`,\n                    providers,\n                    [\n                        { name: 'Cancel', color: 'danger', slot: 'start', role: 'default'},\n                        { name: 'Confirm', slot: 'end', role: 'action' }\n                    ]\n                )\n                return modal.action === 'Cancel' \n                    ? { value: -1, flowState: FlowState.GO_TO_PATIENT_DASHBOARD }\n                    : { value: modal.selection, flowState: FlowState.SET_PROVIDER }\n            }\n        },\n        conditions: {\n            isBdeMode(isBDE: boolean) {\n                return isBDE\n            }\n        }\n    }\n}","\nimport { defineComponent } from 'vue'\nimport { Field, Option } from '@/components/Forms/FieldInterface'\nimport { ProgramService } from \"@/services/program_service\"\nimport { find, isEmpty } from \"lodash\"\nimport { nextTask } from \"@/utils/WorkflowTaskHelper\"\nimport { ENCOUNTER_GUIDELINES, FlowState } from \"@/guidelines/encounter_guidelines\"\nimport { matchToGuidelines } from \"@/utils/GuidelineEngine\"\nimport HisStandardForm from \"@/components/Forms/HisStandardForm.vue\";\nimport { toastDanger } from '@/utils/Alerts'\nimport Store from \"@/composables/ApiStore\"\n\nexport default defineComponent({\n    components: { HisStandardForm },\n    data: () => ({\n        patient: {} as any,\n        fields: [] as Array<Field>,\n        patientID: '' as any,\n        providerID: -1 as number,\n        providers: [] as any,\n        facts: {\n            sessionDate: '' as string,\n            apiDate: '' as string,\n            encounterName: 'N/A' as string,\n            providers: [] as Array<any>,\n            isBdeMode: false as boolean,\n            birthDate: '' as string,\n            outcome: '' as string,\n            outcomeStartDate: '' as string\n        },\n        ready: false\n    }),\n    watch: {\n       '$route': {\n            handler(route: any) {\n                if(route.params.patient_id && this.patientID != route.params.patient_id) {\n                    this.patientID = parseInt(route.params.patient_id);\n                    Store.get('ACTIVE_PATIENT', { patientID: this.patientID})\n                        .then(patientData => {\n                            this.patient = patientData\n                            this.setEncounterFacts().then(() => {\n                                this.checkEncounterGuidelines().then(() => {\n                                    this.ready = true\n                                })\n                            })\n                        })\n                    }\n            },\n            immediate: true,\n            deep: true\n        }\n    },\n    computed: {\n        cancelDestination(): string {\n            return this.patientDashboardUrl()\n        }\n    },\n    methods: {\n        runflowState(state: FlowState, params=null) {\n            const states: any = {}\n            states[FlowState.SET_PROVIDER] = (selection: any) => {\n                const [ username ] = selection.split(' ')\n                const provider = find(this.providers, { username })\n                if (provider) this.providerID = provider.person_id\n                return FlowState.CONTINUE\n            }\n            states[FlowState.CHANGE_SESSION_DATE] = () => { \n                this.$router.push(`/session/date?patient_dashboard_redirection_id=${this.patientID}`)\n                return FlowState.EXIT\n            }\n            states[FlowState.CHANGE_PATIENT_OUTCOME] = () => {\n                this.$router.push(`/patient/programs/${this.patientID}`)\n                return FlowState.EXIT\n            }\n            states[FlowState.GO_TO_PATIENT_DASHBOARD] = () => {\n                this.gotoPatientDashboard()\n                return FlowState.EXIT\n            }\n            if (state in states) {\n                return states[state](params)\n            }\n        },\n        async checkEncounterGuidelines() {\n            const findings = matchToGuidelines(this.facts, ENCOUNTER_GUIDELINES)\n            for(const index in findings) {\n                const finding = findings[index]\n                if (finding?.actions?.alert) {\n                    const status = this.runflowState((await finding?.actions?.alert(this.facts)))\n                    if (status === FlowState.EXIT) return\n                }\n                if (finding?.actions?.selection) {\n                    const selection = await finding?.actions?.selection(this.facts)\n                    this.runflowState(selection.flowState, selection.value)\n                }\n            }\n        },\n        async setEncounterFacts() {\n            try {\n                const program = await Store.get('PATIENT_PROGRAM', { patientID: this.patientID })\n                this.facts.outcome = program.outcome\n                this.facts.outcomeStartDate = program.startDate\n            } catch (e) {\n                console.error(e)\n                toastDanger(`${e}`)\n            }\n            this.facts.sessionDate = ProgramService.getSessionDate()\n            this.facts.apiDate = ProgramService.getCachedApiDate() as string\n            this.facts.isBdeMode = ProgramService.isBDE() as boolean\n            this.facts.birthDate = this.patient.getBirthdate()\n            this.facts.encounterName = this.$route.name \n                ? this.$route.name.toString().toUpperCase()\n                : 'N/A'\n            if (ProgramService.isBDE()) {\n                this.providers = await Store.get('PROVIDERS')\n                this.facts.providers = this.providers\n                    .sort((a: any, b: any) => {\n                        const usernameA = a.username.toUpperCase()\n                        const usernameB = b.username.toUpperCase()\n                        return usernameA < usernameB ? -1 : usernameA > usernameB  ? 1 : 0\n                    })\n                    .map((p: any) => {\n                        let name = `${p.username}`\n                        if (!isEmpty(p?.person?.names)) {\n                            const [ latestName ] = p.person?.names || []\n                            name += ` (${latestName.given_name} ${latestName.family_name})`\n                        }\n                        return name\n                    })\n            }\n        },\n        toOption(label: string, other={}) {\n            return {\n                label,\n                value: label,\n                other\n            }\n        },\n        mapStrToOptions(items: string[]) {\n            return items.map(i => ({label: i, value: i}))\n        },\n        patientDashboardUrl(): string {\n            return `/patient/dashboard/${this.patientID}`\n        },\n        gotoPatientDashboard() {\n            return this.$router.push({path: this.patientDashboardUrl()})\n        },\n        nextTask() {\n            return nextTask(this.patientID, this.$router)\n        },\n        yesNoOptions(): Option[] {\n            return [\n                { label: \"Yes\", value: \"Yes\" },\n                { label: \"No\", value: \"No\" }\n            ]\n        },\n        toYesNoOption(label: string, other: any={}): Option {\n            return {\n                label,\n                value: '',\n                other: {\n                    ...other,\n                    values: this.yesNoOptions()\n                }\n            } \n        },\n        mapOptions(options: Array<string>) {\n            return options.map((option) => {\n                return { label: option, value: option }\n            });\n        },\n        yesNoUnknownOptions(): Option[] {\n            return [\n                { label: \"Yes\", value: \"Yes\" },\n                { label: \"No\", value: \"No\" },\n                { label: \"Unknown\", value: \"Unknown\" }\n            ]\n        },\n        resolveObs(obs: any, tag='') {\n            const values: any = Object.values(obs)\n                .filter((d: any) => d && (d.tag === tag || tag === ''))\n                .reduce((accum: any, cur: any) => { \n                    const data = cur.obs ? cur.obs : cur\n                    if (Array.isArray(data)) {\n                        accum = accum.concat(data)\n                    } else if (typeof data === 'function') {\n                        accum.push(data())\n                    } else {\n                        accum.push(data)\n                    }\n                    return accum\n                    }, [])\n            return Promise.all(values)\n        },\n        inArray(arr: Array<any>, expression: (i: any) => boolean): boolean {\n            try {\n                return arr.filter((i: any) => expression(i)).length > 0\n            } catch (e) {\n                return false\n            }\n        },\n        validateSeries(conditions: Array<any>){\n            try {\n                for(const i in conditions) {\n                    const condition = conditions[i]()\n\n                    if (condition) return condition\n                }\n            } catch (e) {\n                return [e]\n            }\n        }\n    }\n})\n","import script from \"./EncounterMixin.vue?vue&type=script&lang=ts\"\nexport * from \"./EncounterMixin.vue?vue&type=script&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { resolveDynamicComponent as _resolveDynamicComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createBlock(_resolveDynamicComponent(_ctx.formType), {\n    fields: _ctx.fields,\n    skipSummary: _ctx.skipSummary,\n    activeField: _ctx.activeField,\n    cancelDestinationPath: _ctx.cancelDestinationPath,\n    onOnFinish: _ctx.onFinish,\n    onFinish: _ctx.onFinishAction,\n    onOnIndex: _ctx.onIndex\n  }, null, 40, [\"fields\", \"skipSummary\", \"activeField\", \"cancelDestinationPath\", \"onOnFinish\", \"onFinish\", \"onOnIndex\"]))\n}","\nimport TouchScreenForm from \"@/components/Forms/TouchScreenForm.vue\";\nimport { defineComponent, PropType } from \"vue\";\nimport { Field } from \"./FieldInterface\";\n\nexport default defineComponent({\n    name: \"HisStandardForm\",\n    components: { TouchScreenForm },\n    emits: [\n        'onFinish',\n        'onIndex'\n    ],\n    data: () => ({\n        formType: 'touch-screen-form' as string\n    }),\n    props: {\n        onFinishAction: {\n            type: Function\n        },\n        skipSummary: {\n            type: Boolean,\n            default: false\n        },\n        activeField: {\n            type: String\n        },\n        fields: {\n            type: Object as PropType<Field[]>,\n            required: true\n        },\n        cancelDestinationPath: {\n            type: String,\n            required: false,\n        }\n    },\n    methods: {\n        onFinish(formData: any, computedData: any) {\n            this.$emit('onFinish', formData, computedData)\n        },\n        onIndex(i: number) {\n            this.$emit('onIndex', i)\n        }\n    }\n})\n","import { render } from \"./HisStandardForm.vue?vue&type=template&id=6daa0375&ts=true\"\nimport script from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\nexport * from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/projects/malawi-emr/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","/**\n * Compares patient facts against a predefined guideline Object.\n*/\nexport interface DescriptionInterface {\n    color?: 'primary' | 'secondary' | 'danger' | 'warning';\n    info: (facts: FactsInterface) => any;\n    text?: string;\n    show: 'onChecked' | 'always';\n}\n\nexport interface GuideLineInterface {\n    title?: string;\n    concept?: string;\n    weight?: number;\n    priority?: number;\n    conditions: ConditionsInteface;\n    actions?: Record<string, any>; //TODO: should <key, Function>\n    data?: Record<string, any>;\n    description?: DescriptionInterface;\n    target?: string;\n    targetEvent?: string;\n}\n\nexport type FactsInterface = Record<string, any>\nexport type ConditionResolver = (value: any, facts: FactsInterface) => boolean | RegExpMatchArray | null\nexport type ConditionsInteface = Record<string, ConditionResolver>\n\n/**\n * Match the facts with guidelines\n * @param facts \n * @param conditions \n * @returns \n */\nfunction isCondition(facts: FactsInterface, conditions: ConditionsInteface): boolean {\n    const state = [] \n    const ignored = [-1, '', null, undefined]\n\n    for(const prop in conditions) {\n        if (!(prop in facts)) \n            continue\n        \n        const value = facts[prop]\n        if (ignored.includes(value)) {\n            state.push(false)\n            continue\n        }\n\n        state.push(conditions[prop](value, facts))\n    }\n    return state.every(Boolean)\n}\n\n/**\n * Sort guidelines in the order of importance/relevance\n * @param findings \n * @returns \n */\nfunction sortByPriority(findings: GuideLineInterface[]) {\n    return findings.sort((a, b) => (a.priority && b.priority) && a.priority < b.priority ? -1 : 1)\n}\n\nfunction sortByWeight(findings: GuideLineInterface[]) {\n    return findings.sort((a, b) => (a.weight && b.weight) && a.weight > b.weight ? -1 : 1)\n}\n\nexport function logFindingsByWeight(guidelines: Record<string, GuideLineInterface>) {\n    const findings: any = Object.keys(guidelines).map(i => ({ name: i, weight: guidelines[i].weight}))\n    console.log(sortByWeight(findings).map((i: any) => `${i.weight} -> ${i.name}`))\n}\n\n/**\n * Check the guideline for matching facts and return matching object \n * @param facts: key value pair for used for searching in guidelines\n * @param guidelines: A dictionary containing fixed rules/validations that conforms to GuideLineInterface\n * @param target: Used for matching a target defined in a guidlines before executing conditions\n * @param targetEvent: used for matching a target event in a guideline before executing conditions\n * @returns\n */\nexport function matchToGuidelines(\n    facts: FactsInterface, \n    guidelines: Record<string, GuideLineInterface>,\n    target='', \n    targetEvent='',\n    sortBy='priority' as 'priority' | 'weight'): Array<GuideLineInterface> {\n    const matches = []\n    for(const guidelineIndex in guidelines) {\n        const data: GuideLineInterface = guidelines[guidelineIndex]\n        const targetValidations = [\n            (data.target && target && data.target != target),\n            (data.targetEvent && targetEvent \n                && data.targetEvent != targetEvent)\n        ]\n\n        if (targetValidations.some(Boolean)) {\n            continue\n        }\n\n        if (isCondition(facts, data.conditions)) {\n            data.title = guidelineIndex\n            if (data.description) {\n                data.description.text = data.description.info(facts)\n            }\n            matches.push(data)\n        }\n    }\n    return sortBy === 'priority' ? sortByPriority(matches) : sortByWeight(matches)\n}\n","/**\n * Map all formElements/components defined in \"@/components/FormElements\" \n * in the Enum below by their file name.\n * \n * Next step is to add FieldType entry in COMPONENT_REFS in the \n * Array below the FieldType Enum\n */\nexport enum FieldType {\n    TT_LINKAGE_CODE = 'LinkageCodeInput',\n    TT_MULTI_SELECT_GRID= 'HisMultiSelectGrid',\n    TT_AGE_INPUT='HisAgeInput',\n    TT_GROUP_SELECTOR = 'HisGroupSelector',\n    TT_DATA_TABLE = 'HisDataTable',\n    TT_GRID_SELECTOR = 'HisGridSelector',\n    TT_NOTE = 'HisNote',\n    TT_BARCODE = 'HisBarcodeInput',\n    TT_MONTHLY_DAYS=\"HisMonthlyDays\",\n    TT_TEXT=\"HisTextInput\",\n    TT_NUMBER = \"HisNumberInput\",\n    TT_DATETIME=\"datetime\",\n    TT_SELECT=\"HisSelect\",\n    TT_MULTIPLE_SELECT=\"HisMultipleSelect\",\n    TT_ART_REGIMEN_SELECTION=\"HisArtRegimenSelection\",\n    TT_NEXT_VISIT_INTERVAL_SELECTION=\"HisNextVisitInterval\",\n    TT_TABLE_VIEWER=\"HisTableViewer\",\n    TT_DOSAGE_INPUT=\"HisDosageInput\",\n    TT_YES_NO=\"YesNoSelect\",\n    TT_MULTIPLE_YES_NO=\"MultiYesNoSelect\",\n    TT_SUMMARY=\"HisSummary\",\n    TT_WEIGHT_CHART = \"HisWeightChart\",\n    TT_VITALS_ENTRY=\"HisVitalsEntry\",\n    TT_ADHERENCE_INPUT = \"HisAdherenceInput\",\n    TT_ART_STAGING_SUMMARY = \"ArtStagingSummary\",\n    TT_LAB_ORDERS = \"HisLabOrders\",\n    TT_APPOINTMENTS_ENTRY = \"HisAppointments\",\n    TT_DISPENSATION_INPUT = 'DrugDispensationSelection',\n    TT_PROGRAM_SELECTION = 'ProgramSelection',\n    TT_DATE_PICKER = 'HisDatePicker',\n    TT_PERSON_RESULT_VIEW = 'PersonSearchView',\n    TT_RELATION_SELECTION = 'RelationsSelection',\n    TT_FILING_NUMBER_VIEW = 'FilingNumberView',\n    TT_CARD_SELECTOR = 'HisCardSelector',\n    TT_PERSON_MATCH_VIEW = 'PersonMatchView',\n    TT_FULL_DATE = 'HisDateInput',\n    TT_BATCH_ENTRY = 'HisBatchEntry',\n    TT_BATCH_VERIFICATION = 'HisBatchVerification',\n    TT_BATCH_MOVEMENT = 'HisBatchMovement',\n    TT_COMPLAINTS_PICKER = 'HisComplaintsPicker',\n    TT_RADIOLOGY_PICKER = 'HisRadiologyPicker',\n    TT_IP_ADDRESS = 'HisIPAddress',\n    TT_TEXT_BANNER = 'HisTextBanner',\n    TT_DRUG_DISPENSER = 'GeneralDrugDispenser',\n    TT_CLINIC_HOLIDAY_PICKER = 'HisClinicHolidayPicker',\n    TT_ANC_PREGNANCY_INPUT_CONFIG = 'AncPregnancyInfoConfig',\n    TT_ANC_PREGNANCY_DETAILS_INPUT = 'AncPregnancyDetailsInput',\n    TT_ANC_LMP_DATE_INPUT = 'AncLmpDateInput',\n    TT_ANC_DRUGSET_INPUT = 'AncDrugSetInput',\n    TT_DRUG_TRANSFER_IN = 'DrugTransferInput',\n    TT_PRESCRIPTION_INPUT = 'HisPrescriptionInput',\n    TT_INFINITE_SCROLL_MULTIPLE_SELECT=\"HisInfiniteScrollMultipleSelect\"\n}\n\n// Register FieldTypes here that will be registered at runtime\nexport const COMPONENT_REFS: FieldType[] = [\n    FieldType.TT_LINKAGE_CODE,\n    FieldType.TT_MULTI_SELECT_GRID,\n    FieldType.TT_AGE_INPUT,\n    FieldType.TT_BARCODE,\n    FieldType.TT_NOTE,\n    FieldType.TT_SELECT,\n    FieldType.TT_CARD_SELECTOR,\n    FieldType.TT_MULTIPLE_SELECT,\n    FieldType.TT_TEXT,\n    FieldType.TT_NUMBER,\n    FieldType.TT_MONTHLY_DAYS,\n    FieldType.TT_ART_REGIMEN_SELECTION,\n    FieldType.TT_NEXT_VISIT_INTERVAL_SELECTION,\n    FieldType.TT_TABLE_VIEWER,\n    FieldType.TT_DOSAGE_INPUT,\n    FieldType.TT_YES_NO,\n    FieldType.TT_MULTIPLE_YES_NO,\n    FieldType.TT_WEIGHT_CHART,\n    FieldType.TT_VITALS_ENTRY,\n    FieldType.TT_APPOINTMENTS_ENTRY,\n    FieldType.TT_COMPLAINTS_PICKER,\n    FieldType.TT_CLINIC_HOLIDAY_PICKER,\n    FieldType.TT_SUMMARY,\n    FieldType.TT_ART_STAGING_SUMMARY,\n    FieldType.TT_ADHERENCE_INPUT,\n    FieldType.TT_LAB_ORDERS,\n    FieldType.TT_PERSON_RESULT_VIEW,\n    FieldType.TT_PROGRAM_SELECTION,\n    FieldType.TT_DATE_PICKER,\n    FieldType.TT_RELATION_SELECTION,\n    FieldType.TT_FILING_NUMBER_VIEW,\n    FieldType.TT_PERSON_MATCH_VIEW,\n    FieldType.TT_FULL_DATE,\n    FieldType.TT_BATCH_ENTRY,\n    FieldType.TT_BATCH_VERIFICATION,\n    FieldType.TT_BATCH_MOVEMENT,\n    FieldType.TT_IP_ADDRESS,\n    FieldType.TT_TEXT_BANNER,\n    FieldType.TT_DISPENSATION_INPUT,\n    FieldType.TT_DATA_TABLE,\n    FieldType.TT_GROUP_SELECTOR,\n    FieldType.TT_ANC_PREGNANCY_INPUT_CONFIG,\n    FieldType.TT_ANC_PREGNANCY_DETAILS_INPUT,\n    FieldType.TT_ANC_LMP_DATE_INPUT,\n    FieldType.TT_DRUG_TRANSFER_IN,\n    FieldType.TT_GRID_SELECTOR,\n    FieldType.TT_ANC_DRUGSET_INPUT,\n    FieldType.TT_RADIOLOGY_PICKER,\n    FieldType.TT_PRESCRIPTION_INPUT,\n    FieldType.TT_INFINITE_SCROLL_MULTIPLE_SELECT,\n    FieldType.TT_DRUG_DISPENSER\n]\n","var map = {\n\t\"./AncDrugSetInput.vue\": [\n\t\t\"c99f\",\n\t\t\"TouchFormElement0\"\n\t],\n\t\"./AncLmpDateInput.vue\": [\n\t\t\"101a\",\n\t\t\"TouchFormElement1\"\n\t],\n\t\"./AncPregnancyDetailsInput.vue\": [\n\t\t\"b043\",\n\t\t\"TouchFormElement2\"\n\t],\n\t\"./AncPregnancyInfoConfig.vue\": [\n\t\t\"262e\",\n\t\t\"TouchFormElement3\"\n\t],\n\t\"./ArtStagingSummary.vue\": [\n\t\t\"43db\",\n\t\t\"TouchFormElement4\"\n\t],\n\t\"./BaseTextInput.vue\": [\n\t\t\"36ad\",\n\t\t\"TouchFormElement5\"\n\t],\n\t\"./DrugDispensationSelection.vue\": [\n\t\t\"05d5\",\n\t\t\"TouchFormElement6\"\n\t],\n\t\"./DrugTransferInput.vue\": [\n\t\t\"de42\",\n\t\t\"chunk-337918c0\",\n\t\t\"TouchFormElement7\"\n\t],\n\t\"./FieldMixin.vue\": [\n\t\t\"51c8\",\n\t\t\"TouchFormElement8\"\n\t],\n\t\"./FilingNumberView.vue\": [\n\t\t\"c650\",\n\t\t\"TouchFormElement9\"\n\t],\n\t\"./GeneralDrugDispenser.vue\": [\n\t\t\"7737\",\n\t\t\"TouchFormElement10\"\n\t],\n\t\"./HisAdherenceInput.vue\": [\n\t\t\"f2c3\",\n\t\t\"chunk-337918c0\",\n\t\t\"TouchFormElement11\"\n\t],\n\t\"./HisAgeInput.vue\": [\n\t\t\"c05f\",\n\t\t\"TouchFormElement12\"\n\t],\n\t\"./HisAppointments.vue\": [\n\t\t\"b2eb\",\n\t\t\"chunk-366b6f0a\",\n\t\t\"TouchFormElement13\"\n\t],\n\t\"./HisArtRegimenSelection.vue\": [\n\t\t\"47b9\",\n\t\t\"TouchFormElement14\"\n\t],\n\t\"./HisBarcodeInput.vue\": [\n\t\t\"dd65\",\n\t\t\"TouchFormElement15\"\n\t],\n\t\"./HisBatchEntry.vue\": [\n\t\t\"f2ab\",\n\t\t\"chunk-182277b5\",\n\t\t\"chunk-337918c0\",\n\t\t\"TouchFormElement16\"\n\t],\n\t\"./HisBatchMovement.vue\": [\n\t\t\"5148\",\n\t\t\"chunk-182277b5\",\n\t\t\"chunk-337918c0\",\n\t\t\"TouchFormElement17\"\n\t],\n\t\"./HisBatchVerification.vue\": [\n\t\t\"7b0f\",\n\t\t\"chunk-182277b5\",\n\t\t\"chunk-337918c0\",\n\t\t\"TouchFormElement18\"\n\t],\n\t\"./HisCardSelector.vue\": [\n\t\t\"0734\",\n\t\t\"TouchFormElement19\"\n\t],\n\t\"./HisClinicHolidayPicker.vue\": [\n\t\t\"4030\",\n\t\t\"chunk-366b6f0a\",\n\t\t\"TouchFormElement20\"\n\t],\n\t\"./HisComplaintsPicker.vue\": [\n\t\t\"82d1\",\n\t\t\"TouchFormElement21\"\n\t],\n\t\"./HisDataTable.vue\": [\n\t\t\"a6ba\",\n\t\t\"TouchFormElement22\"\n\t],\n\t\"./HisDateInput.vue\": [\n\t\t\"374c\",\n\t\t\"TouchFormElement23\"\n\t],\n\t\"./HisDatePicker.vue\": [\n\t\t\"9b30\",\n\t\t\"chunk-366b6f0a\",\n\t\t\"TouchFormElement24\"\n\t],\n\t\"./HisDosageInput.vue\": [\n\t\t\"b34c\",\n\t\t\"chunk-337918c0\",\n\t\t\"TouchFormElement25\"\n\t],\n\t\"./HisGridSelector.vue\": [\n\t\t\"112a\",\n\t\t\"TouchFormElement26\"\n\t],\n\t\"./HisGroupSelector.vue\": [\n\t\t\"81cf\",\n\t\t\"TouchFormElement27\"\n\t],\n\t\"./HisIPAddress.vue\": [\n\t\t\"2a82\",\n\t\t\"TouchFormElement28\"\n\t],\n\t\"./HisInfiniteScrollMultipleSelect.vue\": [\n\t\t\"52a3\",\n\t\t\"TouchFormElement29\"\n\t],\n\t\"./HisLabOrders.vue\": [\n\t\t\"e614\",\n\t\t\"TouchFormElement30\"\n\t],\n\t\"./HisMonthlyDays.vue\": [\n\t\t\"69cf\",\n\t\t\"TouchFormElement31\"\n\t],\n\t\"./HisMultiSelectGrid.vue\": [\n\t\t\"0fa3\",\n\t\t\"TouchFormElement32\"\n\t],\n\t\"./HisMultipleSelect.vue\": [\n\t\t\"2fd5\",\n\t\t\"chunk-45847ec4\",\n\t\t\"TouchFormElement33\"\n\t],\n\t\"./HisNextVisitInterval.vue\": [\n\t\t\"3126\",\n\t\t\"TouchFormElement34\"\n\t],\n\t\"./HisNote.vue\": [\n\t\t\"c927\",\n\t\t\"TouchFormElement35\"\n\t],\n\t\"./HisNumberInput.vue\": [\n\t\t\"5e75\",\n\t\t\"TouchFormElement36\"\n\t],\n\t\"./HisPrescriptionInput.vue\": [\n\t\t\"87e5\",\n\t\t\"chunk-337918c0\",\n\t\t\"TouchFormElement37\"\n\t],\n\t\"./HisRadiologyPicker.vue\": [\n\t\t\"adc7\",\n\t\t\"chunk-bfc3872a\",\n\t\t\"TouchFormElement38\"\n\t],\n\t\"./HisSelect.vue\": [\n\t\t\"d11f\",\n\t\t\"TouchFormElement39\"\n\t],\n\t\"./HisSummary.vue\": [\n\t\t\"e0bd\",\n\t\t\"TouchFormElement40\"\n\t],\n\t\"./HisTableViewer.vue\": [\n\t\t\"8904\",\n\t\t\"TouchFormElement41\"\n\t],\n\t\"./HisTextBanner.vue\": [\n\t\t\"952c\",\n\t\t\"TouchFormElement42\"\n\t],\n\t\"./HisTextInput.vue\": [\n\t\t\"6ef9\",\n\t\t\"TouchFormElement43\"\n\t],\n\t\"./HisVitalsEntry.vue\": [\n\t\t\"e333\",\n\t\t\"TouchFormElement44\"\n\t],\n\t\"./HisWeightChart.vue\": [\n\t\t\"26a1\",\n\t\t\"TouchFormElement45\"\n\t],\n\t\"./LinkageCodeInput.vue\": [\n\t\t\"ac86\",\n\t\t\"TouchFormElement46\"\n\t],\n\t\"./MultiYesNoSelect.vue\": [\n\t\t\"5fd1\",\n\t\t\"TouchFormElement47\"\n\t],\n\t\"./PersonMatchView.vue\": [\n\t\t\"6591\",\n\t\t\"TouchFormElement48\"\n\t],\n\t\"./PersonSearchView.vue\": [\n\t\t\"28b2\",\n\t\t\"TouchFormElement49\"\n\t],\n\t\"./ProgramSelection.vue\": [\n\t\t\"e3b4\",\n\t\t\"TouchFormElement50\"\n\t],\n\t\"./RelationsSelection.vue\": [\n\t\t\"0e57\",\n\t\t\"TouchFormElement51\"\n\t],\n\t\"./SelectMixin.vue\": [\n\t\t\"82a9\",\n\t\t\"TouchFormElement52\"\n\t],\n\t\"./YesNoSelect.vue\": [\n\t\t\"71f2\",\n\t\t\"TouchFormElement53\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"f159\";\nmodule.exports = webpackAsyncContext;","import { AppEncounterService } from \"@/services/app_encounter_service\";\nimport { PatientProgramService } from \"@/services/patient_program_service\"\nimport dayjs from \"dayjs\";\nimport { AppendleadingZero } from \"@/utils/Strs\";\n\nexport class AncCurrentPregnancyService extends AppEncounterService {\n    constructor(patientID: number, providerID: number) {\n        super(patientID, 81, providerID)\n    }\n\n    async enrollPatient() {\n        const program = new PatientProgramService(this.patientID)\n        /**\n         * TODO: Check if patient is already enrolled first\n        */\n        await program.enrollProgram()\n        program.setStateDate(this.date)\n        program.setStateId(118) //Currently on treatment state... Please remove this ID hack if you can\n        await program.updateState()\n    }\n\n    calculateWeekOfFirstVisit(lnmpDate: string) {\n        const theDate: any = new Date(lnmpDate)\n        theDate.setDate(theDate.getDate() + 7);\n        const today: any = new Date(this.getDate());\n        const s = today - theDate;\n        return String(Math.floor(s / (24 * 60 * 60 * 7 * 1000)));\n    }\n\n    calculateGestationDateFromPeriod(period: number) {\n        return dayjs(this.date).subtract(period, 'months').endOf('month').format('YYYY-MM-DD')\n    }\n\n    estimateDelieveryDate(lnmpDate: string) {\n        const theDate: any = new Date(lnmpDate)\n        theDate.setDate(theDate.getDate() + 7);\n        theDate.setMonth(theDate.getMonth() + 9);\n        const month = AppendleadingZero(theDate.getMonth()+1)\n        const day = AppendleadingZero(theDate.getDate())\n        return `${theDate.getFullYear()}-${month}-${day}`\n    }\n}\n"],"sourceRoot":""}