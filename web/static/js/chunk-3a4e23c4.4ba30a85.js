(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-3a4e23c4"],{"26a2":function(t,e,r){"use strict";r.r(e);r("14d9");var a=r("7a23"),n=r("7920"),s=r("d95e"),i=r("b5e4"),o=r("ade3"),d=r("cc6f"),u=r("71c3");class c extends d["a"]{constructor(t,e){super(t,54,e),Object(o["a"])(this,"drugHistory",void 0),Object(o["a"])(this,"currentDrugOrder",void 0),this.drugHistory=[],this.currentDrugOrder=[]}getDrugHistory(){return this.drugHistory}getCurrentOrder(){return this.currentDrugOrder}buildDispensations(t,e){return[{drug_order_id:t,date:this.date,quantity:e}]}saveDispensations(t){return d["a"].postJson("/dispensations",{dispensations:t,program_id:d["a"].getProgramID()})}async voidOrder(t){return d["a"].void("/dispensations/"+t,{})}async loadDrugHistory(){const t=await u["a"].getDrugOrderHistory(this.patientID);t&&(this.drugHistory=t)}async loadCurrentDrugOrder(){const t=await u["a"].getDrugOrders(this.patientID);t&&(this.currentDrugOrder=await Promise.all(t))}calcCompletePack(t,e){const r=t.barcodes.sort((function(t,e){return t.tabs-e.tabs}));if(0==r.length||0==e)return e;for(let s=0;s<=r.length-1;s++)if(parseInt(r[s].tabs)>=e)return r[s].tabs;const a=parseInt(r[0].tabs);let n=parseInt(r[r.length-1].tabs);while(n<e)n+=a;return n}}var g=r("9283"),l=r("d867"),p=r("93c7"),h=Object(a["defineComponent"])({__name:"Dispensing",setup(t){let e;const r=Object(a["ref"])([]),{goToPatientDashboard:o,patientDashboardUrl:d}=Object(p["a"])(async(t,a,n)=>{e=new c(a,t),await e.loadCurrentDrugOrder(),await e.loadDrugHistory(),r.value.push(O(n))});function u(t){return t.map(t=>0!=t.value).every(Boolean)}function h(t){const r=parseFloat(t.amount_needed)-(t.quantity||0),a=e.calcCompletePack(t,r);return a<0?0:a}function D(){return e.getCurrentOrder().map(t=>({label:t.drug.name,value:t.quantity||0,other:{drug_id:t.drug.drug_id,order_id:t.order.order_id,amount_needed:h(t)}}))}function _(){return e.getDrugHistory().sort((t,e)=>{const r=new Date(t.order.start_date),a=new Date(e.order.start_date);return a-r}).map(t=>({medication:t.drug.name,date:g["c"].toStandardHisDisplayFormat(t.order.start_date),amount:t.quantity}))}async function m(t){let e=!0;const r=parseInt(t.value.toString()),a=t.other["amount_needed"],n=r/a*100;return n>110&&(e=await Object(i["a"])("Are you sure you want to dispense over 110% of the prescribed pill count?")),n<100&&(e=await Object(i["a"])("Are you sure you want to dispense less than 100% of the prescribe amount?")),e}async function b(t,r){return-1!=t.value&&u(r)?o():(t.other["amount_needed"]=0,await e.loadCurrentDrugOrder(),D())}async function y(t,r){if(-1===t.value){const r=await e.voidOrder(t.other.order_id);return!!r}if(!r&&!await m(t))return!1;const a=e.buildDispensations(t.other.order_id,t.value),n=await e.saveDispensations(a);return!!n||(Object(i["e"])("Unable to save dispensation"),!1)}function O(t){return{id:"dispenses",helpText:"Dispensation",type:s["b"].TT_DRUG_DISPENSER,onValueUpdate:b,onValue:y,config:{medicationHistory:_(),toolbarInfo:[{label:"Name",value:null===t||void 0===t?void 0:t.getFullName()},{label:"Gender",value:null===t||void 0===t?void 0:t.getGender()},{label:"Date Of Birth",value:g["c"].toStandardHisDisplayFormat(null===t||void 0===t?void 0:t.getBirthdate())}],hiddenFooterBtns:["Clear","Finish"]},options:()=>D()}}return(t,e)=>(Object(a["openBlock"])(),Object(a["createBlock"])(Object(a["unref"])(l["IonPage"]),null,{default:Object(a["withCtx"])(()=>[Object(a["createVNode"])(n["a"],{skipSummary:!0,cancelDestinationPath:Object(a["unref"])(d),fields:r.value},null,8,["cancelDestinationPath","fields"])]),_:1}))}});const D=h;e["default"]=D},"71c3":function(t,e,r){"use strict";r.d(e,"a",(function(){return n}));var a=r("1c74");class n extends a["e"]{constructor(){super()}static create(t){return this.postJson("drug_orders",t)}static updateDispensationOrders(t){return this.postJson("dispensations",{program_id:this.getProgramID(),dispensations:t.map(t=>({date:this.getSessionDate(),drug_order_id:t["order_id"],quantity:t["quantity"]}))})}static getDrugOrderHistory(t){return this.getJson("drug_orders",{patient_id:t})}static getDrugOrders(t){return this.getJson("drug_orders",{patient_id:t,date:this.getSessionDate(),program_id:this.getProgramID()})}static getAllDrugOrders(t,e=1e3){return this.getJson("drug_orders",{patient_id:t,program_id:a["e"].getProgramID(),page_size:e})}static getLastDrugsReceived(t){return this.getJson(`patients/${t}/last_drugs_received`,{date:this.getSessionDate(),program_id:this.getProgramID()})}static getDrugDosages(t,e,r=this.getSessionDate()){const a={drug_id:e,date:r};return this.getJson(`programs/${this.getProgramID()}/patients/${t}/drug_doses`,a)}static getOrderByPatient(t,e){return this.getJson("/drug_orders",{patient_id:t,program_id:this.getProgramID(),...e})}}}}]);
//# sourceMappingURL=chunk-3a4e23c4.4ba30a85.js.map