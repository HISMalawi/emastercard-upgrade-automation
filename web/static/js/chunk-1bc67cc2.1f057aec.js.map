{"version":3,"sources":["webpack:///./src/apps/CxCa/views/reports/pepfar/CCTypeOfTreatment.vue?8199","webpack:///./src/apps/CxCa/views/reports/pepfar/CCTypeOfTreatment.vue","webpack:///./src/apps/CxCa/views/reports/pepfar/CCTypeOfTreatment.vue?7bd2","webpack:///./src/apps/ART/views/reports/ReportMixin.vue","webpack:///./src/apps/ART/views/reports/ReportMixin.vue?42ba","webpack:///./src/views/reports/BaseTableReport.vue?6469","webpack:///./src/views/reports/BaseTableReport.vue","webpack:///./src/views/reports/BaseTableReport.vue?8f7c","webpack:///./src/components/Forms/HisStandardForm.vue?f008","webpack:///./src/components/Forms/HisStandardForm.vue","webpack:///./src/components/Forms/HisStandardForm.vue?6820","webpack:///./src/views/reports/BaseTableReport.vue?cc04","webpack:///./src/apps/CxCa/services/reports/cxca_report_service.ts"],"names":["render","_ctx","_cache","$props","$setup","$data","$options","_component_report_template","_resolveComponent","_component_ion_page","_openBlock","_createBlock","default","_withCtx","_createVNode","title","rows","fields","columns","period","onReportConfiguration","init","_","defineComponent","components","ReportTemplate","IonPage","mixins","ReportMixin","data","reportService","table","thTxt","created","this","getDateDurationFields","methods","config","CxCaReportService","setStartDate","start_date","setEndDate","end_date","getPepfarReport","buildRows","map","d","td","age_group","length","__exports__","report","reportReady","startDate","endDate","customFileName","drillDownCache","formatGender","gender","upCaseGender","toUpperCase","test","toDate","date","HisDate","toStandardHisDisplayFormat","sortByArvNumber","attr","sort","a","b","getArvInt","e","console","error","arv","prfx","art","arvNumStr","split","arvNumInt","parseInt","tdARV","params","sortValue","confirmPatient","patient","$router","push","asyncRows","canExport","modal","modalController","create","component","DrilldownTable","cssClass","componentProps","showFilters","rowsPerPage","paginated","showReportStamp","footerColor","onFinish","dismiss","present","rowParser","getDefaultDrillDownTable","async","ARV_NUM_INDEX","t","tableRows","id","index","isArray","defaultRow","num","key","oldIndex","rest","Patientservice","findByID","row","getArvNumber","getGender","tdDate","getBirthdate","toString","tdBtn","path","Promise","all","runTableDrill","drilldownData","drill","values","tdLink","getQuaterOptions","quarters","ArtReportService","getReportQuarters","q","label","name","value","start","other","useQuarter","setCustomQuarterPeriod","maxQuarter","maxDate","Service","getSessionDate","minDate","helpText","type","FieldType","TT_SELECT","condition","validation","val","Validation","required","options","items","generateDateFields","f","quarter","estimation","allowUnknown","computeValue","unload","s","c","_hoisted_1","class","_hoisted_2","_hoisted_3","_component_his_standard_form","_component_ion_img","_component_ion_thumbnail","_component_ion_label","_component_report_filter","_component_ion_toolbar","_component_ion_header","_component_report_table","_component_ion_content","_component_pagination","_component_ion_chip","_component_ion_footer","_component_his_footer","_createElementBlock","_Fragment","_withDirectives","onOnFinish","skipSummary","_vShow","showForm","_createCommentVNode","slot","src","logo","_createElementVNode","_createTextVNode","_toDisplayString","customInfo","showPerPageFilter","disableSearchFilter","isTableLoading","disablePerPageFilter","totalRowCount","customFilter","onOnItemsPerPage","i","itemsPerPage","onOnItemsVLtype","itemsVLtype","onOnSearchFilter","searchFilter","tableCssTheme","newPage","currentPage","onOnIsLoading","l","onOnTableRows","r","onOnPagination","p","totalPages","onOnActiveColumns","activeColumns","onOnActiveRows","activeRows","perPage","maxVisibleButtons","onOnChangePage","color","coreVersion","apiVersion","btns","HisStandardForm","IonHeader","ReportTable","HisFooter","IonContent","IonToolbar","Pagination","ReportFilter","IonFooter","IonChip","IonLabel","props","String","Function","encryptPDF","Boolean","Object","Array","customBtns","canExportPDf","canExportCsv","showVLFilter","Number","formData","computeFormData","isLoadingData","getApiVersion","getCoreVersion","siteUUID","getSiteUUID","getFileName","getLocationName","pdfEncryptionData","password","getUserName","encryption","userPassword","ownerPassword","userPermissions","computedData","presentLoading","loadingController","toastDanger","loading","message","backdropDismiss","size","visible","onClick","toExportableFormat","toCsv","mode","option","infoActionSheet","toTablePDF","reloadReport","_resolveDynamicComponent","formType","activeField","cancelDestinationPath","onFinishAction","onOnIndex","onIndex","TouchScreenForm","emits","$emit","constructor","super","programID","getProgramID","reportName","getReport","getClinicReport","getMohReport","getDateIntervalPeriod","getReportPeriod","url","getJson","buildRequest","payload","minDuration","year","getCurrentYear","end"],"mappings":"yIAEM,SAAUA,EAAOC,EAAUC,EAAYC,EAAYC,EAAYC,EAAWC,GAC9E,MAAMC,EAA6BC,8BAAkB,mBAC/CC,EAAsBD,8BAAkB,YAE9C,OAAQE,yBAAcC,yBAAaF,EAAqB,KAAM,CAC5DG,QAASC,qBAAS,IAAM,CACtBC,yBAAaP,EAA4B,CACvCQ,MAAOd,EAAKc,MACZC,KAAMf,EAAKe,KACXC,OAAQhB,EAAKgB,OACbC,QAASjB,EAAKiB,QACdC,OAAQlB,EAAKkB,OACbC,sBAAuBnB,EAAKoB,MAC3B,KAAM,EAAG,CAAC,QAAS,OAAQ,SAAU,UAAW,SAAU,4BAE/DC,EAAG,I,gECTQC,+BAAgB,CAE7BC,WAAY,CAAEC,sBAAgBC,sBAC9BC,OAAQ,CAACC,QACTC,KAAM,KAAM,CACVd,MAAO,uBACPC,KAAM,GACNc,cAAe,GACfZ,QAAS,CACP,CACEa,OAAMC,MAAM,YACZD,OAAMC,MAAM,uBACZD,OAAMC,MAAM,6BACZD,OAAMC,MAAM,oBAIlBC,UACEC,KAAKjB,OAASiB,KAAKC,yBAErBC,QAAS,CACP,WAAWd,EAAQe,GACjBH,KAAKJ,cAAgB,IAAIQ,OACzBJ,KAAKJ,cAAcS,aAAaF,EAAOG,YACvCN,KAAKJ,cAAcW,WAAWJ,EAAOK,UACrC,MAAMb,QAAaK,KAAKJ,cAAca,gBAAgB,wBACtDT,KAAKlB,KAAOkB,KAAKU,UAAUf,IAG7Be,UAAUf,GACR,OAAOA,EAAKgB,IAAKC,GAAY,CAC3Bf,OAAMgB,GAAGD,EAAEE,WACXjB,OAAMgB,GAAGD,EAAE,eAAeG,QAC1BlB,OAAMgB,GAAGD,EAAE,qBAAqBG,QAChClB,OAAMgB,GAAGD,EAAE,QAAQG,c,qBCrC3B,MAAMC,EAA2B,IAAgB,EAAQ,CAAC,CAAC,SAASlD,KAErD,gB,kMCUAuB,+BAAgB,CAC3BM,KAAM,KAAM,CACRZ,OAAQ,GACRkC,OAAQ,GACRC,aAAa,EACbjC,OAAQ,GACRkC,UAAW,GACXC,QAAS,GACTC,eAAgB,GAChBC,eAAgB,KAEpBpB,QAAS,CACLqB,aAAaC,GACT,MAAMC,GAAe,GAAGD,GAASE,cACjC,MAAqB,MAAjBD,GAAyC,SAAjBA,EACjB,OAEU,MAAjBA,GAAyC,WAAjBA,EACjB,SAEP,cAAcE,KAAKH,GACZC,EAEJD,GAEXI,OAAOC,GACH,OAAOC,OAAQC,2BAA2BF,IAE9CG,gBAAgBrC,EAAkBsC,EAAK,cACnC,IACI,OAAOtC,EAAKuC,KAAK,CAACC,EAAQC,IAAWpC,KAAKqC,UAAUF,EAAEF,IAASjC,KAAKqC,UAAUD,EAAEH,IAAS,GAAK,GAChG,MAAMK,GAEJ,OADAC,QAAQC,MAAMF,GACP3C,IAGf0C,UAAUI,GACN,GAAmB,kBAARA,EAAkB,CACzB,MAAOC,EAAMC,EAAKC,GAAaH,EAAII,MAAM,KACnCC,EAAYC,SAASH,GAC3B,MAA4B,kBAAdE,EAAyBA,EAAY,EAEvD,OAAO,GAEXE,MAAMP,EAAaQ,EAAO,IACtB,OAAOpD,OAAMgB,GAAG4B,EAAK,CAAES,UAAWlD,KAAKqC,UAAUI,MAASQ,KAE9DE,eAAeC,GACX,OAAOpD,KAAKqD,QAAQC,KAAK,+BAA+BF,IAE5D,yBAAyBvE,EAAeG,EAAqBuE,EAAqBC,GAAU,GACxF,MAAMC,QAAcC,qBAAgBC,OAAO,CACvCC,UAAWC,OACXC,SAAU,cACVC,eAAgB,CACZlF,QACAG,UACAuE,YACAC,YACAQ,aAAa,EACbC,YAAa,GACbC,WAAW,EACXC,iBAAiB,EACjBC,YAAa,QACbC,SAAU,IAAMX,qBAAgBY,aAGxCb,EAAMc,WAEV,oBAAoB1F,EAAeG,EAAqBF,EAAkB0F,GACtE,MAAMf,QAAcC,qBAAgBC,OAAO,CACvCC,UAAWC,OACXC,SAAU,cACVC,eAAgB,CACZlF,QACAG,UACAF,OACA0F,YACAP,YAAa,GACbD,aAAa,EACbE,WAAW,EACXC,iBAAiB,EACjBC,YAAa,QACbC,SAAU,IAAMX,qBAAgBY,aAGxCb,EAAMc,WAEVE,2BACI,MAAMzF,EAAU,CACZ,CACIa,OAAMC,MAAM,cACZD,OAAMC,MAAM,UACZD,OAAMC,MAAM,cACZD,OAAMC,MAAM,aAGd0E,EAAYE,UACd,IAAIC,EAAgB,EACpB,MAAMC,EAAIC,EAAUlE,IAAI+D,UACpB,IAAII,EAAU,KACVC,EAAuB,KAC3B,GAAIC,qBAAQC,GAAa,CACrB,MAAOC,EAAKC,GAAQF,EAEpB,GADAF,EAAQG,EACJC,KAAOnF,KAAKsB,eAAgB,CAC5B,MAAO8D,KAAaC,GAAQrF,KAAKsB,eAAe6D,GAChD,MAAO,CAACJ,KAAUM,SAItB,GADAP,EAAKG,EACDH,KAAM9E,KAAKsB,eACX,OAAOtB,KAAKsB,eAAewD,GAInC,MAAMnF,QAAa2F,OAAeC,SAAST,GACrC1B,EAAU,IAAIkC,OAAe3F,GAC7B6F,EAAM,GAaZ,OAZIT,IACAJ,EAAgB,EAChBa,EAAIlC,KAAKyB,IAEbS,EAAIlC,KAAKtD,KAAKgD,MAAMI,EAAQqC,iBAC5BD,EAAIlC,KAAKzD,OAAMgB,GAAGb,KAAKuB,aAAa6B,EAAQsC,eAC5CF,EAAIlC,KAAKzD,OAAM8F,OAAOvC,EAAQwC,eAAeC,aAC7CL,EAAIlC,KAAKzD,OAAMiG,MAAM,OAAQpB,gBACnBhB,qBAAgBY,QAAQ,IAC9BtE,KAAKqD,QAAQC,KAAK,CAAEyC,KAAM,sBAAsBjB,OAEpD9E,KAAKsB,eAAewD,GAAMU,EACnBA,IAEL1G,QAAakH,QAAQC,IAAIrB,GAC/B,OAAO9F,EAAKoD,KAAK,CAACC,EAAQC,IAClBD,EAAEwC,GAAezB,UAAYd,EAAEuC,GAAezB,UAC5C,GAAK,IAEnB,MAAO,CAAEsB,YAAWxF,YAExBkH,cAAcvG,EAAWd,EAAM,sBAC3B,MAAM,QAAEG,EAAO,UAAEwF,GAAcxE,KAAKyE,2BACpCzE,KAAKmG,cAActH,EAAOG,EAASW,EAAM6E,IAE7C4B,MAAMC,EAAuBxH,EAAM,eAC/B,OAAIwH,GAAUA,EAAOtF,OAAS,EACnBlB,OAAMyG,OACTD,EAAOtF,OACP,IAAMf,KAAKkG,cAAcG,EAAQxH,IAGlCgB,OAAMgB,GAAG,IAEpB0F,mBACI,MAAMC,EAAWC,OAAiBC,oBAClC,OAAOF,EAAS7F,IAAKgG,IAAM,CACvBC,MAAOD,EAAEE,KAAMC,MAAOH,EAAEI,MAAOC,MAAOL,MAG9C1G,sBACIgH,GAAW,EACXC,GAAuB,EACvBC,EAAW,EACXC,EAAQC,OAAQC,kBAEhB,MAAMC,EAAU,aAChB,MAAO,CACH,CACIzC,GAAI,UACJ0C,SAAU,iBACVC,KAAMC,OAAUC,UAChBC,UAAW,IAAMX,EACjBY,WAAaC,GAAgBC,OAAWC,SAASF,GACjDG,QAAS,KACL,MAAMzB,EAAWC,OAAiBC,kBAAkBS,GACpD,IAAIe,EAAuB1B,EAAS7F,IAAKgG,IAAM,CAC3CC,MAAOD,EAAEE,KACTC,MAAOH,EAAEI,MACTC,MAAOL,KAYX,OAVIO,IACAgB,EAAQ,CACJ,CACItB,MAAO,oBACPE,MAAO,gBACPE,MAAO,OAERkB,IAGJA,OAGZC,eAAmB,CAClBrD,GAAI,aACJ0C,SAAU,QACVQ,UAAU,EACVJ,UAAYQ,GAAWA,EAAEC,SAA+B,kBAApBD,EAAEC,QAAQvB,QAA8BG,EAC5EM,QAAS,IAAMA,EACfH,QAAS,IAAMA,EACfkB,WAAY,CACRC,cAAc,GAElBC,aAAe3G,GAAiBA,OAEjCsG,eAAmB,CAClBrD,GAAI,WACJ0C,SAAU,MACVQ,UAAU,EACVJ,UAAYQ,GAAWA,EAAEC,SAA+B,kBAApBD,EAAEC,QAAQvB,QAA8BG,EAC5EwB,OAAQ,CAAC7H,EAAQ8H,EAAQN,EAAQO,KACnB,SAAND,IACA1I,KAAKoB,QAAUuH,EAAEnI,WAGzB+G,QAAS,CAACnI,EAAQuJ,IAAWA,EAAErI,WAC/B8G,QAAS,IAAMA,EACfkB,WAAY,CACRC,cAAc,GAElBC,aAAe3G,GAAiBA,SC1OpD,MAAMb,EAAc,EAEL,U,oDCHf,MACM4H,EAAa,CAAEC,MAAO,oBACtBC,EAAa,CAAE3D,IAAK,GACpB4D,EAAa,CAAEF,MAAO,kBAEtB,SAAU/K,EAAOC,EAAUC,EAAYC,EAAYC,EAAYC,EAAWC,GAC9E,MAAM4K,EAA+B1K,8BAAkB,qBACjD2K,EAAqB3K,8BAAkB,WACvC4K,EAA2B5K,8BAAkB,iBAC7C6K,EAAuB7K,8BAAkB,aACzC8K,EAA2B9K,8BAAkB,iBAC7C+K,EAAyB/K,8BAAkB,eAC3CgL,EAAwBhL,8BAAkB,cAC1CiL,EAA0BjL,8BAAkB,gBAC5CkL,EAAyBlL,8BAAkB,eAC3CmL,EAAwBnL,8BAAkB,cAC1CoL,EAAsBpL,8BAAkB,YACxCqL,EAAwBrL,8BAAkB,cAC1CsL,EAAwBtL,8BAAkB,cAC1CC,EAAsBD,8BAAkB,YAE9C,OAAQE,yBAAcqL,gCAAoBC,cAAW,KAAM,CACzDC,4BAAgBnL,yBAAaoK,EAA8B,CACzDgB,WAAYjM,EAAKsG,SACjB4F,aAAa,EACblL,OAAQhB,EAAKgB,QACZ,KAAM,EAAG,CAAC,aAAc,WAAY,CACrC,CAACmL,WAAQnM,EAAKoM,YAEdpM,EAAKoM,SAgIHC,gCAAoB,IAAI,IA/HvB5L,yBAAcC,yBAAaF,EAAqB,CAAE4G,IAAK,GAAK,CAC3DzG,QAASC,qBAAS,IAAM,CACtBC,yBAAa0K,EAAuB,KAAM,CACxC5K,QAASC,qBAAS,IAAM,CACtBC,yBAAayK,EAAwB,KAAM,CACzC3K,QAASC,qBAAS,IAAM,CACtBC,yBAAasK,EAA0B,CAAEmB,KAAM,SAAW,CACxD3L,QAASC,qBAAS,IAAM,CACtBC,yBAAaqK,EAAoB,CAAEqB,IAAKvM,EAAKwM,MAAQ,KAAM,EAAG,CAAC,UAEjEnL,EAAG,IAELR,yBAAauK,EAAsB,KAAM,CACvCzK,QAASC,qBAAS,IAAM,CACtB6L,gCAAoB,KAAM5B,EAAY,CACpC4B,gCAAoB,KAAM,KAAM,CAC9BC,6BAAiB,UACjBD,gCAAoB,IAAK,KAAME,6BAAiB3M,EAAKc,OAAQ,KAE/D2L,gCAAoB,KAAM,KAAM,CAC9BC,6BAAiB,WACjBD,gCAAoB,IAAK,KAAME,6BAAiB3M,EAAKkB,QAAS,KAE/DlB,EAAK4M,YACDnM,yBAAcqL,gCAAoB,KAAMf,EAAY,CACnD2B,6BAAiBC,6BAAiB3M,EAAK4M,WAAW/D,OAAS,IAAK,GAChE4D,gCAAoB,IAAK,KAAME,6BAAiB3M,EAAK4M,WAAW7D,OAAQ,MAE1EsD,gCAAoB,IAAI,OAGhChL,EAAG,IAELR,yBAAawK,EAA0B,CACrCiB,KAAM,MACNO,kBAAmB7M,EAAKiG,aAAejG,EAAKmG,UAC5C2G,oBAAqB9M,EAAK+M,eAC1BC,qBAAsBhN,EAAK+M,eAC3BE,cAAejN,EAAK8G,UAAU9D,OAC9BkK,aAAclN,EAAKkN,aACnBC,iBAAkBlN,EAAO,KAAOA,EAAO,GAAMmN,GAAMpN,EAAKqN,aAAeD,GACvEE,gBAAiBrN,EAAO,KAAOA,EAAO,GAAMoK,GAAMrK,EAAKuN,YAAclD,GACrEmD,iBAAkBvN,EAAO,KAAOA,EAAO,GAAMoK,GAAMrK,EAAKyN,aAAepD,IACtE,KAAM,EAAG,CAAC,oBAAqB,sBAAuB,uBAAwB,gBAAiB,mBAEpGhJ,EAAG,MAGPA,EAAG,IAELR,yBAAa4K,EAAwB,KAAM,CACzC9K,QAASC,qBAAS,IAAM,CACtB6L,gCAAoB,MAAOzB,EAAY,CACrCnK,yBAAa2K,EAAyB,CACpCzK,KAAMf,EAAKe,KACXoF,UAAWnG,EAAKmG,UAChBX,UAAWxF,EAAKwF,UAChBiB,UAAWzG,EAAKyG,UAChBrE,OAAQ,IAAIpC,EAAKoC,OAAQsL,cAAe1N,EAAK0N,eAC7CzM,QAASjB,EAAKiB,QACdgF,YAAajG,EAAKiG,YAClB0H,QAAS3N,EAAK4N,YACdH,aAAczN,EAAKyN,aACnBvH,YAAalG,EAAKqN,aAClBQ,cAAe5N,EAAO,KAAOA,EAAO,GAAM6N,GAAM9N,EAAK+M,eAAiBe,GACtEC,cAAe9N,EAAO,KAAOA,EAAO,GAAM+N,GAAMhO,EAAK8G,UAAYkH,GACjEC,eAAgBhO,EAAO,KAAOA,EAAO,GAAMiO,GAAMlO,EAAKmO,WAAaD,EAAElL,QACrEoL,kBAAmBnO,EAAO,KAAOA,EAAO,GAAM2K,GAAM5K,EAAKqO,cAAgBzD,GACzE0D,eAAgBrO,EAAO,KAAOA,EAAO,GAAM+N,GAAMhO,EAAKuO,WAAaP,IAClE,KAAM,EAAG,CAAC,OAAQ,YAAa,YAAa,YAAa,SAAU,UAAW,cAAe,UAAW,eAAgB,oBAG/H3M,EAAG,IAELR,yBAAa+K,EAAuB,KAAM,CACxCjL,QAASC,qBAAS,IAAM,EACpBZ,EAAKyN,cAAgBzN,EAAKmG,YAAcnG,EAAKyN,cAAgBzN,EAAKmO,WAAa,GAAKnO,EAAKmG,WACtF1F,yBAAcC,yBAAa4K,EAAwB,CAAElE,IAAK,GAAK,CAC9DzG,QAASC,qBAAS,IAAM,CACtBC,yBAAa6K,EAAuB,CAClC8C,QAASxO,EAAKqN,aACdoB,kBAAmB,GACnBN,WAAYnO,EAAKmO,WACjBO,eAAgBzO,EAAO,KAAOA,EAAO,GAAMiO,GAAMlO,EAAK4N,YAAYM,IACjE,KAAM,EAAG,CAAC,UAAW,iBAE1B7M,EAAG,KAELgL,gCAAoB,IAAI,GAC3BrM,EAAKoG,iBACD3F,yBAAcC,yBAAa4K,EAAwB,CAAElE,IAAK,GAAK,CAC9DzG,QAASC,qBAAS,IAAM,CACtBC,yBAAa8K,EAAqB,CAAEgD,MAAO,WAAa,CACtDhO,QAASC,qBAAS,IAAM,CACtB8L,6BAAiB,kBACjBD,gCAAoB,IAAK,KAAME,6BAAiB3M,EAAK8D,MAAO,KAE9DzC,EAAG,IAELR,yBAAa8K,EAAqB,CAAEgD,MAAO,WAAa,CACtDhO,QAASC,qBAAS,IAAM,CACtB8L,6BAAiB,sBACjBD,gCAAoB,IAAK,KAAME,6BAAiB3M,EAAK4O,aAAc,KAErEvN,EAAG,IAELR,yBAAa8K,EAAqB,CAAEgD,MAAO,WAAa,CACtDhO,QAASC,qBAAS,IAAM,CACtB8L,6BAAiB,iBACjBD,gCAAoB,IAAK,KAAME,6BAAiB3M,EAAK6O,YAAa,KAEpExN,EAAG,MAGPA,EAAG,KAELgL,gCAAoB,IAAI,KAE9BhL,EAAG,IAELR,yBAAagL,EAAuB,CAClC8C,MAAO3O,EAAKqG,YACZyI,KAAM9O,EAAK8O,MACV,KAAM,EAAG,CAAC,QAAS,WAExBzN,EAAG,MAGR,I,8JCtIUC,+BAAgB,CAC7BC,WAAY,CACVwN,uBACAC,yBACAC,mBACAC,iBACAzN,qBACA0N,2BACAC,2BACAC,kBACAC,oBACAC,yBACAC,qBACAC,wBAEFC,MAAO,CACH5O,MAAO,CACP4I,KAAMiG,OACN1F,UAAU,GAEZiD,aAAc,CACZxD,KAAMkG,UAER1O,OAAQ,CACNwI,KAAMiG,OACNhP,QAAS,IAEXkP,WAAY,CACVnG,KAAMoG,QACNnP,SAAS,GAEXyB,OAAQ,CACNsH,KAAMqG,QAER/O,OAAQ,CACN0I,KAAMsG,MACNrP,QAAS,IAAM,IAEjBM,QAAS,CACPyI,KAAMsG,MACN/F,UAAU,GAEZlJ,KAAM,CACJ2I,KAAMsG,MACN/F,UAAU,GAEZ9D,UAAW,CACPuD,KAAMoG,QACNnP,SAAS,GAEbsP,WAAY,CACVvG,KAAMsG,MACNrP,QAAS,IAAM,IAEjBuP,aAAc,CACZxG,KAAMoG,QACNnP,SAAS,GAEXwP,aAAc,CACZzG,KAAMoG,QACNnP,SAAS,GAEXQ,sBAAuB,CACrBuI,KAAMkG,SACN3F,UAAU,GAEZxD,UAAW,CACTiD,KAAMkG,UAER3J,YAAa,CACXyD,KAAMoG,QACNnP,SAAS,GAEXyP,aAAc,CACZ1G,KAAMoG,QACNnP,SAAS,GAEXuF,YAAa,CACXwD,KAAM2G,QAER7K,UAAW,CACTkE,KAAMkG,UAERvJ,YAAa,CACXqD,KAAMiG,OACNhP,QAAS,QAEX2C,eAAgB,CACdoG,KAAMiG,OACNhP,QAAS,IAEX8E,UAAW,CACTiE,KAAMoG,QACNnP,SAAS,GAEXyF,gBAAiB,CACfsD,KAAMoG,QACNnP,SAAS,GAEXiM,WAAY,CACVlD,KAAMqG,SAGVnO,KAAM,KAAM,CACV0O,SAAU,GACVC,gBAAiB,GACjBzB,KAAM,GACN0B,eAAe,EACfpE,UAAU,EACVI,KAAM,6DACNO,gBAAgB,EAChBU,aAAc,GACdJ,aAAc,GACdE,YAAa,GACbK,YAAa,EACb9G,UAAW,GACXqH,WAAY,EACZE,cAAe,GACfE,WAAY,GACZzK,KAAMC,OAAQC,2BAA2BsF,OAAQC,kBACjDsF,WAAYvF,OAAQmH,gBACpB7B,YAAatF,OAAQoH,iBACrBC,SAAUrH,OAAQsH,cAClBlD,cAAe,qBAEjBvL,QAAS,CACP0O,cACE,MAAO,GAAGvH,OAAQwH,qBAAqB7O,KAAKnB,SAASmB,KAAKf,UAE5D6P,oBACE,MAAMC,EAAW1H,OAAQ2H,cACzB,MAAO,CACLC,WAAY,CACVC,aAAcH,EACdI,cAAeJ,EACfK,gBAAiB,CAAC,YAIxB,eAAef,EAAegB,GAC5BrP,KAAKqO,SAAWA,EAChBrO,KAAKsO,gBAAkBe,EACvBrP,KAAKmK,UAAW,QACVnK,KAAKsP,iBACX,IACKtP,KAAKd,6BAA6Bc,KAAKd,sBAAsBc,KAAKqO,SAAUrO,KAAKsO,iBACpFiB,uBAAkBjL,UACnB,MAAMhC,GACLC,QAAQC,MAAMF,GACdkN,eAAY,GAAGlN,GACfiN,uBAAkBjL,YAGtB,2BACQtE,KAAKqE,SAASrE,KAAKqO,SAAUrO,KAAKsO,kBAE1C,uBACE,MAAMmB,QAAgBF,uBACnB5L,OAAO,CACN+L,QAAS,iBACTC,iBAAiB,UAEfF,EAAQlL,YAGlBxE,UACEC,KAAKmK,WAAanK,KAAKjB,OAAOgC,OAC9Bf,KAAK6M,KAAO7M,KAAKgO,WACjBhO,KAAK6M,KAAKvJ,KACR,CACEuD,KAAM,MACN+I,KAAM,QACNvF,KAAM,QACNqC,MAAO,UACPmD,QAAS7P,KAAKkO,aACd4B,QAASpL,UACP,MAAM,QAAC1F,EAAO,KAAEF,GAAQiR,eAAmB/P,KAAKhB,QAASgB,KAAKlB,MAC9DkR,eAAMhR,EAAS,IACVF,EACH,CAAC,iBAAiBkB,KAAK6B,MACvB,CAAC,WAAW7B,KAAKf,QACjB,CAAC,qBAAqBe,KAAK2M,aAC3B,CAAC,gBAAgB3M,KAAK4M,YACtB,CAAC,cAAc5M,KAAK0O,WACnB1O,KAAK4O,iBAGZ,CACE/H,KAAM,MACN+I,KAAM,QACNvF,KAAM,QACNqC,MAAO,UACPmD,QAAS7P,KAAKiO,aACd6B,QAASpL,UACP,IAAIuL,EAA4C,UAChD,GAAIjQ,KAAK4N,WAAY,CACnB,MAAMsC,QAAeC,eACnB,mBACA,sEACA,4DACA,CACE,CACEtJ,KAAM,aACNwD,KAAM,QACNqC,MAAO,WAET,CACE7F,KAAM,cACNwD,KAAM,QACNqC,MAAO,YAGX,oBAEFuD,EAAkB,eAAXC,EAA0B,UAAY,wBAE/C,MAAM,QAAClR,EAAO,KAAEF,GAAQiR,eAAmB/P,KAAKoM,cAAepM,KAAKsM,WAAY2D,GAChFG,eACEpR,EACAF,EACAkB,KAAK4O,eACL,EACA5O,KAAK4N,YAAqB,yBAAPqC,EAAiCjQ,KAAK8O,oBAAsB,MAIrF,CACEjI,KAAM,OACN+I,KAAM,QACNvF,KAAM,MACNqC,MAAO,UACPmD,SAAS,EACTC,QAAS,IAAM9P,KAAKmK,UAAW,GAEjC,CACEtD,KAAM,UACN+I,KAAM,QACNvF,KAAM,MACNqC,MAAO,UACPmD,SAAS,EACTC,QAAS,IAAM9P,KAAKqQ,gBAEtB,CACExJ,KAAM,SACN+I,KAAM,QACNvF,KAAM,MACNqC,MAAO,UACPmD,SAAS,EACTC,QAAS,IAAM9P,KAAKqD,QAAQC,KAAK,CAAEyC,KAAK,W,iCC3QhD,MAAM/E,EAA2B,IAAgB,EAAQ,CAAC,CAAC,SAASlD,GAAQ,CAAC,YAAY,qBAE1E,U,2ECPT,SAAUA,EAAOC,EAAUC,EAAYC,EAAYC,EAAYC,EAAWC,GAC9E,OAAQI,yBAAcC,yBAAa6R,qCAAyBvS,EAAKwS,UAAW,CAC1ExR,OAAQhB,EAAKgB,OACbkL,YAAalM,EAAKkM,YAClBuG,YAAazS,EAAKyS,YAClBC,sBAAuB1S,EAAK0S,sBAC5BzG,WAAYjM,EAAKsG,SACjBA,SAAUtG,EAAK2S,eACfC,UAAW5S,EAAK6S,SACf,KAAM,GAAI,CAAC,SAAU,cAAe,cAAe,wBAAyB,aAAc,WAAY,c,gBCN5FvR,+BAAgB,CAC3BwH,KAAM,kBACNvH,WAAY,CAAEuR,wBACdC,MAAO,CACH,WACA,WAEJnR,KAAM,KAAM,CACR4Q,SAAU,sBAEd9C,MAAO,CACHiD,eAAgB,CACZjJ,KAAMkG,UAEV1D,YAAa,CACTxC,KAAMoG,QACNnP,SAAS,GAEb8R,YAAa,CACT/I,KAAMiG,QAEV3O,OAAQ,CACJ0I,KAAMqG,OACN9F,UAAU,GAEdyI,sBAAuB,CACnBhJ,KAAMiG,OACN1F,UAAU,IAGlB9H,QAAS,CACLmE,SAASgK,EAAegB,GACpBrP,KAAK+Q,MAAM,WAAY1C,EAAUgB,IAErCuB,QAAQzF,GACJnL,KAAK+Q,MAAM,UAAW5F,O,qBCnClC,MAAMnK,EAA2B,IAAgB,EAAQ,CAAC,CAAC,SAASlD,KAErD,U,oCCPf,W,wHCmBM,MAAOsC,UAA0BiH,OAKnC2J,cACIC,QAAO,yJACPjR,KAAKoB,QAAU,GACfpB,KAAKmB,UAAY,GACjBnB,KAAK6B,KAAOwF,OAAQC,iBACpBtH,KAAKkR,UAAY7J,OAAQ8J,eAG7B1Q,gBAAgB2Q,GACZ,OAAOpR,KAAKqR,UAAU,cAAe,CAAC,YAAeD,IAEzDE,gBAAgBF,GACZ,OAAOpR,KAAKqR,UAAU,oBAAqB,CAAC,YAAeD,IAE/DG,aAAaH,GACT,OAAOpR,KAAKqR,UAAU,oBAAqB,CAAC,YAAeD,IAG/DI,wBACI,MAAO,GAAG1P,OAAQC,2BAA2B/B,KAAKmB,gBAAgBW,OAAQC,2BAA2B/B,KAAKoB,WAG9Gf,aAAac,GACTnB,KAAKmB,UAAYA,EAGrBZ,WAAWa,GACPpB,KAAKoB,QAAUA,EAKnBqQ,kBACI,OAAOzR,KAAKmB,WAAanB,KAAKoB,QAC3B,GAAGU,OAAQC,2BAA2B/B,KAAKmB,gBAAgBW,OAAQC,2BAA2B/B,KAAKoB,WACnG,IAGPiQ,UAAUK,EAAazO,EAAO,IAC1B,OAAOoE,OAAQsK,QAAQD,EAAK1R,KAAK4R,aAAa3O,IAGlD2O,aAAazR,EAA8B,IACvC,MAAM0R,EAAe,CAAC,KAAQ7R,KAAK6B,KAAM,WAAc,IAKvD,OAJI7B,KAAKmB,WAAanB,KAAKoB,UACvByQ,EAAQ,cAAgB7R,KAAKmB,UAC7B0Q,EAAQ,YAAc7R,KAAKoB,SAExB,IAAKyQ,KAAY1R,GAG5B,yBAAyB2R,EAAa,GAClC,MAAMtL,EAAoC,GAC1C,IAAIuL,EAAOjQ,OAAQkQ,iBACnB,IAAI,IAAI7G,EAAE,EAAGA,EAAI2G,IAAe3G,EAC5B3E,EAASlD,KAAK,CAAEuD,KAAM,MAAMkL,EAAQhL,MAAUgL,EAAH,SAAiBE,IAAQF,EAAH,WACjEvL,EAASlD,KAAK,CAAEuD,KAAM,MAAMkL,EAAQhL,MAAUgL,EAAH,SAAiBE,IAAQF,EAAH,WACjEvL,EAASlD,KAAK,CAAEuD,KAAM,MAAMkL,EAAQhL,MAAUgL,EAAH,SAAiBE,IAAQF,EAAH,WACjEvL,EAASlD,KAAK,CAAEuD,KAAM,MAAMkL,EAAQhL,MAAUgL,EAAH,SAAiBE,IAAQF,EAAH,aAC/DA,EAEN,OAAOvL","file":"js/chunk-1bc67cc2.1f057aec.js","sourcesContent":["import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_report_template = _resolveComponent(\"report-template\")!\n  const _component_ion_page = _resolveComponent(\"ion-page\")!\n\n  return (_openBlock(), _createBlock(_component_ion_page, null, {\n    default: _withCtx(() => [\n      _createVNode(_component_report_template, {\n        title: _ctx.title,\n        rows: _ctx.rows,\n        fields: _ctx.fields,\n        columns: _ctx.columns,\n        period: _ctx.period,\n        onReportConfiguration: _ctx.init\n      }, null, 8, [\"title\", \"rows\", \"fields\", \"columns\", \"period\", \"onReportConfiguration\"])\n    ]),\n    _: 1\n  }))\n}","\nimport { defineComponent } from 'vue'\nimport ReportTemplate from \"@/views/reports/BaseTableReport.vue\"\nimport table, { ColumnInterface, RowInterface } from \"@/components/DataViews/tables/ReportDataTable\"\nimport ReportMixin from '@/apps/ART/views/reports/ReportMixin.vue'\nimport { border } from '@/apps/OPD/utils/table'\nimport { IonPage } from \"@ionic/vue\";\nimport { CxCaReportService } from '@/apps/CxCa/services/reports/cxca_report_service'\nexport default defineComponent({\n\n  components: { ReportTemplate, IonPage },\n  mixins: [ReportMixin],\n  data: () => ({\n    title: 'CC Type of Treatment',\n    rows: [] as RowInterface[], \n    reportService: {} as any,\n    columns: [\n      [\n        table.thTxt('Fine Age'),\n        table.thTxt('CXCA_TX_Cryotherapy'),\n        table.thTxt('CXCA_TX_Thermocoagulation'),\n        table.thTxt('CXCA_TX_LEEP'),\n      ]\n    ] as ColumnInterface[][],\n  }),\n  created(){\n    this.fields = this.getDateDurationFields()\n  },\n  methods: {\n    async init(_: any, config: any){\n      this.reportService = new CxCaReportService()\n      this.reportService.setStartDate(config.start_date)\n      this.reportService.setEndDate(config.end_date)\n      const data = await this.reportService.getPepfarReport('CC Type of Treatment');\n      this.rows = this.buildRows(data)\n      \n    },\n    buildRows(data: any): RowInterface[] {\n      return data.map((d: any) => ([\n        table.td(d.age_group),\n        table.td(d['cryotherapy'].length),\n        table.td(d['thermocoagulation'].length),\n        table.td(d['leep'].length), \n\n      ]))\n    },\n  },\n})\n","import { render } from \"./CCTypeOfTreatment.vue?vue&type=template&id=ad2f49a6&ts=true\"\nimport script from \"./CCTypeOfTreatment.vue?vue&type=script&lang=ts\"\nexport * from \"./CCTypeOfTreatment.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","\nimport { Service } from \"@/services/service\"\nimport { defineComponent } from 'vue'\nimport { Field } from '@/components/Forms/FieldInterface'\nimport { generateDateFields } from \"@/utils/HisFormHelpers/MultiFieldDateHelper\"\nimport { Patientservice } from \"@/services/patient_service\"\nimport HisDate from \"@/utils/Date\"\nimport { modalController } from \"@ionic/vue\";\nimport DrilldownTable from \"@/apps/ART/views/reports/BasicReportTemplate.vue\"\nimport { ArtReportService } from \"@/apps/ART/services/reports/art_report_service\"\nimport { FieldType } from \"@/components/Forms/BaseFormElements\"\nimport { Option } from '@/components/Forms/FieldInterface'\nimport Validation from \"@/components/Forms/validations/StandardValidations\"\nimport table from \"@/components/DataViews/tables/ReportDataTable\"\nimport { isArray } from \"lodash\"\nimport { toGenderString } from \"@/utils/Strs\"\n\nexport default defineComponent({\n    data: () => ({\n        fields: [] as Array<Field>,\n        report: {} as any,\n        reportReady: false as boolean,\n        period: '' as string,\n        startDate: '' as string,\n        endDate: '' as string,\n        customFileName: '' as string,\n        drillDownCache: {} as Record<number, Array<any>>\n    }),\n    methods: {\n        formatGender(gender: string) {\n            const upCaseGender = `${gender}`.toUpperCase()\n            if (upCaseGender === 'M' || upCaseGender === 'MALE') {\n                return 'Male'\n            }\n            if (upCaseGender === 'F' || upCaseGender === 'FEMALE') {\n                return 'Female'\n            }\n            if (/fbf|fnp|fp/i.test(gender)) {\n                return upCaseGender\n            }\n            return gender\n        },\n        toDate(date: string) {\n            return HisDate.toStandardHisDisplayFormat(date)\n        },\n        sortByArvNumber(data: Array<any>, attr='arv_number') {\n            try {\n                return data.sort((a: any, b: any) => this.getArvInt(a[attr]) > this.getArvInt(b[attr]) ? 1 : -1)\n            } catch(e) {\n                console.error(e)\n                return data\n            }\n        },\n        getArvInt(arv: string) {\n            if (typeof arv === 'string') {\n                const [prfx, art, arvNumStr] = arv.split('-')\n                const arvNumInt = parseInt(arvNumStr)\n                return typeof arvNumInt === 'number' ? arvNumInt : 0 \n            }\n            return 0\n        },\n        tdARV(arv: string, params={}) {\n            return table.td(arv, { sortValue: this.getArvInt(arv), ...params})\n        },\n        confirmPatient(patient: number) {\n            return this.$router.push(`/patients/confirm?person_id=${patient}`)\n        },\n        async drilldownAsyncRows(title: string, columns: Array<any>, asyncRows: Function, canExport=true) {\n            const modal = await modalController.create({\n                component: DrilldownTable,\n                cssClass: 'large-modal',\n                componentProps: { \n                    title, \n                    columns, \n                    asyncRows,\n                    canExport,\n                    showFilters: true,\n                    rowsPerPage: 50,\n                    paginated: true,\n                    showReportStamp: false,\n                    footerColor: 'light',\n                    onFinish: () => modalController.dismiss()\n                }\n            })\n            modal.present()\n        },\n        async drilldownData(title: string, columns: Array<any>, rows: Array<any>, rowParser: any) {\n            const modal = await modalController.create({\n                component: DrilldownTable,\n                cssClass: 'large-modal',\n                componentProps: { \n                    title, \n                    columns, \n                    rows,\n                    rowParser,\n                    rowsPerPage: 50,\n                    showFilters: true,\n                    paginated: true,\n                    showReportStamp: false,\n                    footerColor: 'light',\n                    onFinish: () => modalController.dismiss()\n                }\n            })\n            modal.present()\n        },\n        getDefaultDrillDownTable() {\n            const columns = [\n                [\n                    table.thTxt('ARV number'), \n                    table.thTxt('Gender'),\n                    table.thTxt('Birth Date'), \n                    table.thTxt('Actions')\n                ]\n            ]\n            const rowParser = async (tableRows: Array<any[]>) => {\n                let ARV_NUM_INDEX = 0\n                const t = tableRows.map(async (defaultRow: Array<any>) => {\n                    let id: any = null\n                    let index: null | number = null\n                    if (isArray(defaultRow)) {\n                        const [num, key ] = defaultRow\n                        index = num\n                        if (key in this.drillDownCache) {\n                            const [oldIndex, ...rest] = this.drillDownCache[key]\n                            return [index, ...rest] // Assign new index number and maintain patient record\n                        }\n                    } else {\n                        id = defaultRow\n                        if (id in this.drillDownCache) {\n                            return this.drillDownCache[id]\n                        }\n                    }\n    \n                    const data = await Patientservice.findByID(id)\n                    const patient = new Patientservice(data)\n                    const row = []\n                    if (index) {\n                        ARV_NUM_INDEX = 1\n                        row.push(index)\n                    } \n                    row.push(this.tdARV(patient.getArvNumber()))\n                    row.push(table.td(this.formatGender(patient.getGender())))\n                    row.push(table.tdDate(patient.getBirthdate().toString()))\n                    row.push(table.tdBtn('Show', async () => {\n                        await modalController.dismiss({})\n                        this.$router.push({ path: `/patient/dashboard/${id}`})\n                    }))\n                    this.drillDownCache[id] = row\n                    return row\n                })\n                const rows = await Promise.all(t)\n                return rows.sort((a: any, b: any) => \n                        a[ARV_NUM_INDEX].sortValue > b[ARV_NUM_INDEX].sortValue \n                        ? 1 : -1)\n            }\n            return { rowParser, columns }\n        },\n        runTableDrill(data: any, title='Drilldown patients') {\n            const { columns, rowParser } = this.getDefaultDrillDownTable()\n            this.drilldownData(title, columns, data, rowParser)\n        },\n        drill(values: Array<number>, title='Drill table') {\n            if (values && values.length > 0) {\n                return table.tdLink(\n                    values.length, \n                    () => this.runTableDrill(values, title)\n                )\n            }\n            return table.td(0)\n        },\n        getQuaterOptions() {\n            const quarters = ArtReportService.getReportQuarters()\n            return quarters.map((q: any) => ({\n                label: q.name, value: q.start, other: q\n            }))\n        },\n        getDateDurationFields(\n            useQuarter=false, \n            setCustomQuarterPeriod=false, \n            maxQuarter=5, \n            maxDate=Service.getSessionDate() as string | null,\n        ): Array<Field> {\n            const minDate = '2000-01-01'\n            return [\n                {\n                    id: 'quarter',\n                    helpText: 'Select Quarter',\n                    type: FieldType.TT_SELECT,\n                    condition: () => useQuarter,\n                    validation: (val: Option) => Validation.required(val),\n                    options: () => {\n                        const quarters = ArtReportService.getReportQuarters(maxQuarter)\n                        let items: Array<Option> = quarters.map((q: any) => ({\n                            label: q.name,\n                            value: q.start,\n                            other: q\n                        }))\n                        if (setCustomQuarterPeriod) {\n                            items = [\n                                {\n                                    label: 'Set custom period',\n                                    value: 'custom_period',\n                                    other: {}\n                                },\n                                ...items\n                            ]\n                        }\n                        return items\n                    }\n                },\n                ...generateDateFields({\n                    id: 'start_date',\n                    helpText: 'Start',\n                    required: true,\n                    condition: (f: any) => f.quarter && f.quarter.value === 'custom_period' || !useQuarter,\n                    minDate: () => minDate,\n                    maxDate: () => maxDate,\n                    estimation: {\n                        allowUnknown: false\n                    },\n                    computeValue: (date: string) => date \n                }),\n                ...generateDateFields({\n                    id: 'end_date',\n                    helpText: 'End',\n                    required: true,\n                    condition: (f: any) => f.quarter && f.quarter.value === 'custom_period' || !useQuarter,\n                    unload: (d: any, s: any, f: any, c: any) => {\n                        if (s === 'next') {\n                            this.endDate = c.end_date\n                        }\n                    },\n                    minDate: (_: any, c: any) => c.start_date,\n                    maxDate: () => maxDate,\n                    estimation: {\n                        allowUnknown: false\n                    },\n                    computeValue: (date: string) => date\n                })\n            ]\n        }\n    }\n})\n","import script from \"./ReportMixin.vue?vue&type=script&lang=ts\"\nexport * from \"./ReportMixin.vue?vue&type=script&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { resolveComponent as _resolveComponent, vShow as _vShow, createVNode as _createVNode, withDirectives as _withDirectives, withCtx as _withCtx, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createBlock as _createBlock, Fragment as _Fragment, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-081fcbca\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"header-text-list\" }\nconst _hoisted_2 = { key: 0 }\nconst _hoisted_3 = { class: \"report-content\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_his_standard_form = _resolveComponent(\"his-standard-form\")!\n  const _component_ion_img = _resolveComponent(\"ion-img\")!\n  const _component_ion_thumbnail = _resolveComponent(\"ion-thumbnail\")!\n  const _component_ion_label = _resolveComponent(\"ion-label\")!\n  const _component_report_filter = _resolveComponent(\"report-filter\")!\n  const _component_ion_toolbar = _resolveComponent(\"ion-toolbar\")!\n  const _component_ion_header = _resolveComponent(\"ion-header\")!\n  const _component_report_table = _resolveComponent(\"report-table\")!\n  const _component_ion_content = _resolveComponent(\"ion-content\")!\n  const _component_pagination = _resolveComponent(\"pagination\")!\n  const _component_ion_chip = _resolveComponent(\"ion-chip\")!\n  const _component_ion_footer = _resolveComponent(\"ion-footer\")!\n  const _component_his_footer = _resolveComponent(\"his-footer\")!\n  const _component_ion_page = _resolveComponent(\"ion-page\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _withDirectives(_createVNode(_component_his_standard_form, {\n      onOnFinish: _ctx.onFinish,\n      skipSummary: true,\n      fields: _ctx.fields\n    }, null, 8, [\"onOnFinish\", \"fields\"]), [\n      [_vShow, _ctx.showForm]\n    ]),\n    (!_ctx.showForm)\n      ? (_openBlock(), _createBlock(_component_ion_page, { key: 0 }, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_header, null, {\n              default: _withCtx(() => [\n                _createVNode(_component_ion_toolbar, null, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_ion_thumbnail, { slot: \"start\" }, {\n                      default: _withCtx(() => [\n                        _createVNode(_component_ion_img, { src: _ctx.logo }, null, 8, [\"src\"])\n                      ]),\n                      _: 1\n                    }),\n                    _createVNode(_component_ion_label, null, {\n                      default: _withCtx(() => [\n                        _createElementVNode(\"ul\", _hoisted_1, [\n                          _createElementVNode(\"li\", null, [\n                            _createTextVNode(\"Title \"),\n                            _createElementVNode(\"b\", null, _toDisplayString(_ctx.title), 1)\n                          ]),\n                          _createElementVNode(\"li\", null, [\n                            _createTextVNode(\"Period \"),\n                            _createElementVNode(\"b\", null, _toDisplayString(_ctx.period), 1)\n                          ]),\n                          (_ctx.customInfo)\n                            ? (_openBlock(), _createElementBlock(\"li\", _hoisted_2, [\n                                _createTextVNode(_toDisplayString(_ctx.customInfo.label) + \" \", 1),\n                                _createElementVNode(\"b\", null, _toDisplayString(_ctx.customInfo.value), 1)\n                              ]))\n                            : _createCommentVNode(\"\", true)\n                        ])\n                      ]),\n                      _: 1\n                    }),\n                    _createVNode(_component_report_filter, {\n                      slot: \"end\",\n                      showPerPageFilter: _ctx.showFilters || _ctx.paginated,\n                      disableSearchFilter: _ctx.isTableLoading,\n                      disablePerPageFilter: _ctx.isTableLoading,\n                      totalRowCount: _ctx.tableRows.length,\n                      customFilter: _ctx.customFilter,\n                      onOnItemsPerPage: _cache[0] || (_cache[0] = (i) => _ctx.itemsPerPage = i),\n                      onOnItemsVLtype: _cache[1] || (_cache[1] = (f) => _ctx.itemsVLtype = f),\n                      onOnSearchFilter: _cache[2] || (_cache[2] = (f) => _ctx.searchFilter = f)\n                    }, null, 8, [\"showPerPageFilter\", \"disableSearchFilter\", \"disablePerPageFilter\", \"totalRowCount\", \"customFilter\"])\n                  ]),\n                  _: 1\n                })\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_ion_content, null, {\n              default: _withCtx(() => [\n                _createElementVNode(\"div\", _hoisted_3, [\n                  _createVNode(_component_report_table, {\n                    rows: _ctx.rows,\n                    paginated: _ctx.paginated,\n                    asyncRows: _ctx.asyncRows,\n                    rowParser: _ctx.rowParser,\n                    config: {..._ctx.config, tableCssTheme: _ctx.tableCssTheme},\n                    columns: _ctx.columns,\n                    showFilters: _ctx.showFilters,\n                    newPage: _ctx.currentPage,\n                    searchFilter: _ctx.searchFilter,\n                    rowsPerPage: _ctx.itemsPerPage,\n                    onOnIsLoading: _cache[3] || (_cache[3] = (l) => _ctx.isTableLoading = l),\n                    onOnTableRows: _cache[4] || (_cache[4] = (r) => _ctx.tableRows = r),\n                    onOnPagination: _cache[5] || (_cache[5] = (p) => _ctx.totalPages = p.length),\n                    onOnActiveColumns: _cache[6] || (_cache[6] = (c) => _ctx.activeColumns = c),\n                    onOnActiveRows: _cache[7] || (_cache[7] = (r) => _ctx.activeRows = r)\n                  }, null, 8, [\"rows\", \"paginated\", \"asyncRows\", \"rowParser\", \"config\", \"columns\", \"showFilters\", \"newPage\", \"searchFilter\", \"rowsPerPage\"])\n                ])\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_ion_footer, null, {\n              default: _withCtx(() => [\n                (!_ctx.searchFilter && _ctx.paginated || !_ctx.searchFilter && _ctx.totalPages > 0 && _ctx.paginated)\n                  ? (_openBlock(), _createBlock(_component_ion_toolbar, { key: 0 }, {\n                      default: _withCtx(() => [\n                        _createVNode(_component_pagination, {\n                          perPage: _ctx.itemsPerPage,\n                          maxVisibleButtons: 10,\n                          totalPages: _ctx.totalPages,\n                          onOnChangePage: _cache[8] || (_cache[8] = (p) => _ctx.currentPage=p)\n                        }, null, 8, [\"perPage\", \"totalPages\"])\n                      ]),\n                      _: 1\n                    }))\n                  : _createCommentVNode(\"\", true),\n                (_ctx.showReportStamp)\n                  ? (_openBlock(), _createBlock(_component_ion_toolbar, { key: 1 }, {\n                      default: _withCtx(() => [\n                        _createVNode(_component_ion_chip, { color: \"primary\" }, {\n                          default: _withCtx(() => [\n                            _createTextVNode(\"Date Created: \"),\n                            _createElementVNode(\"b\", null, _toDisplayString(_ctx.date), 1)\n                          ]),\n                          _: 1\n                        }),\n                        _createVNode(_component_ion_chip, { color: \"primary\" }, {\n                          default: _withCtx(() => [\n                            _createTextVNode(\"His-Core Version: \"),\n                            _createElementVNode(\"b\", null, _toDisplayString(_ctx.coreVersion), 1)\n                          ]),\n                          _: 1\n                        }),\n                        _createVNode(_component_ion_chip, { color: \"primary\" }, {\n                          default: _withCtx(() => [\n                            _createTextVNode(\"API Version: \"),\n                            _createElementVNode(\"b\", null, _toDisplayString(_ctx.apiVersion), 1)\n                          ]),\n                          _: 1\n                        })\n                      ]),\n                      _: 1\n                    }))\n                  : _createCommentVNode(\"\", true)\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_his_footer, {\n              color: _ctx.footerColor,\n              btns: _ctx.btns\n            }, null, 8, [\"color\", \"btns\"])\n          ]),\n          _: 1\n        }))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}","\nimport { defineComponent, PropType } from \"vue\";\nimport HisFooter from \"@/components/HisDynamicNavFooter.vue\";\nimport ReportTable from \"@/components/DataViews/tables/ReportDataTable.vue\"\nimport { toCsv, toTablePDF } from \"@/utils/Export\"\nimport { toExportableFormat, ColumnInterface, RowInterface} from \"@/components/DataViews/tables/ReportDataTable\" \nimport HisStandardForm from \"@/components/Forms/HisStandardForm.vue\";\nimport { Field, Option } from '@/components/Forms/FieldInterface';\nimport { \n  IonPage,\n  IonHeader,\n  IonContent,\n  IonToolbar,\n  loadingController,\n  IonChip, \n  IonFooter,\n  IonLabel\n} from \"@ionic/vue\"\nimport { Service } from \"@/services/service\"\nimport HisDate from \"@/utils/Date\"\nimport ReportFilter from \"@/components/ReportFilter.vue\"\nimport Pagination from \"@/components/Pagination.vue\"\nimport { toastDanger } from \"@/utils/Alerts\";\nimport { EncryptionOptions } from \"jspdf\";\nimport { infoActionSheet } from \"@/utils/ActionSheets\";\n\nexport default defineComponent({\n  components: { \n    HisStandardForm,   \n    IonHeader,\n    ReportTable, \n    HisFooter, \n    IonPage, \n    IonContent, \n    IonToolbar,\n    Pagination, \n    ReportFilter,  \n    IonFooter,\n    IonChip, \n    IonLabel\n  },\n  props: {\n      title: {\n      type: String,\n      required: true,\n    },\n    customFilter: {\n      type: Function\n    },\n    period: {\n      type: String,\n      default: '',\n    },\n    encryptPDF: {\n      type: Boolean,\n      default: false\n    },\n    config: {\n      type: Object as PropType<Record<string, any>>\n    },\n    fields: {\n      type: Array as PropType<Field[]>,\n      default: () => []\n    },\n    columns: {\n      type: Array as PropType<Array<ColumnInterface[]>>,\n      required: true\n    },\n    rows: {\n      type: Array as PropType<Array<RowInterface[]>>,\n      required: true\n    },\n    paginated: {\n        type: Boolean,\n        default: false\n    },\n    customBtns: {\n      type: Array,\n      default: () => []\n    },\n    canExportPDf: {\n      type: Boolean,\n      default: true\n    },\n    canExportCsv: {\n      type: Boolean,\n      default: true\n    },\n    onReportConfiguration: {\n      type: Function,\n      required: false\n    },\n    rowParser: {\n      type: Function as PropType<((data: any) => any[][])>\n    },\n    showFilters: {\n      type: Boolean,\n      default: false\n    },\n    showVLFilter: {\n      type: Boolean,\n      default: false\n    },\n    rowsPerPage: {\n      type: Number\n    },\n    asyncRows: {\n      type: Function as PropType<() => Promise<any[][]>>\n    },\n    footerColor: {\n      type: String,\n      default: 'dark'\n    },\n    customFileName: {\n      type: String,\n      default: ''\n    },\n    canExport: {\n      type: Boolean,\n      default: true\n    },\n    showReportStamp: {\n      type: Boolean,\n      default: true\n    },\n    customInfo: {\n      type: Object as PropType<Option>\n    }\n  },\n  data: () => ({\n    formData: {} as any,\n    computeFormData: {} as any,\n    btns: [] as Array<any>,\n    isLoadingData: false as boolean,\n    showForm: false as boolean,\n    logo: \"/assets/images/login-logos/Malawi-Coat_of_arms_of_arms.png\" as string,\n    isTableLoading: false as boolean,\n    searchFilter: '' as string,\n    itemsPerPage: 50 as number,\n    itemsVLtype: '' as string,\n    currentPage: 0 as number,\n    tableRows: [] as any,\n    totalPages: 0 as number,\n    activeColumns: [] as any,\n    activeRows: [] as any,\n    date: HisDate.toStandardHisDisplayFormat(Service.getSessionDate()),\n    apiVersion: Service.getApiVersion(),\n    coreVersion: Service.getCoreVersion(),\n    siteUUID: Service.getSiteUUID() as string,\n    tableCssTheme: 'opd-report-theme',\n  }),\n  methods: {\n    getFileName() {\n      return `${Service.getLocationName()} ${this.title} ${this.period}`\n    },\n    pdfEncryptionData(): Record<\"encryption\", EncryptionOptions> {\n      const password = Service.getUserName()\n      return {\n        encryption: {\n          userPassword: password,\n          ownerPassword: password,\n          userPermissions: [\"print\"]\n        }\n      }\n    },\n    async onFinish(formData: any, computedData: any) {\n      this.formData = formData\n      this.computeFormData = computedData\n      this.showForm = false\n      await this.presentLoading()\n      try {\n        if(this.onReportConfiguration) await this.onReportConfiguration(this.formData, this.computeFormData)\n        loadingController.dismiss ()\n      }catch(e) {\n        console.error(e)\n        toastDanger(`${e}`)\n        loadingController.dismiss()\n      }\n    },\n    async reloadReport() {\n      await this.onFinish(this.formData, this.computeFormData)\n    },\n    async presentLoading() {\n      const loading = await loadingController\n        .create({\n          message: 'Please wait...',\n          backdropDismiss: false\n        })\n      await loading.present()\n    }\n  },\n  created() {\n    this.showForm = !!this.fields.length\n    this.btns = this.customBtns\n    this.btns.push(\n      {\n        name: \"CSV\",\n        size: \"large\",\n        slot: \"start\",\n        color: \"primary\",\n        visible: this.canExportCsv,\n        onClick: async () => {\n          const {columns, rows} = toExportableFormat(this.columns, this.rows)\n          toCsv(columns, [\n            ...rows,\n            [`Date Created: ${this.date}`],\n            [`Period: ${this.period}`],\n            [`HIS-Core Version: ${this.coreVersion}`],\n            [`API Version: ${this.apiVersion}`],\n            [`Site UUID: ${this.siteUUID}`]\n          ], this.getFileName())\n        }\n      },\n      {\n        name: \"PDF\",\n        size: \"large\",\n        slot: \"start\",\n        color: \"primary\",\n        visible: this.canExportPDf,\n        onClick: async () => {\n          let mode: 'pdfMode' | 'ignorePDFColumnexport' = 'pdfMode'\n          if (this.encryptPDF) {\n            const option = await infoActionSheet(\n              'Security warning',\n              'PDF may contain private data that will require a password to unlock',\n              'To access private data choose Secure PDF over Regular PDF',\n              [\n                { \n                  name: \"Secure PDF\",\n                  slot: \"start\",\n                  color: \"success\"\n                },\n                { \n                  name: \"Regular PDF\",\n                  slot: \"start\",\n                  color: \"success\"\n                }\n              ],\n              'his-danger-color'\n            )\n            mode = option === 'Secure PDF' ? 'pdfMode' : 'ignorePDFColumnexport'\n          }\n          const {columns, rows} = toExportableFormat(this.activeColumns, this.activeRows, mode)\n          toTablePDF(\n            columns, \n            rows, \n            this.getFileName(),\n            false,\n            this.encryptPDF && mode !='ignorePDFColumnexport' ? this.pdfEncryptionData() : {}\n          )\n        }\n      },\n      {\n        name: \"Back\",\n        size: \"large\",\n        slot: \"end\",\n        color: \"primary\",\n        visible: true,\n        onClick: () => this.showForm = true\n      },\n      {\n        name: \"Refresh\",\n        size: \"large\",\n        slot: \"end\",\n        color: \"warning\",\n        visible: true,\n        onClick: () => this.reloadReport()\n      },\n      {\n        name: \"Finish\",\n        size: \"large\",\n        slot: \"end\",\n        color: \"success\",\n        visible: true,\n        onClick: () => this.$router.push({ path:'/' })\n      }\n    )\n  }\n})\n","import { render } from \"./BaseTableReport.vue?vue&type=template&id=081fcbca&scoped=true&ts=true\"\nimport script from \"./BaseTableReport.vue?vue&type=script&lang=ts\"\nexport * from \"./BaseTableReport.vue?vue&type=script&lang=ts\"\n\nimport \"./BaseTableReport.vue?vue&type=style&index=0&id=081fcbca&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-081fcbca\"]])\n\nexport default __exports__","import { resolveDynamicComponent as _resolveDynamicComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createBlock(_resolveDynamicComponent(_ctx.formType), {\n    fields: _ctx.fields,\n    skipSummary: _ctx.skipSummary,\n    activeField: _ctx.activeField,\n    cancelDestinationPath: _ctx.cancelDestinationPath,\n    onOnFinish: _ctx.onFinish,\n    onFinish: _ctx.onFinishAction,\n    onOnIndex: _ctx.onIndex\n  }, null, 40, [\"fields\", \"skipSummary\", \"activeField\", \"cancelDestinationPath\", \"onOnFinish\", \"onFinish\", \"onOnIndex\"]))\n}","\nimport TouchScreenForm from \"@/components/Forms/TouchScreenForm.vue\";\nimport { defineComponent, PropType } from \"vue\";\nimport { Field } from \"./FieldInterface\";\n\nexport default defineComponent({\n    name: \"HisStandardForm\",\n    components: { TouchScreenForm },\n    emits: [\n        'onFinish',\n        'onIndex'\n    ],\n    data: () => ({\n        formType: 'touch-screen-form' as string\n    }),\n    props: {\n        onFinishAction: {\n            type: Function\n        },\n        skipSummary: {\n            type: Boolean,\n            default: false\n        },\n        activeField: {\n            type: String\n        },\n        fields: {\n            type: Object as PropType<Field[]>,\n            required: true\n        },\n        cancelDestinationPath: {\n            type: String,\n            required: false,\n        }\n    },\n    methods: {\n        onFinish(formData: any, computedData: any) {\n            this.$emit('onFinish', formData, computedData)\n        },\n        onIndex(i: number) {\n            this.$emit('onIndex', i)\n        }\n    }\n})\n","import { render } from \"./HisStandardForm.vue?vue&type=template&id=6daa0375&ts=true\"\nimport script from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\nexport * from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./BaseTableReport.vue?vue&type=style&index=0&id=081fcbca&scoped=true&lang=css\"","import { Service } from \"@/services/service\";\nimport HisDate from \"@/utils/Date\"\n\nexport interface QuarterInterface {\n    name: string;\n    start: string;\n    end: string;\n}\n\n\n\nexport const AGE_GROUPS = [\n    '15-19 years', '20-24 years',\n    '25-29 years', '30-34 years',\n    '35-39 years', '40-44 years',\n    '45-49 years', '50 plus years'\n]\n\n\nexport class CxCaReportService extends Service {\n    programID: number;\n    startDate: string;\n    endDate: string;\n    date: string;\n    constructor() {\n        super()\n        this.endDate = ''\n        this.startDate = ''\n        this.date = Service.getSessionDate()\n        this.programID = Service.getProgramID()\n    }\n\n    getPepfarReport(reportName: string) {\n        return this.getReport('pepfar_cxca', {'report_name': reportName})\n    }\n    getClinicReport(reportName: string) {\n        return this.getReport('screened_for_cxca', {'report_name': reportName})\n    }\n    getMohReport(reportName: string) {\n        return this.getReport('screened_for_cxca', {'report_name': reportName})\n    }\n    \n    getDateIntervalPeriod() {\n        return `${HisDate.toStandardHisDisplayFormat(this.startDate)} - ${HisDate.toStandardHisDisplayFormat(this.endDate)}`\n    }\n\n    setStartDate(startDate: string) {\n        this.startDate = startDate\n    }  \n\n    setEndDate(endDate: string) {\n        this.endDate = endDate\n    }\n\n   \n\n    getReportPeriod() {\n        return this.startDate && this.endDate\n         ? `${HisDate.toStandardHisDisplayFormat(this.startDate)} - ${HisDate.toStandardHisDisplayFormat(this.endDate)}`\n         : '-'\n    }\n\n    getReport(url: string, params={}) {\n        return Service.getJson(url, this.buildRequest(params))\n    }\n\n    buildRequest(config: Record<string, any> = {}) {\n        const payload: any = {'date': this.date, 'program_id': 24}\n        if (this.startDate && this.endDate) {\n            payload['start_date'] = this.startDate\n            payload['end_date'] = this.endDate\n        }\n        return { ...payload, ...config }\n    }\n\n    static getReportQuarters(minDuration= 4) {\n        const quarters: Array<QuarterInterface> = []\n        let year = HisDate.getCurrentYear()\n        for(let i=0; i < minDuration; ++i) {\n            quarters.push({ name: `Q4 ${year}`, start: `${year}-10-01`, end: `${year}-12-31` })\n            quarters.push({ name: `Q3 ${year}`, start: `${year}-07-01`, end: `${year}-09-30` })\n            quarters.push({ name: `Q2 ${year}`, start: `${year}-04-01`, end: `${year}-06-30` })\n            quarters.push({ name: `Q1 ${year}`, start: `${year}-01-01`, end: `${year}-03-31` })\n            --year\n        }\n        return quarters\n    }\n\n}"],"sourceRoot":""}