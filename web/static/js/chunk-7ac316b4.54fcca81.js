(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-7ac316b4"],{7365:function(t,e,n){"use strict";n("14d9"),n("13d5");var a=n("7a23"),i=n("ad60"),o=n("2ef0"),s=n("0fa1"),r=n("b3b1"),c=n("c21d"),l=n("7920"),u=n("b5e4"),d=n("8e8b"),p=Object(a["defineComponent"])({components:{HisStandardForm:l["a"]},data:()=>({patient:{},fields:[],patientID:"",providerID:-1,providers:[],facts:{sessionDate:"",apiDate:"",encounterName:"N/A",providers:[],isBdeMode:!1,birthDate:"",outcome:"",outcomeStartDate:""},ready:!1}),watch:{$route:{handler(t){t.params.patient_id&&this.patientID!=t.params.patient_id&&(this.patientID=parseInt(t.params.patient_id),d["a"].get("ACTIVE_PATIENT",{patientID:this.patientID}).then(t=>{this.patient=t,this.setEncounterFacts().then(()=>{this.checkEncounterGuidelines().then(()=>{this.ready=!0})})}))},immediate:!0,deep:!0}},computed:{cancelDestination(){return this.patientDashboardUrl()}},methods:{runflowState(t,e=null){const n={};if(n[r["b"].SET_PROVIDER]=t=>{const[e]=t.split(" "),n=Object(o["find"])(this.providers,{username:e});return n&&(this.providerID=n.person_id),r["b"].CONTINUE},n[r["b"].CHANGE_SESSION_DATE]=()=>(this.$router.push("/session/date?patient_dashboard_redirection_id="+this.patientID),r["b"].EXIT),n[r["b"].CHANGE_PATIENT_OUTCOME]=()=>(this.$router.push("/patient/programs/"+this.patientID),r["b"].EXIT),n[r["b"].GO_TO_PATIENT_DASHBOARD]=()=>(this.gotoPatientDashboard(),r["b"].EXIT),t in n)return n[t](e)},async checkEncounterGuidelines(){const t=Object(c["a"])(this.facts,r["a"]);for(const o in t){var e,n;const s=t[o];if(null!==s&&void 0!==s&&null!==(e=s.actions)&&void 0!==e&&e.alert){var a;const t=this.runflowState(await(null===s||void 0===s||null===(a=s.actions)||void 0===a?void 0:a.alert(this.facts)));if(t===r["b"].EXIT)return}if(null!==s&&void 0!==s&&null!==(n=s.actions)&&void 0!==n&&n.selection){var i;const t=await(null===s||void 0===s||null===(i=s.actions)||void 0===i?void 0:i.selection(this.facts));this.runflowState(t.flowState,t.value)}}},async setEncounterFacts(){try{const t=await d["a"].get("PATIENT_PROGRAM",{patientID:this.patientID});this.facts.outcome=t.outcome,this.facts.outcomeStartDate=t.startDate}catch(t){console.error(t),Object(u["c"])(""+t)}this.facts.sessionDate=i["a"].getSessionDate(),this.facts.apiDate=i["a"].getCachedApiDate(),this.facts.isBdeMode=i["a"].isBDE(),this.facts.birthDate=this.patient.getBirthdate(),this.facts.encounterName=this.$route.name?this.$route.name.toString().toUpperCase():"N/A",i["a"].isBDE()&&(this.providers=await d["a"].get("PROVIDERS"),this.facts.providers=this.providers.sort((t,e)=>{const n=t.username.toUpperCase(),a=e.username.toUpperCase();return n<a?-1:n>a?1:0}).map(t=>{var e;let n=""+t.username;if(!Object(o["isEmpty"])(null===t||void 0===t||null===(e=t.person)||void 0===e?void 0:e.names)){var a;const[e]=(null===(a=t.person)||void 0===a?void 0:a.names)||[];n+=` (${e.given_name} ${e.family_name})`}return n}))},toOption(t,e={}){return{label:t,value:t,other:e}},mapStrToOptions(t){return t.map(t=>({label:t,value:t}))},patientDashboardUrl(){return"/patient/dashboard/"+this.patientID},gotoPatientDashboard(){return this.$router.push({path:this.patientDashboardUrl()})},nextTask(){return Object(s["b"])(this.patientID,this.$router)},yesNoOptions(){return[{label:"Yes",value:"Yes"},{label:"No",value:"No"}]},toYesNoOption(t,e={}){return{label:t,value:"",other:{...e,values:this.yesNoOptions()}}},mapOptions(t){return t.map(t=>({label:t,value:t}))},yesNoUnknownOptions(){return[{label:"Yes",value:"Yes"},{label:"No",value:"No"},{label:"Unknown",value:"Unknown"}]},resolveObs(t,e=""){const n=Object.values(t).filter(t=>t&&(t.tag===e||""===e)).reduce((t,e)=>{const n=e.obs?e.obs:e;return Array.isArray(n)?t=t.concat(n):"function"===typeof n?t.push(n()):t.push(n),t},[]);return Promise.all(n)},inArray(t,e){try{return t.filter(t=>e(t)).length>0}catch(n){return!1}},validateSeries(t){try{for(const e in t){const n=t[e]();if(n)return n}}catch(e){return[e]}}}});const h=p;e["a"]=h},b3b1:function(t,e,n){"use strict";n.d(e,"b",(function(){return a})),n.d(e,"a",(function(){return r}));var a,i=n("7f35"),o=n("9283");(function(t){t["SET_PROVIDER"]="SET_PROVIDER",t["CHANGE_SESSION_DATE"]="change_session_date",t["GO_TO_PATIENT_DASHBOARD"]="go_to_patient_dashboard",t["CHANGE_PATIENT_OUTCOME"]="change_outcome",t["CONTINUE"]="continue",t["EXIT"]="exit"})(a||(a={}));const s=t=>o["c"].toStandardHisDisplayFormat(t),r={"Warn if attempting to create new encounters for a deceased patient":{priority:1,actions:{alert:async({outcomeStartDate:t})=>{const e=await Object(i["a"])("Data Integrity Issue Found","Patient died on "+s(t),"Proceeding with this outcome might affect accuracy of some reports",[{name:"Cancel",slot:"end",color:"primary"},{name:"Change outcome",slot:"end",color:"primary"},{name:"Continue Anyway",slot:"end",color:"danger"}]);return"Cancel"===e?a.GO_TO_PATIENT_DASHBOARD:"Change outcome"===e?a.CHANGE_PATIENT_OUTCOME:a.CONTINUE}},conditions:{outcome(t){return"Patient died"===t},outcomeStartDate(t,{sessionDate:e}){return e>=t}}},"A patient's date of birth must not be less than Session Date":{priority:2,actions:{alert:async({birthDate:t,sessionDate:e})=>{const n=await Object(i["a"])("Data integrity issue found","",`Session date ${s(e)} is less than birth date of ${s(t)}`,[{name:"Cancel",slot:"end",color:"danger"},{name:"Change session date",slot:"end",color:"success"}]);return"Change session date"===n?a.CHANGE_SESSION_DATE:a.GO_TO_PATIENT_DASHBOARD}},conditions:{birthDate(t,{sessionDate:e}){return e<t}}},"Select Encounter provider when in back data entry":{priority:3,actions:{selection:async({providers:t,encounterName:e,sessionDate:n,apiDate:o})=>{const r=await Object(i["c"])("Please select a provider for "+e,`BDE: ${s(n)} | Current: ${s(o)}`,t,[{name:"Cancel",color:"danger",slot:"start",role:"default"},{name:"Confirm",slot:"end",role:"action"}]);return"Cancel"===r.action?{value:-1,flowState:a.GO_TO_PATIENT_DASHBOARD}:{value:r.selection,flowState:a.SET_PROVIDER}}},conditions:{isBdeMode(t){return t}}}}},c21d:function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));n("14d9");function a(t,e){const n=[],a=[-1,"",null,void 0];for(const i in e){if(!(i in t))continue;const o=t[i];a.includes(o)?n.push(!1):n.push(e[i](o,t))}return n.every(Boolean)}function i(t){return t.sort((t,e)=>t.priority&&e.priority&&t.priority<e.priority?-1:1)}function o(t){return t.sort((t,e)=>t.weight&&e.weight&&t.weight>e.weight?-1:1)}function s(t,e,n="",s="",r="priority"){const c=[];for(const i in e){const o=e[i],r=[o.target&&n&&o.target!=n,o.targetEvent&&s&&o.targetEvent!=s];r.some(Boolean)||a(t,o.conditions)&&(o.title=i,o.description&&(o.description.text=o.description.info(t)),c.push(o))}return"priority"===r?i(c):o(c)}},e5e5:function(t,e,n){"use strict";n.r(e);var a=n("7a23");function i(t,e,n,i,o,s){const r=Object(a["resolveComponent"])("his-standard-form");return Object(a["openBlock"])(),Object(a["createBlock"])(r,{fields:t.fields,onFinishAction:t.onFinish,skipSummary:!0,cancelDestinationPath:t.cancelDestination},null,8,["fields","onFinishAction","cancelDestinationPath"])}var o=n("d95e"),s=n("7920"),r=n("2706"),c=n("7365"),l=n("8df6"),u=n("b5e4"),d=n("80b5"),p=Object(a["defineComponent"])({mixins:[c["a"]],components:{HisStandardForm:s["a"]},data:()=>({patientType:{}}),watch:{ready:{async handler(t){t&&(this.patientType=new l["a"](this.patientID,this.providerID),await this.patientType.loadPatientType(),this.fields=this.getFields())},immediate:!0}},methods:{async onFinish(t){var e,n;const a=await this.patientType.createEncounter();if(!a)return Object(u["e"])("Unable to create encounter");this.patientType.setLocationName(null===t||void 0===t||null===(e=t.location)||void 0===e?void 0:e.label),this.patientType.setPatientType(null===t||void 0===t||null===(n=t.patient_type)||void 0===n?void 0:n.value),await this.patientType.save(),Object(u["d"])("Observations and encounter created!"),this.nextTask()},facilityLocationField(){const t=d["a"].getFacilityLocationField();return t.condition=t=>["Emergency supply","External consultation"].includes(t.patient_type.value),t},getFields(){return[{id:"patient_type",helpText:"Current type: "+this.patientType.getType(),type:o["b"].TT_SELECT,validation:t=>r["a"].required(t)||r["a"].notTheSame(t.value,this.patientType.getType()),options:()=>l["a"].getPatientTypes()},this.facilityLocationField()]}}}),h=n("6b0d"),f=n.n(h);const m=f()(p,[["render",i]]);e["default"]=m}}]);
//# sourceMappingURL=chunk-7ac316b4.54fcca81.js.map