{"version":3,"sources":["webpack:///./src/apps/ART/Components/ReportErrors.vue?b184","webpack:///./src/apps/ART/views/reports/moh/MohDisaggregatedReport.vue?8bb3","webpack:///./src/apps/ART/views/reports/moh/MohDisaggregatedReport.vue","webpack:///./src/apps/ART/views/reports/moh/MohDisaggregatedReport.vue?2e58","webpack:///./src/apps/ART/services/reports/disaggregated_service.ts","webpack:///./src/apps/ART/views/reports/ReportMixin.vue","webpack:///./src/apps/ART/views/reports/ReportMixin.vue?5c96","webpack:///./src/apps/ART/views/reports/TableReportTemplate.vue?b609","webpack:///./src/apps/ART/Components/ReportErrors.vue?b749","webpack:///./src/apps/ART/Components/ReportErrors.vue","webpack:///./src/apps/ART/Components/ReportErrors.vue?bb12","webpack:///./src/apps/ART/views/reports/TableReportTemplate.vue","webpack:///./src/apps/ART/views/reports/TableReportTemplate.vue?7fcc","webpack:///./src/apps/ART/views/reports/TableReportTemplate.vue?cff6","webpack:///./src/components/Forms/HisStandardForm.vue?8e31","webpack:///./src/components/Forms/HisStandardForm.vue","webpack:///./src/components/Forms/HisStandardForm.vue?5176","webpack:///./src/apps/ART/services/reports/regimen_report_service.ts","webpack:///./src/apps/ART/services/reports/moh_cohort_service.ts"],"names":["render","_ctx","_cache","$props","$setup","$data","$options","_component_report_template","_resolveComponent","_component_ion_page","_openBlock","_createBlock","default","_withCtx","_createVNode","title","period","rows","columns","headerInfoList","headerList","reportPrefix","config","showIndex","validationErrors","errors","showValidationStatus","canValidate","hasServerSideCaching","enabledPDFHorizontalPageBreak","onReportConfiguration","onPeriod","onDefaultConfiguration","onLoadDefault","_","defineComponent","mixins","ReportMixin","components","ReportTemplate","IonPage","data","table","thTxt","thNum","REGIMENS","map","r","showStatus","rowDataRefs","dataRefLabels","aggregations","mohCohort","maleFemaleAgeGroupData","sortIndexes","query","this","$route","start_date","end_date","quarter","label","other","start","end","watch","doIt","validateReport","computed","Object","keys","sort","a","b","parseInt","reduce","i","concat","methods","form","rebuildCache","report","DisaggregatedReportService","MohCohortReportService","setQuarter","setStartDate","setEndDate","getDateIntervalPeriod","setRebuildOutcome","isInit","init","toastWarning","setTableRows","setFemaleRows","setMaleRows","setTotalMalesRow","setFemalePregnantRows","setFemaleBreastFeedingRows","setFemaleNotPregnantRows","getColumnLabel","col","getTotals","compareFunction","filter","accum","cur","addAggregation","gender","push","group","totals","row","distribution","getRegimenDistribution","refs","forEach","drill","getValue","prop","getTxIpt","getTxCurrTB","sortIndex","maleTD","column","columnDescription","columnName","td","isPregnant","patientID","match","includes","fnpTD","setGender","setRows","AGE_GROUPS","category","ageGroups","otherAgeGroup","txNew","txCurr","txGivenIpt","txScreenTB","setAgeGroup","cohort","getCohort","isEmpty","value","async","getGender","formatGender","getRegimenRows","setHeaderInfoList","totalAlive","length","onclick","runTableDrill","validations","param","check","p","error","s","validateIndicators","__exports__","ArtReportService","constructor","super","_defineProperty","ageGroup","initialize","rebuildOutcome","req","temp_disaggregated","setInitialization","isRebuild","getReport","fields","reportReady","startDate","endDate","customFileName","drillDownCache","upCaseGender","toUpperCase","test","toDate","date","HisDate","toStandardHisDisplayFormat","sortByArvNumber","attr","getArvInt","e","console","arv","prfx","art","arvNumStr","split","arvNumInt","tdARV","params","sortValue","confirmPatient","patient","$router","asyncRows","canExport","modal","modalController","create","component","DrilldownTable","cssClass","componentProps","showFilters","rowsPerPage","paginated","showReportStamp","footerColor","onFinish","dismiss","present","rowParser","getDefaultDrillDownTable","ARV_NUM_INDEX","t","tableRows","id","index","isArray","defaultRow","num","key","oldIndex","rest","Patientservice","findByID","getArvNumber","tdDate","getBirthdate","toString","tdBtn","path","Promise","all","drilldownData","values","tdLink","getQuaterOptions","quarters","getReportQuarters","q","name","getDateDurationFields","useQuarter","setCustomQuarterPeriod","maxQuarter","maxDate","Service","getSessionDate","minDate","helpText","type","FieldType","TT_SELECT","condition","validation","val","Validation","required","options","items","generateDateFields","f","estimation","allowUnknown","computeValue","unload","d","c","_hoisted_1","_hoisted_2","class","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_component_his_standard_form","_component_ion_title","_component_ion_img","_component_ion_thumbnail","_component_ion_chip","_component_ion_label","_component_ion_item","_component_ion_toolbar","_component_ion_header","_component_report_table","_component_ion_content","_component_ion_footer","_component_his_footer","_createElementBlock","_Fragment","_withDirectives","onOnFinish","skipSummary","_vShow","canShowReport","showtitleOnly","_createElementVNode","innerHTML","_createCommentVNode","slot","src","logo","_createTextVNode","_toDisplayString","_renderList","info","_info$other","_info$other2","href","onClick","_withModifiers","$event","hasErrors","showErrors","color","errorCount","tableCssTheme","onOnActiveColumns","onActiveColumns","onOnActiveRows","onActiveRows","coreVersion","apiVersion","btns","_component_ion_list","_component_ion_grid","_component_ion_button","size","closeModal","IonGrid","IonList","IonItem","IonFooter","IonButton","IonToolbar","IonHeader","IonTitle","props","String","Array","HisStandardForm","ReportTable","HisFooter","IonContent","IonChip","IonLabel","IonThumbnail","IonImg","encryptPDF","Boolean","reportLogo","customBtns","canExportPDf","canExportCsv","onFinishBtnAction","Function","formData","computeFormData","activeColumns","activeRows","isLoadingData","siteUUID","getSiteUUID","getApiVersion","getCoreVersion","artVersion","getAppVersion","handler","deep","immediate","visible","Img","ReportErrors","backdropDismiss","pdfEncryptionData","password","getUserName","encryption","userPassword","ownerPassword","userPermissions","refreshTimeStamp","dayjs","format","getFileName","getLocationName","removeTags","presentLoading","loadingController","toastDanger","computedData","shouldRebuildCache","loading","message","created","toExportableFormat","toCsv","mode","option","infoActionSheet","toTablePDF","alertConfirmation","header","reloadReport","_resolveDynamicComponent","formType","activeField","cancelDestinationPath","onFinishAction","onOnIndex","onIndex","TouchScreenForm","emits","$emit","REGIMEN_WEIGHT_DISTRIBUTION","WEIGHT_BAND","FORMULATIONS","RegimenReportService","setReportType","getTptNewInitiations","programID","getRegimenFormulationReport","regimen","formulation","getRegimenReport","getRegimenSwitchReport","isPepfar","pepfar","getRegimensByWeight","getSCReport","CohortVar","regenerate","cohortUrl","setRegenerate","getCohortDrillDown","resourceId","getJson","requestCohort","ajxGet","qaurterRequestParams","datePeriodRequestParams","getCachedCohortValues","cache","sessionStorage","getItem","MOH_CACHE","conf","JSON","parse","cacheCohort","setItem","stringify","callback","cachedValues","indicator","find","indicatorValue","contents"],"mappings":"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","file":"js/chunk-040c03e7.1ceef030.js","sourcesContent":["export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./ReportErrors.vue?vue&type=style&index=0&id=0ed0c7a2&scoped=true&lang=css\"","import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_report_template = _resolveComponent(\"report-template\")!\n  const _component_ion_page = _resolveComponent(\"ion-page\")!\n\n  return (_openBlock(), _createBlock(_component_ion_page, null, {\n    default: _withCtx(() => [\n      _createVNode(_component_report_template, {\n        title: _ctx.title,\n        period: _ctx.period,\n        rows: _ctx.rows,\n        columns: _ctx.columns,\n        headerInfoList: _ctx.headerList,\n        reportPrefix: \"MoH\",\n        config: {\n                showIndex: true\n            },\n        validationErrors: _ctx.errors,\n        showValidationStatus: _ctx.canValidate,\n        hasServerSideCaching: true,\n        enabledPDFHorizontalPageBreak: true,\n        onReportConfiguration: _ctx.onPeriod,\n        onDefaultConfiguration: _ctx.onLoadDefault\n      }, null, 8, [\"title\", \"period\", \"rows\", \"columns\", \"headerInfoList\", \"validationErrors\", \"showValidationStatus\", \"onReportConfiguration\", \"onDefaultConfiguration\"])\n    ]),\n    _: 1\n  }))\n}","\nimport { defineComponent } from 'vue'\nimport ReportMixin from \"@/apps/ART/views/reports/ReportMixin.vue\"\nimport { DisaggregatedReportService } from \"@/apps/ART/services/reports/disaggregated_service\"\nimport { REGIMENS } from \"@/apps/ART/services/reports/regimen_report_service\"\nimport { toastWarning } from '@/utils/Alerts'\nimport { isEmpty } from \"lodash\"\nimport ReportTemplate from \"@/apps/ART/views/reports/TableReportTemplate.vue\"\nimport table from \"@/components/DataViews/tables/ReportDataTable\"\nimport { IonPage } from \"@ionic/vue\"\nimport { MohCohortReportService } from \"@/apps/ART/services/reports/moh_cohort_service\"\nimport { Option } from '@/components/Forms/FieldInterface'\nimport { AGE_GROUPS } from \"@/apps/ART/services/reports/patient_report_service\"\n\nexport default defineComponent({\n    mixins: [ReportMixin],\n    components: { ReportTemplate, IonPage },\n    data: () => ({\n        title: 'Disaggregated report',\n        columns: [\n            [\n                table.thTxt('Age group'),\n                table.thTxt('Gender'),\n                table.thNum('Tx new (new on ART)'),\n                table.thNum('TX curr (receiving ART)'),\n                table.thNum('TX curr (received IPT)'),\n                table.thNum('TX curr (screened for TB)'),\n                ...(REGIMENS.map(r => table.thNum(r))),\n                table.thNum('Unknown'),\n                table.thNum('Total (regimen)')\n            ]\n        ],\n        errors: [] as string[],\n        showStatus: false as boolean,\n        rowDataRefs: [\n            'txNew', \n            'txCurr', \n            'txGivenIpt', \n            'txScreenTB', \n            ...REGIMENS,\n            'N/A', \n            'regimenTotals'\n        ],\n        dataRefLabels: {\n           'txNew': 'Tx new (new on ART)',\n           'txCurr': 'Tx curr (receiving ART)',\n           'txGivenIpt': 'TX curr (received IPT)',\n           'txScreenTB': 'TX curr (screened for TB)',\n           'N/A': 'Unknown',\n           'regimenTotals': 'Regimen Totals'\n        } as any,\n        aggregations: [] as any,\n        mohCohort: {} as any,\n        maleFemaleAgeGroupData: {} as any,\n        headerList: [] as Array<Option>,\n        canValidate: false as boolean,\n        onLoadDefault: null as any,\n        sortIndexes: {} as Record<string | number, Array<any>>\n    }),\n    async created() {\n        const { query }  = this.$route\n        /** Check for default url params for this report */\n        if (query.start_date && query.end_date && query.quarter) {\n            this.onLoadDefault = () =>\n                this.onPeriod({\n                    quarter: {\n                        label: query.quarter,\n                        other: {\n                            start: query.start_date,\n                            end: query.end_date\n                        }\n                    }\n                },{})\n        }\n    },\n    watch: {\n        async canValidate(doIt: boolean) {\n            if (doIt) await this.validateReport()\n        }\n    },\n    computed: {\n        rows(): any {\n            return Object.keys(this.sortIndexes)\n                .sort((a, b) => parseInt(a) - parseInt(b))\n                .reduce((r: any, i: any) => r.concat(this.sortIndexes[i]), [])\n        }\n    },\n    methods: {\n        async onPeriod(form: any, config: any, rebuildCache=false) {\n            this.canValidate = false\n            this.maleFemaleAgeGroupData = {}\n            this.aggregations = []\n            this.sortIndexes = {}\n            this.errors = []\n            this.report = new DisaggregatedReportService()\n            this.mohCohort = new MohCohortReportService()\n            if (form.quarter) {\n                this.mohCohort.setQuarter(form.quarter.label)\n                this.mohCohort.setStartDate(form.quarter.other.start)\n                this.mohCohort.setEndDate(form.quarter.other.end)\n                this.report.setQuarter(form.quarter.label)\n                this.report.setStartDate(form.quarter.other.start)\n                this.report.setEndDate(form.quarter.other.end)\n                this.period = form.quarter.label === 'Custom'\n                    ? this.report.getDateIntervalPeriod()\n                    : form.quarter.label\n            } else {\n                this.mohCohort.setStartDate(config.start_date)\n                this.mohCohort.setEndDate(config.end_date)\n                this.report.setStartDate(config.start_date)\n                this.report.setEndDate(config.end_date)\n                this.period = this.report.getDateIntervalPeriod()\n            }\n            this.report.setRebuildOutcome(rebuildCache)\n            const isInit = await this.report.init()\n            if (!isInit) {\n                return toastWarning('Unable to initialise report')\n            }\n            await this.setTableRows()\n            this.canValidate = true\n        },\n        async setTableRows() {\n            await this.setFemaleRows(1)\n            await this.setMaleRows(2)\n            await this.setTotalMalesRow(3)\n            await this.setFemalePregnantRows(4)\n            await this.setFemaleBreastFeedingRows(6)\n            await this.setFemaleNotPregnantRows(5)\n        },\n        getColumnLabel(col: string) {\n            return col in this.dataRefLabels ? this.dataRefLabels[col] : col\n        },\n        getTotals(compareFunction: Function){\n            return this.aggregations\n                .filter((i: any) => compareFunction(i))\n                .reduce((accum: any, cur: any) => accum.concat(cur.data), [])\n        },\n        addAggregation(col: string, gender: string, data = []) {\n            this.aggregations.push({ col, gender, data })\n        },\n        async getRegimenRows(group: string, gender: string) {\n            let totals: any = []\n            const row: any = []\n            const distribution = await this.report.getRegimenDistribution()\n            const refs = [...REGIMENS, 'N/A']\n            refs.forEach((i: any) => {\n                if (distribution[i]) totals = totals.concat(distribution[i])\n                row.push(this.drill(distribution[i], `Regimen ${i} | ${group} | ${gender}`))\n                this.addAggregation(i, gender, distribution[i])\n            })\n            row.push(this.drill(totals, `Regimen Totals | ${group} | ${gender}`))\n            this.addAggregation('regimenTotals', gender, totals)\n            return row\n        },\n        getValue(prop: string, gender: string, data: any) {\n            switch(prop) {\n                case 'tx_given_ipt':\n                    return this.report.getTxIpt()\n                case 'tx_screened_for_tb':\n                    return this.report.getTxCurrTB()\n                default:\n                    return gender in data ? data[gender][prop] : []\n            }\n        },\n        setTotalMalesRow(sortIndex: number) {\n            const maleTD = (column: string, columnDescription: string) => {\n                const data = this.aggregations.filter((a: any) => a.gender === 'Male' && a.col === column)\n                    .reduce((accum: any, cur: any) => accum.concat(cur.data), []) \n                return this.drill(data, columnDescription)\n            }\n            const rows: any = this.rowDataRefs.map(columnName => \n                maleTD(columnName, `${this.getColumnLabel(columnName)} | All Male`)\n            )\n            this.sortIndexes[sortIndex] = [[table.td('All'), table.td('Male'), ...rows]]\n        },\n        setFemaleNotPregnantRows(sortIndex: number) {\n            // Gets all pregnant females from a particular column and checks if given patient ID \n            // Is in the list\n            const isPregnant = (patientID: number, column: string) => this.aggregations\n                .filter((a: any) => a.gender.match(/fp|fbf/i) && a.col === column)\n                .reduce((accum: any, cur: any) => accum.concat(cur.data || []), [])\n                .includes(patientID)\n            // Get total sum of all females by a particular column\n            const fnpTD = (column: string, columnDescription: string) => {\n                const data = this.aggregations.filter((a: any) => a.gender === 'Female' && a.col === column)\n                    .reduce((accum: any, cur: any) => accum.concat(cur.data.filter((i: any) => !isPregnant(i, column))), [])\n                return this.drill(data, columnDescription)\n            }\n            const rows: any = this.rowDataRefs.map(column => \n                fnpTD(column, `${this.getColumnLabel(column)} | FNP`)\n            )\n            this.sortIndexes[sortIndex] = [[table.td('All'), table.td('FNP'), ...rows]]\n        },\n        setFemaleRows(sortIndex: number) {\n            this.report.setGender('female')\n            return this.setRows(sortIndex, 'F', AGE_GROUPS, 'Female')\n        },\n        setMaleRows(sortIndex: number) {\n            this.report.setGender('male')\n            return this.setRows(sortIndex, 'M', AGE_GROUPS, 'Male')\n        },\n        setFemalePregnantRows(sortIndex: number) {\n            this.report.setGender('pregnant')\n            return this.setRows(sortIndex, 'F', ['All'], 'FP', 'Pregnant')\n        },\n        setFemaleBreastFeedingRows(sortIndex: number) {\n            this.report.setGender('breastfeeding')\n            return this.setRows(sortIndex, 'F', ['All'], 'FBf', 'Breastfeeding')\n        },\n        async setRows(sortIndex: number, category: string, ageGroups: string[], gender: string, otherAgeGroup='') {\n            for(const i in ageGroups) {\n                let txNew = []\n                let txCurr= []\n                let txGivenIpt = []\n                let txScreenTB = []\n                const group = otherAgeGroup || ageGroups[i]\n                this.report.setAgeGroup(group)\n\n                if (!(group in this.maleFemaleAgeGroupData)) {\n                    const cohort = await this.report.getCohort()\n                    this.report.setRebuildOutcome(false)\n                    this.maleFemaleAgeGroupData[group] = !isEmpty(cohort) ? cohort[group] : {}\n                }\n\n                if (!isEmpty(this.maleFemaleAgeGroupData[group])) {\n                    const value = async (prop: string) => this.getValue(\n                        prop, category, this.maleFemaleAgeGroupData[group]\n                    )\n                    txNew = await value('tx_new')\n                    txCurr= await value('tx_curr')\n                    txGivenIpt = await value('tx_given_ipt')\n                    txScreenTB = await value('tx_screened_for_tb')\n                    this.addAggregation('txNew', gender, txNew)\n                    this.addAggregation('txCurr', gender, txCurr)\n                    this.addAggregation('txGivenIpt', gender, txGivenIpt)    \n                    this.addAggregation('txScreenTB', gender, txScreenTB)\n                }\n\n                switch(this.report.getGender()) {\n                    case 'breastfeeding':\n                        this.report.setAgeGroup('All')\n                        this.report.setGender('Fbf')\n                        break\n                    case 'pregnant':\n                        this.report.setAgeGroup('All')\n                        this.report.setGender('FP')\n                        break\n                }\n\n                if (!this.sortIndexes[sortIndex]) this.sortIndexes[sortIndex] = []\n\n                this.sortIndexes[sortIndex].push([\n                    table.td(ageGroups[i]),\n                    table.td(this.formatGender(gender)),\n                    this.drill(txNew, `Tx new (new on ART) | ${group} | ${gender}`),\n                    this.drill(txCurr, `Tx curr (receiving ART) | ${group} | ${gender}`),\n                    this.drill(txGivenIpt, `TX curr (received IPT) | ${group} | ${gender}`),\n                    this.drill(txScreenTB, `TX curr (screened for TB) | ${group} | ${gender}`),\n                    ...(await this.getRegimenRows(group, gender))\n                ])\n            }\n        },\n        setHeaderInfoList(totalAlive: Array<any>) {\n            this.headerList = [\n                { \n                    label: 'Total Alive and on ART', \n                    value: totalAlive.length,\n                    other: {\n                        onclick: () => this.runTableDrill(totalAlive, 'Total Alive on ART')\n                    }\n                }\n            ]\n        },\n        async validateReport() {\n            const totalAlive = this.getTotals((i: any) => i.col === 'txCurr' && i.gender.match(/male|female/i))\n            this.setHeaderInfoList(totalAlive)\n            const validations: any = {\n                'total_alive_and_on_art' : {\n                    param: totalAlive.length,\n                    check: (i: number, p: number) => i != p,\n                    error: (i: number, p: number) => `\n                        Total alive of <b>${p}</b>\n                        Does not match total alive of <b>${i}</b> on MOH report\n                    `\n                }\n            }\n            const s = this.mohCohort.validateIndicators(validations, (errors: string[]) => this.errors = errors)\n            if (s === -1) this.errors = ['Report not validated. Run the MoH cohort report for similar reporting period and then run this report']\n        }\n    }\n})\n","import { render } from \"./MohDisaggregatedReport.vue?vue&type=template&id=846bdfd2&ts=true\"\nimport script from \"./MohDisaggregatedReport.vue?vue&type=script&lang=ts\"\nexport * from \"./MohDisaggregatedReport.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/projects/malawi-emr/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { ArtReportService } from \"./art_report_service\";\nimport { AGE_GROUPS } from \"./patient_report_service\";\n\nexport class DisaggregatedReportService extends ArtReportService {\n    gender: string;\n    ageGroup: string;\n    initialize: boolean;\n    rebuildOutcome: boolean;\n\n    constructor() {\n        super()\n        this.gender = ''\n        this.ageGroup = AGE_GROUPS[0]\n        this.initialize = true\n        this.rebuildOutcome = true\n    }\n\n    async init() {\n        this.initialize = true\n        const req = await this.getCohort()\n        if (req && req.temp_disaggregated === 'created') {\n            this.initialize = false\n            return true\n        }\n        return false\n    }\n\n    setAgeGroup(ageGroup: string) {\n        this.ageGroup = ageGroup\n    }\n\n    setInitialization(isInit: boolean) {\n        this.initialize = isInit\n    }\n\n    setRebuildOutcome(isRebuild: boolean) {\n        this.rebuildOutcome = isRebuild\n    }\n\n    setGender(gender: string) {\n        this.gender = gender\n    }\n\n    getGender() {\n        return this.gender\n    }\n\n    getCohort() {\n        return this.getReport('cohort_disaggregated', {\n            'age_group': `${this.ageGroup}`,\n            'rebuild_outcome': `${this.rebuildOutcome}`,\n            'initialize': `${this.initialize}`\n        })\n    }\n\n    getTxIpt() {\n        return this.getReport('clients_given_ipt', { \n            'gender': this.gender, 'age_group': `${this.ageGroup}` \n        })\n    }\n\n    getTxCurrTB() {\n        return this.getReport('screened_for_tb', { \n            'gender': this.gender, 'age_group': `${this.ageGroup}` \n        })\n    }\n\n    getRegimenDistribution() {\n        return this.getReport('disaggregated_regimen_distribution', {\n            'gender': `${this.gender}`, 'age_group': `${this.ageGroup}`\n        })\n    }\n}\n","\nimport { Service } from \"@/services/service\"\nimport { defineComponent } from 'vue'\nimport { Field } from '@/components/Forms/FieldInterface'\nimport { generateDateFields } from \"@/utils/HisFormHelpers/MultiFieldDateHelper\"\nimport { Patientservice } from \"@/services/patient_service\"\nimport HisDate from \"@/utils/Date\"\nimport { modalController } from \"@ionic/vue\";\nimport DrilldownTable from \"@/apps/ART/views/reports/BasicReportTemplate.vue\"\nimport { ArtReportService } from \"@/apps/ART/services/reports/art_report_service\"\nimport { FieldType } from \"@/components/Forms/BaseFormElements\"\nimport { Option } from '@/components/Forms/FieldInterface'\nimport Validation from \"@/components/Forms/validations/StandardValidations\"\nimport table from \"@/components/DataViews/tables/ReportDataTable\"\nimport { isArray } from \"lodash\"\nimport { toGenderString } from \"@/utils/Strs\"\n\nexport default defineComponent({\n    data: () => ({\n        fields: [] as Array<Field>,\n        report: {} as any,\n        reportReady: false as boolean,\n        period: '' as string,\n        startDate: '' as string,\n        endDate: '' as string,\n        customFileName: '' as string,\n        drillDownCache: {} as Record<number, Array<any>>\n    }),\n    methods: {\n        formatGender(gender: string) {\n            const upCaseGender = `${gender}`.toUpperCase()\n            if (upCaseGender === 'M' || upCaseGender === 'MALE') {\n                return 'Male'\n            }\n            if (upCaseGender === 'F' || upCaseGender === 'FEMALE') {\n                return 'Female'\n            }\n            if (/fbf|fnp|fp/i.test(gender)) {\n                return upCaseGender\n            }\n            return gender\n        },\n        toDate(date: string) {\n            return HisDate.toStandardHisDisplayFormat(date)\n        },\n        sortByArvNumber(data: Array<any>, attr='arv_number') {\n            try {\n                return data.sort((a: any, b: any) => this.getArvInt(a[attr]) > this.getArvInt(b[attr]) ? 1 : -1)\n            } catch(e) {\n                console.error(e)\n                return data\n            }\n        },\n        getArvInt(arv: string) {\n            if (typeof arv === 'string') {\n                const [prfx, art, arvNumStr] = arv.split('-')\n                const arvNumInt = parseInt(arvNumStr)\n                return typeof arvNumInt === 'number' ? arvNumInt : 0 \n            }\n            return 0\n        },\n        tdARV(arv: string, params={}) {\n            return table.td(arv, { sortValue: this.getArvInt(arv), ...params})\n        },\n        confirmPatient(patient: number) {\n            return this.$router.push(`/patients/confirm?person_id=${patient}`)\n        },\n        async drilldownAsyncRows(title: string, columns: Array<any>, asyncRows: Function, canExport=true) {\n            const modal = await modalController.create({\n                component: DrilldownTable,\n                cssClass: 'large-modal',\n                componentProps: { \n                    title, \n                    columns, \n                    asyncRows,\n                    canExport,\n                    showFilters: true,\n                    rowsPerPage: 50,\n                    paginated: true,\n                    showReportStamp: false,\n                    footerColor: 'light',\n                    onFinish: () => modalController.dismiss()\n                }\n            })\n            modal.present()\n        },\n        async drilldownData(title: string, columns: Array<any>, rows: Array<any>, rowParser: any) {\n            const modal = await modalController.create({\n                component: DrilldownTable,\n                cssClass: 'large-modal',\n                componentProps: { \n                    title, \n                    columns, \n                    rows,\n                    rowParser,\n                    rowsPerPage: 50,\n                    showFilters: true,\n                    paginated: true,\n                    showReportStamp: false,\n                    footerColor: 'light',\n                    onFinish: () => modalController.dismiss()\n                }\n            })\n            modal.present()\n        },\n        getDefaultDrillDownTable() {\n            const columns = [\n                [\n                    table.thTxt('ARV number'), \n                    table.thTxt('Gender'),\n                    table.thTxt('Birth Date'), \n                    table.thTxt('Actions')\n                ]\n            ]\n            const rowParser = async (tableRows: Array<any[]>) => {\n                let ARV_NUM_INDEX = 0\n                const t = tableRows.map(async (defaultRow: Array<any>) => {\n                    let id: any = null\n                    let index: null | number = null\n                    if (isArray(defaultRow)) {\n                        const [num, key ] = defaultRow\n                        index = num\n                        if (key in this.drillDownCache) {\n                            const [oldIndex, ...rest] = this.drillDownCache[key]\n                            return [index, ...rest] // Assign new index number and maintain patient record\n                        }\n                    } else {\n                        id = defaultRow\n                        if (id in this.drillDownCache) {\n                            return this.drillDownCache[id]\n                        }\n                    }\n    \n                    const data = await Patientservice.findByID(id)\n                    const patient = new Patientservice(data)\n                    const row = []\n                    if (index) {\n                        ARV_NUM_INDEX = 1\n                        row.push(index)\n                    } \n                    row.push(this.tdARV(patient.getArvNumber()))\n                    row.push(table.td(this.formatGender(patient.getGender())))\n                    row.push(table.tdDate(patient.getBirthdate().toString()))\n                    row.push(table.tdBtn('Show', async () => {\n                        await modalController.dismiss({})\n                        this.$router.push({ path: `/patient/dashboard/${id}`})\n                    }))\n                    this.drillDownCache[id] = row\n                    return row\n                })\n                const rows = await Promise.all(t)\n                return rows.sort((a: any, b: any) => \n                        a[ARV_NUM_INDEX].sortValue > b[ARV_NUM_INDEX].sortValue \n                        ? 1 : -1)\n            }\n            return { rowParser, columns }\n        },\n        runTableDrill(data: any, title='Drilldown patients') {\n            const { columns, rowParser } = this.getDefaultDrillDownTable()\n            this.drilldownData(title, columns, data, rowParser)\n        },\n        drill(values: Array<number>, title='Drill table') {\n            if (values && values.length > 0) {\n                return table.tdLink(\n                    values.length, \n                    () => this.runTableDrill(values, title)\n                )\n            }\n            return table.td(0)\n        },\n        getQuaterOptions() {\n            const quarters = ArtReportService.getReportQuarters()\n            return quarters.map((q: any) => ({\n                label: q.name, value: q.start, other: q\n            }))\n        },\n        getDateDurationFields(\n            useQuarter=false, \n            setCustomQuarterPeriod=false, \n            maxQuarter=5, \n            maxDate=Service.getSessionDate() as string | null,\n        ): Array<Field> {\n            const minDate = '2000-01-01'\n            return [\n                {\n                    id: 'quarter',\n                    helpText: 'Select Quarter',\n                    type: FieldType.TT_SELECT,\n                    condition: () => useQuarter,\n                    validation: (val: Option) => Validation.required(val),\n                    options: () => {\n                        const quarters = ArtReportService.getReportQuarters(maxQuarter)\n                        let items: Array<Option> = quarters.map((q: any) => ({\n                            label: q.name,\n                            value: q.start,\n                            other: q\n                        }))\n                        if (setCustomQuarterPeriod) {\n                            items = [\n                                {\n                                    label: 'Set custom period',\n                                    value: 'custom_period',\n                                    other: {}\n                                },\n                                ...items\n                            ]\n                        }\n                        return items\n                    }\n                },\n                ...generateDateFields({\n                    id: 'start_date',\n                    helpText: 'Start',\n                    required: true,\n                    condition: (f: any) => f.quarter && f.quarter.value === 'custom_period' || !useQuarter,\n                    minDate: () => minDate,\n                    maxDate: () => maxDate,\n                    estimation: {\n                        allowUnknown: false\n                    },\n                    computeValue: (date: string) => date \n                }),\n                ...generateDateFields({\n                    id: 'end_date',\n                    helpText: 'End',\n                    required: true,\n                    condition: (f: any) => f.quarter && f.quarter.value === 'custom_period' || !useQuarter,\n                    unload: (d: any, s: any, f: any, c: any) => {\n                        if (s === 'next') {\n                            this.endDate = c.end_date\n                        }\n                    },\n                    minDate: (_: any, c: any) => c.start_date,\n                    maxDate: () => maxDate,\n                    estimation: {\n                        allowUnknown: false\n                    },\n                    computeValue: (date: string) => date\n                })\n            ]\n        }\n    }\n})\n","import script from \"./ReportMixin.vue?vue&type=script&lang=ts\"\nexport * from \"./ReportMixin.vue?vue&type=script&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { resolveComponent as _resolveComponent, vShow as _vShow, createVNode as _createVNode, withDirectives as _withDirectives, createElementVNode as _createElementVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, createElementBlock as _createElementBlock, withModifiers as _withModifiers, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-f22df5d8\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = [\"innerHTML\"]\nconst _hoisted_2 = { class: \"header-text-list\" }\nconst _hoisted_3 = [\"onClick\"]\nconst _hoisted_4 = { key: 1 }\nconst _hoisted_5 = [\"innerHTML\"]\nconst _hoisted_6 = { key: 0 }\nconst _hoisted_7 = { class: \"report-content\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_his_standard_form = _resolveComponent(\"his-standard-form\")!\n  const _component_ion_title = _resolveComponent(\"ion-title\")!\n  const _component_ion_img = _resolveComponent(\"ion-img\")!\n  const _component_ion_thumbnail = _resolveComponent(\"ion-thumbnail\")!\n  const _component_ion_chip = _resolveComponent(\"ion-chip\")!\n  const _component_ion_label = _resolveComponent(\"ion-label\")!\n  const _component_ion_item = _resolveComponent(\"ion-item\")!\n  const _component_ion_toolbar = _resolveComponent(\"ion-toolbar\")!\n  const _component_ion_header = _resolveComponent(\"ion-header\")!\n  const _component_report_table = _resolveComponent(\"report-table\")!\n  const _component_ion_content = _resolveComponent(\"ion-content\")!\n  const _component_ion_footer = _resolveComponent(\"ion-footer\")!\n  const _component_his_footer = _resolveComponent(\"his-footer\")!\n  const _component_ion_page = _resolveComponent(\"ion-page\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _withDirectives(_createVNode(_component_his_standard_form, {\n      onOnFinish: _ctx.onFinish,\n      skipSummary: true,\n      fields: _ctx.fields\n    }, null, 8, [\"onOnFinish\", \"fields\"]), [\n      [_vShow, !_ctx.canShowReport]\n    ]),\n    (_ctx.canShowReport)\n      ? (_openBlock(), _createBlock(_component_ion_page, { key: 0 }, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_header, null, {\n              default: _withCtx(() => [\n                _createVNode(_component_ion_toolbar, null, {\n                  default: _withCtx(() => [\n                    (_ctx.showtitleOnly)\n                      ? (_openBlock(), _createBlock(_component_ion_title, { key: 0 }, {\n                          default: _withCtx(() => [\n                            _createElementVNode(\"span\", { innerHTML: _ctx.title }, null, 8, _hoisted_1)\n                          ]),\n                          _: 1\n                        }))\n                      : _createCommentVNode(\"\", true),\n                    (!_ctx.showtitleOnly)\n                      ? (_openBlock(), _createBlock(_component_ion_item, { key: 1 }, {\n                          default: _withCtx(() => [\n                            _createVNode(_component_ion_thumbnail, { slot: \"start\" }, {\n                              default: _withCtx(() => [\n                                _createVNode(_component_ion_img, { src: _ctx.logo }, null, 8, [\"src\"])\n                              ]),\n                              _: 1\n                            }),\n                            _createVNode(_component_ion_label, null, {\n                              default: _withCtx(() => [\n                                _createElementVNode(\"ul\", _hoisted_2, [\n                                  _createElementVNode(\"li\", null, [\n                                    _createTextVNode(\"Title \"),\n                                    _createElementVNode(\"b\", null, _toDisplayString(_ctx.title), 1)\n                                  ]),\n                                  _createElementVNode(\"li\", null, [\n                                    _createTextVNode(\"Period \"),\n                                    _createElementVNode(\"b\", null, _toDisplayString(_ctx.period), 1)\n                                  ]),\n                                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.headerInfoList, (info, index) => {\n                                    return (_openBlock(), _createElementBlock(\"li\", { key: index }, [\n                                      _createTextVNode(_toDisplayString(info.label) + \" \", 1),\n                                      (info && info?.other?.onclick)\n                                        ? (_openBlock(), _createElementBlock(\"a\", {\n                                            key: 0,\n                                            href: \"#\",\n                                            onClick: _withModifiers(($event: any) => (info.other.onclick()), [\"prevent\"])\n                                          }, _toDisplayString(info.value), 9, _hoisted_3))\n                                        : _createCommentVNode(\"\", true),\n                                      (info && !info?.other?.onclick)\n                                        ? (_openBlock(), _createElementBlock(\"b\", _hoisted_4, [\n                                            _createElementVNode(\"span\", {\n                                              innerHTML: info.value\n                                            }, null, 8, _hoisted_5)\n                                          ]))\n                                        : _createCommentVNode(\"\", true)\n                                    ]))\n                                  }), 128)),\n                                  (_ctx.showValidationStatus)\n                                    ? (_openBlock(), _createElementBlock(\"li\", _hoisted_6, [\n                                        (_ctx.hasErrors)\n                                          ? (_openBlock(), _createBlock(_component_ion_chip, {\n                                              key: 0,\n                                              onClick: _ctx.showErrors,\n                                              color: \"danger\"\n                                            }, {\n                                              default: _withCtx(() => [\n                                                _createElementVNode(\"b\", null, _toDisplayString(_ctx.errorCount), 1),\n                                                _createTextVNode(\" Error(s) found. Click for more \")\n                                              ]),\n                                              _: 1\n                                            }, 8, [\"onClick\"]))\n                                          : _createCommentVNode(\"\", true),\n                                        (!_ctx.hasErrors)\n                                          ? (_openBlock(), _createBlock(_component_ion_chip, {\n                                              key: 1,\n                                              color: \"success\"\n                                            }, {\n                                              default: _withCtx(() => [\n                                                _createTextVNode(\" Report is Consistent \")\n                                              ]),\n                                              _: 1\n                                            }))\n                                          : _createCommentVNode(\"\", true)\n                                      ]))\n                                    : _createCommentVNode(\"\", true)\n                                ])\n                              ]),\n                              _: 1\n                            })\n                          ]),\n                          _: 1\n                        }))\n                      : _createCommentVNode(\"\", true)\n                  ]),\n                  _: 1\n                })\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_ion_content, null, {\n              default: _withCtx(() => [\n                _createElementVNode(\"div\", _hoisted_7, [\n                  _createVNode(_component_report_table, {\n                    rows: _ctx.rows,\n                    columns: _ctx.columns,\n                    showFilters: _ctx.showFilters,\n                    config: {\n            ..._ctx.config,\n            tableCssTheme: _ctx.tableCssTheme\n          },\n                    onOnActiveColumns: _ctx.onActiveColumns,\n                    onOnActiveRows: _ctx.onActiveRows\n                  }, null, 8, [\"rows\", \"columns\", \"showFilters\", \"config\", \"onOnActiveColumns\", \"onOnActiveRows\"])\n                ])\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_ion_footer, null, {\n              default: _withCtx(() => [\n                _createVNode(_component_ion_toolbar, null, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_ion_chip, { color: \"primary\" }, {\n                      default: _withCtx(() => [\n                        _createTextVNode(\"Date Created: \"),\n                        _createElementVNode(\"b\", null, _toDisplayString(_ctx.date), 1)\n                      ]),\n                      _: 1\n                    }),\n                    _createVNode(_component_ion_chip, { color: \"primary\" }, {\n                      default: _withCtx(() => [\n                        _createTextVNode(\"His-Core Version: \"),\n                        _createElementVNode(\"b\", null, _toDisplayString(_ctx.coreVersion), 1)\n                      ]),\n                      _: 1\n                    }),\n                    _createVNode(_component_ion_chip, { color: \"primary\" }, {\n                      default: _withCtx(() => [\n                        _createTextVNode(\"API Version: \"),\n                        _createElementVNode(\"b\", null, _toDisplayString(_ctx.apiVersion), 1)\n                      ]),\n                      _: 1\n                    })\n                  ]),\n                  _: 1\n                })\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_his_footer, { btns: _ctx.btns }, null, 8, [\"btns\"])\n          ]),\n          _: 1\n        }))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}","import { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-0ed0c7a2\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = [\"innerHTML\"]\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ion_title = _resolveComponent(\"ion-title\")!\n  const _component_ion_toolbar = _resolveComponent(\"ion-toolbar\")!\n  const _component_ion_header = _resolveComponent(\"ion-header\")!\n  const _component_ion_item = _resolveComponent(\"ion-item\")!\n  const _component_ion_list = _resolveComponent(\"ion-list\")!\n  const _component_ion_grid = _resolveComponent(\"ion-grid\")!\n  const _component_ion_button = _resolveComponent(\"ion-button\")!\n  const _component_ion_footer = _resolveComponent(\"ion-footer\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(_component_ion_header, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_title, null, {\n              default: _withCtx(() => [\n                _createTextVNode(_toDisplayString(_ctx.title), 1)\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_grid, { class: \"selector\" }, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_list, null, {\n          default: _withCtx(() => [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.errors, (error, index) => {\n              return (_openBlock(), _createBlock(_component_ion_item, {\n                class: \"his-md-text ion-padding\",\n                key: index\n              }, {\n                default: _withCtx(() => [\n                  _createElementVNode(\"span\", {\n                    innerHTML: `(${index + 1}) ${error}`\n                  }, null, 8, _hoisted_1)\n                ]),\n                _: 2\n              }, 1024))\n            }), 128))\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_footer, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_button, {\n              class: \"close-btn\",\n              color: \"danger\",\n              size: \"large\",\n              onClick: _ctx.closeModal,\n              slot: \"end\"\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\" Close \")\n              ]),\n              _: 1\n            }, 8, [\"onClick\"])\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    })\n  ], 64))\n}","\nimport { defineComponent } from \"vue\";\nimport {\n  IonList,\n  IonItem,\n  IonButton,\n  IonGrid,\n  IonFooter,\n  IonToolbar,\n  IonHeader,\n  IonTitle,\n  modalController \n} from \"@ionic/vue\"; \n\nexport default defineComponent({\n  components: { \n    IonGrid, \n    IonList,\n    IonItem, \n    IonFooter,\n    IonButton,\n    IonToolbar,\n    IonHeader,\n    IonTitle,\n  },\n  props: {\n    title: {\n      type: String,\n      default: 'Report Errors'\n    },\n    errors: {\n      type: Array,\n      required: true\n    }\n  },\n  methods: {\n    async closeModal() {\n      await modalController.dismiss({})\n    }\n  }\n})\n","import { render } from \"./ReportErrors.vue?vue&type=template&id=0ed0c7a2&scoped=true&ts=true\"\nimport script from \"./ReportErrors.vue?vue&type=script&lang=ts\"\nexport * from \"./ReportErrors.vue?vue&type=script&lang=ts\"\n\nimport \"./ReportErrors.vue?vue&type=style&index=0&id=0ed0c7a2&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/daniel/projects/malawi-emr/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-0ed0c7a2\"]])\n\nexport default __exports__","\nimport { defineComponent, PropType } from \"vue\";\nimport HisFooter from \"@/components/HisDynamicNavFooter.vue\";\nimport ReportTable from \"@/components/DataViews/tables/ReportDataTable.vue\"\nimport { Field } from '@/components/Forms/FieldInterface'\nimport { toCsv, toTablePDF } from \"@/utils/Export\"\nimport { toExportableFormat, ColumnInterface, RowInterface} from \"@/components/DataViews/tables/ReportDataTable\" \nimport HisStandardForm from \"@/components/Forms/HisStandardForm.vue\";\nimport { \n  IonPage,\n  IonHeader,\n  IonContent,\n  IonFooter,\n  IonToolbar,\n  IonLabel,\n  IonThumbnail,\n  IonItem,\n  IonChip,\n  IonImg,\n  loadingController,\n  modalController\n} from \"@ionic/vue\"\nimport { alertConfirmation, toastDanger } from \"@/utils/Alerts\";\nimport Img from \"@/utils/Img\"\nimport { Service } from \"@/services/service\"\nimport dayjs from \"dayjs\";\nimport { isEmpty } from \"lodash\";\nimport ReportErrors from \"@/apps/ART/Components/ReportErrors.vue\"\nimport { EncryptionOptions } from \"jspdf\";\nimport { infoActionSheet } from \"@/utils/ActionSheets\";\nimport { removeTags } from \"@/utils/Strs\";\n\nexport default defineComponent({\n  components: { \n    HisStandardForm,   \n    IonHeader,\n    ReportTable, \n    HisFooter, \n    IonPage, \n    IonContent, \n    IonToolbar,\n    IonChip,\n    IonFooter,\n    IonLabel,\n    IonThumbnail,\n    IonItem,\n    IonImg\n  },\n  props: {\n    encryptPDF: {\n      type: Boolean,\n      default: false\n    },\n    showValidationStatus: {\n      type: Boolean,\n      default: false\n    },\n    validationErrors: {\n      type: Array,\n      default: () => []\n    },\n    config: {\n      type: Object\n    },\n    headerInfoList: {\n      type: Array,\n      default: () => []\n    },\n    reportPrefix: {\n      type: String,\n      default: 'HIS-Core'\n    },\n    reportLogo: {\n      type: String,\n    },\n    showtitleOnly: {\n      type: Boolean,\n      default: false\n    },\n    title: {\n      type: String,\n      required: true,\n    },\n    period: {\n      type: String\n    },\n    showFilters: {\n      type: Boolean,\n      default: false\n    },\n    fields: {\n      type: Object as PropType<Field[]>\n    },\n    columns: {\n      type: Object as PropType<Array<ColumnInterface[]>>,\n      required: true\n    },\n    rows: {\n      type: Object as PropType<Array<RowInterface[]>>,\n      required: true\n    },\n    customBtns: {\n      type: Array,\n      default: () => []\n    },\n    hasServerSideCaching: {\n      type: Boolean,\n      default: false\n    },\n    canExportPDf: {\n      type: Boolean,\n      default: true\n    },\n    canExportCsv: {\n      type: Boolean,\n      default: true\n    },\n    enabledPDFHorizontalPageBreak: {\n      type: Boolean,\n      default: false\n    },\n    onFinishBtnAction: {\n      type: Function\n    },\n    onReportConfiguration: {\n      type: Function,\n      required: true\n    },\n    onDefaultConfiguration: {\n      type: Function\n    },\n    customFileName: {\n      type: String,\n      default: ''\n    }\n  },\n  data: () => ({\n    date: '',\n    formData: {} as any,\n    btns: [] as Array<any>,\n    computeFormData: {} as any,\n    activeColumns: [] as any,\n    activeRows: [] as any,\n    isLoadingData: false as boolean,\n    canShowReport: false as boolean,\n    siteUUID: Service.getSiteUUID() as string,\n    apiVersion: Service.getApiVersion(),\n    coreVersion: Service.getCoreVersion(),\n    artVersion: Service.getAppVersion(),\n    tableCssTheme: 'art-report-theme'\n  }),\n  watch: {\n    validationErrors: {\n      handler(errors: string[]) {\n        if (!isEmpty(errors)) this.showErrors()\n      },\n      deep: true,\n      immediate: true\n    },\n    fields: {\n      handler(fields: Array<any>) {\n        if (!isEmpty(fields)) {\n          this.btns.forEach(b => {\n            if (b.name === 'Back') {\n              b.visible = true\n            } \n          })\n        }\n      },\n      immediate: true\n    }\n  },\n  computed: {\n    logo(): string {\n      if (!this.reportLogo && typeof this.reportPrefix === 'string') {\n        if (this.reportPrefix.match(/pepfar/i)) {\n          return Img('login-logos/PEPFAR.png')\n        }\n        if (this.reportPrefix.match(/moh/i)) {          \n          return Img('login-logos/Malawi-Coat_of_arms_of_arms.png')\n        }\n      }\n      return Img('reports.png')\n    },\n    hasErrors(): boolean {\n      return !isEmpty(this.validationErrors)\n    },\n    errorCount(): number {\n      return this.validationErrors ? this.validationErrors.length : 0\n    }\n  },\n  methods: {\n    async showErrors() {\n      const modal = await modalController.create({\n        component: ReportErrors,\n        backdropDismiss: false,\n        cssClass: \"large-modal\",\n        componentProps: {\n          errors: this.validationErrors\n        }\n      })\n      modal.present();\n    },\n    pdfEncryptionData(): Record<\"encryption\", EncryptionOptions> {\n      const password = Service.getUserName()\n      return {\n        encryption: {\n          userPassword: password,\n          ownerPassword: password,\n          userPermissions: [\"print\"]\n        }\n      }\n    },\n    refreshTimeStamp() {\n      this.date = dayjs().format('DD/MMM/YYYY HH:MM:ss')\n    },\n    onActiveColumns(columns: any) {\n      this.activeColumns = columns\n    },\n    onActiveRows(rows: any) {\n      this.activeRows = rows\n    },\n    getFileName() {\n      return this.customFileName || `${this.reportPrefix} ${Service.getLocationName()} ${removeTags(this.title)} ${this.period}`\n    },\n    /**\n     * Loads report without depending on Field configurations\n     */\n    async onLoadDefault() {\n      this.canShowReport = true\n      await this.presentLoading()\n      try {\n        this.refreshTimeStamp()\n        if (this.onDefaultConfiguration) {\n          await this.onDefaultConfiguration()\n        }\n        loadingController.dismiss()\n      }catch(e) {\n        toastDanger(`${e}`)\n        console.error(e)\n        loadingController.dismiss()\n      }\n    },\n    /**\n     * Callback is used when a form has been submitted with report configurations\n     */\n    async onFinish(formData: any, computedData: any, shouldRebuildCache=false) {\n      this.formData = formData\n      this.computeFormData = computedData\n      this.canShowReport = true\n      await this.presentLoading()\n      try {\n        this.refreshTimeStamp()\n        await this.onReportConfiguration(\n          this.formData,\n          this.computeFormData,\n          shouldRebuildCache\n        )\n        loadingController.dismiss()\n      }catch(e) {\n        toastDanger(`${e}`)\n        console.error(e)\n        loadingController.dismiss()\n      }\n    },\n    /**Reinitiate the report with default configurations */\n    async reloadReport(shouldRebuildCache=false) {\n      if (!isEmpty(this.formData) || !isEmpty(this.computeFormData)) {\n        await this.onFinish(this.formData, this.computeFormData, shouldRebuildCache)\n        return\n      }\n      if (this.onDefaultConfiguration) {\n        await this.onLoadDefault()\n      }\n    },\n    async presentLoading() {\n      const loading = await loadingController\n        .create({\n          message: 'Please wait...',\n          backdropDismiss: false\n        })\n      await loading.present()\n    }\n  },\n  created() {\n    if (this.onDefaultConfiguration) {\n      this.onLoadDefault()\n    } \n    this.btns = this.customBtns\n    this.btns.push({\n      name: \"CSV\",\n      size: \"large\",\n      slot: \"start\",\n      color: \"primary\",\n      visible: this.canExportCsv,\n      onClick: async () => {\n        const {columns, rows} = toExportableFormat(this.activeColumns, this.activeRows, 'csvMode')\n        toCsv(\n          columns, \n          [\n            ...rows,\n            [`Date Created: ${this.date}`],\n            [`Quarter: ${this.period}`],\n            [`HIS-Core Version: ${this.coreVersion}`],\n            [`API Version: ${this.apiVersion}`],\n            [`Site UUID: ${this.siteUUID}`],\n            [`Generated by: ${Service.getUserName()}`]\n          ],\n          this.getFileName()\n        )\n      }\n    })\n    this.btns.push({\n      name: \"PDF\",\n      size: \"large\",\n      slot: \"start\",\n      color: \"primary\",\n      visible: this.canExportPDf,\n      onClick: async () => {\n        let mode: 'pdfMode' | 'ignorePDFColumnexport' = 'pdfMode'\n        if (this.encryptPDF) {\n          const option = await infoActionSheet(\n            'Security warning',\n            'PDF may contain private data that will require a password to unlock',\n            'To access private data choose Secure PDF over Regular PDF',\n            [\n              { \n                name: \"Secure PDF\",\n                slot: \"start\",\n                color: \"success\"\n              },\n              { \n                name: \"Regular PDF\",\n                slot: \"start\",\n                color: \"success\"\n              }\n            ],\n            'his-danger-color'\n          )\n          mode = option === 'Secure PDF' ? 'pdfMode' : 'ignorePDFColumnexport'\n        }\n        const {columns, rows} = toExportableFormat(this.activeColumns, this.activeRows, mode)\n        toTablePDF(\n          columns, \n          rows, \n          this.getFileName(), \n          this.enabledPDFHorizontalPageBreak,\n          this.encryptPDF && mode !='ignorePDFColumnexport' ? this.pdfEncryptionData() : {}\n        )\n      }\n    })\n    this.btns.push({\n      name: \"Refresh/Rebuild\",\n      size: \"large\",\n      slot: \"end\",\n      color: \"warning\",\n      visible: true,\n      onClick: async () => {\n        let shouldRebuildCache = false\n        if (this.hasServerSideCaching) {\n          shouldRebuildCache = await alertConfirmation('Do you want to rebuild report cache?', { header: \"Rebuild Report\"})\n        }\n        this.reloadReport(shouldRebuildCache)\n      } \n    })\n    this.btns.push({\n      name: \"Back\",\n      size: \"large\",\n      slot: \"end\",\n      color: \"primary\",\n      visible: !isEmpty(this.fields),\n      onClick: () => this.canShowReport = false\n    })\n    this.btns.push({\n      name: \"Finish\",\n      size: \"large\",\n      slot: \"end\",\n      color: \"success\",\n      visible: true,\n      onClick: () => {\n        if (this.onFinishBtnAction) {\n          this.onFinishBtnAction()\n        } else {\n          this.$router.push({ path:'/' })   \n        }\n      }\n    })\n  }\n})\n","import { render } from \"./TableReportTemplate.vue?vue&type=template&id=f22df5d8&scoped=true&ts=true\"\nimport script from \"./TableReportTemplate.vue?vue&type=script&lang=ts\"\nexport * from \"./TableReportTemplate.vue?vue&type=script&lang=ts\"\n\nimport \"./TableReportTemplate.vue?vue&type=style&index=0&id=f22df5d8&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/daniel/projects/malawi-emr/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-f22df5d8\"]])\n\nexport default __exports__","export * from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./TableReportTemplate.vue?vue&type=style&index=0&id=f22df5d8&scoped=true&lang=css\"","import { resolveDynamicComponent as _resolveDynamicComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createBlock(_resolveDynamicComponent(_ctx.formType), {\n    fields: _ctx.fields,\n    skipSummary: _ctx.skipSummary,\n    activeField: _ctx.activeField,\n    cancelDestinationPath: _ctx.cancelDestinationPath,\n    onOnFinish: _ctx.onFinish,\n    onFinish: _ctx.onFinishAction,\n    onOnIndex: _ctx.onIndex\n  }, null, 40, [\"fields\", \"skipSummary\", \"activeField\", \"cancelDestinationPath\", \"onOnFinish\", \"onFinish\", \"onOnIndex\"]))\n}","\nimport TouchScreenForm from \"@/components/Forms/TouchScreenForm.vue\";\nimport { defineComponent, PropType } from \"vue\";\nimport { Field } from \"./FieldInterface\";\n\nexport default defineComponent({\n    name: \"HisStandardForm\",\n    components: { TouchScreenForm },\n    emits: [\n        'onFinish',\n        'onIndex'\n    ],\n    data: () => ({\n        formType: 'touch-screen-form' as string\n    }),\n    props: {\n        onFinishAction: {\n            type: Function\n        },\n        skipSummary: {\n            type: Boolean,\n            default: false\n        },\n        activeField: {\n            type: String\n        },\n        fields: {\n            type: Object as PropType<Field[]>,\n            required: true\n        },\n        cancelDestinationPath: {\n            type: String,\n            required: false,\n        }\n    },\n    methods: {\n        onFinish(formData: any, computedData: any) {\n            this.$emit('onFinish', formData, computedData)\n        },\n        onIndex(i: number) {\n            this.$emit('onIndex', i)\n        }\n    }\n})\n","import { render } from \"./HisStandardForm.vue?vue&type=template&id=6daa0375&ts=true\"\nimport script from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\nexport * from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/projects/malawi-emr/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { ArtReportService } from './art_report_service';\n\nexport const REGIMENS = [\n    '0A', '2A', '4A', '5A', '6A', '7A', '8A', '9A', '10A', '11A', '12A', '13A', '14A', '15A', '16A', '17A',\n    '0P', '2P', '4PP', '4PA', '9PP', '9PA', '11PP', '11PA', '12PP', '12PA', '14PP', '14PA', '15PP', '15PA', '16P', '17PP', '17PA'\n]\n\nexport const REGIMEN_WEIGHT_DISTRIBUTION = [\n    '0A', '2A', '4A', '5A', '6A', '7A', '8A', \n    '9A', '10A', '11A', '12A', '13A', '14A', '15A', '16A', '17A',\n    '0P', '2P', '4P', '4PP', '4PA', '9P', '9PP', '9PA', '11P', '11PP', \n    '11PA', '12PP', '12PA', '14P', '14PP', '14PA', '15P', '15PP', \n    '15PA', '16P', '17P', '17PP', '17PA'\n]\nexport const WEIGHT_BAND = [\n    '10 - 13.9 Kg',\n    '14 - 19.9 Kg',\n    '20 - 24.9 Kg',\n    '25 - 29.9 Kg',\n    '3 - 3.9 Kg',\n    '30 - 34.9 Kg',\n    '35 - 39.9 Kg',\n    '4 - 4.9 Kg',\n    '40 Kg +',\n    '40 - 49.9 Kg',\n    '50 Kg +',\n    '6 - 9.9 Kg',\n    'Unknown'\n]\n\nexport const FORMULATIONS = [\n    'pellets',\n    'tablets',\n    'granules'\n]\n\nexport class RegimenReportService extends ArtReportService {\n    type: string;\n    constructor() {\n        super()\n        this.type = 'pepfar'\n    }\n\n    setReportType(type: string) {\n        this.type = type\n    }\n\n    getTptNewInitiations() {\n        return this.getReport(`programs/${this.programID}/reports/tpt_newly_initiated`)\n    }\n\n    getRegimenFormulationReport(regimen: string, formulation: string) {\n        return this.getReport(`programs/${this.programID}/reports/regimens_and_formulations`, { regimen, formulation })\n    }\n\n    getRegimenReport() {\n        return this.getReport('regimen_report', { type: this.type})\n    }\n\n    getRegimenSwitchReport(isPepfar=false) {\n        return this.getReport('regimen_switch', { pepfar: isPepfar })\n    }\n\n    getRegimensByWeight() {\n        return this.getReport(`programs/${this.programID}/reports/regimens_by_weight_and_gender`)\n    }\n    \n    getSCReport(isPepfar=false) {\n        return this.getReport('sc_arvdisp', { pepfar: isPepfar })\n    }\n    \n}\n","import { find } from \"lodash\";\nimport { ArtReportService } from \"./art_report_service\";\n\nexport enum CohortVar {\n    MOH_CACHE = 'mohCache'\n}\n\nexport interface CohortValidationInterface {\n    param: number | string;\n    error: (indicator: number, param: number) => string;\n    check: (indicator: number, param: number) => boolean;\n}\n\nexport class MohCohortReportService extends ArtReportService {\n    regenerate: boolean;\n    constructor() {\n        super()\n        this.regenerate = false\n    }\n\n    private cohortUrl() {\n        return `programs/${this.programID}/reports/cohort`\n    }\n\n    setRegenerate(regenerate: boolean) {\n        this.regenerate = regenerate\n    }\n\n    getCohortDrillDown(resourceId: string) {\n        return ArtReportService.getJson('cohort_report_drill_down', {\n            id: resourceId,\n            date: this.date,\n            'program_id': this.programID\n        })\n    }\n\n    requestCohort(params: any) {\n        return ArtReportService.ajxGet(\n            this.cohortUrl(), params\n        )\n    }\n\n    qaurterRequestParams() {\n        return { \n            name: this.quarter, \n            regenerate: this.regenerate \n        }\n    }\n\n    datePeriodRequestParams() {\n        return {\n            name: `Cohort-${this.startDate}-${this.endDate}`,\n            'start_date': this.startDate,\n            'end_date': this.endDate,\n            regenerate: this.regenerate\n        }\n    }\n\n    getCachedCohortValues() {\n        const cache = sessionStorage.getItem(CohortVar.MOH_CACHE)\n        if (cache) {\n            const conf = JSON.parse(cache)\n            if (conf.start_date === this.startDate \n                && conf.end_date === this.endDate\n                || conf.quarter === this.quarter) {\n                return conf.data\n            }\n        }\n    }\n\n    cacheCohort(values: any) {\n        sessionStorage.setItem(\n            CohortVar.MOH_CACHE, \n            JSON.stringify({\n                'start_date': this.startDate,\n                'end_date': this.endDate,\n                'quarter': this.quarter,\n                'data': values\n        }))\n    }\n\n    validateIndicators(validations: Record<string, CohortValidationInterface>, callback: Function) {\n        const cachedValues = this.getCachedCohortValues()\n        if (cachedValues) {\n            const errors = Object.keys(validations)\n                .reduce((errors: Array<any>, key: string) => {\n                    const indicator: any = find(cachedValues, { name: key })\n                    const validation: any = validations[key]\n                    const indicatorValue: any = indicator ? indicator.contents : null\n                    const param = validation.param as number\n                    const condition = validation.check(parseInt(indicatorValue), param)\n                    if (condition) errors.push(\n                        validation.error(indicatorValue, param)\n                    )\n                    return errors\n                }, [])\n            return callback(errors)\n        }\n        return -1\n    }\n}\n"],"sourceRoot":""}