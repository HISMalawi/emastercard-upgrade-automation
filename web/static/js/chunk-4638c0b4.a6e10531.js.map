{"version":3,"sources":["webpack:///./src/components/Forms/HisStandardForm.vue?f008","webpack:///./src/components/Forms/HisStandardForm.vue","webpack:///./src/components/Forms/HisStandardForm.vue?6820","webpack:///./src/views/PrinterSettings.vue?29d7","webpack:///./src/views/PrinterSettings.vue","webpack:///./src/views/PrinterSettings.vue?bf97"],"names":["render","_ctx","_cache","$props","$setup","$data","$options","_openBlock","_createBlock","_resolveDynamicComponent","formType","fields","skipSummary","activeField","cancelDestinationPath","onOnFinish","onFinish","onFinishAction","onOnIndex","onIndex","defineComponent","name","components","TouchScreenForm","emits","data","props","type","Function","Boolean","default","String","Object","required","methods","formData","computedData","this","$emit","i","__exports__","_component_his_standard_form","_resolveComponent","key","refreshKey","HisStandardForm","printFieldContext","printerService","defaultPrinter","refreshInterval","isRefreshingDevices","PrintoutService","getDefaultPrinter","getFields","unmounted","clearInterval","$router","back","isDefaultPrinter","printer","deviceID","sortPrinters","printers","sort","a","b","localeCompare","defaultPrinterStyle","rowColors","isEmpty","push","indexes","class","id","helpText","FieldType","TT_TABLE_VIEWER","config","hiddenFooterBtns","footerBtns","size","slot","color","visible","onClick","async","toastWarning","loadingController","create","backdropDismiss","message","present","init","e","toastDanger","dismiss","setInterval","onload","context","options","getAllPrinters","sortedPrinters","other","columns","rows","map","action","printTestLbl","setDefaultPrinter","Math","random"],"mappings":"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","file":"js/chunk-4638c0b4.a6e10531.js","sourcesContent":["import { resolveDynamicComponent as _resolveDynamicComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createBlock(_resolveDynamicComponent(_ctx.formType), {\n    fields: _ctx.fields,\n    skipSummary: _ctx.skipSummary,\n    activeField: _ctx.activeField,\n    cancelDestinationPath: _ctx.cancelDestinationPath,\n    onOnFinish: _ctx.onFinish,\n    onFinish: _ctx.onFinishAction,\n    onOnIndex: _ctx.onIndex\n  }, null, 40, [\"fields\", \"skipSummary\", \"activeField\", \"cancelDestinationPath\", \"onOnFinish\", \"onFinish\", \"onOnIndex\"]))\n}","\nimport TouchScreenForm from \"@/components/Forms/TouchScreenForm.vue\";\nimport { defineComponent, PropType } from \"vue\";\nimport { Field } from \"./FieldInterface\";\n\nexport default defineComponent({\n    name: \"HisStandardForm\",\n    components: { TouchScreenForm },\n    emits: [\n        'onFinish',\n        'onIndex'\n    ],\n    data: () => ({\n        formType: 'touch-screen-form' as string\n    }),\n    props: {\n        onFinishAction: {\n            type: Function\n        },\n        skipSummary: {\n            type: Boolean,\n            default: false\n        },\n        activeField: {\n            type: String\n        },\n        fields: {\n            type: Object as PropType<Field[]>,\n            required: true\n        },\n        cancelDestinationPath: {\n            type: String,\n            required: false,\n        }\n    },\n    methods: {\n        onFinish(formData: any, computedData: any) {\n            this.$emit('onFinish', formData, computedData)\n        },\n        onIndex(i: number) {\n            this.$emit('onIndex', i)\n        }\n    }\n})\n","import { render } from \"./HisStandardForm.vue?vue&type=template&id=6daa0375&ts=true\"\nimport script from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\nexport * from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_his_standard_form = _resolveComponent(\"his-standard-form\")!\n\n  return (_openBlock(), _createBlock(_component_his_standard_form, {\n    fields: _ctx.fields,\n    onFinishAction: _ctx.onFinish,\n    skipSummary: true,\n    key: _ctx.refreshKey\n  }, null, 8, [\"fields\", \"onFinishAction\"]))\n}","\nimport { defineComponent } from \"vue\";\nimport { FieldType } from \"@/components/Forms/BaseFormElements\";\nimport HisStandardForm from \"@/components/Forms/HisStandardForm.vue\";\nimport { PrintoutService } from \"@/services/printout_service\";\nimport { isEmpty } from \"lodash\";\nimport { loadingController } from \"@ionic/core\";\nimport { toastDanger, toastWarning } from \"@/utils/Alerts\";\nimport { PrinterDevice } from \"@/plugins/LabelPrinter\";\n\nexport default defineComponent({\n  components: { HisStandardForm },\n  data() {\n    return {\n      printFieldContext: null as any,\n      printerService: {} as PrintoutService,\n      defaultPrinter: {} as PrinterDevice,\n      refreshKey: 0,\n      fields: [] as any,\n      refreshInterval: null as any,\n      isRefreshingDevices: false as boolean\n    };\n  },\n  async mounted() {\n    this.printerService = new PrintoutService();\n    this.defaultPrinter = await this.printerService.getDefaultPrinter() || {} as PrinterDevice;\n    this.fields = this.getFields();\n  },\n  unmounted() {\n    if (this.refreshInterval) {\n      clearInterval(this.refreshInterval)\n    }\n  },\n  methods: {\n    async onFinish() {\n      this.$router.back();\n    },\n    isDefaultPrinter(printer: PrinterDevice) {\n      if(printer.name && this.defaultPrinter.name) return printer.name === this.defaultPrinter.name;\n      return printer.deviceID === this.defaultPrinter.deviceID\n    },\n    sortPrinters(printers: PrinterDevice[]) {\n      return printers.sort((a, b) => {\n        if (this.isDefaultPrinter(a) && !this.isDefaultPrinter(b)) {\n          return -1;\n        } else if (!this.isDefaultPrinter(a) && this.isDefaultPrinter(b)) {\n          return 1;\n        } else {\n          return (a.name || a.deviceID).localeCompare(b.name || b.deviceID);\n        }\n      });\n    },\n    defaultPrinterStyle(){\n      const rowColors: any[] = [];\n      if(!isEmpty(this.defaultPrinter)){\n        rowColors.push({indexes: [0], class: 'adherence-txt-good adherence-col-bg bold'});\n      }\n      return rowColors;\n    },\n    getFields() {\n      return [\n        {\n          id: \"printer_settings\",\n          helpText: \"Printer Settings\",\n          type: FieldType.TT_TABLE_VIEWER,\n          config: { \n            hiddenFooterBtns: [\"Clear\"],\n            footerBtns: [\n              {\n                name: 'Refresh',\n                size: \"large\",\n                slot: \"end\",\n                color: \"warning\",\n                visible: true,\n                onClick: async () => {\n                  if (this.isRefreshingDevices) {\n                    return toastWarning('Please wait...')\n                  }\n                  if (this.printFieldContext) {\n                    (await loadingController.create({\n                      backdropDismiss: false,\n                      message: 'Please wait...'\n                    })).present();\n                    this.isRefreshingDevices = true\n                    try {\n                      await this.printFieldContext.init()\n                    } catch(e) {\n                      toastDanger(`${e}`)\n                    }\n                    this.isRefreshingDevices = false\n                    loadingController.dismiss()\n                  }\n                }\n              }\n            ]\n          },\n          init: () => {\n            this.refreshInterval = setInterval(async () => {\n              if (this.printFieldContext && !this.isRefreshingDevices) {\n                this.isRefreshingDevices = true\n                await this.printFieldContext.init()\n                this.isRefreshingDevices = false\n              }\n            }, 5000)\n          },\n          onload: (context: any) => {\n            this.printFieldContext = context\n          },\n          options: async () => {\n            const printers = await this.printerService.getAllPrinters();\n            const sortedPrinters = this.sortPrinters(printers);\n            return [{\n              other: {\n                rowColors: this.defaultPrinterStyle(),\n                columns: [\"Available Devices\"],\n                rows: sortedPrinters.map((printer: PrinterDevice) => [\n                  printer.name || printer.deviceID,\n                  {\n                    type: \"button\",\n                    name: \"Test Printer\",\n                    action: () => this.printerService.printTestLbl(printer)\n                  },\n                  (this.isDefaultPrinter(printer) ? \"Default Printer\" : {\n                    type: 'button',\n                    name: 'Set as Default',\n                    visible: !this.isDefaultPrinter(printer),\n                    action: () => {\n                      this.printerService.setDefaultPrinter(printer);\n                      this.defaultPrinter = printer;\n                      this.refreshKey = Math.random() * 10000;\n                    }\n                  })\n                ])\n              }\n            }]\n          }\n        }\n      ]\n    },\n  },\n});\n","import { render } from \"./PrinterSettings.vue?vue&type=template&id=1222a3fa&ts=true\"\nimport script from \"./PrinterSettings.vue?vue&type=script&lang=ts\"\nexport * from \"./PrinterSettings.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}