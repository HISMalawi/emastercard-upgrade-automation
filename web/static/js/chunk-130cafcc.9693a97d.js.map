{"version":3,"sources":["webpack:///./src/apps/EMC/utils/common.ts","webpack:///./src/apps/EMC/utils/exports.ts","webpack:///./src/apps/ART/services/reports/art_report_service.ts","webpack:///./src/apps/EMC/views/reports/clinic/RegimenSwitch.vue?843b","webpack:///./src/apps/EMC/views/reports/clinic/RegimenSwitch.vue","webpack:///./src/apps/EMC/views/reports/clinic/RegimenSwitch.vue?6193","webpack:///./src/apps/EMC/Components/tables/BaseReportTable.vue?6385","webpack:///./src/apps/EMC/Components/tables/BaseReportTable.vue","webpack:///./src/apps/EMC/Components/tables/BaseReportTable.vue?c151","webpack:///./src/apps/ART/services/reports/regimen_report_service.ts","webpack:///./src/apps/ART/services/reports/patient_report_service.ts"],"names":["sortByARV","arvNumber","parseInt","split","sanitize","str","replace","trim","error","convertToCsv","columns","rows","quarter","period","filters","filter","column","exportable","map","label","join","sortRows","sort","row","value","get","path","formatter","drillable","Array","isArray","length","dayjs","format","Service","getAppVersion","getApiVersion","getSiteUUID","exportToCSV","opts","csvData","Blob","type","link","document","createElement","href","window","URL","createObjectURL","setAttribute","filename","body","appendChild","click","removeChild","ArtReportService","constructor","super","this","endDate","startDate","date","getSessionDate","programID","getProgramID","getDateIntervalPeriod","HisDate","toStandardHisDisplayFormat","setStartDate","setEndDate","setQuarter","getReport","url","params","getJson","buildRequest","getMaternalStatus","patientIds","reportDefinition","Url","parameterizeObjToString","postJson","config","payload","year","daysInMonth","m","startMonth","endMonth","qtr","start","end","qtrBounds","getQuarterBounds","getFullYear","Date","qtrName","name","maxQuarters","qtrs","currDate","currYear","curYr","getMonth","getDate","currentQtr","getQtrByDate","i","push","buildQtrObj","render","_ctx","_cache","$props","$setup","$data","$options","_component_base_report_table","_resolveComponent","_openBlock","_createBlock","title","useDateRangeFilter","onCustomFilter","fetchData","defineComponent","components","BaseReportTable","setup","getAgeInYears","ref","preSort","initialSort","toGenderString","async","loader","show","report","RegimenReportService","dateRange","data","getRegimenSwitchReport","Object","values","d","dispensationDate","medications","medication","start_date","quantity","gender","hide","__exports__","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","key","_hoisted_5","_hoisted_6","_hoisted_7","_component_ion_col","_component_ion_row","_component_ion_grid","_component_ion_card_header","_component_data_table","_component_ion_card_content","_component_ion_card","_component_Layout","default","_withCtx","_createVNode","style","size","class","_createElementVNode","src","reportIcon","_normalizeStyle","height","subtitle","width","_","innerHTML","_createElementBlock","_createCommentVNode","_toDisplayString","useQuarterFilter","useDateFilter","totalClients","asyncRows","actionBtns","rowActionButtons","showIndices","onDrilldown","color","_createSlots","_renderList","$slots","fn","_renderSlot","IonCard","IonCardHeader","IonCardContent","Layout","IonGrid","IonRow","IonCol","DataTable","props","String","Number","Function","actionButtons","canExportCsv","Boolean","canExportPDF","showRefreshButton","customFilters","emits","emit","computed","PatientReportService","getLocationName","btns","action","_a","f","id","gridSize","options","getReportQuarters","q","other","customfilters","toastWarning","every","required","isEmpty","v","REGIMENS","REGIMEN_WEIGHT_DISTRIBUTION","WEIGHT_BAND","FORMULATIONS","setReportType","getTptNewInitiations","getRegimenFormulationReport","regimen","formulation","getRegimenReport","isPepfar","pepfar","getRegimensByWeight","getSCReport","AGE_GROUPS","getBookedAppointments","getViralLoadResults","range","getOtherOutcome","outcome","getPatientVisitTypes","getClientsDueForVl","getClientRentention","getExternalConsultationClients","getMissedAppointments","getPregnantWomen","getArchivingCandidates","getIncompleteVisits"],"mappings":"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","file":"js/chunk-130cafcc.9693a97d.js","sourcesContent":["export function sortByARV(arvNumber: string) {\n  return parseInt(arvNumber.split(\"-\")[2]) || 0\n}","import { sortRows, TableColumnInterface, TableFilterInterface } from '@uniquedj95/vtable';\nimport { get } from 'lodash';\nimport { Service } from '@/services/service';\nimport dayjs from 'dayjs';\n\nfunction sanitize(str: string) {\n  try {\n    return str.replace(/<(?:.|\\n)*?>/gm, \" \")\n      .replace(/\\n/g, \" \")\n      .replace(/\\t/g, \" \")\n      .replace(/\\s{2,}/g, \" \")\n      .replace(/=/g, \" \")\n      .replace(/,/g, \" \")\n      .trim();\n  } catch (error) {\n    return str;\n  }\n}\n\ninterface CsvOptions {\n  columns: TableColumnInterface[];\n  rows: any[];\n  filename: string;\n  quarter?: string;\n  period?: string;\n  filters?: TableFilterInterface;\n}\n\nfunction convertToCsv({columns, rows, quarter, period, filters}: CsvOptions) {\n  let str = columns.filter((column) => column.exportable !== false)\n    .map((column) => column.label)\n    .join(\",\");\n\n  str += \"\\n\";\n  str += sortRows(rows, filters?.sort || []).map((row) => columns\n    .filter(column => column.exportable !== false)\n    .map(column => {\n      let value = get(row, column.path);\n      if (typeof column.formatter === 'function' && value) value = column.formatter(value, row)\n      return sanitize(column.drillable && Array.isArray(value) ? value.length : value);\n    })\n    .join(\",\")\n  ).join(\"\\n\");\n\n  str += \"\\n\" + `Date Created:  ${dayjs().format('DD/MMM/YYYY HH:MM:ss')}`;\n  if (quarter) str += \"\\n\" + `Quarter: ${quarter}`;\n  if (period) str += \"\\n\" + `Quarter: ${period}`;\n  str += \"\\n\" + `e-Mastercard Version : ${Service.getAppVersion()}`;\n  str += \"\\n\" + `API Version ${Service.getApiVersion()}`;\n  str += \"\\n\" + `Site UUID: ${Service.getSiteUUID()}`;\n\n  return str;\n}\n\nexport function exportToCSV(opts: CsvOptions) {\n  const csvData = new Blob([convertToCsv(opts)], { type: \"text/csv;charset=utf-8;\" });\n  const link = document.createElement(\"a\");\n  link.href = window.URL.createObjectURL(csvData);\n  link.setAttribute(\"download\", `${opts.filename}.csv`);\n  document.body.appendChild(link);\n  link.click();\n  document.body.removeChild(link);\n}\n","import { Service } from \"@/services/service\";\nimport HisDate from \"@/utils/Date\"\nimport Url from \"@/utils/Url\";\nimport dayjs from \"dayjs\";\n\nexport interface QuarterInterface {\n    name: string;\n    start: string;\n    end: string;\n}\n\nexport class ArtReportService extends Service {\n    programID: number;\n    startDate: string;\n    endDate: string;\n    date: string;\n    quarter: string\n    constructor() {\n        super()\n        this.endDate = ''\n        this.startDate = ''\n        this.quarter = ''\n        this.date = Service.getSessionDate()\n        this.programID = Service.getProgramID()\n    }\n\n    getDateIntervalPeriod() {\n        return `${HisDate.toStandardHisDisplayFormat(this.startDate)} - ${HisDate.toStandardHisDisplayFormat(this.endDate)}`\n    }\n\n    setStartDate(startDate: string) {\n        this.startDate = startDate\n    }  \n\n    setEndDate(endDate: string) {\n        this.endDate = endDate\n    }\n\n    setQuarter(quarter: string) {\n        this.quarter = quarter\n    }\n\n    getReport(url: string, params={}) {\n        return Service.getJson(url, this.buildRequest(params))\n    }\n\n    getMaternalStatus(patientIds: number[], reportDefinition = 'pepfar') {\n        const params = Url.parameterizeObjToString(this.buildRequest({ 'report_definition': reportDefinition }))\n        return Service.postJson(`vl_maternal_status?${params}`, {\n            'patient_ids': patientIds\n        })\n    }\n\n    buildRequest(config: Record<string, any> = {}) {\n        const payload: any = {'date': this.date, 'program_id': this.programID}\n        if (this.startDate && this.endDate) {\n            payload['start_date'] = this.startDate\n            payload['end_date'] = this.endDate\n        }\n        if (this.quarter) {\n            payload['quarter'] = this.quarter\n        }\n        return { ...payload, ...config }\n    }\n\n    static getQuarterBounds(year: number) {\n        const daysInMonth = (m: string) => dayjs(`${year}-${m}-01`).daysInMonth()\n        const startMonth = (m: string) => `${year}-${m}-01 00:00`\n        const endMonth = (m: string) => `${year}-${m}-${daysInMonth(m)} 00:00`\n\n        return {\n            'Q1': {\n                qtr: 1,\n                start: startMonth('01'),\n                end: endMonth('03')\n            },\n            'Q2': {\n                qtr: 2,\n                start: startMonth('04'),\n                end: endMonth('06')\n            },\n            'Q3': {\n                qtr: 3,\n                start: startMonth('07'),\n                end: endMonth('09')\n            },\n            'Q4': {\n                qtr: 4,\n                start: startMonth('10'),\n                end: endMonth('12')\n            }\n        }\n    }\n\n    static getQtrByDate(date: Date) {\n        const qtrBounds: any = this.getQuarterBounds(date.getFullYear())\n        for(const qtr in qtrBounds) {\n            const { start, end } = qtrBounds[qtr]\n            if (date >= new Date(start) && date <= new Date(end)) {\n                return qtrBounds[qtr]\n            }\n        }\n        return null\n    }\n\n    static buildQtrObj(qtrName: string, year: number): QuarterInterface {\n        const qtrBounds: any = this.getQuarterBounds(year)\n        const { start, end } = qtrBounds[qtrName]\n        return {\n            start,\n            end,\n            name: `${qtrName} ${year}`,\n        }\n    }\n\n    static getReportQuarters(maxQuarters=5) {\n        const qtrs: QuarterInterface[] = [];\n        let currDate = new Date();\n        let currYear = currDate.getFullYear();\n        const curYr = currYear\n        \n        currDate = new Date(`${curYr}-${currDate.getMonth() + 1}-${currDate.getDate()} 00:00`);\n        const currentQtr = this.getQtrByDate(currDate);\n        let qtr = currentQtr.qtr;\n        let i = 0;\n\n        if (qtr === 4) qtrs.push(this.buildQtrObj('Q1', currYear + 1))\n\n        while (i < maxQuarters) {\n          // Add following quarter\n          if (i === 0 && qtr < 4) qtrs.push(this.buildQtrObj(`Q${qtr + 1}`, currYear))\n\n          qtrs.push(this.buildQtrObj(`Q${qtr}`, currYear))\n          qtr = qtr > 0 ? (qtr -= 1) : qtr;\n          currYear = qtr == 0 ? currYear - 1 : currYear;\n          qtr =  qtr == 0 ? ( qtr += 4) : qtr;\n          i++;\n        }\n        return qtrs;\n    }\n}\n","import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_base_report_table = _resolveComponent(\"base-report-table\")!\n\n  return (_openBlock(), _createBlock(_component_base_report_table, {\n    title: \"Clinic Regimen Switch Report\",\n    \"report-icon\": \"reports/regimen-switch.png\",\n    period: _ctx.period,\n    columns: _ctx.columns,\n    rows: _ctx.rows,\n    useDateRangeFilter: \"\",\n    onCustomFilter: _ctx.fetchData\n  }, null, 8, [\"period\", \"columns\", \"rows\", \"onCustomFilter\"]))\n}","\nimport { defineComponent, ref } from \"vue\";\nimport { loader } from \"@/utils/loader\";\nimport BaseReportTable from \"@/apps/EMC/Components/tables/BaseReportTable.vue\";\nimport { TableColumnInterface } from \"@uniquedj95/vtable\";\nimport { RegimenReportService } from \"@/apps/ART/services/reports/regimen_report_service\";\nimport { toGenderString } from \"@/utils/Strs\";\nimport HisDate from \"@/utils/Date\";\nimport { sortByARV } from \"@/apps/EMC/utils/common\";\n\nexport default defineComponent({\n  name: \"RegimenSwitch\",\n  components: { BaseReportTable },\n  setup() {\n    const { toStandardHisDisplayFormat, getAgeInYears } = HisDate\n    const period = ref(\"\");\n    const rows = ref<any[]>([]);\n    const columns: TableColumnInterface[] = [\n      { path: \"arv_number\", label: \"ARV Number\", preSort: sortByARV, initialSort: true },\n      { path: \"gender\", label: \"Gender\", formatter: toGenderString },\n      { path: \"birthdate\", label: \"DOB (Age in Years)\", formatter: (date: string) => `${toStandardHisDisplayFormat(date)} (${getAgeInYears(date)})`},\n      { path: \"art_start_date\", label: \"Start Date\", formatter: toStandardHisDisplayFormat },\n      { path: \"current_weight\", label: \"Weight (Kg)\" },\n      { path: \"previous_regimen\", label: \"Prev Regimen\" },\n      { path: \"current_regimen\", label: \"Curr Regimen\" },\n      { path: \"medications\", label: \"ARVs\"},\n      { path: \"dispensation_date\", label: \"Dispensation Date\", formatter: toStandardHisDisplayFormat }\n    ]\n\n    const fetchData =  async (filters: Record<string, any>) => {\n      await loader.show()\n      const report = new RegimenReportService()\n      report.setStartDate(filters.dateRange.startDate)\n      report.setEndDate(filters.dateRange.endDate)\n      period.value = report.getDateIntervalPeriod()\n      const data: any = await report.getRegimenSwitchReport()\n      rows.value = Object.values(data).map((d: any) => {\n        let dispensationDate = \"\"\n        const medications = d.medication.map((m: any) => {\n          dispensationDate = m.start_date\n          return `${m.medication} (${m.quantity})`\n        })\n        return {\n          ...d,\n          gender: toGenderString(d.gender),\n          \"dispensation_date\": dispensationDate,\n          medications: medications.join(\", \")\n        }\n      })\n      await loader.hide();\n    }\n\n    return {\n      rows,\n      columns,\n      period,\n      fetchData,\n    }\n  }\n})\n","import { render } from \"./RegimenSwitch.vue?vue&type=template&id=070a185c&ts=true\"\nimport script from \"./RegimenSwitch.vue?vue&type=script&lang=ts\"\nexport * from \"./RegimenSwitch.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { normalizeStyle as _normalizeStyle, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, renderSlot as _renderSlot, renderList as _renderList, createSlots as _createSlots, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = [\"src\"]\nconst _hoisted_2 = [\"innerHTML\"]\nconst _hoisted_3 = [\"innerHTML\"]\nconst _hoisted_4 = { key: 1 }\nconst _hoisted_5 = { key: 2 }\nconst _hoisted_6 = { key: 3 }\nconst _hoisted_7 = { key: 4 }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ion_col = _resolveComponent(\"ion-col\")!\n  const _component_ion_row = _resolveComponent(\"ion-row\")!\n  const _component_ion_grid = _resolveComponent(\"ion-grid\")!\n  const _component_ion_card_header = _resolveComponent(\"ion-card-header\")!\n  const _component_data_table = _resolveComponent(\"data-table\")!\n  const _component_ion_card_content = _resolveComponent(\"ion-card-content\")!\n  const _component_ion_card = _resolveComponent(\"ion-card\")!\n  const _component_Layout = _resolveComponent(\"Layout\")!\n\n  return (_openBlock(), _createBlock(_component_Layout, null, {\n    default: _withCtx(() => [\n      _createVNode(_component_ion_card, { style: {\"padding\":\"0 !important\"} }, {\n        default: _withCtx(() => [\n          _createVNode(_component_ion_card_header, { style: {\"border-bottom\":\"1px solid #c2c2c2\",\"font-weight\":\"500\",\"color\":\"#000\"} }, {\n            default: _withCtx(() => [\n              _createVNode(_component_ion_grid, null, {\n                default: _withCtx(() => [\n                  _createVNode(_component_ion_row, null, {\n                    default: _withCtx(() => [\n                      _createVNode(_component_ion_col, {\n                        size: \"1\",\n                        class: \"ion-padding ion-margin-end\"\n                      }, {\n                        default: _withCtx(() => [\n                          _createElementVNode(\"img\", {\n                            src: `assets/images/${_ctx.reportIcon}`,\n                            style: _normalizeStyle({height: _ctx.subtitle ? 7 : 5 + 'rem', width: _ctx.subtitle ? 7 : 5 + 'rem'})\n                          }, null, 12, _hoisted_1)\n                        ]),\n                        _: 1\n                      }),\n                      _createVNode(_component_ion_col, null, {\n                        default: _withCtx(() => [\n                          _createElementVNode(\"h1\", { innerHTML: _ctx.title }, null, 8, _hoisted_2),\n                          (_ctx.subtitle)\n                            ? (_openBlock(), _createElementBlock(\"h3\", {\n                                key: 0,\n                                innerHTML: _ctx.subtitle,\n                                style: {\"color\":\"#818181\"}\n                              }, null, 8, _hoisted_3))\n                            : _createCommentVNode(\"\", true),\n                          (_ctx.useDateRangeFilter)\n                            ? (_openBlock(), _createElementBlock(\"h5\", _hoisted_4, \" Period: \" + _toDisplayString(_ctx.period), 1))\n                            : (_ctx.useQuarterFilter)\n                              ? (_openBlock(), _createElementBlock(\"h5\", _hoisted_5, \" Quarter: \" + _toDisplayString(_ctx.quarter.value), 1))\n                              : (_ctx.useDateFilter)\n                                ? (_openBlock(), _createElementBlock(\"h5\", _hoisted_6, \"Date: \" + _toDisplayString(_ctx.dayjs(_ctx.date).format(\"DD/MMM/YYYY\")), 1))\n                                : _createCommentVNode(\"\", true),\n                          (_ctx.totalClients)\n                            ? (_openBlock(), _createElementBlock(\"h5\", _hoisted_7, \"Total Clients: \" + _toDisplayString(_ctx.totalClients), 1))\n                            : _createCommentVNode(\"\", true)\n                        ]),\n                        _: 1\n                      })\n                    ]),\n                    _: 1\n                  })\n                ]),\n                _: 1\n              })\n            ]),\n            _: 1\n          }),\n          _createVNode(_component_ion_card_content, {\n            class: \"ion-no-padding\",\n            style: {\"min-height\":\"45vh\"}\n          }, {\n            default: _withCtx(() => [\n              _createVNode(_component_data_table, {\n                rows: _ctx.rows,\n                \"async-rows\": _ctx.asyncRows,\n                columns: _ctx.columns,\n                \"actions-buttons\": _ctx.actionBtns,\n                \"row-actions-buttons\": _ctx.rowActionButtons,\n                \"custom-filters\": _ctx.filters,\n                config: { showIndices: _ctx.showIndices },\n                onCustomFilter: _ctx.onCustomFilter,\n                onDrilldown: _ctx.onDrilldown,\n                color: \"custom\"\n              }, _createSlots({ _: 2 }, [\n                _renderList(_ctx.$slots, (_, name) => {\n                  return {\n                    name: name,\n                    fn: _withCtx(({ filter }) => [\n                      _renderSlot(_ctx.$slots, name, { filter: filter })\n                    ])\n                  }\n                })\n              ]), 1032, [\"rows\", \"async-rows\", \"columns\", \"actions-buttons\", \"row-actions-buttons\", \"custom-filters\", \"config\", \"onCustomFilter\", \"onDrilldown\"])\n            ]),\n            _: 3\n          })\n        ]),\n        _: 3\n      })\n    ]),\n    _: 3\n  }))\n}","\nimport { computed, defineComponent, PropType } from \"vue\";\nimport { IonCard, IonCardContent, IonCardHeader, IonGrid, IonRow, IonCol } from \"@ionic/vue\";\nimport { PatientReportService } from \"@/apps/ART/services/reports/patient_report_service\";\nimport dayjs from \"dayjs\";\nimport Layout from \"@/apps/EMC/Components/Layout.vue\";\nimport { ArtReportService } from \"@/apps/ART/services/reports/art_report_service\";\nimport { Option } from '@/components/Forms/FieldInterface';\nimport { \n  ActionButtonInterface, \n  CustomFilterInterface, \n  DataTable, \n  RowActionButtonInterface, \n  TableColumnInterface \n} from '@uniquedj95/vtable'\nimport { toastWarning } from \"@/utils/Alerts\";\nimport { isEmpty } from \"lodash\";\nimport { exportToCSV } from \"../../utils/exports\";\n\nexport default defineComponent({\n  name: \"BaseReportTable\",\n  components: {\n    IonCard,\n    IonCardHeader,\n    IonCardContent,\n    Layout,\n    IonGrid,\n    IonRow,\n    IonCol,\n    DataTable,\n  },\n  props: {\n    title: {\n      type: String,\n      default: \"Report\",\n    },\n    subtitle: {\n      type: String,\n      default: \"\",\n    },\n    period: {\n      type: String,\n      default: \"\",\n    },\n    date: {\n      type: String,\n      default: \"\",\n    },\n    quarter: {\n      type: Object as PropType<Option>,\n      default: () => ({}),\n    },\n    totalClients: {\n      type: Number,\n      default: 0,\n    },\n    reportIcon: {\n      type: String,\n      default: \"reports/report.png\",\n    },\n    columns: {\n      type: Array as PropType<TableColumnInterface[]>,\n      default: () => [],\n    },\n    rows: {\n      type: Array as PropType<any[]>,\n      default: () => [],\n    },\n    asyncRows: {\n      type: Function as PropType<() => Promise<any[]>>,\n    },\n    actionButtons: {\n      type: Array as PropType<ActionButtonInterface[]>,\n      default: () => [],\n    },\n    rowActionButtons: {\n      type: Array as PropType<RowActionButtonInterface[]>,\n      default: () => [],\n    },\n    canExportCsv: {\n      type: Boolean,\n      default: true,\n    },\n    canExportPDF: {\n      type: Boolean,\n      default: true,\n    },\n    showRefreshButton: {\n      type: Boolean,\n      default: true,\n    },\n    useDateRangeFilter: {\n      type: Boolean,\n      default: false,\n    },\n    useQuarterFilter: {\n      type: Boolean,\n      default: false,\n    },\n    useDateFilter: {\n      type: Boolean,\n      default: false,\n    },\n    customFilters: {\n      type: Array as PropType<CustomFilterInterface[]>,\n      default: () => [],\n    },\n    showIndices: {\n      type: Boolean,\n      default: false\n    }\n  },\n  emits: [\"regenerate\", \"customFilter\", \"drilldown\"],\n  setup(props, { emit }) {\n    const filename = computed(() => {\n      return `${PatientReportService.getLocationName()} ${props.title} ${ props.period ? props.period : props.date }`;\n    })\n\n    const actionBtns = computed<ActionButtonInterface[]>(() => {\n      const btns = [...props.actionButtons];\n\n      if(props.showRefreshButton){\n        btns.push({ label: \"Refresh/Rebuild\", color: 'success', action: () => emit(\"regenerate\") });\n      }\n\n      if (props.canExportCsv) {\n        btns.push({\n          label: \"CSV\",\n          color: \"primary\",\n          action: async (_a, rows, filters, columns) => exportToCSV({\n            rows, \n            filters,\n            columns, \n            quarter: props.quarter?.label,\n            period: props.period,\n            filename: filename.value\n          })\n        })\n      }\n      return btns;\n    })\n\n    const filters = computed<CustomFilterInterface[]>(() => {\n      const f = [...props.customFilters];\n      if(props.useDateRangeFilter) {\n        f.push({\n          id: \"dateRange\",\n          label: \"Date Range\",\n          type: \"dateRange\",\n          gridSize: 5,\n          value: {\n            startDate: props.period.split(\"-\")[0],\n            endDate: props.period.split(\"-\")[1],\n          },\n        })\n      } else if(props.useQuarterFilter) {\n        f.push({\n          id: \"quarter\",\n          label: \"Quarter:\",\n          type: \"select\",\n          value: props.quarter,\n          options: ArtReportService.getReportQuarters().map(q => ({label: q.name, value: q.name, other: q})),\n        })\n      } else if (props.useDateFilter) {\n        f.push({\n          id: \"date\",\n          label: \"Date\",\n          type: \"date\",\n          value: props.date,\n        })\n      }\n      return f;\n    })\n\n    const onCustomFilter = (customfilters: Record<string, any>) => {\n      if (\"dateRange\" in customfilters && (new Date(customfilters.dateRange.startDate) > new Date(customfilters.dateRange.endDate))) {\n        return toastWarning(\"Invalid date range\")\n      }\n      if (filters.value.every(f => {\n        if (f.required === false) return true;\n        if (!isEmpty(customfilters[f.id]) && typeof customfilters[f.id] === 'object') return Object.values(customfilters[f.id]).every(v => !isEmpty(v));\n        return !isEmpty(customfilters[f.id]);\n      })) {\n        return emit(\"customFilter\", customfilters);\n      }\n      toastWarning(\"Invalid filters\")\n    }\n\n    const onDrilldown = (data: {column: TableColumnInterface; row: any}) => {\n      emit(\"drilldown\", data);\n    }\n\n    return {\n      actionBtns,\n      filters,\n      onCustomFilter,\n      onDrilldown,\n      dayjs,\n    }\n  }\n})\n","import { render } from \"./BaseReportTable.vue?vue&type=template&id=68756a50&ts=true\"\nimport script from \"./BaseReportTable.vue?vue&type=script&lang=ts\"\nexport * from \"./BaseReportTable.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { ArtReportService } from './art_report_service';\n\nexport const REGIMENS = [\n    '0A', '2A', '4A', '5A', '6A', '7A', '8A', '9A', '10A', '11A', '12A', '13A', '14A', '15A', '16A', '17A',\n    '0P', '2P', '4PP', '4PA', '9PP', '9PA', '11PP', '11PA', '12PP', '12PA', '14PP', '14PA', '15PP', '15PA', '16P', '17PP', '17PA'\n]\n\nexport const REGIMEN_WEIGHT_DISTRIBUTION = [\n    '0A', '2A', '4A', '5A', '6A', '7A', '8A', \n    '9A', '10A', '11A', '12A', '13A', '14A', '15A', '16A', '17A',\n    '0P', '2P', '4P', '4PP', '4PA', '9P', '9PP', '9PA', '11P', '11PP', \n    '11PA', '12PP', '12PA', '14P', '14PP', '14PA', '15P', '15PP', \n    '15PA', '16P', '17P', '17PP', '17PA'\n]\nexport const WEIGHT_BAND = [\n    '10 - 13.9 Kg',\n    '14 - 19.9 Kg',\n    '20 - 24.9 Kg',\n    '25 - 29.9 Kg',\n    '3 - 3.9 Kg',\n    '30 - 34.9 Kg',\n    '35 - 39.9 Kg',\n    '4 - 4.9 Kg',\n    '40 Kg +',\n    '40 - 49.9 Kg',\n    '50 Kg +',\n    '6 - 9.9 Kg',\n    'Unknown'\n]\n\nexport const FORMULATIONS = [\n    'pellets',\n    'tablets',\n    'granules'\n]\n\nexport class RegimenReportService extends ArtReportService {\n    type: string;\n    constructor() {\n        super()\n        this.type = 'pepfar'\n    }\n\n    setReportType(type: string) {\n        this.type = type\n    }\n\n    getTptNewInitiations() {\n        return this.getReport(`programs/${this.programID}/reports/tpt_newly_initiated`)\n    }\n\n    getRegimenFormulationReport(regimen: string, formulation: string) {\n        return this.getReport(`programs/${this.programID}/reports/regimens_and_formulations`, { regimen, formulation })\n    }\n\n    getRegimenReport() {\n        return this.getReport('regimen_report', { type: this.type})\n    }\n\n    getRegimenSwitchReport(isPepfar=false) {\n        return this.getReport('regimen_switch', { pepfar: isPepfar })\n    }\n\n    getRegimensByWeight() {\n        return this.getReport(`programs/${this.programID}/reports/regimens_by_weight_and_gender`)\n    }\n    \n    getSCReport(isPepfar=false) {\n        return this.getReport('sc_arvdisp', { pepfar: isPepfar })\n    }\n    \n}\n","import { ArtReportService } from \"./art_report_service\";\n\nexport const AGE_GROUPS = [\n    '<1 year',\n    '1-4 years', \n    '5-9 years', \n    '10-14 years', \n    '15-19 years', \n    '20-24 years', \n    '25-29 years', \n    '30-34 years', \n    '35-39 years', \n    '40-44 years', \n    '45-49 years', \n    '50-54 years',\n    '55-59 years',\n    '60-64 years',\n    '65-69 years',\n    '70-74 years',\n    '75-79 years',\n    '80-84 years',\n    '85-89 years',\n    '90 plus years'\n]\n\nexport class PatientReportService extends ArtReportService {\n    constructor() {\n        super()\n    }\n    \n    getBookedAppointments(date: string) {\n        return ArtReportService.getJson(`programs/${this.programID}/scheduled_appointments`, { date })\n    }\n\n    getViralLoadResults(range: string) {\n        return this.getReport(`/programs/${this.programID}/reports/high_vl_patients`, { range })\n    }\n\n    getOtherOutcome(outcome: string) {\n        return this.getReport('patient_outcome_list', { outcome })\n    }\n\n    getPatientVisitTypes() {\n        return this.getReport('patient_visit_types')\n    }\n\n    getClientsDueForVl() {\n        return this.getReport('clients_due_vl')\n    }\n\n    getClientRentention() {\n        return this.getReport(`/programs/${this.programID}/reports/retention`)\n    }\n\n    getExternalConsultationClients() {\n        return this.getReport(`${this.programID}/external_consultation_clients`)\n    }\n\n    getMissedAppointments() {\n        return this.getReport('missed_appointments')\n    }\n\n    getPregnantWomen() {\n        return this.getReport(`/programs/${this.programID}/reports/pregnant_patients`)\n    }\n\n    getArchivingCandidates() {\n        return ArtReportService.getJson(`programs/${this.programID}/reports/archiving_candidates`, { \n            'start_date': this.date\n        })\n    }\n\n    getIncompleteVisits() {\n        return this.getReport('incomplete_visits', {\n            \"tool_name\": \"INCOMPLETE VISITS\",\n        })\n    }\n}\n"],"sourceRoot":""}