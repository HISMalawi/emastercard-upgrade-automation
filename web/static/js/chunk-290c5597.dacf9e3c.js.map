{"version":3,"sources":["webpack:///./src/apps/ART/services/registration_service.ts","webpack:///./src/apps/EMC/utils/form.ts","webpack:///./src/apps/EMC/views/HIVReception.vue?5505","webpack:///./src/apps/EMC/views/HIVReception.vue","webpack:///./src/apps/EMC/views/HIVReception.vue?64ee","webpack:///./src/apps/ART/guidelines/staging_guidelines.ts","webpack:///./src/apps/ART/services/staging_service.ts","webpack:///./src/utils/loader.ts","webpack:///./src/apps/ART/services/vitals_service.ts","webpack:///./src/apps/EMC/interfaces/emc_event.ts"],"names":["ClinicRegistrationService","AppEncounterService","constructor","patientID","providerID","super","async","isValidForm","form","key","required","isEmpty","value","error","validation","payload","label","errs","length","toString","Object","values","every","resolveFormValues","underscoreKeys","formData","computedFormData","fKey","toUnderscores","computedValue","resolveObs","obs","tag","filter","d","reduce","accum","cur","data","Array","isArray","concat","push","Promise","all","optionsToGroupObs","conceptName","options","map","ObservationService","buildGroupValueCoded","option","isChecked","submitForm","callback","showloader","loader","show","toastWarning","console","hide","render","_ctx","_cache","$props","$setup","$data","$options","_component_ion_col","_resolveComponent","_component_ion_row","_component_ion_grid","_openBlock","_createBlock","default","_withCtx","_createVNode","class","isReady","size","_KeepAlive","_resolveDynamicComponent","activeForm","patient","isNewPatient","sitePrefix","initialVisitDate","observations","onOnValue","onValue","onOnNext","onNext","onOnPrevious","onPrevious","onOnFinish","onFinish","_","_createCommentVNode","defineComponent","components","ClinicRegistration","defineAsyncComponent","Staging","IonGrid","IonRow","IonCol","IonButton","setup","route","useRoute","router","useRouter","ref","reactive","patientId","parseInt","params","id","new","match","isStaging","computed","isRegistration","firstVisitEncounters","isEnrolled","setEnrollementStatus","programService","PatientProgramService","getPrograms","then","programs","some","p","program","name","type","arvNumberEditable","computedData","registration","stagingData","staging","encounter","EncounterService","voidEncounter","arvNumber","createArvNumber","patientTypeService","PatientTypeService","createEncounter","pTypeObs","saveObservationList","registrationService","regObs","everRegisteredAtClinic","vitalsService","VitalsService","vitalsObs","consultationService","ConsultationService","consultationObs","stagingService","StagingService","getAge","patientProgram","setProgramDate","enrollProgram","resetSessionDate","toastSuccess","log","parseObs","v","includes","encounter_id","concept","ConceptService","getConceptName","concept_id","value_datetime","value_drug","value_text","value_numeric","value_coded","value_modifier","onMounted","Store","get","prefix","enc","getEncounters","encounters","date","encounter_type","EventBus","on","EmcEvents","ON_INITIAL_VISIT_DATE","__exports__","CD4_AS_START_REASON_CUTOFF_DATE","ADULT_WHO_STAGE_CRITERIA","priority","conditions","stage","reasonForArt","reason","CHILD_WHO_STAGE_CRITERIA","CONTRADICTING_STAGE_DEFINITIONS_ALERTS","actions","alert","alertConfirmation","facts","bmi","confirmBtnLabel","cancelBtnLabel","selectedCondition","condition","keepAsymptomatic","selectedConditions","stageThreeConditions","stageFourConditions","stageTwoConditions","RECOMMENDED_CHILD_STAGING_CONDITIONS","description","color","info","weightPercentile","disabled","RECOMMENDED_ADULT_STAGING_CONDITIONS","CHILD_ART_ELIGIBILITY","ageInMonths","age","pshdConditions","getConceptsByCategory","pshdCondition","testType","cd4Date","Date","cd4","cd4Modifier","modifier","gender","breastFeeding","answer","pregnant","ADULT_ART_ELIGIBILITY","severeSymp","found","total","symp","StagingCategory","this","confirmatoryTest","isAdult","isPedaid","setAge","getFacilities","LocationService","getConfirmatoryTestType","cd4CountIsValid","e","getAlertGuidelines","getWhoStageGuidelines","getProgramEligibilityGuidelines","getRecommendedConditionGuidelines","getStagingConditions","category","getStagingCategoryByNum","getAllWhoStages","getAllReasonsForART","registrationDate","isMale","buildWhoStageObs","buildValueCoded","buildWhoCriteriaObs","buildReasonForArtObs","stageNumber","ADULT_STAGE_1","PEDAID_STAGE_1","ADULT_STAGE_2","PEDAID_STAGE_2","ADULT_STAGE_3","PEDAID_STAGE_3","ADULT_STAGE_4","PEDAID_STAGE_4","test","getFirstValueCoded","message","loadingController","create","spinner","translucent","present","getTop","dismiss","isNotEmptyandNumber","vital","isNotEmptyandFloat","other","checkMinMax","val","min","max","parseFloat","validateAll","vitals","j","validator","mergeErrors","errors","holder","forEach","element","isValidBPReading","isValidBP","split","bpSystolic","bpDiastolic","emptyErrors","minErrors"],"mappings":"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","file":"js/chunk-290c5597.dacf9e3c.js","sourcesContent":["import { AppEncounterService } from \"@/services/app_encounter_service\"\n\nexport class ClinicRegistrationService extends AppEncounterService {\n    constructor(patientID: number, providerID: number) {\n        super(patientID, 9, providerID) //TODO: Use encounter type reference name'\n    }\n}\n","import { ObsValue, ObservationService } from \"@/services/observation_service\"\nimport { DTForm } from \"../interfaces/dt_form_field\"\nimport { Option } from \"@/components/Forms/FieldInterface\";\nimport { toUnderscores } from \"@/utils/Strs\";\nimport { isEmpty } from \"lodash\";\nimport { loader } from \"@/utils/loader\";\nimport { toastWarning } from '@/utils/Alerts';\n\nexport async function isValidForm (form: DTForm) {\n  for (const key in form) {\n    if (form[key].required && isEmpty(form[key].value)) {\n      form[key].error = \"This field is required\";\n      continue;\n    }\n    if(typeof form[key].validation !== 'function') {\n      form[key].error = ''\n      continue\n    }\n    const payload = typeof form[key].value === 'object'\n        ? form[key].value\n        : { label: form[key].value, value: form[key].value }\n\n    const errs = await form[key].validation!(payload as Option, form)\n    if(errs && errs.length > 0) {\n      form[key].error = errs.toString()\n    } else {\n      form[key].error = ''\n    }       \n  }\n  return Object.values(form).every(({ error }) => !error)\n}\n\nexport function resolveFormValues(form: DTForm, underscoreKeys = false) {\n  const formData: any = {}\n  const computedFormData: any = {}\n  for (const key in form) {\n    if(form[key].value) {\n      const fKey = underscoreKeys ? toUnderscores(key) : key\n      formData[fKey] = form[key].value\n      if(typeof form[key].computedValue === 'function') {\n        computedFormData[fKey] = form[key].computedValue!(form[key].value, form)\n      }\n    }\n  }\n  return { formData, computedFormData }\n}\n\nexport function resolveObs (obs: any, tag=''): Promise<ObsValue[]> {\n  const values: any = Object.values(obs)\n    .filter((d: any) => d && (d.tag === tag || tag === ''))\n    .reduce((accum: any, cur: any) => { \n      const data = cur.obs ? cur.obs : cur\n      if (Array.isArray(data)) {\n        accum = accum.concat(data)\n      } else {\n          accum.push(data)\n      }\n      return accum\n    }, [])\n  return Promise.all(values)\n}\n\nexport function optionsToGroupObs (conceptName: string, options: Option[]) {\n  return Promise.all(options.map(async (option) => {\n    return ObservationService.buildGroupValueCoded(conceptName, option.label, option.isChecked ? 'Yes' : 'No')\n  }))\n}\n\ntype SubmitFormCallback = (formData: Record<string, any>, computedData: Record<string, any>) => Promise<void> | void\ninterface SubmitOptios {\n  showloader?: boolean;\n  underscoreKeys?: boolean;\n}\n\nexport async function submitForm (form: DTForm, callback: SubmitFormCallback, options?: SubmitOptios) {\n  if(!await isValidForm(form)) return\n  const showloader = options?.showloader || false\n  try {\n    if (showloader) await loader.show()\n    const {formData, computedFormData} = resolveFormValues(form, options?.underscoreKeys)\n    await callback(formData, computedFormData)\n  } catch (error) {\n    toastWarning(`${error}`)\n    console.error(error)\n  } finally {\n    if(showloader) await loader.hide()\n  }\n}","import { resolveDynamicComponent as _resolveDynamicComponent, openBlock as _openBlock, createBlock as _createBlock, KeepAlive as _KeepAlive, resolveComponent as _resolveComponent, withCtx as _withCtx, createCommentVNode as _createCommentVNode, createVNode as _createVNode } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ion_col = _resolveComponent(\"ion-col\")!\n  const _component_ion_row = _resolveComponent(\"ion-row\")!\n  const _component_ion_grid = _resolveComponent(\"ion-grid\")!\n\n  return (_openBlock(), _createBlock(_component_ion_grid, null, {\n    default: _withCtx(() => [\n      _createVNode(_component_ion_row, { class: \"his-card\" }, {\n        default: _withCtx(() => [\n          (_ctx.isReady)\n            ? (_openBlock(), _createBlock(_component_ion_col, {\n                key: 0,\n                size: \"12\"\n              }, {\n                default: _withCtx(() => [\n                  (_openBlock(), _createBlock(_KeepAlive, null, [\n                    (_openBlock(), _createBlock(_resolveDynamicComponent(_ctx.activeForm), {\n                      patient: _ctx.patient,\n                      isNewPatient: _ctx.isNewPatient,\n                      sitePrefix: _ctx.sitePrefix,\n                      initialVisitDate: _ctx.initialVisitDate,\n                      observations: _ctx.observations,\n                      onOnValue: _ctx.onValue,\n                      onOnNext: _ctx.onNext,\n                      onOnPrevious: _ctx.onPrevious,\n                      onOnFinish: _ctx.onFinish\n                    }, null, 40, [\"patient\", \"isNewPatient\", \"sitePrefix\", \"initialVisitDate\", \"observations\", \"onOnValue\", \"onOnNext\", \"onOnPrevious\", \"onOnFinish\"]))\n                  ], 1024))\n                ]),\n                _: 1\n              }))\n            : _createCommentVNode(\"\", true)\n        ]),\n        _: 1\n      })\n    ]),\n    _: 1\n  }))\n}","\nimport { computed, defineAsyncComponent, defineComponent, onMounted, reactive, ref } from 'vue'\nimport { useRoute, useRouter } from 'vue-router'\nimport { IonGrid, IonRow, IonCol, IonButton } from \"@ionic/vue\";\nimport { Patientservice } from '@/services/patient_service';\nimport Store from \"@/composables/ApiStore\"\nimport { toastSuccess, toastWarning } from '@/utils/Alerts';\nimport { loader } from '@/utils/loader';\nimport { ClinicRegistrationService } from '@/apps/ART/services/registration_service';\nimport { ConsultationService } from '@/apps/ART/services/consultation_service';\nimport { VitalsService } from '@/apps/ART/services/vitals_service';\nimport { PatientTypeService } from '@/apps/ART/services/patient_type_service';\nimport { resolveObs } from '../utils/form';\nimport { PatientProgramService } from '@/services/patient_program_service';\nimport { StagingService } from '@/apps/ART/services/staging_service';\nimport { EncounterService } from '@/services/encounter_service';\nimport { isEmpty, get } from 'lodash';\nimport { Encounter } from '@/interfaces/encounter';\nimport { Observation } from '@/interfaces/observation';\nimport { ConceptService } from '@/services/concept_service';\nimport EventBus from '@/utils/EventBus';\nimport { EmcEvents } from '../interfaces/emc_event';\n\nexport default defineComponent({\n  components: {\n    ClinicRegistration: defineAsyncComponent(() => import('@/apps/EMC/Components/ClinicRegistration.vue')),\n    Staging: defineAsyncComponent(() => import('@/apps/EMC/Components/Staging.vue')),\n    IonGrid,\n    IonRow,\n    IonCol,\n    IonButton,\n  },\n  setup() {\n    const route = useRoute()\n    const router = useRouter()\n    const isReady = ref(false);\n    const data = reactive({} as any);\n    const activeForm = ref('ClinicRegistration')\n    const sitePrefix = ref('')\n    const patientId = parseInt(route.params.id.toString() || '')\n    const isNewPatient = route.params.new.toString().match(/true/i) ? true : false\n    const isStaging = computed(() => activeForm.value === 'Staging');\n    const isRegistration = computed(() => activeForm.value === 'Staging');\n    const patient = ref({} as Patientservice)\n    const initialVisitDate = ref('')\n    const firstVisitEncounters = ref([] as number[])\n    const observations = reactive({} as Record<string, any>)\n    const isEnrolled = ref(false);\n\n    const setEnrollementStatus = () => {\n      const programService = new PatientProgramService(patientId);\n      programService.getPrograms().then((programs: any[]) => {\n        isEnrolled.value = programs.some(p => p.program.name === \"HIV PROGRAM\")\n      })\n    }\n    \n    const onValue = (form: any) => data[form.type] = form.data;\n    const onNext = () => activeForm.value = \"Staging\"\n    const onPrevious = () => activeForm.value = \"ClinicRegistration\"\n\n    const onFinish = async () => {\n      const { arvNumberEditable, formData, computedData } = data.registration\n      const { computedData: stagingData } = data.staging\n      \n      try {\n        loader.show();\n        \n        // Void first visit encounters\n        if(!isNewPatient && !isEmpty(firstVisitEncounters.value)) {\n          for(const encounter of firstVisitEncounters.value) {\n            await EncounterService.voidEncounter(encounter, 'Duplicate')\n          }\n        }\n\n        // ARV Number\n        if(arvNumberEditable && formData.arvNumber) {\n          await patient.value.createArvNumber(`${sitePrefix.value}-ARV-${formData.arvNumber}`)\n        }\n\n        // Patient Type Encunter      \n        const patientTypeService = new PatientTypeService(patientId, -1);\n        await patientTypeService.createEncounter()\n        const pTypeObs = await resolveObs(computedData, 'patient type')\n        await patientTypeService.saveObservationList(pTypeObs)\n\n        // Registration Encounter\n        const registrationService = new ClinicRegistrationService(patientId, -1)\n        await registrationService.createEncounter()\n        const regObs = await resolveObs(computedData, 'registration')\n        await registrationService.saveObservationList(regObs)\n\n        // Vitals and Consultation Encounters\n        if(formData.everRegisteredAtClinic === 'Yes') {\n          const vitalsService = new VitalsService(patientId, -1)\n          await vitalsService.createEncounter()\n          const vitalsObs = await resolveObs(computedData, 'vitals')\n          await vitalsService.saveObservationList(vitalsObs)\n\n          const consultationService = new ConsultationService(patientId, -1)\n          await consultationService.createEncounter()\n          const consultationObs = await resolveObs(computedData, 'consultation')\n          await consultationService.saveObservationList(consultationObs)\n        }\n\n        // Staging encounter\n        const stagingService = new StagingService(patientId, patient.value.getAge(), -1)\n        await stagingService.createEncounter()\n        const obs = await resolveObs(stagingData)\n        await stagingService.saveObservationList(obs)        \n        \n        // enroll patient into HIV program\n        if(isNewPatient || !isEnrolled.value) {\n          const patientProgram = new PatientProgramService(patientId)\n          patientProgram.setProgramDate(formData.initialVisitDate)\n          await patientProgram.enrollProgram();\n        } \n        \n        await loader.hide()\n        await ClinicRegistrationService.resetSessionDate()\n        await toastSuccess('Saved successfully')\n        router.push(`/emc/patient/${patientId}`)\n      } catch (error) {\n        await loader.hide()\n        console.log(error)\n        toastWarning(`${error}`)\n      }\n    }\n\n    const parseObs = async (obs: Observation[]) => {\n      for (const v of obs) {\n        if(!firstVisitEncounters.value.includes(v.encounter_id)) firstVisitEncounters.value.push(v.encounter_id)\n        const concept = await ConceptService.getConceptName(v.concept_id);\n        let value = '' as any\n        if(v.value_datetime) value = v.value_datetime;\n        else if(v.value_drug) value = v.value_datetime;\n        else if(v.value_text) value = v.value_text;\n        else if(v.value_numeric) value = v.value_numeric;\n        else if(v.value_coded) value = await ConceptService.getConceptName(v.value_coded);\n        if(v.value_modifier) value = v.value_modifier + value;\n        observations[concept] = value\n      }\n    }\n    \n    onMounted(async () => {\n      setEnrollementStatus()\n      patient.value = await Store.get(\"ACTIVE_PATIENT\", { patientID: patientId });\n      Store.get('SITE_PREFIX').then(prefix => sitePrefix.value = prefix);      \n      if(!isNewPatient) {\n        const enc = await EncounterService.getEncounters(patientId, {\"encounter_type_id\": 9})\n        if(isEmpty(enc)) return isReady.value = true;\n        initialVisitDate.value = get(enc, '[0].encounter_datetime', '')\n        if(initialVisitDate.value) {\n          const encounters: Encounter[] = await  EncounterService.getEncounters(patientId, { date: initialVisitDate.value });\n          for (const enc of encounters){\n            if([9, 53, 6, 5, 52].includes(enc.encounter_type))\n              await parseObs(enc.observations)\n          }\n        }\n      }\n      isReady.value = true;\n      EventBus.on(EmcEvents.ON_INITIAL_VISIT_DATE, (date: string) => initialVisitDate.value = date)\n    })\n\n    return {\n      activeForm,\n      patient,\n      isNewPatient,\n      isStaging,\n      isRegistration,\n      sitePrefix,\n      isReady,\n      initialVisitDate,\n      observations,\n      onValue,\n      onFinish,\n      onNext,\n      onPrevious,\n    }\n  },\n})\n","import { render } from \"./HIVReception.vue?vue&type=template&id=64d3a97f&ts=true\"\nimport script from \"./HIVReception.vue?vue&type=script&lang=ts\"\nexport * from \"./HIVReception.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { ConceptService } from \"@/services/concept_service\"\nimport { alertConfirmation } from \"@/utils/Alerts\"\nimport { GuideLineInterface } from \"@/utils/GuidelineEngine\"\n\nexport const CD4_AS_START_REASON_CUTOFF_DATE = \"2014-04-01\";\n\nexport const ADULT_WHO_STAGE_CRITERIA: Record<string, GuideLineInterface> = {\n    'Adults with stage 4 conditions': {\n        concept: 'WHO STAGE IV ADULT',\n        priority: 1,\n        conditions: {\n            stage: (stage: number) => stage === 4,\n        }\n    },\n    'Classify as stage 4 when reason for ART is WHO STAGE 4': {\n        concept: 'WHO STAGE IV ADULT',\n        priority: 2,\n        conditions: {\n            reasonForArt: (reason: string) => reason === 'WHO STAGE IV ADULT'\n        }\n    },\n    'Adults with stage 3 conditions': {\n        concept: 'WHO STAGE III ADULT',\n        priority: 3,\n        conditions: {\n            stage: (stage: number) => stage === 3\n        }\n    },\n    'Adults with stage 2 conditions': {\n        concept: 'WHO STAGE II ADULT',\n        priority: 4,\n        conditions: {\n            stage: (stage: number) => stage === 2,\n        }\n    },\n    'Adults with stage 1 conditions': {\n        concept: 'WHO STAGE I ADULT',\n        priority: 5,\n        conditions: {\n            stage: (stage: number) => stage === 1\n        }\n    }\n}\n\nexport const CHILD_WHO_STAGE_CRITERIA: Record<string, GuideLineInterface> = {\n    'Children with stage 4 conditions': {\n        concept: 'WHO STAGE IV PEDS',\n        priority: 1,\n        conditions: {\n            stage: (stage: number) => stage === 4,\n        }\n    },\n    'Classify as stage 4 when reason for ART is WHO STAGE 4': {\n        concept: 'WHO STAGE IV PEDS',\n        priority: 2,\n        conditions: {\n            reasonForArt: (reason: string) => reason === 'WHO STAGE IV PEDS'\n        }\n    },\n    'For children with stage 3 conditions': {\n        concept: 'WHO STAGE III PEDS',\n        priority: 3,\n        conditions: {\n            stage: (stage: number) => stage === 3\n        }\n    },\n    'Children with stage 2 conditions': {\n        concept: 'WHO STAGE II PEDS',\n        priority: 4,\n        conditions: {\n            stage: (stage: number) => stage === 2\n        }\n    },\n    'Children with stage 1 conditions': {\n        concept: 'WHO STAGE I PEDS',\n        priority: 5,\n        conditions: {\n            stage: (stage: number) => stage === 1\n        }\n    }\n}\n\nexport const CONTRADICTING_STAGE_DEFINITIONS_ALERTS: Record<string, GuideLineInterface> = {\n    \"Warn if Severe weight loss is selected when actual patient BMI is acceptable\": {\n        priority: 1,\n        actions: {\n            alert: async (facts: any) => await alertConfirmation(`Patient's BMI of ${facts.bmi} greater than 18.5, do you wish to proceed?`, {\n                confirmBtnLabel: 'Yes, keep severe weightloss',\n                cancelBtnLabel: 'No, cancel'\n            }),\n        },\n        conditions: {\n            selectedCondition (condition: string) {\n                return condition === 'Severe weight loss >10% and/or BMI <18.5kg/m^2, unexplained'\n            },\n            bmi:(bmi: number) => bmi > 18.5\n        }\n    },\n    \"Warn for contradicting stage defining conditions\": {\n        priority: 1,\n        actions: {\n            alert: async (facts: any) => {\n                const keepAsymptomatic = await alertConfirmation('CONTRADICTING STAGE DEFINING CONDITIONS', {\n                    confirmBtnLabel: \"Keep Asymptomatic\",\n                    cancelBtnLabel: 'Keep other(s)'\n                })\n                if(keepAsymptomatic) {\n                    facts.stage = 1\n                    facts.selectedConditions = []\n                    facts.stageThreeConditions = []\n                    facts.stageFourConditions = []\n                    facts.stageTwoConditions = []\n                    return true\n                }\n                return false\n            },\n        },\n        conditions: {\n            selectedCondition(condition: string){\n                return condition === 'Asymptomatic HIV infection'\n            },\n            stage: (stage: number) => stage >= 2\n        }\n    },\n}\n\nexport const RECOMMENDED_CHILD_STAGING_CONDITIONS: Record<string, GuideLineInterface> = {\n    'For children whose current weight percentile is less than 70' : {\n        priority: 1,\n        actions: {\n            isChecked: true\n        },\n        description: {\n            color: 'danger',\n            show: 'always',\n            info: (facts: any) => `Child has a low weight percentile of ${facts.weightPercentile}`\n        },\n        conditions: {\n            selectedCondition(condition: string) {\n                return condition === 'Severe unexplained wasting or malnutrition not responding to treatment (weight-for-height/ -age <70% or MUAC less than 11cm or oedema)'\n            },\n            weightPercentile(weightPercentile: number){\n                return weightPercentile < 70\n            }\n        }\n    },\n    'Enable Moderate unexplained malnutrition for children whose weight for height is 70-79%': {\n        priority: 1,\n        actions: {\n            isChecked: true\n        },\n        description: {\n            color: 'danger',\n            show: 'always',\n            info: (facts: any) => `Child has weight percentile of ${facts.weightPercentile}`\n        },\n        conditions: {\n            selectedCondition(condition: string) {\n                return condition === 'Moderate unexplained wasting/malnutrition not responding to treatment (weight-for-height/ -age 70-79% or muac 11-12 cm)'\n            },\n            weightPercentile(weightPercentile: number){\n                return weightPercentile >= 70 && weightPercentile <= 79\n            }\n        }\n    },\n    'Disable moderate weight loss when Severe unexplained weight loss is chosen': {\n        priority: 2,\n        actions: {\n            isChecked: false,\n            disabled: true\n        },\n        description: {\n            color: 'secondary',\n            show: 'always',\n            info: () => 'Severe weight loss/manutrition was already selected',\n        },\n        conditions: {\n            selectedCondition(condition: string) {\n                return condition === 'Moderate unexplained wasting/malnutrition not responding to treatment (weight-for-height/ -age 70-79% or muac 11-12 cm)'\n            },\n            selectedConditions(conditions: Array<string>) {\n                return conditions.includes('Severe unexplained wasting or malnutrition not responding to treatment (weight-for-height/ -age <70% or MUAC less than 11cm or oedema)')\n            }\n        }\n    }\n}\n\nexport const RECOMMENDED_ADULT_STAGING_CONDITIONS: Record<string, GuideLineInterface> = {\n    'Adults with a BMI less than 16': {\n        priority: 1,\n        actions: {\n            isChecked: true\n        },\n        description: {\n            color: 'danger',\n            show: 'always',\n            info: (facts: any) => `Adult has a low BMI of ${facts.bmi}`\n        },\n        conditions: {\n            selectedCondition(condition: string) {\n                return condition === 'Severe weight loss >10% and/or BMI <18.5kg/m^2, unexplained'\n            },\n            bmi: (bmi: number) => bmi < 16\n        }\n    },\n    'Adults whose BMI is between 16 and 18': {\n        priority: 3,\n        actions: {\n            isChecked: true\n        },\n        description: {\n            color: 'warning',\n            show: 'onChecked',\n            info: (facts: any) => `BMI of ${facts.bmi} is between 16 and 18`,\n        },\n        conditions: {\n            selectedCondition: (condition: string) => condition === 'Moderate weight loss less than or equal to 10 percent, unexplained',\n            bmi: (bmi: number) => bmi >= 16.0 && bmi <= 18.5\n        }\n    },\n    \"Disable Moderate weight loss if severe weightloss is selected\": {\n        priority: 2,\n        actions: {\n            isChecked: false,\n            disabled: true\n        },\n        description: {\n            color: 'secondary',\n            show: 'always',\n            info: () => 'Severe weight loss was already selected',\n        },\n        conditions: {\n            selectedCondition(condition: string) {\n                return condition === 'Moderate weight loss less than or equal to 10 percent, unexplained'\n            },\n            selectedConditions(conditions: Array<string>) {\n                return conditions.includes('Severe weight loss >10% and/or BMI <18.5kg/m^2, unexplained')\n            }\n        }\n    }\n}\n\nexport const CHILD_ART_ELIGIBILITY: Record<string, GuideLineInterface> = {\n    'Has stage 4 conditions': {\n        concept: 'WHO STAGE IV PEDS',\n        priority: 1,\n        conditions: {\n            stage: (stage: number) => stage === 4\n        }\n    },\n    'Has stage 3 conditions': {\n        concept: 'WHO STAGE III PEDS',\n        priority: 2,\n        conditions: {\n            stage: (stage: number) => stage === 3,\n        }\n    },\n    'Children under twelve months who tested positive on Rapid test and have presumed severe HIV': {\n        concept: 'PRESUMED SEVERE HIV',\n        priority: 3,\n        conditions: {\n            ageInMonths(age: number){\n                return age < 12 \n            },\n            selectedConditions: (conditions: Array<string>) => {\n                const pshdConditions = ConceptService.getConceptsByCategory('pshd_condition')\n                for (const pshdCondition in pshdConditions) {\n                    if (conditions.includes(pshdCondition)) return true\n                }\n                return false\n            },\n            testType(testType: string){\n                return testType === 'HIV rapid test'\n            },\n        }\n    },\n    \"Children under twelve who tested positive via HIV DNA Polymerase Chain Reaction test\": {\n        concept: 'HIV DNA polymerase chain reaction',\n        priority: 4,\n        conditions: {\n            ageInMonths: (age: number) => age < 12,\n            testType: (testType: string) => testType === \"HIV DNA polymerase chain reaction\",\n        }\n    },\n    \"Children who are less than 24 months\": {\n        concept: 'HIV infected',\n        priority: 5,\n        conditions: {\n            ageInMonths: (age: number) => age < 24\n        }\n    },\n    \"Children between 24 and 56 months who have stage 2 or 1 conditions\": {\n        concept: 'CD4 COUNT LESS THAN OR EQUAL TO 750',\n        priority: 6,\n        conditions: {\n            ageInMonths(age: number) {\n                return age >= 24 && age <= 56\n            },\n            cd4Date: (date: string) => {\n                return new Date(date) <= new Date(\"2014-04-01\")\n            },\n            cd4(cd4: number) {\n                return cd4 <= 750\n            },\n            cd4Modifier(modifier: string) {\n                return modifier === '<' || modifier === '='\n            },\n            stage(stage: number) {\n                return stage <= 2\n            }\n        }\n    },\n    \"Children with CD4 count less than 500 and have stage 1 and stage 2 conditions\": {\n        concept: 'CD4 COUNT LESS THAN OR EQUAL TO 500',\n        priority: 7,\n        conditions: {\n            cd4(cd4: number){\n                return cd4 <= 500\n            },\n            cd4Date: (date: string) => {\n                return new Date(date) <= new Date(\"2014-04-01\")\n            },\n            cd4Modifier(modifier: string){\n                return modifier === '<' || modifier === '='\n            },\n            stage(stage: number) {\n                return stage <= 2\n            }\n        }\n    },\n    \"Children over the date 2014-04-01 who are more than five years old and have cd4 count less than 500\": {\n        concept: 'CD4 COUNT LESS THAN OR EQUAL TO 500',\n        priority: 9,\n        conditions: {\n            cd4Date: (date: string) => {\n                return new Date(date) <= new Date(\"2014-04-01\")\n            },\n            age(age: number) {\n                return age > 5\n            },\n            cd4(cd4: number) {\n                return cd4 <= 500\n            },\n            cd4Modifier(modifier: string) {\n                return modifier === '<' || modifier === '='\n            }\n        }\n    },\n    \"Children over date 2014-04-01 and less than Five years old\": {\n        concept: 'HIV infected',\n        priority: 10,\n        conditions: {\n            date(date: string) {\n                return date >= '2014-04-01'\n            },\n            age(age: number) {\n                return age <= 5\n            }\n        }\n    },\n    'Women who are breast feeding': {\n        concept: 'BREASTFEEDING',\n        priority: 11,\n        conditions: {\n            gender(gender: string){\n                return gender === 'F'\n            },\n            breastFeeding(answer: string){\n                return  answer === 'Yes'\n            },\n            stage: (stage: number) => stage <= 2\n        }\n    },\n    'Women who are pregnant': {\n        concept: 'PATIENT PREGNANT',\n        priority: 12,\n        conditions: {\n            gender(gender: string) {\n                return gender === 'F'\n            },\n            pregnant(answer: string){\n                return answer === 'Yes'\n            },\n            stage(stage: number) {\n                return stage <= 2\n            },\n        }\n    },\n    \"Asymptomatic patient with either stage one or stage two conditions\": {\n        concept: 'Asymptomatic',\n        priority: 13,\n        conditions: {\n            stage: (stage: number) => stage <= 2\n        }\n    }\n}\n\nexport const ADULT_ART_ELIGIBILITY: Record<string, GuideLineInterface> = {\n    'Has stage 4 conditions': {\n        concept: 'WHO STAGE IV ADULT',\n        priority: 1,\n        conditions: {\n            stage: (stage: number) => stage === 4\n        }\n    },\n    'Has HIV wasting syndrome identified in stage 3': {\n        concept: 'WHO STAGE IV ADULT',\n        priority: 2,\n        conditions: {\n            selectedConditions: (conditions: Array<string>) => {\n                const severeSymp = ConceptService.getConceptsByCategory('severe_hiv_wasting_syndrome')\n                const found = severeSymp.reduce((total, symp) => conditions.includes(symp.name) ? total + 1 : 0, 0)\n                return found >= 2\n            }\n        }\n    },\n    'Has stage 3 conditions': {\n        concept: 'WHO STAGE III ADULT',\n        priority: 3,\n        conditions: {\n            stage: (stage: number) => stage === 3,\n        }\n    },\n    'CD4 less than 350 for adults before 2014': {\n        concept: 'cd4 less than or equal to 350',\n        priority: 4,\n        conditions: {\n            cd4Date: (date: string) => {\n                return new Date(date) <= new Date(\"2014-04-01\")\n            },\n            cd4(cd4: number) {\n                return cd4 <= 350\n            },\n            cd4Modifier(modifier: string) {\n                return modifier === '<' || modifier === '='\n            }\n        }\n    },\n    'CD4 less than 250 for adults after 2014': {\n        concept: 'cd4 less than or equal to 250',\n        priority: 4,\n        conditions: {\n            cd4Date: (date: string) => {\n                return new Date(date) <= new Date(\"2014-04-01\")\n            },\n            cd4(cd4: number) {\n                return cd4 <= 250\n            },\n            cd4Modifier(modifier: string) {\n                return modifier === '<' || modifier === '='\n            }\n        }\n    },\n    'CD4 less than 350 for adults after 2014': {\n        concept: 'cd4 less than or equal to 350',\n        priority: 5,\n        conditions: {\n            cd4Date: (date: string) => {\n                return new Date(date) <= new Date(\"2014-04-01\")\n            },\n            cd4(cd4: number) {\n                return cd4 <= 350\n            },\n            cd4Modifier(modifier: string) {\n                return modifier === '<' || modifier === '='\n            }\n        }\n    },\n    'CD4 less than 500 for adults after 2014': {\n        concept: 'cd4 less than or equal to 500',\n        priority: 6,\n        conditions: {\n            cd4Date: (date: string) => {\n                return new Date(date) <= new Date(\"2014-04-01\")\n            },\n            cd4(cd4: number){\n                return cd4 <= 500\n            },\n            cd4Modifier(modifier: string) {\n                return modifier === '<' || modifier === '='\n            }\n        }\n    },\n    'Women who are breast feeding': {\n        concept: 'BREASTFEEDING',\n        priority: 8,\n        conditions: {\n            gender(gender: string){\n                return gender === 'F'\n            },\n            breastFeeding(answer: string){\n                return  answer === 'Yes'\n            },\n            stage: (stage: number) => stage <= 2\n        }\n    },\n    'Women who are pregnant': {\n        concept: 'PATIENT PREGNANT',\n        priority: 7,\n        conditions: {\n            gender(gender: string) {\n                return gender === 'F'\n            },\n            pregnant(answer: string){\n                return answer === 'Yes'\n            },\n            stage(stage: number) {\n                return stage <= 2\n            },\n        }\n    },\n    \"Asymptomatic patient with either stage one or stage two conditions\": {\n        concept: 'Asymptomatic',\n        priority: 9,\n        conditions: {\n            stage: (stage: number) => stage <= 2,\n        }\n    }\n}\n","import { AppEncounterService } from \"@/services/app_encounter_service\"\nimport { LocationService } from \"@/services/location_service\"\nimport {\n    RECOMMENDED_ADULT_STAGING_CONDITIONS,\n    CHILD_ART_ELIGIBILITY,\n    ADULT_ART_ELIGIBILITY,\n    ADULT_WHO_STAGE_CRITERIA,\n    CHILD_WHO_STAGE_CRITERIA,\n    CONTRADICTING_STAGE_DEFINITIONS_ALERTS,\n    RECOMMENDED_CHILD_STAGING_CONDITIONS,\n    CD4_AS_START_REASON_CUTOFF_DATE\n} from \"@/apps/ART/guidelines/staging_guidelines\"\n\n/**\n * Enable for filtering staging categories in ConceptName Dictionary\n */\nenum StagingCategory {\n    ADULT_STAGE_4 = 'stage_4_conditions_adults',\n    ADULT_STAGE_3 = 'stage_3_conditions_adults',\n    ADULT_STAGE_2 = 'stage_2_conditions_adults',\n    ADULT_STAGE_1 = 'stage_1_conditions_adults',\n    PEDAID_STAGE_4 = 'stage_4_conditions_pedaids',\n    PEDAID_STAGE_3 = 'stage_3_conditions_pedaids',\n    PEDAID_STAGE_2 = 'stage_2_conditions_pedaids',\n    PEDAID_STAGE_1 = 'stage_1_conditions_pedaids'\n}\n\nexport class StagingService extends AppEncounterService {\n    age: number\n    confirmatoryTest: string | null;\n    constructor(patientID: number, age: number, providerID: number) {\n        super(patientID, 52, providerID) //TODO: Use encounter type reference name\n        this.age = age\n        this.confirmatoryTest = null\n    }\n\n    isAdult() { return this.age >= 15 }\n\n    isPedaid() { return this.age <= 14 }\n\n    setAge(age: number) {\n        this.age = age\n    }\n\n    getFacilities (filter='') { return LocationService.getFacilities({name: filter}) }\n    \n    getConfirmatoryTestType() { return this.confirmatoryTest }\n\n    cd4CountIsValid(value: string) {\n        try {\n            return value.match(/^(=|<|>)([0-9]*)$/m) ? true : false\n        }catch(e) {\n            return false\n        }\n    }\n\n    getAlertGuidelines() {\n        return CONTRADICTING_STAGE_DEFINITIONS_ALERTS\n    }\n\n    getWhoStageGuidelines() {\n        return this.isAdult() ? ADULT_WHO_STAGE_CRITERIA : CHILD_WHO_STAGE_CRITERIA\n    }\n\n    getProgramEligibilityGuidelines() {\n        return this.isAdult() ? ADULT_ART_ELIGIBILITY: CHILD_ART_ELIGIBILITY\n    }\n\n    getRecommendedConditionGuidelines() {\n        return this.isAdult() ? RECOMMENDED_ADULT_STAGING_CONDITIONS: RECOMMENDED_CHILD_STAGING_CONDITIONS\n    }\n\n    getStagingConditions(stage: number) {\n        const category = this.getStagingCategoryByNum(stage)\n        return AppEncounterService.getConceptsByCategory(category)\n    }\n\n    getAllWhoStages() {\n        return AppEncounterService.getConceptsByCategory('whole_staging_numbers')\n    }\n\n    getAllReasonsForART(registrationDate = this.date, isMale = false) {\n        return AppEncounterService.getConceptsByCategory('reason_for_art')\n            .filter(reason => {\n                if(new Date(registrationDate) > new Date(CD4_AS_START_REASON_CUTOFF_DATE) && reason.name.match(/cd4/i)) return false\n                if(isMale && reason.name.match(/breastfeeding|pregnant/i)) return false\n                return true\n            })\n    }\n\n    buildWhoStageObs(stage: string) {\n        return this.buildValueCoded('Who stage', stage)\n    }\n    \n    buildWhoCriteriaObs(condition: string) {\n        return this.buildValueCoded('Who stages criteria present', condition)\n    }\n\n    buildReasonForArtObs(reason: string) {\n        return this.buildValueCoded('Reason for ART eligibility', reason)\n    }\n\n    private getStagingCategoryByNum(stageNumber: number) {\n        switch(stageNumber) {\n            case 1:\n                return this.isAdult() ? StagingCategory.ADULT_STAGE_1 : StagingCategory.PEDAID_STAGE_1\n            case 2:\n                return this.isAdult() ? StagingCategory.ADULT_STAGE_2 : StagingCategory.PEDAID_STAGE_2\n            case 3:\n                return this.isAdult() ? StagingCategory.ADULT_STAGE_3 : StagingCategory.PEDAID_STAGE_3\n            case 4:\n                return this.isAdult() ? StagingCategory.ADULT_STAGE_4 : StagingCategory.PEDAID_STAGE_4\n            default: \n                return ''\n        }\n    }\n\n    async loadHivConfirmatoryTestType() {\n        const test = await AppEncounterService.getFirstValueCoded(\n            this.patientID, 'Confirmatory hiv test type'\n        )\n        if (test) this.confirmatoryTest = test\n    }\n}\n","import { loadingController } from \"@ionic/vue\";\n\nexport const loader = {\n  /**\n   * show loading spinner\n   * \n   * @param message message to display while loading. default is 'Loading...'\n   * @returns {Promise<void>}\n   */\n  async show(message?: string): Promise<void> {\n    return (await loadingController.create({\n      message: message || \"Loading...\",\n      spinner: 'crescent',\n      translucent: true\n    })).present();\n  },\n\n  /**\n   * hide loading spinner\n   * \n   * @returns {Promise<boolean>}\n   * */\n  async hide(): Promise<void> {\n    loadingController.getTop().then(v => v ? loadingController.dismiss() : null);\n  }\n}\n","import { AppEncounterService } from \"@/services/app_encounter_service\";\nimport { isArray } from \"lodash\";\nimport { Option } from '@/components/Forms/FieldInterface';\nexport class VitalsService extends AppEncounterService{\n  constructor(patientID: number, providerID: number) {\n    super(patientID, 6, providerID);\n  }\n  isNotEmptyandNumber(vital: Option) {\n    return `${vital.value}`.match(/^-?\\d+\\.?\\d*$/) ? null : [`Invalid entry for ${vital.label}`]\n  }\n  isNotEmptyandFloat(vital: Option) {\n    return `${vital.value}`.match(/^\\d{1,3}\\.\\d{1,5}$/) \n      ? null \n      : [`Invalid entry for ${vital.label}. Don't forget to add a decimal. e.g. 56.2 ${vital.other?.modifier || ''}`]\n  }\n  checkMinMax(val: Option, min: number, max: number) {\n    const p = [];\n    if (parseFloat(`${val.value}`) < min) {\n      p.push([`${val.label} entered is less than minimum ${min} ${val?.other?.modifier || ''}`])\n    }\n    if (parseFloat(`${val.value}`) > max) {\n      p.push([`${val.label} entered is greater than maximum ${max} ${val?.other?.modifier || ''}`])\n    }\n    return p.length > 0 ? p : null;\n  }\n  validateAll(vitals: Option[]) {\n    const p: any = [];\n    vitals.map((vital: any) => {\n      const j = this.validator(vital);\n      return isArray(j) ? p.push(j) : null\n    })\n    return p.length > 0 ? p : null;\n  }\n\n  mergeErrors(errors: any[]) {\n    const holder: any = [];\n    errors.forEach(element => {\n      if (isArray(element)) {\n        holder.push(element)\n      }\n    });\n    return holder.length > 0 ? holder : null\n  }\n  isValidBPReading(vital: any) {\n    const p = [];\n    const isValidBP =  `${vital.value}`.match(/^\\d{1,3}\\/\\d{1,3}$/g) ? null : ['Invalid BP reading']\n    p.push(isValidBP);\n    if(isValidBP == null) {\n      const value = `${vital.value}`.split('/');\n      \n      const bpSystolic = {\n        label: 'Systolic',\n        value: value[0]\n      };\n      const bpDiastolic = {\n        label: 'Diastolic',\n        value: value[1]\n      };\n      p.push(this.checkMinMax(bpDiastolic, 30, 200))\n      p.push(this.checkMinMax(bpSystolic, 40, 250))\n    }\n    return this.mergeErrors(p)\n  }\n  validator(vital: Option) {\n    const values = [\n      {\n        name: \"Weight\",\n        validator: (val: Option) => {\n          const emptyErrors = this.isNotEmptyandFloat(val);\n          const minErrors = this.checkMinMax(val, 2.0, 250.0);\n          return this.mergeErrors([emptyErrors, minErrors]); \n        },\n      },\n      {\n        name: \"Height\",\n        validator: (val: Option) => {\n          const errors = []\n          errors.push(this.isNotEmptyandNumber(val))\n          errors.push(this.checkMinMax(val, 40, 220))\n          return this.mergeErrors(errors); \n        },\n      }, {\n        name: \"BP\",\n        validator: (val: any) => {\n          return this.isValidBPReading(val)\n        },\n      }, {\n        name: \"Temp\",\n        validator: (val: any) => {\n          const emptyErrors = this.isNotEmptyandNumber(val);\n          const minErrors = this.checkMinMax(val, 30, 42);\n          return this.mergeErrors([emptyErrors, minErrors]); \n        },\n      }, {\n        name: \"SP02\",\n        validator: (val: any) => {\n          const minErrors = this.checkMinMax(val, 40, 100);\n          return this.mergeErrors([minErrors]); \n        },\n      }, {\n        name: \"Pulse\",\n        validator: (val: any) => {\n          const minErrors = this.checkMinMax(val, 50, 120);\n          return this.mergeErrors([minErrors]); \n        },\n      }\n    ]\n    const v = values.filter(element => {\n      return element.name === vital.label;\n    });\n    if (v.length > 0) {\n      return v[0].validator(vital);\n    }\n    return null\n  }\n}","export enum EmcEvents {\n  RELOAD_PATIENT_DATA = 'reload_patient_data',\n  RELOAD_PATIENT_VISIT_DATA = 'reload_patient_visit_data',\n  RELOAD_GUARDIAN_DATA = 'reload_guardian_data',\n  RELOAD_LATEST_VL_RESULT = 'reload_latest_vl_result',\n  RELOAD_STAGING_INFORMATION = 'reload_staging_info',\n  ON_CLEAR = \"on_clear\",\n  ON_INITIAL_VISIT_DATE = \"on_initital_visit_date\"\n}"],"sourceRoot":""}