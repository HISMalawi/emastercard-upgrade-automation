(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-44f7ff80"],{"32b3":function(e,t,n){"use strict";n.d(t,"b",(function(){return i})),n.d(t,"a",(function(){return s}));var i,r=n("cc6f"),a=n("7957");(function(e){e["Prescription"]="htnPrescription"})(i||(i={}));class s extends r["a"]{constructor(e,t){super(e,48,t)}static getBpGrade(e,t){return e<140&&t<90?"normal":e>=140&&e<160||t>=100&&t<110?"grade 1":e>=180&&t>110||e>=180?"grade 3":e>=160&&e<180||t>=110?"grade 2":"N/A"}static isBpNormotensive(e){const[t,n]=Object.values(e).sort((e,t)=>e.date<t.date?1:0).map(e=>this.getBpGrade(e.sbp,e.dbp));return"normal"===t&&"normal"===n}getSystolicBp(){return a["a"].getFirstValueNumber(this.patientID,"Systolic blood pressure")}getDiastolicBp(){return a["a"].getFirstValueNumber(this.patientID,"Diastolic blood pressure")}async onBpDrugs(){const e=await a["a"].getFirstValueCoded(this.patientID,"Treatment status");return!!e&&"Yes"===e}async getBPTrail(){return await r["a"].getJson(`/patients/${this.patientID}/bp_trail`)}async getCurrentDrugs(){return await r["a"].getJson(`/patients/${this.patientID}/current_bp_drugs`)}async getLastDrugs(){return await r["a"].getJson(`/patients/${this.patientID}/last_bp_drugs_dispensation`)}async getAdherence(e,t){return await r["a"].postJson(`/patients/${this.patientID}/remaining_bp_drugs`,{drug_id:e,pills:t})}async enrollPatient(e){return await r["a"].postJson(`/patients/${this.patientID}/update_or_create_htn_state`,e)}static htnDrugReferences(){return[{drug_id:275,drug_name:"HCZ (25mg tablet)",units:"tab(s)",am:0,noon:0,pm:1,frequency:"Daily (QOD)"},{drug_id:942,drug_name:"Enalapril (5mg tablet)",units:"tab(s)",am:0,noon:0,pm:1,frequency:"Daily (QOD)"},{drug_id:943,drug_name:"Enalapril (10mg tablet)",units:"tab(s)",am:0,noon:0,pm:1,frequency:"Daily (QOD)"},{drug_id:558,drug_name:"Amlodipine (5mg tablet)",units:"tab(s)",am:0,noon:0,pm:1,frequency:"Daily (QOD)"},{drug_id:559,drug_name:"Amlodipine (10mg tablet)",units:"tab(s)",am:0,noon:0,pm:1,frequency:"Daily (QOD)"},{drug_id:117,drug_name:"Atenolol (50mg tablet)",units:"tab(s)",am:0,noon:0,pm:1,frequency:"Daily (QOD)"},{drug_id:11,drug_name:"Atenolol(100mg tablet)",units:"tab(s)",am:0,noon:0,pm:1,frequency:"Daily (QOD)"}]}getDrugs(){return{HCZ:{drugs:[{drugName:"HCZ (25mg tablet)",drugID:275,amount:"25mg",current:!1,selected:!1,isChecked:!1,dispensed:null,expectedRemaining:null,adherence:null}],selected:null,notes:[]},Enalapril:{drugs:[{drugName:"Enalapril (5mg tablet)",drugID:942,amount:"5mg",current:!1,selected:!1,isChecked:!1,dispensed:null,expectedRemaining:null,adherence:null,remaining:null},{drugName:"Enalapril (10mg tablet)",drugID:943,amount:"10mg",current:!1,selected:!1,isChecked:!1,dispensed:null,expectedRemaining:null,adherence:null,remaining:null}],selected:null,notes:[]},Amlodipine:{drugs:[{drugName:"Amlodipine (5mg tablet)",drugID:558,amount:"5mg",current:!1,selected:!1,isChecked:!1,dispensed:null,expectedRemaining:null,adherence:null,remaining:null},{drugName:"Amlodipine (10mg tablet)",drugID:559,amount:"10mg",current:!1,selected:!1,isChecked:!1,dispensed:null,expectedRemaining:null,adherence:null,remaining:null}],selected:null,notes:[]},Atenolol:{drugs:[{drugName:"Atenolol (50mg tablet)",drugID:117,amount:"50mg",current:!1,selected:!1,isChecked:!1,dispensed:null,expectedRemaining:null,adherence:null,remaining:null},{drugName:"Atenolol(100mg tablet)",drugID:11,amount:"100mg",current:!1,selected:!1,isChecked:!1,dispensed:null,expectedRemaining:null,adherence:null,remaining:null}],selected:null,notes:[]}}}}},"6d32":function(e,t,n){"use strict";n.d(t,"a",(function(){return r}));var i=n("1c74");class r extends i["e"]{constructor(){super()}static getAllArvRegimens(){return this.getJson(`programs/${this.getProgramID()}/all_arv_regimens`)}static getRegimens(e){return this.getJson(`programs/${this.getProgramID()}/regimens`,{patient_id:e})}static getRegimensByWeight(e,t=!1){return this.getJson(`programs/${this.getProgramID()}/regimens`,{weight:e,tb_dosage:t})}static getCustomIngridients(){return this.getJson(`programs/${this.getProgramID()}/custom_regimen_ingredients`)}static getCurrentRegimen(e,t=this.getSessionDate()){return this.getJson(`programs/${this.getProgramID()}/${e}`,{date:t})}static getRegimenExtras(e,t){return this.getJson(`programs/${this.getProgramID()}/regimen_extras`,{name:e,weight:t})}}},"71c3":function(e,t,n){"use strict";n.d(t,"a",(function(){return r}));var i=n("1c74");class r extends i["e"]{constructor(){super()}static create(e){return this.postJson("drug_orders",e)}static updateDispensationOrders(e){return this.postJson("dispensations",{program_id:this.getProgramID(),dispensations:e.map(e=>({date:this.getSessionDate(),drug_order_id:e["order_id"],quantity:e["quantity"]}))})}static getDrugOrderHistory(e){return this.getJson("drug_orders",{patient_id:e})}static getDrugOrders(e){return this.getJson("drug_orders",{patient_id:e,date:this.getSessionDate(),program_id:this.getProgramID()})}static getAllDrugOrders(e,t=1e3){return this.getJson("drug_orders",{patient_id:e,program_id:i["e"].getProgramID(),page_size:t})}static getLastDrugsReceived(e){return this.getJson(`patients/${e}/last_drugs_received`,{date:this.getSessionDate(),program_id:this.getProgramID()})}static getDrugDosages(e,t,n=this.getSessionDate()){const i={drug_id:t,date:n};return this.getJson(`programs/${this.getProgramID()}/patients/${e}/drug_doses`,i)}static getOrderByPatient(e,t){return this.getJson("/drug_orders",{patient_id:e,program_id:this.getProgramID(),...t})}}},7365:function(e,t,n){"use strict";n("14d9"),n("13d5");var i=n("7a23"),r=n("ad60"),a=n("2ef0"),s=n("0fa1"),o=n("b3b1"),c=n("c21d"),u=n("7920"),l=n("b5e4"),d=n("8e8b"),g=Object(i["defineComponent"])({components:{HisStandardForm:u["a"]},data:()=>({patient:{},fields:[],patientID:"",providerID:-1,providers:[],facts:{sessionDate:"",apiDate:"",encounterName:"N/A",providers:[],isBdeMode:!1,birthDate:"",outcome:"",outcomeStartDate:""},ready:!1}),watch:{$route:{handler(e){e.params.patient_id&&this.patientID!=e.params.patient_id&&(this.patientID=parseInt(e.params.patient_id),d["a"].get("ACTIVE_PATIENT",{patientID:this.patientID}).then(e=>{this.patient=e,this.setEncounterFacts().then(()=>{this.checkEncounterGuidelines().then(()=>{this.ready=!0})})}))},immediate:!0,deep:!0}},computed:{cancelDestination(){return this.patientDashboardUrl()}},methods:{runflowState(e,t=null){const n={};if(n[o["b"].SET_PROVIDER]=e=>{const[t]=e.split(" "),n=Object(a["find"])(this.providers,{username:t});return n&&(this.providerID=n.person_id),o["b"].CONTINUE},n[o["b"].CHANGE_SESSION_DATE]=()=>(this.$router.push("/session/date?patient_dashboard_redirection_id="+this.patientID),o["b"].EXIT),n[o["b"].CHANGE_PATIENT_OUTCOME]=()=>(this.$router.push("/patient/programs/"+this.patientID),o["b"].EXIT),n[o["b"].GO_TO_PATIENT_DASHBOARD]=()=>(this.gotoPatientDashboard(),o["b"].EXIT),e in n)return n[e](t)},async checkEncounterGuidelines(){const e=Object(c["a"])(this.facts,o["a"]);for(const a in e){var t,n;const s=e[a];if(null!==s&&void 0!==s&&null!==(t=s.actions)&&void 0!==t&&t.alert){var i;const e=this.runflowState(await(null===s||void 0===s||null===(i=s.actions)||void 0===i?void 0:i.alert(this.facts)));if(e===o["b"].EXIT)return}if(null!==s&&void 0!==s&&null!==(n=s.actions)&&void 0!==n&&n.selection){var r;const e=await(null===s||void 0===s||null===(r=s.actions)||void 0===r?void 0:r.selection(this.facts));this.runflowState(e.flowState,e.value)}}},async setEncounterFacts(){try{const e=await d["a"].get("PATIENT_PROGRAM",{patientID:this.patientID});this.facts.outcome=e.outcome,this.facts.outcomeStartDate=e.startDate}catch(e){console.error(e),Object(l["c"])(""+e)}this.facts.sessionDate=r["a"].getSessionDate(),this.facts.apiDate=r["a"].getCachedApiDate(),this.facts.isBdeMode=r["a"].isBDE(),this.facts.birthDate=this.patient.getBirthdate(),this.facts.encounterName=this.$route.name?this.$route.name.toString().toUpperCase():"N/A",r["a"].isBDE()&&(this.providers=await d["a"].get("PROVIDERS"),this.facts.providers=this.providers.sort((e,t)=>{const n=e.username.toUpperCase(),i=t.username.toUpperCase();return n<i?-1:n>i?1:0}).map(e=>{var t;let n=""+e.username;if(!Object(a["isEmpty"])(null===e||void 0===e||null===(t=e.person)||void 0===t?void 0:t.names)){var i;const[t]=(null===(i=e.person)||void 0===i?void 0:i.names)||[];n+=` (${t.given_name} ${t.family_name})`}return n}))},toOption(e,t={}){return{label:e,value:e,other:t}},mapStrToOptions(e){return e.map(e=>({label:e,value:e}))},patientDashboardUrl(){return"/patient/dashboard/"+this.patientID},gotoPatientDashboard(){return this.$router.push({path:this.patientDashboardUrl()})},nextTask(){return Object(s["b"])(this.patientID,this.$router)},yesNoOptions(){return[{label:"Yes",value:"Yes"},{label:"No",value:"No"}]},toYesNoOption(e,t={}){return{label:e,value:"",other:{...t,values:this.yesNoOptions()}}},mapOptions(e){return e.map(e=>({label:e,value:e}))},yesNoUnknownOptions(){return[{label:"Yes",value:"Yes"},{label:"No",value:"No"},{label:"Unknown",value:"Unknown"}]},resolveObs(e,t=""){const n=Object.values(e).filter(e=>e&&(e.tag===t||""===t)).reduce((e,t)=>{const n=t.obs?t.obs:t;return Array.isArray(n)?e=e.concat(n):"function"===typeof n?e.push(n()):e.push(n),e},[]);return Promise.all(n)},inArray(e,t){try{return e.filter(e=>t(e)).length>0}catch(n){return!1}},validateSeries(e){try{for(const t in e){const n=e[t]();if(n)return n}}catch(t){return[t]}}}});const m=g;t["a"]=m},7920:function(e,t,n){"use strict";var i=n("7a23");function r(e,t,n,r,a,s){return Object(i["openBlock"])(),Object(i["createBlock"])(Object(i["resolveDynamicComponent"])(e.formType),{fields:e.fields,skipSummary:e.skipSummary,activeField:e.activeField,cancelDestinationPath:e.cancelDestinationPath,onOnFinish:e.onFinish,onFinish:e.onFinishAction,onOnIndex:e.onIndex},null,40,["fields","skipSummary","activeField","cancelDestinationPath","onOnFinish","onFinish","onOnIndex"])}var a=n("9441"),s=Object(i["defineComponent"])({name:"HisStandardForm",components:{TouchScreenForm:a["a"]},emits:["onFinish","onIndex"],data:()=>({formType:"touch-screen-form"}),props:{onFinishAction:{type:Function},skipSummary:{type:Boolean,default:!1},activeField:{type:String},fields:{type:Object,required:!0},cancelDestinationPath:{type:String,required:!1}},methods:{onFinish(e,t){this.$emit("onFinish",e,t)},onIndex(e){this.$emit("onIndex",e)}}}),o=n("6b0d"),c=n.n(o);const u=c()(s,[["render",r]]);t["a"]=u},"7d94":function(e,t,n){"use strict";n.r(t);var i=n("7a23");function r(e,t,n,r,a,s){const o=Object(i["resolveComponent"])("his-standard-form");return Object(i["openBlock"])(),Object(i["createBlock"])(o,{skipSummary:!0,onOnIndex:t[0]||(t[0]=t=>e.fieldComponent=""),activeField:e.fieldComponent,cancelDestinationPath:e.cancelDestination,fields:e.fields,onFinishAction:e.onSubmit},null,8,["activeField","cancelDestinationPath","fields","onFinishAction"])}n("14d9");var a,s,o,c=n("d95e"),u=n("2706"),l=n("dac2"),d=n("b5e4"),g=n("9283"),m=n("c21d"),h=n("2ef0"),p=n("7365"),T=n("7f35");(function(e){e["ARV_REGIMENS"]="arv_regimens",e["INTERVAL_SELECTION"]="next_visit_interval"})(a||(a={})),function(e){e["EXIT"]="exit",e["CONTINUE"]="continue"}(s||(s={})),function(e){e["ON_VALUE"]="onValue",e["ON_BUILD"]="onBuild",e["BEFORE_NEXT"]="beforeNext"}(o||(o={}));const E={"Do not prescribe LPV regimens together with 3HP":{priority:1,actions:{alert:async({regimenName:e})=>(await Object(T["a"])("3HP - LPV/r conflict",e,"Regimens containing LPV/r <b>cannot</b> be prescribed together with 3HP",[{name:"Close",slot:"end",color:"danger"}],"his-danger-color"),s.EXIT)},target:a.ARV_REGIMENS,targetEvent:o.ON_VALUE,conditions:{regimenCode(e){return[7,8,9,10,11,12].includes(e)},medicationOrders(e){return e.filter(e=>!!(""+e).match(/3hp/i)).length>=1}}},"Check for any adverse effects or contraindications associated with the regimen":{priority:1,actions:{alert:async({regimenCodeStr:e,sideEffectsTable:t})=>{const{columns:n,rows:i}=t,r=await Object(T["d"])("Contraindications / Side effects for "+e,"",n,i,[{name:"Select other regimen",slot:"start"},{name:"Keep selected regimen",slot:"end",color:"danger"}],"his-danger-color");return"Select other regimen"===r?s.EXIT:s.CONTINUE}},target:a.ARV_REGIMENS,targetEvent:o.BEFORE_NEXT,conditions:{hasSideEffects(e){return e},lastSideEffectDate(e,{currentDate:t}){return e>=t}}},"Recommend 2nd line regimen to children under 3":{priority:1,actions:{alert:async()=>{const e=await Object(T["b"])("Recommendation","",["Children under 3 years often have a high viral load and may be infected with drug-resistant HIV from previous exposure to ARVs (mother's ART and/or infant nevirapine prophylaxis)","Therefore, children under <b>3 years</b> respond better when <b>started immediately on 2nd line regimen</b> (Regimen <b>11</b>)"],[{name:"Select another regimen",slot:"start"},{name:"Keep selected regimen",slot:"end",color:"danger"}],"his-warning-color");return"Select another regimen"===e?s.EXIT:s.CONTINUE}},target:a.ARV_REGIMENS,targetEvent:o.BEFORE_NEXT,conditions:{age(e){return e<3},regimenCode(e){return 11!=e}}},"Provide a reason for switching regimens when patient already has one":{priority:1,actions:{alert:async e=>{const t=await Object(T["c"])(`Are you sure you want to replace ${e.currentRegimenStr}?`,"Specify reason for switching regimen",["Policy change","Ease of administration (pill burden, swallowing)","Drug drug interaction","Pregnancy intention","Side effects","Treatment failure","Weight Change","Other"],[{name:"Cancel",slot:"start",color:"danger"},{name:"Continue",slot:"end",role:"action"}]);return t.selection&&"Cancel"!=t.action?(e.reasonForSwitch=t.selection,s.CONTINUE):s.EXIT}},target:a.ARV_REGIMENS,targetEvent:o.ON_VALUE,conditions:{regimenCode(e,{currentRegimenCode:t}){return-1!=t&&e!=t}}},"Provide 14 day starter pack for LPV regimens for children under 3 years old":{priority:3,actions:{alert:async e=>{const t=await Object(T["a"])("Starter pack needed for 14 days",""+e.treatmentInitiationState,""+e.regimenName,[{name:"Cancel",slot:"start",color:"danger"},{name:"Prescribe starter pack",slot:"end"}],"his-info-color");return"Prescribe starter pack"===t?(e.starterPackNeeded=!0,s.CONTINUE):s.EXIT}},target:a.ARV_REGIMENS,targetEvent:o.BEFORE_NEXT,conditions:{age(e){return e<3},regimenCode(e){return 11===e},treatmentInitiationState(e){return["Initiation","Re-initiation"].includes(e)}}},"Provide 14 day starter pack for NVP based regimens on newly initiated/re-initiation patients":{priority:3,actions:{alert:async e=>{const t=await Object(T["a"])("Starter pack needed for 14 days",""+e.treatmentInitiationState,""+e.regimenName,[{name:"Cancel",slot:"start",color:"danger"},{name:"Prescribe starter pack",slot:"end"}],"his-info-color");return"Prescribe starter pack"===t?(e.starterPackNeeded=!0,s.CONTINUE):s.EXIT}},target:a.ARV_REGIMENS,targetEvent:o.BEFORE_NEXT,conditions:{regimenCode(e){return[0,2,6].includes(e)},treatmentInitiationState(e){return["Initiation","Re-initiation"].includes(e)}}},"Ask to reuse hanging pills if any":{priority:5,actions:{alert:async e=>{const t=await Object(T["a"])("Hanging pills recommendation","Add hanging pills?","",[{name:"No",slot:"start",color:"warning"},{name:"Yes",slot:"end"}],"his-info-color");return e.hangingPillsStatus="Yes"===t?"Optimize - including hanging pills":"Exact - excluding hanging pills",s.CONTINUE}},target:a.INTERVAL_SELECTION,targetEvent:o.BEFORE_NEXT,conditions:{drugs(e,{hangingPills:t}){const n=e.map(e=>t.includes(e));return n.some(Boolean)}}},"Provide warning of use of DTG regimen to women of reproductive age":{priority:2,actions:{alert:async({regimenName:e})=>{const t=await Object(T["a"])("Use of DTG or EFV in women of reproductive age",e,["There is currently <u>no confirmation</u>","that <b>DTG</b> is safe in <u>very early pregnancy</u>","DTG-based regimens are therefore not used as standard 1st line regimens for","<u>girls and women</u> who may get pregnancy"].join(" "),[{name:"Select another regimen",slot:"start"},{name:"Continue with regimen",slot:"end",color:"danger"}],"his-danger-color");return"Select another regimen"===t?s.EXIT:s.CONTINUE}},target:a.ARV_REGIMENS,targetEvent:o.BEFORE_NEXT,conditions:{regimenCode(e){return e>=12},isChildBearing(e){return e}}},"Provide pallet options for LPV regimens for patient's whose weight is between 3 and 25 kgs":{priority:6,actions:{alert:async e=>{const t=await Object(T["a"])("Pellets (cups) / Tabs","","Prescribe LPV/r in <b>Pellets (cups)</b> or <b>Tablets</b>?",[{name:"Granules",slot:"start"},{name:"Pellets",slot:"end"},{name:"Tabs",slot:"end"}],"his-info-color");return e.lpvType=t.toLowerCase(),s.CONTINUE}},target:a.ARV_REGIMENS,targetEvent:o.BEFORE_NEXT,conditions:{weight(e){return e>=3&&e<=25},regimenCode(e){return 11===e||9===e}}},"Provide 14 day interval for NVP or LVP Regimen starter pack":{priority:1,data:{enabled:!1},target:a.INTERVAL_SELECTION,targetEvent:o.ON_BUILD,conditions:{prescriptionType(e){return"Regimen"===e},selectedInterval(e){return e>14},starterPackNeeded(e){return e},regimenCode(e){return[0,2,6,11].includes(e)}}},"Provide intervals upto 1 month, 2nd up to 2 months, and 3rd up to 6 months for Patients receiving TPT":{priority:2,data:{enabled:!1},target:a.INTERVAL_SELECTION,targetEvent:o.ON_BUILD,conditions:{prescriptionType(e){return"Regimen"===e},medicationOrders(e){return e.map(e=>!!(""+e).match(/3hp/i)).some(Boolean)},tptPrescriptionCount(e,{selectedInterval:t}){return Math.round(t/30)>e}}}},_={"Rifapentine or isoniazid should be taken weekly":{concept:"Weekly (QW)",priority:1,conditions:{drug(e){return(""+e).match(/Rifapentine|Isoniazid/i)}}},"Use daily frequency for any other drugs":{concept:"Daily (QOD)",priority:2,conditions:{drug(e){return!(""+e).match(/Rifapentine|Isoniazid/i)}}}};var f=n("32b3"),I=n("ad60"),b=n("9ceb"),D=n("8e8b"),v=n("3b8c");const S={style:{fontSize:"1.3rem !important",borderBottom:"solid 2px #ccc",color:"black",background:"white"}};var N=Object(i["defineComponent"])({mixins:[p["a"]],data:()=>({drugs:[],prescription:{},patientToolbar:[],fieldComponent:"",regimenExtras:[],programInfo:[],allDrugs:[],facts:{age:-1,gender:"",weight:-1,currentDate:"",isChildBearing:!1,prescriptionType:"",tptStatus:{},tptPrescriptionCount:0,currentRegimenCode:-1,currentRegimenStr:"",drug:"",drugs:[],contraindications:{},hasSideEffects:!1,sideEffectsTable:{},lastSideEffectDate:"",regimenCode:-1,regimenCodeStr:"",regimenName:"",regimenDrugs:[],hangingPills:[],reasonForSwitch:"",starterPackNeeded:!1,hangingPillsStatus:"",treatmentInitiationState:"",lpvType:"",medicationOrders:[],selectedInterval:0}}),watch:{ready:{async handler(e){if(!e)return;if(this.prescription=new l["a"](this.patientID,this.providerID),await this.prescription.loadMedicationOrders(),await this.prescription.loadFastTrackStatus(),!this.prescription.medicationOrdersAvailable()&&!this.prescription.isFastTrack())return Object(d["e"])("Patient is not eligible for treatment Today! Please check HIV Clinic Consultation"),this.gotoPatientDashboard();await D["a"].get("ASK_HANGING_PILLS")&&await this.prescription.loadHangingPills(),await this.prescription.loadRegimenExtras(),await this.prescription.loadTreatmentState(),await this.prescription.loadDrugInduced(),await this.prescription.loadContraindications(),await this.prescription.loadTptPrescriptionCount(),await this.initFacts(this.patient),this.prescription.shouldPrescribeExtras()&&(this.regimenExtras=this.prescription.getRegimenExtras());const t=this.resolveHtnDrugs();Object(h["isEmpty"])(t)||(this.regimenExtras=[...this.regimenExtras,...t]),this.prescription.isFastTrack()?(await this.prescription.loadFastTrackMedications(),this.drugs=this.prescription.getFastTrackMedications(),this.fieldComponent="next_visit_interval"):this.prescription.shouldPrescribeArvs()||Object(h["isEmpty"])(this.regimenExtras)||(this.drugs=this.regimenExtras),this.patientToolbar=await this.getPatientToolBar(),this.fields=this.getFields()},immediate:!0},drugs:{handler(e){this.facts.drugs=e.map(e=>e.drug_id)},immediate:!0,deep:!0}},methods:{async initFacts(e){this.programInfo=await I["a"].getProgramInformation(e.getID()),this.facts.age=e.getAge(),this.facts.gender=e.getGender(),this.facts.weight=await e.getRecentWeight(),this.facts.hangingPills=this.prescription.getHangingPills(),this.facts.treatmentInitiationState=this.prescription.getTreatmentState(),this.facts.currentRegimenStr=this.programInfo.current_regimen,this.facts.currentRegimenCode=this.extractRegimenCode(this.programInfo.current_regimen),this.facts.medicationOrders=this.prescription.getMedicationOrders(),this.facts.contraindications=this.prescription.getContraindications(),this.facts.tptPrescriptionCount=this.prescription.getTptPrescriptionCount(),this.facts.lastSideEffectDate=this.prescription.getLastSideEffectDate(),this.facts.currentDate=l["a"].getSessionDate(),this.facts.isChildBearing=e.isChildBearing(),this.facts.tptStatus=await new v["a"](this.patientID,this.providerID).getTptTreatmentStatus()},async onSubmit(e,t){const n=await this.prescription.createEncounter();this.prescription.setNextVisitInterval(e[a.INTERVAL_SELECTION].value);const i=this.mapOrder(this.drugs);if(!n)return Object(d["e"])("Unable to create treatment encounter");const r=await this.prescription.createDrugOrder(i);if(!r)return Object(d["e"])("Unable to create drug orders!");this.facts.reasonForSwitch&&await this.prescription.createRegimenSwitchObs(this.facts.reasonForSwitch),this.facts.hangingPillsStatus&&await this.prescription.createHangingPillsObs(this.facts.hangingPillsStatus),Object.keys(t).length&&await this.prescription.saveObservationList(await this.resolveObs(t)),Object(d["d"])("Drug order has been created"),D["a"].invalidate("PATIENT_PROGRAM"),this.nextTask()},async onEvent(e,t){const n=Object(m["a"])(this.facts,E,e,t);for(const a in n){var i;const e=n[a];if(null!==e&&void 0!==e&&null!==(i=e.actions)&&void 0!==i&&i.alert){var r;const t=await(null===e||void 0===e||null===(r=e.actions)||void 0===r?void 0:r.alert(this.facts));if(t===s.EXIT)return!1}}return!0},onBuildOptions(e,t){const n=Object(m["a"])(this.facts,E,e,t);for(const i in n){const e=n[i];if(e.data)return e.data}return{}},async onRegimen({label:e,value:t,other:n}){this.facts.lpvType="",this.facts.hangingPillsStatus="",this.facts.starterPackNeeded=!1,this.facts.regimenName=`${t} (${e})`,this.facts.regimenCodeStr=t.toString(),this.facts.regimenCode=this.extractRegimenCode(t.toString()),this.facts.regimenDrugs=n.regimenDrugs,this.facts.drugs=n.regimenDrugs.map(e=>e.drug_id);const i=this.prescription.findAndGroupDrugSideEffects(this.facts.drugs);this.facts.hasSideEffects=!Object(h["isEmpty"])(i),this.facts.sideEffectsTable=this.buildSideEffectsTable(i)},async onBeforeRegimenNext(){const e=await this.onEvent(a.ARV_REGIMENS,o.BEFORE_NEXT);let t=[];return!!e&&(this.facts.lpvType?t=await this.getLpvDrugs():this.facts.starterPackNeeded?(t=await this.getStarterPackDrugs(),Object(h["isEmpty"])(t)&&(t=this.facts.regimenDrugs)):t=this.facts.regimenDrugs,this.drugs=[...this.regimenExtras,...t],!0)},getLpvDrugs(){return this.prescription.getLvpDrugsByType(this.facts.lpvType,this.facts.regimenCode)},resolveHtnDrugs(){try{const e=sessionStorage.getItem(f["b"].Prescription);if("string"===typeof e){const t=JSON.parse(e);if(Object(h["isPlainObject"])(t)&&t[this.patientID])return t[this.patientID]}}catch(e){console.warn(e)}return[]},getStarterPackDrugs(){return this.prescription.getRegimenStarterpack(this.facts.regimenCode,this.facts.weight)},setCustomDrugs(e){this.drugs=e.map(e=>e.other)},buildSideEffectsTable(e){const t=["Date","Contraindication(s)","Side effect(s)"],n=[];for(const i in e){const t=this.facts.contraindications[i]||[];n.push([g["c"].toStandardHisDisplayFormat(i),t.join(", "),e[i].join(", ")])}return{columns:t,rows:n}},async buildRegimenOptions(){const e=await this.prescription.getPatientRegimens(),t=[];for(const n in e){const i=e[n],r=i.map(e=>e.alternative_drug_name||e.concept_name).sort().join(" + ");t.push({label:r,value:n,other:{regimenDrugs:i}})}return t},buildIntervalOptions(){const e=[{label:"2 weeks",value:14},{label:"1 month",value:28},{label:"2 months",value:56},{label:"3 months",value:84},{label:"4 months",value:112},{label:"5 months",value:140},{label:"6 months",value:168},{label:"7 months",value:196},{label:"8 months",value:224},{label:"9 months",value:252},{label:"10 months",value:280},{label:"11 months",value:308},{label:"12 months",value:336}];return e.map(({label:e,value:t})=>{this.facts.selectedInterval=parseInt(t.toString());const n=this.onBuildOptions(a.INTERVAL_SELECTION,o.ON_BUILD);return{label:e,value:t,other:{...n,...this.getDrugEstimates(this.drugs,this.facts.selectedInterval)}}})},getDrugFrequency(e){this.facts.drug=e;const t=Object(m["a"])(this.facts,_);if(!Object(h["isEmpty"])(t))return t[0].concept},extractRegimenCode(e){try{return e.match(/n\/a/i)?-1:parseInt(e.substring(0,e.length))}catch(t){return console.warn(t),-1}},getDrugEstimates(e,t){this.prescription.setNextVisitInterval(t);const n=this.prescription.calculateDateFromInterval(),i=e.map(e=>{const t=this.prescription.getDrugPackSize(e),n=this.prescription.calculatePillsPerDay(e.am,e.noon,e.pm),i=this.prescription.estimatePackSize(n,t);return{label:e.alternative_drug_name||e.drug_name,value:i}});return{label:"Medication run-out date:",value:g["c"].toStandardHisDisplayFormat(n),other:{label:"Estimated packs/tins:",value:i}}},mapOrder(e){return e.map(e=>this.prescription.toOrderObj(e.drug_id,e.alternative_drug_name||e.drug_name,e.units,e.am,e.pm,e.frequency||this.getDrugFrequency(e.drug_name)))},async getPatientToolBar(){const e=await this.prescription.getReasonForRegimenSwitch();return[{label:"Age",value:this.patient.getAge()+" Year(s)"},{label:"Gender",value:this.patient.getGender()},{label:"Current Regimen",value:this.programInfo.current_regimen},{label:"Current weight",value:this.facts.weight+" kg(s)"||"Unknown"},{label:"Reason for change",value:e}]},getFields(){return[{id:a.ARV_REGIMENS,helpText:"ARV Regimen(s)",type:c["b"].TT_ART_REGIMEN_SELECTION,condition:()=>this.prescription.shouldPrescribeArvs(),validation:e=>u["a"].required(e),options:()=>this.buildRegimenOptions(),onload:()=>this.facts.prescriptionType="Regimen",onValue:e=>(this.onRegimen(e),this.onEvent(a.ARV_REGIMENS,o.ON_VALUE)),beforeNext:()=>this.onBeforeRegimenNext(),config:{toolbarInfo:this.patientToolbar,footerBtns:[{name:"Custom Regimen",slot:"end",onClick:()=>{this.fieldComponent="custom_regimen"}}]}},{id:"custom_regimen",helpText:"Custom prescription",type:c["b"].TT_MULTIPLE_SELECT,condition:()=>"Custom"===this.facts.prescriptionType,onload:()=>this.facts.prescriptionType="Custom",validation:e=>u["a"].required(e),beforeNext:async e=>{const t=e.map(e=>e.other.concept_id),n=this.regimenExtras.map(e=>e.concept_id).every(e=>t.includes(e));return!!n||await Object(d["a"])(`One or more required drugs in "${this.regimenExtras.map(e=>e.drug_name)}" is missing from your selection, do you want to proceed?`)},options:async()=>(Object(h["isEmpty"])(this.allDrugs)&&(this.allDrugs=await this.prescription.getCustomIngridients()),this.allDrugs.map(e=>{const t={label:e.name,value:e.drug_id,other:{...e}};if(null!=this.facts.tptStatus.tpt&&/INH|3HP|RIF|Isoniazid/i.test(e.name)){if(this.facts.tptStatus.tb_treatment)return{...t,disabled:!0,description:{color:"danger",show:"always",text:"Client on TB Treatment"}};if(this.facts.tptStatus.completed)return{...t,disabled:!0,description:{color:"danger",show:"always",text:"Client completed "+this.facts.tptStatus.tpt}};if(/IPT/i.test(this.facts.tptStatus.tpt)&&/3HP|RIF/i.test(e.name))return{...t,disabled:!0,description:{color:"danger",show:"always",text:"Client is on IPT"}}}return t})),config:{showKeyboard:!0,hiddenFooterBtns:["Back"],footerBtns:[{name:"Standard Regimen",size:"large",slot:"end",color:"primary",visible:!1,onClick:()=>{this.fieldComponent="arv_regimens"}}]}},{id:"custom_dosage",helpText:"Custom dose",type:c["b"].TT_DOSAGE_INPUT,condition:e=>!Object(h["isEmpty"])(e.custom_regimen),validation:e=>{if(u["a"].required(e))return["Drugs are not available"];const t=e.map(({other:e})=>e.am<=0&&e.pm<=0);return t.some(Boolean)?["Missing dosage configuration on some drugs"]:null},unload:e=>this.setCustomDrugs(e),summaryMapValue:({other:e})=>({label:"Dosages",value:this.prescription.getInstructions(e.drug_name,e.am,e.pm,e.units)}),options:e=>e.custom_regimen.map(e=>({label:e.label,value:e.value,other:{drug_id:e.other.drug_id,drug_name:e.label,barcodes:e.other.barcodes,units:e.other.units,am:0,noon:0,pm:0,frequency:this.getDrugFrequency(e.label)}}))},{id:"selected_meds",helpText:"Selected medication",type:c["b"].TT_DATA_TABLE,config:{toolbarInfo:this.patientToolbar,hiddenFooterBtns:["Clear"],dataTableConfig:{showIndex:!1},viewPortStyle:{height:"76vh"},columns:()=>[[b["a"].thTxt("Drug name",S),b["a"].thTxt("Units",S),b["a"].thTxt("AM",S),b["a"].thTxt("Noon",S),b["a"].thTxt("PM",S),b["a"].thTxt("Frequency",S)]],rows:()=>this.drugs.map(e=>{const t={style:{height:"6vh"},cssClass:(()=>{if(e.drug_name.match(/cotrimoxazole/i))return"adult-regimen-formulation";switch(e.regimen_category){case"A":return"adult-regimen-formulation";case"P":return"peads-regimen-formulation"}})()};return[b["a"].td(e.alternative_drug_name||e.drug_name,t),b["a"].td(e.units,t),b["a"].td(e.am,t),b["a"].td(e.noon,t),b["a"].td(e.pm,t),b["a"].td(e.frequency||this.getDrugFrequency(e.drug_name),t)]})}},{id:a.INTERVAL_SELECTION,helpText:"Interval to next visit",type:c["b"].TT_NEXT_VISIT_INTERVAL_SELECTION,validation:e=>u["a"].required(e),options:()=>this.buildIntervalOptions(),onValue:()=>this.onEvent(a.INTERVAL_SELECTION,o.ON_VALUE),beforeNext:()=>this.onEvent(a.INTERVAL_SELECTION,o.BEFORE_NEXT),config:{showRegimenCardTitle:!1}},{id:"reason_for_longer_duration",helpText:"Specify reason for prescribing medication over 6 months",type:c["b"].TT_NOTE,condition:e=>e[a.INTERVAL_SELECTION].value>168,validation:e=>u["a"].required(e),computedValue:e=>({obs:this.prescription.buildValueText("Why prescribe medication for more than 6 months?",""+e.value)})}]}}}),O=n("6b0d"),C=n.n(O);const y=C()(N,[["render",r]]);t["default"]=y},b3b1:function(e,t,n){"use strict";n.d(t,"b",(function(){return i})),n.d(t,"a",(function(){return o}));var i,r=n("7f35"),a=n("9283");(function(e){e["SET_PROVIDER"]="SET_PROVIDER",e["CHANGE_SESSION_DATE"]="change_session_date",e["GO_TO_PATIENT_DASHBOARD"]="go_to_patient_dashboard",e["CHANGE_PATIENT_OUTCOME"]="change_outcome",e["CONTINUE"]="continue",e["EXIT"]="exit"})(i||(i={}));const s=e=>a["c"].toStandardHisDisplayFormat(e),o={"Warn if attempting to create new encounters for a deceased patient":{priority:1,actions:{alert:async({outcomeStartDate:e})=>{const t=await Object(r["a"])("Data Integrity Issue Found","Patient died on "+s(e),"Proceeding with this outcome might affect accuracy of some reports",[{name:"Cancel",slot:"end",color:"primary"},{name:"Change outcome",slot:"end",color:"primary"},{name:"Continue Anyway",slot:"end",color:"danger"}]);return"Cancel"===t?i.GO_TO_PATIENT_DASHBOARD:"Change outcome"===t?i.CHANGE_PATIENT_OUTCOME:i.CONTINUE}},conditions:{outcome(e){return"Patient died"===e},outcomeStartDate(e,{sessionDate:t}){return t>=e}}},"A patient's date of birth must not be less than Session Date":{priority:2,actions:{alert:async({birthDate:e,sessionDate:t})=>{const n=await Object(r["a"])("Data integrity issue found","",`Session date ${s(t)} is less than birth date of ${s(e)}`,[{name:"Cancel",slot:"end",color:"danger"},{name:"Change session date",slot:"end",color:"success"}]);return"Change session date"===n?i.CHANGE_SESSION_DATE:i.GO_TO_PATIENT_DASHBOARD}},conditions:{birthDate(e,{sessionDate:t}){return t<e}}},"Select Encounter provider when in back data entry":{priority:3,actions:{selection:async({providers:e,encounterName:t,sessionDate:n,apiDate:a})=>{const o=await Object(r["c"])("Please select a provider for "+t,`BDE: ${s(n)} | Current: ${s(a)}`,e,[{name:"Cancel",color:"danger",slot:"start",role:"default"},{name:"Confirm",slot:"end",role:"action"}]);return"Cancel"===o.action?{value:-1,flowState:i.GO_TO_PATIENT_DASHBOARD}:{value:o.selection,flowState:i.SET_PROVIDER}}},conditions:{isBdeMode(e){return e}}}}},c21d:function(e,t,n){"use strict";n.d(t,"a",(function(){return s}));n("14d9");function i(e,t){const n=[],i=[-1,"",null,void 0];for(const r in t){if(!(r in e))continue;const a=e[r];i.includes(a)?n.push(!1):n.push(t[r](a,e))}return n.every(Boolean)}function r(e){return e.sort((e,t)=>e.priority&&t.priority&&e.priority<t.priority?-1:1)}function a(e){return e.sort((e,t)=>e.weight&&t.weight&&e.weight>t.weight?-1:1)}function s(e,t,n="",s="",o="priority"){const c=[];for(const r in t){const a=t[r],o=[a.target&&n&&a.target!=n,a.targetEvent&&s&&a.targetEvent!=s];o.some(Boolean)||i(e,a.conditions)&&(a.title=r,a.description&&(a.description.text=a.description.info(e)),c.push(a))}return"priority"===o?r(c):a(c)}},d95e:function(e,t,n){"use strict";var i;n.d(t,"b",(function(){return i})),n.d(t,"a",(function(){return r})),function(e){e["TT_ASYNC_MULTI_SELECT"]="AsyncMultiSelect",e["TT_LINKAGE_CODE"]="LinkageCodeInput",e["TT_MULTI_SELECT_GRID"]="HisMultiSelectGrid",e["TT_AGE_INPUT"]="HisAgeInput",e["TT_GROUP_SELECTOR"]="HisGroupSelector",e["TT_DATA_TABLE"]="HisDataTable",e["TT_GRID_SELECTOR"]="HisGridSelector",e["TT_NOTE"]="HisNote",e["TT_BARCODE"]="HisBarcodeInput",e["TT_MONTHLY_DAYS"]="HisMonthlyDays",e["TT_TEXT"]="HisTextInput",e["TT_NUMBER"]="HisNumberInput",e["TT_DATETIME"]="datetime",e["TT_SELECT"]="HisSelect",e["TT_MULTIPLE_SELECT"]="HisMultipleSelect",e["TT_ART_REGIMEN_SELECTION"]="HisArtRegimenSelection",e["TT_NEXT_VISIT_INTERVAL_SELECTION"]="HisNextVisitInterval",e["TT_TABLE_VIEWER"]="HisTableViewer",e["TT_DOSAGE_INPUT"]="HisDosageInput",e["TT_YES_NO"]="YesNoSelect",e["TT_MULTIPLE_YES_NO"]="MultiYesNoSelect",e["TT_SUMMARY"]="HisSummary",e["TT_WEIGHT_CHART"]="HisWeightChart",e["TT_VITALS_ENTRY"]="HisVitalsEntry",e["TT_ADHERENCE_INPUT"]="HisAdherenceInput",e["TT_ART_STAGING_SUMMARY"]="ArtStagingSummary",e["TT_LAB_ORDERS"]="HisLabOrders",e["TT_APPOINTMENTS_ENTRY"]="HisAppointments",e["TT_DISPENSATION_INPUT"]="DrugDispensationSelection",e["TT_PROGRAM_SELECTION"]="ProgramSelection",e["TT_DATE_PICKER"]="HisDatePicker",e["TT_PERSON_RESULT_VIEW"]="PersonSearchView",e["TT_RELATION_SELECTION"]="RelationsSelection",e["TT_FILING_NUMBER_VIEW"]="FilingNumberView",e["TT_CARD_SELECTOR"]="HisCardSelector",e["TT_PERSON_MATCH_VIEW"]="PersonMatchView",e["TT_FULL_DATE"]="HisDateInput",e["TT_BATCH_ENTRY"]="HisBatchEntry",e["TT_BATCH_VERIFICATION"]="HisBatchVerification",e["TT_BATCH_MOVEMENT"]="HisBatchMovement",e["TT_COMPLAINTS_PICKER"]="HisComplaintsPicker",e["TT_RADIOLOGY_PICKER"]="HisRadiologyPicker",e["TT_IP_ADDRESS"]="HisIPAddress",e["TT_TEXT_BANNER"]="HisTextBanner",e["TT_DRUG_DISPENSER"]="GeneralDrugDispenser",e["TT_CLINIC_HOLIDAY_PICKER"]="HisClinicHolidayPicker",e["TT_ANC_PREGNANCY_INPUT_CONFIG"]="AncPregnancyInfoConfig",e["TT_ANC_PREGNANCY_DETAILS_INPUT"]="AncPregnancyDetailsInput",e["TT_ANC_LMP_DATE_INPUT"]="AncLmpDateInput",e["TT_ANC_DRUGSET_INPUT"]="AncDrugSetInput",e["TT_DRUG_TRANSFER_IN"]="DrugTransferInput",e["TT_PRESCRIPTION_INPUT"]="HisPrescriptionInput",e["TT_INFINITE_SCROLL_MULTIPLE_SELECT"]="HisInfiniteScrollMultipleSelect"}(i||(i={}));const r=[i.TT_ASYNC_MULTI_SELECT,i.TT_LINKAGE_CODE,i.TT_MULTI_SELECT_GRID,i.TT_AGE_INPUT,i.TT_BARCODE,i.TT_NOTE,i.TT_SELECT,i.TT_CARD_SELECTOR,i.TT_MULTIPLE_SELECT,i.TT_TEXT,i.TT_NUMBER,i.TT_MONTHLY_DAYS,i.TT_ART_REGIMEN_SELECTION,i.TT_NEXT_VISIT_INTERVAL_SELECTION,i.TT_TABLE_VIEWER,i.TT_DOSAGE_INPUT,i.TT_YES_NO,i.TT_MULTIPLE_YES_NO,i.TT_WEIGHT_CHART,i.TT_VITALS_ENTRY,i.TT_APPOINTMENTS_ENTRY,i.TT_COMPLAINTS_PICKER,i.TT_CLINIC_HOLIDAY_PICKER,i.TT_SUMMARY,i.TT_ART_STAGING_SUMMARY,i.TT_ADHERENCE_INPUT,i.TT_LAB_ORDERS,i.TT_PERSON_RESULT_VIEW,i.TT_PROGRAM_SELECTION,i.TT_DATE_PICKER,i.TT_RELATION_SELECTION,i.TT_FILING_NUMBER_VIEW,i.TT_PERSON_MATCH_VIEW,i.TT_FULL_DATE,i.TT_BATCH_ENTRY,i.TT_BATCH_VERIFICATION,i.TT_BATCH_MOVEMENT,i.TT_IP_ADDRESS,i.TT_TEXT_BANNER,i.TT_DISPENSATION_INPUT,i.TT_DATA_TABLE,i.TT_GROUP_SELECTOR,i.TT_ANC_PREGNANCY_INPUT_CONFIG,i.TT_ANC_PREGNANCY_DETAILS_INPUT,i.TT_ANC_LMP_DATE_INPUT,i.TT_DRUG_TRANSFER_IN,i.TT_GRID_SELECTOR,i.TT_ANC_DRUGSET_INPUT,i.TT_RADIOLOGY_PICKER,i.TT_PRESCRIPTION_INPUT,i.TT_INFINITE_SCROLL_MULTIPLE_SELECT,i.TT_DRUG_DISPENSER]},dac2:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var i,r=n("ade3"),a=(n("14d9"),n("71c3")),s=n("9283"),o=n("6d32"),c=n("2ef0"),u=n("cc6f"),l=n("0011");(function(e){e["CONTRAINDICATION"]="contraindication",e["SIDE_EFFECT"]="side_effect"})(i||(i={}));class d extends u["a"]{constructor(e,t){super(e,25,t),Object(r["a"])(this,"nextVisitInterval",void 0),Object(r["a"])(this,"fastTrack",void 0),Object(r["a"])(this,"regimenExtras",void 0),Object(r["a"])(this,"hangingPills",void 0),Object(r["a"])(this,"fastTrackMedications",void 0),Object(r["a"])(this,"medicationOrders",void 0),Object(r["a"])(this,"treatmentState",void 0),Object(r["a"])(this,"contraindications",void 0),Object(r["a"])(this,"sideEffects",void 0),Object(r["a"])(this,"tptPrescriptionCount",void 0),Object(r["a"])(this,"lastSideEffectDate",void 0),this.nextVisitInterval=0,this.fastTrack=!1,this.regimenExtras=[],this.fastTrackMedications=[],this.hangingPills=[],this.medicationOrders=[],this.treatmentState="",this.contraindications={},this.sideEffects={},this.tptPrescriptionCount=0,this.lastSideEffectDate=""}setNextVisitInterval(e){this.nextVisitInterval=e}getHangingPills(){return this.hangingPills}getMedicationOrders(){return this.medicationOrders.map(e=>u["a"].getCachedConceptName(e))}getTptPrescriptionCount(){return this.tptPrescriptionCount}getLastSideEffectDate(){return this.lastSideEffectDate}getContraindications(){return this.contraindications}getSideEffects(){return this.sideEffects}getRegimenExtras(){return this.regimenExtras}getPatientRegimens(){return o["a"].getRegimens(this.patientID)}getARVs(){return o["a"].getJson("arv_drugs")}getCustomIngridients(){return o["a"].getCustomIngridients()}getFastTrackMedications(){return this.fastTrackMedications}getTreatmentState(){return this.treatmentState}isFastTrack(){return this.fastTrack}medicationOrdersAvailable(){return!Object(c["isEmpty"])(this.medicationOrders)}shouldPrescribeArvs(){const e=u["a"].getCachedConceptID("Antiretroviral drugs");return this.medicationOrders.includes(e)}shouldPrescribeExtras(){const e=u["a"].getConceptsByCategory("art_extra_medication_order"),t=e.map(e=>this.medicationOrders.includes(e.concept_id));return t.some(Boolean)}getRegimenStarterpack(e,t){const n={weight:t,regimen:e};return u["a"].getJson(`programs/${u["a"].getProgramID()}/regimen_starter_packs`,n)}async getLvpDrugsByType(e,t){return u["a"].getJson(`programs/${u["a"].getProgramID()}/regimens/${t}`,{patient_id:this.patientID,lpv_drug_type:e})}async loadContraindications(){const e=await u["a"].getConceptID("Contraindications"),t=await u["a"].getObs({concept_id:e,person_id:this.patientID});t.forEach(e=>{const t=s["c"].toStandardHisFormat(e.obs_datetime);this.contraindications[t]||(this.contraindications[t]=[]);const n=u["a"].getCachedConceptName(e.value_coded);this.contraindications[t].push(n)})}async loadDrugInduced(){const e=await u["a"].getConceptID("Drug induced"),t=await u["a"].getObs({concept_id:e,person_id:this.patientID});t&&t.forEach(e=>{const t=s["c"].toStandardHisFormat(e.obs_datetime);if(this.lastSideEffectDate||(this.lastSideEffectDate=t),!e.value_drug||!e.value_coded)return;this.sideEffects[t]||(this.sideEffects[t]={}),this.sideEffects[t][e.value_drug]||(this.sideEffects[t][e.value_drug]=[]);const n=u["a"].getCachedConceptName(e.value_coded);this.sideEffects[t][e.value_drug].push(n)})}async loadTptPrescriptionCount(){const e=await u["a"].getJson("tpt_prescription_count",{patient_id:this.patientID,date:this.date});if(e){const t=e.count+1;this.tptPrescriptionCount=t>3?3:t}}async loadFastTrackStatus(){const e=await u["a"].getFirstValueCoded(this.patientID,"Fast track"),t=await u["a"].getConceptID("yes");e&&(this.fastTrack=e===t)}async loadRegimenExtras(e=this.date){const t=await o["a"].getJson(`programs/${o["a"].getProgramID()}/patients/${this.patientID}/dosages`,{date:e});t&&(this.regimenExtras=Object.values(t))}async loadMedicationOrders(){const e=await u["a"].getConceptID("Medication orders"),t=await u["a"].getObs({concept_id:e,date:this.date,person_id:this.patientID,page_size:5});this.medicationOrders=t.map(e=>e.value_coded)}async loadHangingPills(){const e=await u["a"].getAll(this.patientID,"Pills brought")||[];this.hangingPills=e.filter(e=>e.value_numeric>=1&&(!(!e.value_drug||Object(l["h"])(e.obs_datetime)!==Object(l["h"])(this.date))||(e.order||!1))).map(e=>{var t;return(null===e||void 0===e||null===(t=e.order)||void 0===t||null===(t=t.drug_order)||void 0===t?void 0:t.drug_inventory_id)||e.value_drug})}async loadFastTrackMedications(){const e=await a["a"].getLastDrugsReceived(this.patientID),t=e.map(async e=>{const{drug:t}=e,n=await a["a"].getDrugDosages(this.patientID,t.drug_id);return{drug_id:t.drug_id,drug_name:t.name,units:t.units,am:n.am,noon:n.noon,pm:n.pm,frequency:e.frequency}});this.fastTrackMedications=await Promise.all(t)}async loadTreatmentState(){const e={date:this.date},t=await u["a"].getJson(`programs/${u["a"].getProgramID()}/patients/${this.patientID}/status`,e);t&&(this.treatmentState=t["status"])}findAndGroupDrugSideEffects(e){const t={};for(const n in this.sideEffects){const i=this.sideEffects[n];for(const r in i)e.includes(parseInt(r))&&(t[n]||(t[n]=[]),t[n]=[...t[n],...i[r]])}return t}calculatePillsPerDay(e,t,n){return parseFloat(e.toString())+t+n}estimatePackSize(e,t=0){const n=e*this.nextVisitInterval/(t||1);let i=Math.round(n);return i<=0&&(i+=1),i}calculateDosage(e,t){let n=0;return 0===t&&(n=e),0==e&&(n=t),e>0&&t>0&&(n=(e+t)/2),n}calculateEquivalentDosage(e,t){return e+t}calculateDateFromInterval(){const e=new Date(this.date);return e.setDate(e.getDate()+this.nextVisitInterval),s["c"].toStandardHisFormat(e)}getDrugPackSize(e){if(e.pack_size)return e.pack_size;try{return e.barcodes[0].tabs}catch(t){return 30}}getInstructions(e,t,n,i){return`${e} :- Morning: ${t} ${i}, Evening: ${n} ${i}`}toOrderObj(e,t,n,i=0,r=0,a=""){return{drug_inventory_id:e,equivalent_daily_dose:this.calculateEquivalentDosage(i,r),start_date:this.date,auto_expire_date:this.calculateDateFromInterval(),units:n,instructions:this.getInstructions(t,i,r,n),dose:this.calculateDosage(i,r),frequency:a}}async getReasonForRegimenSwitch(){const e=await u["a"].getFirstValueText(this.patientID,"Reason for ARV switch");return e||"N/A"}async createDrugOrder(e){return a["a"].create({encounter_id:this.encounterID,drug_orders:e})}async createHangingPillsObs(e){return this.saveValueTextObs("appointment type",e)}async createRegimenSwitchObs(e){return this.saveValueTextObs("Reason for ARV switch",e)}}},f159:function(e,t,n){var i={"./AncDrugSetInput.vue":["c99f","TouchFormElement0"],"./AncLmpDateInput.vue":["101a","TouchFormElement1"],"./AncPregnancyDetailsInput.vue":["b043","TouchFormElement2"],"./AncPregnancyInfoConfig.vue":["262e","TouchFormElement3"],"./ArtStagingSummary.vue":["43db","TouchFormElement4"],"./AsyncMultiSelect.vue":["5de2","chunk-03993608","TouchFormElement5"],"./BaseTextInput.vue":["36ad","TouchFormElement6"],"./DrugDispensationSelection.vue":["05d5","TouchFormElement7"],"./DrugTransferInput.vue":["de42","chunk-337918c0","TouchFormElement8"],"./FieldMixin.vue":["51c8","TouchFormElement9"],"./FilingNumberView.vue":["c650","TouchFormElement10"],"./GeneralDrugDispenser.vue":["7737","TouchFormElement11"],"./HisAdherenceInput.vue":["f2c3","chunk-337918c0","TouchFormElement12"],"./HisAgeInput.vue":["c05f","TouchFormElement13"],"./HisAppointments.vue":["b2eb","chunk-366b6f0a","TouchFormElement14"],"./HisArtRegimenSelection.vue":["47b9","TouchFormElement15"],"./HisBarcodeInput.vue":["dd65","TouchFormElement16"],"./HisBatchEntry.vue":["f2ab","chunk-182277b5","chunk-337918c0","TouchFormElement17"],"./HisBatchMovement.vue":["5148","chunk-182277b5","chunk-337918c0","TouchFormElement18"],"./HisBatchVerification.vue":["7b0f","chunk-182277b5","chunk-337918c0","TouchFormElement19"],"./HisCardSelector.vue":["0734","TouchFormElement20"],"./HisClinicHolidayPicker.vue":["4030","chunk-366b6f0a","TouchFormElement21"],"./HisComplaintsPicker.vue":["82d1","TouchFormElement22"],"./HisDataTable.vue":["a6ba","TouchFormElement23"],"./HisDateInput.vue":["374c","TouchFormElement24"],"./HisDatePicker.vue":["9b30","chunk-366b6f0a","TouchFormElement25"],"./HisDosageInput.vue":["b34c","chunk-337918c0","TouchFormElement26"],"./HisGridSelector.vue":["112a","TouchFormElement27"],"./HisGroupSelector.vue":["81cf","TouchFormElement28"],"./HisIPAddress.vue":["2a82","TouchFormElement29"],"./HisInfiniteScrollMultipleSelect.vue":["52a3","TouchFormElement30"],"./HisLabOrders.vue":["e614","chunk-03993608","TouchFormElement31"],"./HisMonthlyDays.vue":["69cf","TouchFormElement32"],"./HisMultiSelectGrid.vue":["0fa3","TouchFormElement33"],"./HisMultipleSelect.vue":["2fd5","chunk-03993608","TouchFormElement34"],"./HisNextVisitInterval.vue":["3126","TouchFormElement35"],"./HisNote.vue":["c927","TouchFormElement36"],"./HisNumberInput.vue":["5e75","TouchFormElement37"],"./HisPrescriptionInput.vue":["87e5","chunk-337918c0","TouchFormElement38"],"./HisRadiologyPicker.vue":["adc7","TouchFormElement39"],"./HisSelect.vue":["d11f","TouchFormElement40"],"./HisSummary.vue":["e0bd","TouchFormElement41"],"./HisTableViewer.vue":["8904","TouchFormElement42"],"./HisTextBanner.vue":["952c","TouchFormElement43"],"./HisTextInput.vue":["6ef9","TouchFormElement44"],"./HisVitalsEntry.vue":["e333","TouchFormElement45"],"./HisWeightChart.vue":["26a1","TouchFormElement46"],"./LinkageCodeInput.vue":["ac86","TouchFormElement47"],"./MultiYesNoSelect.vue":["5fd1","TouchFormElement48"],"./PersonMatchView.vue":["6591","TouchFormElement49"],"./PersonSearchView.vue":["28b2","TouchFormElement50"],"./ProgramSelection.vue":["e3b4","TouchFormElement51"],"./RelationsSelection.vue":["0e57","TouchFormElement52"],"./SelectMixin.vue":["82a9","TouchFormElement53"],"./YesNoSelect.vue":["71f2","TouchFormElement54"]};function r(e){if(!n.o(i,e))return Promise.resolve().then((function(){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}));var t=i[e],r=t[0];return Promise.all(t.slice(1).map(n.e)).then((function(){return n(r)}))}r.keys=function(){return Object.keys(i)},r.id="f159",e.exports=r}}]);
//# sourceMappingURL=chunk-44f7ff80.2c2b81ff.js.map