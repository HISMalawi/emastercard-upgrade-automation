(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-60c91e8c"],{"308a":function(t,e,i){"use strict";i.r(e);var a=i("7a23");function s(t,e,i,s,n,r){const o=Object(a["resolveComponent"])("his-standard-form");return Object(a["openBlock"])(),Object(a["createBlock"])(o,{cancelDestinationPath:t.cancelDestination,fields:t.fields,onFinishAction:t.onSubmit},null,8,["cancelDestinationPath","fields","onFinishAction"])}i("14d9");var n=i("d95e"),r=i("2706"),o=i("daa6"),l=i("519d"),d=i("3800"),u=i("b5e4"),c=i("b515"),h=i("aee2"),g=i("b446"),p=i("7f35"),v=i("9283"),m=i("5a0c"),b=i.n(m),_=i("2ef0"),T=Object(a["defineComponent"])({mixins:[o["a"]],data:()=>({registration:{},prescription:{},dispensation:{},regimens:[],customRegimens:[],vitals:{}}),watch:{ready:{async handler(t){t&&(this.canShowStagingFields=!1,this.registration=new l["a"](this.patientID,this.providerID),this.vitals=new c["a"](this.patientID,this.providerID),this.showStagingWeightChart=!1,this.fields=this.getRegistrationFields())},immediate:!0}},methods:{async onSubmit(t,e){const i={...e};await this.registration.createEncounter(),this.hasStaging(t)&&(await this.submitStaging(e),await this.vitals.createEncounter(),await this.vitals.saveObservationList(await this.resolveObs(i,"vitals"))),await this.registration.saveObservationList(await this.resolveObs(i,"reg")),Object(u["d"])("Clinic registration complete!"),this.nextTask()},buildDateObs(t,e,i){let a={};return a=e.match(/unknown/i)?this.registration.buildValueText(t,"Unknown"):i?this.registration.buildValueDateEstimated(t,e):this.registration.buildValueDate(t,e),a},getRegistrationFields(){return[{id:"followup_agreement",helpText:"Agrees to follow-up",type:n["b"].TT_MULTIPLE_YES_NO,summaryMapValue:({value:t,label:e})=>({value:t,label:e+" followup"}),validation:t=>this.validateSeries([()=>r["a"].required(t),()=>r["a"].anyEmpty(t)]),computedValue:t=>{const e=[];return t.forEach(({label:t,value:i})=>{e.push(this.registration.buildValueCoded(t,i)),e.push(this.registration.buildValueCoded("Agrees to followup",t))}),{tag:"reg",obs:e}},options:t=>Object(_["isEmpty"])(t.followup_agreement)?[{label:"Phone",value:"",other:{values:this.yesNoOptions()}},{label:"Home visit",value:"",other:{values:this.yesNoOptions()}}]:t.followup_agreement},{id:"received_arvs",helpText:"Ever received ARVs for treatment or prophylaxis?",type:n["b"].TT_SELECT,computedValue:({value:t})=>({tag:"reg",obs:this.registration.buildValueCoded("Ever received ART",t)}),validation:t=>r["a"].required(t),options:()=>this.yesNoOptions()},...Object(g["b"])({id:"date_last_taken_arvs",helpText:"Last taken ARVS",required:!0,minDate:()=>this.patient.getBirthdate(),maxDate:()=>this.staging.getDate(),condition:t=>"Yes"===t.received_arvs.value,estimation:{allowUnknown:!0},computeValue:(t,e)=>({date:t,tag:"reg",isEstimate:e,obs:this.buildDateObs("Date ART last taken",t,e)})},this.registration.getDate()),{id:"taken_art_in_last_two_months",helpText:"Taken ARVs in the last two months?",type:n["b"].TT_SELECT,validation:t=>r["a"].required(t),computedValue:({value:t})=>({tag:"reg",obs:[this.registration.buildValueCoded("Has the patient taken ART in the last two months",t)]}),options:()=>this.yesNoUnknownOptions(),condition:t=>"Unknown"===t.year_date_last_taken_arvs.value},{id:"taken_art_in_last_two_weeks",helpText:"Taken ARV's in the last two weeks?",type:n["b"].TT_SELECT,computedValue:({value:t},e)=>{let i="";const a=[];let s=-1;return"Yes"===t?s=14:"Yes"===e.taken_art_in_last_two_months.value&&(s=60),s>0&&(i=v["c"].getDateBeforeByDays(this.registration.getDate(),s),a.push(this.registration.buildValueDateEstimated("Date ART last taken",i))),{date:i,tag:"reg",obs:[...a,this.registration.buildValueCoded("Has the patient taken ART in the last two weeks",t)]}},validation:t=>r["a"].required(t),condition:t=>"Yes"===t.taken_art_in_last_two_months.value,options:()=>this.yesNoUnknownOptions()},{id:"ever_registered_at_art_clinic",helpText:"Ever registered at an ART clinic?",type:n["b"].TT_SELECT,computedValue:({value:t})=>({tag:"reg",obs:this.registration.buildValueCoded("Ever registered at ART clinic",t)}),validation:t=>r["a"].required(t),condition:t=>"Yes"===t.received_arvs.value,options:()=>this.yesNoOptions()},{id:"location_of_art_initialization",helpText:"Location of ART initiation",type:n["b"].TT_SELECT,computedValue:({label:t})=>({tag:"reg",obs:this.registration.buildValueText("Location of ART initiation",t)}),validation:t=>r["a"].required(t),condition:t=>"Yes"===t.ever_registered_at_art_clinic.value,options:(t,e="")=>this.getFacilities(e),config:{showKeyboard:!0,isFilterDataViaApi:!0}},...Object(g["b"])({id:"date_started_art",helpText:"Started ART",required:!0,unload:(t,e,i,a)=>{if("next"===e){const t=b()(a.date_started_art.date).diff(this.patient.getBirthdate(),"years");this.staging.setAge(t),this.stagingFacts.age=t,this.stagingFacts.ageInMonths=12*t}else this.staging.setAge(this.patient.getAge()),this.stagingFacts.age=this.patient.getAge(),this.stagingFacts.ageInMonths=this.patient.getAgeInMonths()},condition:t=>"Yes"===t.ever_registered_at_art_clinic.value,minDate:()=>this.patient.getBirthdate(),maxDate:()=>this.staging.getDate(),estimation:{allowUnknown:!0,estimationFieldType:g["a"].MONTH_ESTIMATE_FIELD},computeValue:(t,e)=>(this.staging.setDate(t),this.vitals.setDate(t),{date:t,tag:"reg",isEstimate:e,obs:this.buildDateObs("Date ART started",t,e)})},this.registration.getDate()),{id:"previous_art_number",helpText:"ART number at previous location",type:n["b"].TT_TEXT,condition:t=>"Yes"===t.ever_registered_at_art_clinic.value,computedValue:t=>({tag:"reg",obs:this.registration.buildValueText("ART number at previous location",t.value)}),validation:t=>r["a"].required(t)},{id:"has_transfer_letter",helpText:"Has staging information?",type:n["b"].TT_SELECT,validation:t=>r["a"].required(t),computedValue:({value:t})=>({tag:"reg",obs:this.registration.buildValueCoded("Has transfer letter",t)}),options:()=>this.yesNoOptions(),condition:t=>"Yes"===t.ever_registered_at_art_clinic.value},{id:"height",helpText:"Height (CM)",type:n["b"].TT_NUMBER,init:async()=>(await this.initStaging(this.patient),!0),condition:t=>"Yes"===t.has_transfer_letter.value,computedValue:({value:t})=>({tag:"vitals",obs:this.vitals.buildValueNumber("Height",t)}),validation:t=>this.validateSeries([()=>r["a"].required(t),()=>r["a"].isNumber(t),()=>r["a"].rangeOf(t,40,222)])},{id:"weight",helpText:"Weight (Kg)",type:n["b"].TT_TEXT,unload:async(t,e,i)=>{const a=i.weight.value,s=i.height.value,n=await h["a"].getBMI(a,s,this.patient.getGender(),this.patient.getAge());if(this.stagingFacts.bmi=n["index"],!this.staging.isPedaid())return;const r=await this.patient.getMedianWeightHeight();try{this.stagingFacts.weightPercentile=parseFloat(a)/parseFloat(r["weight"])*100}catch(o){this.stagingFacts.weightPercentile=0}},computedValue:({value:t})=>({tag:"vitals",obs:this.vitals.buildValueNumber("weight",t)}),condition:t=>"Yes"===t.has_transfer_letter.value,validation:t=>this.validateSeries([()=>{const e={...t,other:{modifier:"."}};return this.vitals.isNotEmptyandFloat(e)},()=>r["a"].rangeOf(t,1,300)]),config:{customKeyboard:[[["1","2","3",""],["4","5","6",""],["7","8","9","."],["","0","",""]],[["Delete"]]]}},...this.getStagingFields(),{id:"new_cd4_percent_available",helpText:"CD4 percent available",type:n["b"].TT_SELECT,options:()=>this.yesNoOptions(),condition:t=>"Yes"===t.has_transfer_letter.value,validation:t=>r["a"].required(t)},{id:"cd4_percent",helpText:"CD4 Percent",type:n["b"].TT_TEXT,condition:t=>"Yes"===t.new_cd4_percent_available.value,computedValue:({value:t})=>({tag:"staging",obs:this.registration.buildValueNumber("CD4 percent",parseInt(t.toString().substring(1)),"%")}),onValue:t=>!(t.value&&!this.staging.cd4CountIsValid(t.value))||(Object(u["e"])("Cd4 percentage invalid. Use one modifier or start with either of these symbols: >, < or ="),!1),validation:t=>r["a"].required(t),config:{customKeyboard:[d["b"],[["Delete"]]]}},{id:"type_of_confirmatory_hiv_test",helpText:"Confirmatory HIV test",type:n["b"].TT_SELECT,validation:t=>r["a"].required(t),onValue:async t=>("Not done"===t.value&&await Object(p["a"])("Reminder","UNKNOWN HIV CONFIRMATORY TEST","Please arrange for a confirmatory test",[{name:"Agreed",color:"success",slot:"start"}]),!0),computedValue:({value:t})=>({tag:"reg",obs:this.registration.buildValueCoded("Confirmatory hiv test type",t)}),options:()=>[{label:"Rapid antibody test",value:"HIV rapid test"},{label:"DNA PCR",value:"HIV DNA polymerase chain reaction"},{label:"Not done",value:"Not done"}]},{id:"confirmatory_hiv_test_location",helpText:"Location of confirmatory HIV test",type:n["b"].TT_SELECT,defaultValue:t=>"Yes"===(t.ever_registered_at_art_clinic&&t.ever_registered_at_art_clinic.value)?"":l["a"].getLocationName(),computedValue:t=>({tag:"reg",obs:this.registration.buildValueText("Confirmatory HIV test location",t.label)}),validation:t=>r["a"].required(t),condition:t=>"Not done"!=t.type_of_confirmatory_hiv_test.value,options:(t,e="")=>this.getFacilities(e),config:{showKeyboard:!0,isFilterDataViaApi:!0}},...Object(g["b"])({id:"date_of_confirmatory_hiv_test",helpText:"Confirmatory HIV test",beforeNext:async(t,e)=>{if("Yes"!=e.received_arvs.value){const e=b()(this.staging.getDate()).diff(t,"days");if(e>=20){const t=await Object(p["a"])("Data inconsistency warning",`Confirmatory Date for newly initiated ART patient is ${e} days ago`,"Are you sure this is accurate?",[{name:"No, Re-enter date",slot:"start",color:"success"},{name:"Yes, its accurate",slot:"end",color:"danger"}]);return"Yes, its accurate"===t}}return!0},condition:t=>t.confirmatory_hiv_test_location.value,required:!0,minDate:()=>this.patient.getBirthdate(),maxDate:()=>this.staging.getDate(),estimation:{allowUnknown:!0,estimationFieldType:g["a"].MONTH_ESTIMATE_FIELD},computeValue:(t,e)=>({date:t,tag:"reg",isEstimate:e,obs:this.buildDateObs("Confirmatory HIV test date",t,e)})},this.registration.getDate()),this.getStagingSummaryField("Staging summary")]}}}),f=i("6b0d"),y=i.n(f);const w=y()(T,[["render",s]]);e["default"]=w},"519d":function(t,e,i){"use strict";i.d(e,"a",(function(){return s}));var a=i("cc6f");class s extends a["a"]{constructor(t,e){super(t,9,e)}}},b515:function(t,e,i){"use strict";i.d(e,"a",(function(){return n}));i("14d9");var a=i("cc6f"),s=i("2ef0");class n extends a["a"]{constructor(t,e){super(t,6,e)}isNotEmptyandNumber(t){return(""+t.value).match(/^-?\d+\.?\d*$/)?null:["Invalid entry for "+t.label]}isNotEmptyandFloat(t){var e;return(""+t.value).match(/^\d{1,3}\.\d{1,5}$/)?null:[`Invalid entry for ${t.label}. Don't forget to add a decimal. e.g. 56.2 ${(null===(e=t.other)||void 0===e?void 0:e.modifier)||""}`]}checkMinMax(t,e,i){const a=[];var s,n;parseFloat(""+t.value)<e&&a.push([`${t.label} entered is less than minimum ${e} ${(null===t||void 0===t||null===(s=t.other)||void 0===s?void 0:s.modifier)||""}`]);parseFloat(""+t.value)>i&&a.push([`${t.label} entered is greater than maximum ${i} ${(null===t||void 0===t||null===(n=t.other)||void 0===n?void 0:n.modifier)||""}`]);return a.length>0?a:null}validateAll(t){const e=[];return t.map(t=>{const i=this.validator(t);return Object(s["isArray"])(i)?e.push(i):null}),e.length>0?e:null}mergeErrors(t){const e=[];return t.forEach(t=>{Object(s["isArray"])(t)&&e.push(t)}),e.length>0?e:null}isValidBPReading(t){const e=[],i=(""+t.value).match(/^\d{1,3}\/\d{1,3}$/g)?null:["Invalid BP reading"];if(e.push(i),null==i){const i=(""+t.value).split("/"),a={label:"Systolic",value:i[0]},s={label:"Diastolic",value:i[1]};e.push(this.checkMinMax(s,30,200)),e.push(this.checkMinMax(a,40,250))}return this.mergeErrors(e)}validator(t){const e=[{name:"Weight",validator:t=>{const e=this.isNotEmptyandFloat(t),i=this.checkMinMax(t,2,250);return this.mergeErrors([e,i])}},{name:"Height",validator:t=>{const e=[];return e.push(this.isNotEmptyandNumber(t)),e.push(this.checkMinMax(t,40,220)),this.mergeErrors(e)}},{name:"BP",validator:t=>this.isValidBPReading(t)},{name:"Temp",validator:t=>{const e=this.isNotEmptyandNumber(t),i=this.checkMinMax(t,30,42);return this.mergeErrors([e,i])}},{name:"SP02",validator:t=>{const e=this.checkMinMax(t,40,100);return this.mergeErrors([e])}},{name:"Pulse",validator:t=>{const e=this.checkMinMax(t,50,120);return this.mergeErrors([e])}}],i=e.filter(e=>e.name===t.label);return i.length>0?i[0].validator(t):null}}}}]);
//# sourceMappingURL=chunk-60c91e8c.1611bae7.js.map