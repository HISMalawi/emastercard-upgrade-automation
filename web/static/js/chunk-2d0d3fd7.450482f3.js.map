{"version":3,"sources":["webpack:///./src/apps/EMC/Components/ClinicRegistration.vue?3647","webpack:///./src/apps/EMC/Components/ClinicRegistration.vue","webpack:///./src/apps/EMC/Components/ClinicRegistration.vue?363e"],"names":["render","_ctx","_cache","$props","$setup","$data","$options","_component_ion_title","_resolveComponent","_component_text_input","_component_ion_col","_component_DateInput","_component_yes_no_input","_component_SelectInput","_component_NumberInput","_component_ion_button","_component_ion_row","_openBlock","_createElementBlock","_Fragment","_createVNode","class","default","_withCtx","_createTextVNode","_","size","modelValue","form","arvNumber","$event","prefix","sitePrefix","disabled","isNewPatient","initialVisitDate","patientDob","today","shouldFollowUp","inline","receivedArvTreatmentBefore","value","key","dateLastTakenArvs","everRegisteredAtClinic","_createCommentVNode","artInitiationLocation","asyncOptions","getFacilities","allowCustom","artStartDate","arvNumberAtPreviousLocation","initialWeight","min","allowUnknown","initialHeight","initialTBStatus","options","initialTbStatusOptions","tptHistory","tptHistoryOptions","tptDrugs","length","tptStartDate","includes","_createBlock","inhQty","rifapentineQty","threeHPQty","tptStartLocation","confirmatoryTest","HIVTestOptions","isConfirmatoryTestDone","confirmatoryTestLocation","confirmatoryTestDate","onClick","onSubmit","color","onClear","$router","back","defineComponent","components","IonRow","IonCol","IonTitle","TextInput","DateInput","YesNoInput","SelectInput","NumberInput","props","patient","type","Object","required","Boolean","String","observations","emits","setup","emit","customRegimenIngredients","ref","registrationService","ClinicRegistrationService","getID","consultationService","ConsultationService","vitalsService","VitalsService","patientTypeService","PatientTypeService","dayjs","format","STANDARD_DATE_FORMAT","computed","date","getBirthdate","reactive","label","placeholder","validation","async","isNumberErr","StandardValidations","isNumber","patients","Patientservice","findByOtherID","isEmpty","computedValue","tag","obs","buildValueText","match","agrees","buildGroupValueCoded","receivedTreatment","buildValueCoded","buildValueDate","f","everRegistered","facility","location","weight","buildValueNumber","validateSeries","validator","height","status","history","amount","buildObs","find","d","name","drug_id","test","patientType","watch","state","EventBus","EmcEvents","ON_INITIAL_VISIT_DATE","alertConfirmation","undefined","error","ON_CLEAR","setDate","submitForm","formData","computedData","data","arvNumberEditable","onMounted","getArvNumber","split","RegimenService","getCustomIngridients","then","drugs","__exports__"],"mappings":"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","file":"js/chunk-2d0d3fd7.450482f3.js","sourcesContent":["import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ion_title = _resolveComponent(\"ion-title\")!\n  const _component_text_input = _resolveComponent(\"text-input\")!\n  const _component_ion_col = _resolveComponent(\"ion-col\")!\n  const _component_DateInput = _resolveComponent(\"DateInput\")!\n  const _component_yes_no_input = _resolveComponent(\"yes-no-input\")!\n  const _component_SelectInput = _resolveComponent(\"SelectInput\")!\n  const _component_NumberInput = _resolveComponent(\"NumberInput\")!\n  const _component_ion_button = _resolveComponent(\"ion-button\")!\n  const _component_ion_row = _resolveComponent(\"ion-row\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(_component_ion_title, { class: \"ion-text-center ion-margin-vertical ion-padding-bottom bold\" }, {\n      default: _withCtx(() => [\n        _createTextVNode(\" HIV Clinic Registration \")\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_row, { class: \"ion-margin-top ion-margin-bottom\" }, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_col, {\n          size: \"5\",\n          class: \"ion-margin-top ion-margin-bottom\"\n        }, {\n          default: _withCtx(() => [\n            _createVNode(_component_text_input, {\n              modelValue: _ctx.form.arvNumber,\n              \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((_ctx.form.arvNumber) = $event)),\n              form: _ctx.form,\n              prefix: `${_ctx.sitePrefix}-ARV-`,\n              disabled: !_ctx.isNewPatient\n            }, null, 8, [\"modelValue\", \"form\", \"prefix\", \"disabled\"])\n          ]),\n          _: 1\n        }),\n        _createVNode(_component_ion_col, {\n          size: \"7\",\n          class: \"ion-margin-top ion-margin-bottom\"\n        }, {\n          default: _withCtx(() => [\n            _createVNode(_component_DateInput, {\n              modelValue: _ctx.form.initialVisitDate,\n              \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((_ctx.form.initialVisitDate) = $event)),\n              \"min-date\": _ctx.patientDob,\n              \"max-date\": _ctx.today,\n              form: _ctx.form\n            }, null, 8, [\"modelValue\", \"min-date\", \"max-date\", \"form\"])\n          ]),\n          _: 1\n        }),\n        _createVNode(_component_ion_col, {\n          size: \"5\",\n          class: \"ion-margin-top ion-margin-bottom\"\n        }, {\n          default: _withCtx(() => [\n            _createVNode(_component_yes_no_input, {\n              modelValue: _ctx.form.shouldFollowUp,\n              \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((_ctx.form.shouldFollowUp) = $event)),\n              inline: \"\"\n            }, null, 8, [\"modelValue\"])\n          ]),\n          _: 1\n        }),\n        _createVNode(_component_ion_col, {\n          size: \"7\",\n          class: \"ion-margin-top ion-margin-bottom\"\n        }, {\n          default: _withCtx(() => [\n            _createVNode(_component_yes_no_input, {\n              modelValue: _ctx.form.receivedArvTreatmentBefore,\n              \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((_ctx.form.receivedArvTreatmentBefore) = $event)),\n              inline: \"\"\n            }, null, 8, [\"modelValue\"])\n          ]),\n          _: 1\n        }),\n        (_ctx.form.receivedArvTreatmentBefore.value === 'Yes')\n          ? (_openBlock(), _createElementBlock(_Fragment, { key: 0 }, [\n              _createVNode(_component_ion_col, {\n                size: \"12\",\n                class: \"ion-margin-top ion-margin-bottom\"\n              }, {\n                default: _withCtx(() => [\n                  _createVNode(_component_DateInput, {\n                    modelValue: _ctx.form.dateLastTakenArvs,\n                    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = ($event: any) => ((_ctx.form.dateLastTakenArvs) = $event)),\n                    form: _ctx.form,\n                    \"min-date\": _ctx.patientDob,\n                    \"max-date\": _ctx.today\n                  }, null, 8, [\"modelValue\", \"form\", \"min-date\", \"max-date\"])\n                ]),\n                _: 1\n              }),\n              _createVNode(_component_ion_col, {\n                size: \"12\",\n                class: \"ion-margin-top ion-margin-bottom\"\n              }, {\n                default: _withCtx(() => [\n                  _createVNode(_component_yes_no_input, {\n                    modelValue: _ctx.form.everRegisteredAtClinic,\n                    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = ($event: any) => ((_ctx.form.everRegisteredAtClinic) = $event)),\n                    inline: \"\"\n                  }, null, 8, [\"modelValue\"])\n                ]),\n                _: 1\n              })\n            ], 64))\n          : _createCommentVNode(\"\", true),\n        (_ctx.form.everRegisteredAtClinic.value === 'Yes')\n          ? (_openBlock(), _createElementBlock(_Fragment, { key: 1 }, [\n              _createVNode(_component_ion_col, {\n                size: \"6\",\n                class: \"ion-margin-top ion-margin-bottom\"\n              }, {\n                default: _withCtx(() => [\n                  _createVNode(_component_SelectInput, {\n                    modelValue: _ctx.form.artInitiationLocation,\n                    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = ($event: any) => ((_ctx.form.artInitiationLocation) = $event)),\n                    form: _ctx.form,\n                    asyncOptions: _ctx.getFacilities,\n                    allowCustom: \"\"\n                  }, null, 8, [\"modelValue\", \"form\", \"asyncOptions\"])\n                ]),\n                _: 1\n              }),\n              _createVNode(_component_ion_col, {\n                size: \"6\",\n                class: \"ion-margin-top ion-margin-bottom\"\n              }, {\n                default: _withCtx(() => [\n                  _createVNode(_component_DateInput, {\n                    modelValue: _ctx.form.artStartDate,\n                    \"onUpdate:modelValue\": _cache[7] || (_cache[7] = ($event: any) => ((_ctx.form.artStartDate) = $event)),\n                    form: _ctx.form,\n                    \"min-date\": _ctx.patientDob,\n                    \"max-date\": _ctx.today\n                  }, null, 8, [\"modelValue\", \"form\", \"min-date\", \"max-date\"])\n                ]),\n                _: 1\n              }),\n              _createVNode(_component_ion_col, {\n                size: \"6\",\n                class: \"ion-margin-top ion-margin-bottom\"\n              }, {\n                default: _withCtx(() => [\n                  _createVNode(_component_text_input, {\n                    modelValue: _ctx.form.arvNumberAtPreviousLocation,\n                    \"onUpdate:modelValue\": _cache[8] || (_cache[8] = ($event: any) => ((_ctx.form.arvNumberAtPreviousLocation) = $event)),\n                    form: _ctx.form\n                  }, null, 8, [\"modelValue\", \"form\"])\n                ]),\n                _: 1\n              }),\n              _createVNode(_component_ion_col, {\n                size: \"3\",\n                class: \"ion-margin-top ion-margin-bottom\"\n              }, {\n                default: _withCtx(() => [\n                  _createVNode(_component_NumberInput, {\n                    modelValue: _ctx.form.initialWeight,\n                    \"onUpdate:modelValue\": _cache[9] || (_cache[9] = ($event: any) => ((_ctx.form.initialWeight) = $event)),\n                    form: _ctx.form,\n                    min: 1,\n                    allowUnknown: \"\"\n                  }, null, 8, [\"modelValue\", \"form\"])\n                ]),\n                _: 1\n              }),\n              _createVNode(_component_ion_col, {\n                size: \"3\",\n                class: \"ion-margin-top ion-margin-bottom\"\n              }, {\n                default: _withCtx(() => [\n                  _createVNode(_component_NumberInput, {\n                    modelValue: _ctx.form.initialHeight,\n                    \"onUpdate:modelValue\": _cache[10] || (_cache[10] = ($event: any) => ((_ctx.form.initialHeight) = $event)),\n                    form: _ctx.form,\n                    min: 1,\n                    allowUnknown: \"\"\n                  }, null, 8, [\"modelValue\", \"form\"])\n                ]),\n                _: 1\n              }),\n              _createVNode(_component_ion_col, {\n                size: \"6\",\n                class: \"ion-margin-top ion-margin-bottom\"\n              }, {\n                default: _withCtx(() => [\n                  _createVNode(_component_SelectInput, {\n                    modelValue: _ctx.form.initialTBStatus,\n                    \"onUpdate:modelValue\": _cache[11] || (_cache[11] = ($event: any) => ((_ctx.form.initialTBStatus) = $event)),\n                    form: _ctx.form,\n                    options: _ctx.initialTbStatusOptions\n                  }, null, 8, [\"modelValue\", \"form\", \"options\"])\n                ]),\n                _: 1\n              }),\n              _createVNode(_component_ion_col, {\n                size: \"6\",\n                class: \"ion-margin-top ion-margin-bottom\"\n              }, {\n                default: _withCtx(() => [\n                  _createVNode(_component_SelectInput, {\n                    modelValue: _ctx.form.tptHistory,\n                    \"onUpdate:modelValue\": _cache[12] || (_cache[12] = ($event: any) => ((_ctx.form.tptHistory) = $event)),\n                    form: _ctx.form,\n                    options: _ctx.tptHistoryOptions\n                  }, null, 8, [\"modelValue\", \"form\", \"options\"])\n                ]),\n                _: 1\n              }),\n              (_ctx.tptDrugs.length)\n                ? (_openBlock(), _createElementBlock(_Fragment, { key: 0 }, [\n                    _createVNode(_component_ion_col, {\n                      size: \"6\",\n                      class: \"ion-margin-top ion-margin-bottom\"\n                    }, {\n                      default: _withCtx(() => [\n                        _createVNode(_component_DateInput, {\n                          modelValue: _ctx.form.tptStartDate,\n                          \"onUpdate:modelValue\": _cache[13] || (_cache[13] = ($event: any) => ((_ctx.form.tptStartDate) = $event)),\n                          \"min-date\": _ctx.patientDob,\n                          \"max-date\": _ctx.today,\n                          form: _ctx.form\n                        }, null, 8, [\"modelValue\", \"min-date\", \"max-date\", \"form\"])\n                      ]),\n                      _: 1\n                    }),\n                    (_ctx.tptDrugs.includes('INH or H (Isoniazid 300mg tablet)'))\n                      ? (_openBlock(), _createBlock(_component_ion_col, {\n                          key: 0,\n                          size: \"6\",\n                          class: \"ion-margin-top ion-margin-bottom\"\n                        }, {\n                          default: _withCtx(() => [\n                            _createVNode(_component_NumberInput, {\n                              modelValue: _ctx.form.inhQty,\n                              \"onUpdate:modelValue\": _cache[14] || (_cache[14] = ($event: any) => ((_ctx.form.inhQty) = $event)),\n                              form: _ctx.form,\n                              min: 1\n                            }, null, 8, [\"modelValue\", \"form\"])\n                          ]),\n                          _: 1\n                        }))\n                      : _createCommentVNode(\"\", true),\n                    (_ctx.tptDrugs.includes('Rifapentine (150mg)'))\n                      ? (_openBlock(), _createBlock(_component_ion_col, {\n                          key: 1,\n                          size: \"6\",\n                          class: \"ion-margin-top ion-margin-bottom\"\n                        }, {\n                          default: _withCtx(() => [\n                            _createVNode(_component_NumberInput, {\n                              modelValue: _ctx.form.rifapentineQty,\n                              \"onUpdate:modelValue\": _cache[15] || (_cache[15] = ($event: any) => ((_ctx.form.rifapentineQty) = $event)),\n                              form: _ctx.form,\n                              min: 1\n                            }, null, 8, [\"modelValue\", \"form\"])\n                          ]),\n                          _: 1\n                        }))\n                      : _createCommentVNode(\"\", true),\n                    (_ctx.tptDrugs.includes('INH 300 / RFP 300 (3HP)'))\n                      ? (_openBlock(), _createBlock(_component_ion_col, {\n                          key: 2,\n                          size: \"6\",\n                          class: \"ion-margin-top ion-margin-bottom\"\n                        }, {\n                          default: _withCtx(() => [\n                            _createVNode(_component_NumberInput, {\n                              modelValue: _ctx.form.threeHPQty,\n                              \"onUpdate:modelValue\": _cache[16] || (_cache[16] = ($event: any) => ((_ctx.form.threeHPQty) = $event)),\n                              form: _ctx.form,\n                              min: 1\n                            }, null, 8, [\"modelValue\", \"form\"])\n                          ]),\n                          _: 1\n                        }))\n                      : _createCommentVNode(\"\", true),\n                    _createVNode(_component_ion_col, {\n                      size: \"6\",\n                      class: \"ion-margin-top ion-margin-bottom\"\n                    }, {\n                      default: _withCtx(() => [\n                        _createVNode(_component_SelectInput, {\n                          modelValue: _ctx.form.tptStartLocation,\n                          \"onUpdate:modelValue\": _cache[17] || (_cache[17] = ($event: any) => ((_ctx.form.tptStartLocation) = $event)),\n                          form: _ctx.form,\n                          asyncOptions: _ctx.getFacilities,\n                          allowCustom: \"\"\n                        }, null, 8, [\"modelValue\", \"form\", \"asyncOptions\"])\n                      ]),\n                      _: 1\n                    })\n                  ], 64))\n                : _createCommentVNode(\"\", true)\n            ], 64))\n          : _createCommentVNode(\"\", true),\n        _createVNode(_component_ion_col, {\n          size: \"6\",\n          class: \"ion-margin-top ion-margin-bottom\"\n        }, {\n          default: _withCtx(() => [\n            _createVNode(_component_SelectInput, {\n              modelValue: _ctx.form.confirmatoryTest,\n              \"onUpdate:modelValue\": _cache[18] || (_cache[18] = ($event: any) => ((_ctx.form.confirmatoryTest) = $event)),\n              form: _ctx.form,\n              options: _ctx.HIVTestOptions\n            }, null, 8, [\"modelValue\", \"form\", \"options\"])\n          ]),\n          _: 1\n        }),\n        (_ctx.isConfirmatoryTestDone)\n          ? (_openBlock(), _createElementBlock(_Fragment, { key: 2 }, [\n              _createVNode(_component_ion_col, {\n                size: \"6\",\n                class: \"ion-margin-top ion-margin-bottom\"\n              }, {\n                default: _withCtx(() => [\n                  _createVNode(_component_SelectInput, {\n                    modelValue: _ctx.form.confirmatoryTestLocation,\n                    \"onUpdate:modelValue\": _cache[19] || (_cache[19] = ($event: any) => ((_ctx.form.confirmatoryTestLocation) = $event)),\n                    form: _ctx.form,\n                    asyncOptions: _ctx.getFacilities,\n                    allowCustom: \"\"\n                  }, null, 8, [\"modelValue\", \"form\", \"asyncOptions\"])\n                ]),\n                _: 1\n              }),\n              _createVNode(_component_ion_col, {\n                size: \"6\",\n                class: \"ion-margin-top ion-margin-bottom\"\n              }, {\n                default: _withCtx(() => [\n                  _createVNode(_component_DateInput, {\n                    modelValue: _ctx.form.confirmatoryTestDate,\n                    \"onUpdate:modelValue\": _cache[20] || (_cache[20] = ($event: any) => ((_ctx.form.confirmatoryTestDate) = $event)),\n                    form: _ctx.form,\n                    \"min-date\": _ctx.patientDob,\n                    \"max-date\": _ctx.today\n                  }, null, 8, [\"modelValue\", \"form\", \"min-date\", \"max-date\"])\n                ]),\n                _: 1\n              })\n            ], 64))\n          : _createCommentVNode(\"\", true),\n        _createVNode(_component_ion_col, {\n          size: \"12\",\n          class: \"ion-margin-top\"\n        }, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_button, {\n              class: \"ion-margin-top ion-float-right\",\n              size: \"large\",\n              onClick: _ctx.onSubmit,\n              color: \"success\"\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\"Next\")\n              ]),\n              _: 1\n            }, 8, [\"onClick\"]),\n            _createVNode(_component_ion_button, {\n              class: \"ion-margin-top ion-float-right\",\n              size: \"large\",\n              color: \"warning\",\n              onClick: _ctx.onClear\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\"Clear\")\n              ]),\n              _: 1\n            }, 8, [\"onClick\"]),\n            (!_ctx.isNewPatient)\n              ? (_openBlock(), _createBlock(_component_ion_button, {\n                  key: 0,\n                  class: \"ion-margin-top ion-float-right\",\n                  size: \"large\",\n                  onClick: _cache[21] || (_cache[21] = ($event: any) => (_ctx.$router.back())),\n                  color: \"primary\"\n                }, {\n                  default: _withCtx(() => [\n                    _createTextVNode(\"Back\")\n                  ]),\n                  _: 1\n                }))\n              : _createCommentVNode(\"\", true)\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    })\n  ], 64))\n}","\nimport {  computed, defineComponent, onMounted, PropType, reactive, ref, watch } from \"vue\";\nimport { IonRow, IonCol, IonTitle } from \"@ionic/vue\";\nimport { Patientservice } from \"@/services/patient_service\";\nimport {  alertConfirmation } from \"@/utils/Alerts\";\nimport { Option } from \"@/components/Forms/FieldInterface\";\nimport { STANDARD_DATE_FORMAT } from \"@/utils/Date\";\nimport { isEmpty } from \"lodash\";\nimport { DTForm } from \"../interfaces/dt_form_field\";\nimport TextInput from \"../Components/inputs/TextInput.vue\";\nimport DateInput from \"../Components/inputs/DateInput.vue\"\nimport YesNoInput from \"../Components/inputs/YesNoInput.vue\";\nimport { ClinicRegistrationService } from \"@/apps/ART/services/registration_service\";\nimport SelectInput from \"../Components/inputs/SelectInput.vue\";\nimport { getFacilities } from \"@/utils/HisFormHelpers/LocationFieldOptions\";\nimport NumberInput from \"../Components/inputs/NumberInput.vue\";\nimport { initialTbStatusOptions, HIVTestOptions, tptHistoryOptions } from '@/apps/EMC/utils/DTFormElements'\nimport dayjs from \"dayjs\";\nimport { VitalsService } from \"@/apps/ART/services/vitals_service\";\nimport StandardValidations from \"@/components/Forms/validations/StandardValidations\";\nimport { submitForm } from \"../utils/form\";\nimport { PatientTypeService } from \"@/apps/ART/services/patient_type_service\";\nimport { ConsultationService } from \"@/apps/ART/services/consultation_service\";\nimport { RegimenService } from \"@/services/regimen_service\";\nimport EventBus from \"@/utils/EventBus\";\nimport { EmcEvents } from \"../interfaces/emc_event\";\n\nexport default defineComponent({\n  components: {\n    IonRow,\n    IonCol,\n    IonTitle,\n    TextInput,\n    DateInput,\n    YesNoInput,\n    SelectInput,\n    NumberInput\n  },\n  props: {\n    patient: {\n      type: Object as PropType<Patientservice>,\n      required: true,\n    },\n    isNewPatient: {\n      type: Boolean,\n      default: true,\n    },\n    sitePrefix: {\n      type: String,\n      required: true\n    },\n    observations: {\n      type: Object as PropType<Record<string, any>>,\n      default: () => ({})\n    },\n    initialVisitDate: {\n      type: String,\n      default: \"\"\n    } \n  },\n  emits: [\"onValue\", \"onNext\"],\n  setup(props, { emit }) {\n    const customRegimenIngredients = ref<any[]>([])\n    const registrationService = new ClinicRegistrationService(props.patient.getID(), -1)\n    const consultationService = new ConsultationService(props.patient.getID(), -1)\n    const vitalsService = new VitalsService(props.patient.getID(), -1)\n    const patientTypeService = new PatientTypeService(props.patient.getID(), -1);\n    const today = dayjs().format(STANDARD_DATE_FORMAT)\n    const patientDob = computed(() => {\n      const date = props.patient.getBirthdate() \n      return date ? dayjs(date).format(STANDARD_DATE_FORMAT) : ''\n    })\n\n    const form = reactive<DTForm>({\n      arvNumber: {\n        value: '',\n        label: 'ARV Number',\n        placeholder: \"Enter ARV Number\",\n        required: true,\n        validation: async (arvNumber, form) => {\n          if(form.arvNumber.disabled) return null\n          const isNumberErr = StandardValidations.isNumber(arvNumber, \"POSITIVE_INTEGERS\")\n          if(isNumberErr !== null) return isNumberErr\n          const patients = await Patientservice.findByOtherID(4, `${props.sitePrefix}-ARV-${arvNumber.value}`);\n          return isEmpty(patients) ?  null : ['ARV Number already exists'];\n        },\n      },\n      arvNumberAtPreviousLocation: {\n        value: '',\n        label: 'ART Number at previous Location',\n        computedValue: (arvNumber: string) => ({\n          tag: 'registration',\n          obs: registrationService.buildValueText('ART number at previous location', arvNumber)\n        })\n      },\n      initialVisitDate: {\n        value: props.initialVisitDate,\n        label: 'Registration Date',\n        required: true,\n      },\n      shouldFollowUp: {\n        value: props.observations['Agrees to followup'] \n          ? props.observations['Agrees to followup'].match(/yes|home visit/i) \n            ? 'Yes'\n            : 'No'\n          : '',\n        label: 'Agrees to follow up ?',\n        computedValue: (agrees: string) => ({\n          tag: 'registration',\n          obs: [\n            registrationService.buildGroupValueCoded('Agrees to followup', 'Home visit', agrees),\n            registrationService.buildGroupValueCoded('Agrees to followup', 'Phone', agrees),\n          ]\n        }),\n        required: true,\n      },\n      receivedArvTreatmentBefore: {\n        value: props.observations['Ever received ART'] || '',\n        label: 'Ever received ARVs for treatment or prophylaxis?',\n        computedValue: (receivedTreatment: string) => ({\n          tag: 'registration',\n          obs: registrationService.buildValueCoded('Ever received ART', receivedTreatment)\n        }),\n        required: true,\n      },\n      dateLastTakenArvs: {\n        value: props.observations['Date ART last taken'] || '',\n        label: 'Date last taken ARVs',\n        computedValue: (date: string) => ({\n          tag: 'registration',\n          obs: registrationService.buildValueDate('Date ART last taken', date)\n        }),\n        validation: async (date: Option, f: DTForm) => f.receivedArvTreatmentBefore.value === 'Yes' &&\n          StandardValidations.required(date),\n      },\n      everRegisteredAtClinic: {\n        value: props.observations['Ever registered at ART clinic'] || '',\n        label: 'Ever registred at an ART clinic',\n        computedValue: (everRegistered: string) => ({\n          tag: 'registration',\n          obs: registrationService.buildValueCoded('Ever registered at ART clinic', everRegistered)\n        }),\n        validation: async (everRegistered: Option, f: DTForm) => f.receivedArvTreatmentBefore.value === 'Yes' &&\n          StandardValidations.required(everRegistered),\n      },\n      artInitiationLocation: {\n        value: props.observations['Location of ART initiation'] || '',\n        label: 'Location of ART Initiation',\n        computedValue: (facility: Option | string) => ({\n          tag:'registration',\n          obs: consultationService.buildValueText(\n            'Location of ART initiation',\n            typeof facility === 'string' ? facility : facility.label\n          )\n        }),\n        validation: async (location: Option, f: DTForm) => {\n          return f.everRegisteredAtClinic.value === 'Yes' &&\n           StandardValidations.required(location)\n        }\n      },\n      artStartDate: {\n        value: props.observations['Date ART started'] || '',\n        label: 'Date started ART',\n        computedValue: (date: string) => ({\n          tag: 'registration',\n          obs: registrationService.buildValueDate('Date ART started', date)\n        }),\n        validation: async (date: Option, f: DTForm) => {\n          return f.everRegisteredAtClinic.value === 'Yes' &&\n           StandardValidations.required(date)\n        }\n      },\n      initialWeight: {\n        value: props.observations['weight'] || '',\n        label: 'Initial Weight',\n        placeholder: 'Enter weight',\n        computedValue: (weight: number) => ({\n          tag: 'vitals',\n          obs: vitalsService.buildValueNumber('weight', weight)\n        }),\n        validation: async (weight: Option, f: DTForm) => {\n          return f.everRegisteredAtClinic.value === 'Yes' && weight.value !== \"Unknown\" && StandardValidations.validateSeries([\n            () => StandardValidations.required(weight),\n            () => vitalsService.validator({...weight, label: 'Weight'})\n          ])\n        }\n      },\n      initialHeight: {\n        value: props.observations['Height'] || '',\n        label: 'Initial Height',\n        placeholder: 'Enter height',\n        computedValue: (height: number) => ({\n          tag: 'vitals',\n          obs: registrationService.buildValueNumber('Height', height)\n        }),\n        validation: async (height: Option, f: DTForm) => {\n          return f.everRegisteredAtClinic.value === 'Yes' && height.value !== \"Unknown\" && StandardValidations.validateSeries([\n            () => StandardValidations.required(height),\n            () => vitalsService.validator({ ...height, label: 'Height' })\n          ])\n        }\n      },\n      initialTBStatus: {\n        value: props.observations[\"TB Status at Initiation\"] || '',\n        label: 'Initial TB Status',\n        placeholder: 'select TB status',\n        computedValue: (status: Option) => ({\n          tag: 'registration',\n          obs: registrationService.buildValueCoded(\n            \"TB Status at Initiation\", \n            typeof status === 'string' ? status : status.label\n          )\n        }),\n        validation: async (status: Option, f: DTForm) => {\n          return f.everRegisteredAtClinic.value === 'Yes' && StandardValidations.required(status)\n        }\n      },\n      tptHistory: {\n        value: props.observations[\"Previous TB treatment history\"] || '',\n        label: \"TPT History\",\n        placeholder: \"Select TPT history\",\n        computedValue: (history: Option) => ({\n          tag: \"consultation\",\n          obs: consultationService.buildValueText(\n            \"Previous TB treatment history\", \n            typeof history === 'string' ? history : history.label\n          )\n        }),\n        validation: async (history, form) => {\n          return form.everRegisteredAtClinic.value === 'Yes' && \n            StandardValidations.required(history)\n        }\n      },\n      tptStartDate: {\n        value: props.observations['TPT Drugs Received'] || '',\n        label: \"Date started TPT\",\n        validation: async (date, form) => {\n          return form.tptHistory?.value?.label?.match(/currently/i) && \n            StandardValidations.required(date)\n        }\n      },\n      inhQty: {\n        value: '',\n        label: \"INH Amount Received\",\n        validation: async (amount, form) => {\n          const history = form.tptHistory?.value?.label\n          return history?.match(/currently/i) && \n            (history.match(/ipt/i) || history.includes('3HP (RFP + INH)')) && \n            StandardValidations.required(amount)\n        },\n        computedValue: (amount, form) => ({\n          tag: 'consultation',\n          obs:  consultationService.buildObs('TPT Drugs Received', {\n            'value_drug': customRegimenIngredients.value.find(d => d.name === 'INH or H (Isoniazid 300mg tablet)')?.drug_id || 0,\n            'value_datetime': form?.tptStartDate.value || null,\n            'value_numeric': amount || 0\n          })\n        }),\n      },\n      rifapentineQty: {\n        value: '',\n        label: \"Rifapentine Amount Received\",\n        validation: async (amount, form) => {\n          const history = form.tptHistory?.value?.label\n          return history?.match(/currently/i) && history.includes('3HP (RFP + INH)') && \n            StandardValidations.required(amount)\n        },\n        computedValue: (amount, form) => ({\n          tag: 'consultation',\n          obs: consultationService.buildObs('TPT Drugs Received', {\n            'value_drug': customRegimenIngredients.value.find(d => d.name === 'Rifapentine (150mg)')?.drug_id || 0,\n            'value_datetime': form?.tptStartDate.value || null,\n            'value_numeric': amount || 0\n          })\n        }),\n      },\n      threeHPQty: {\n        value: '',\n        label: \"INH / RFP Amount Received\",\n        validation: async (amount, form) => {\n          const history = form.tptHistory?.value?.label\n          return history?.match(/currently/i) && history.includes('INH 300 / RFP 300 (3HP)') && \n            StandardValidations.required(amount)\n        },\n        computedValue: (amount, form) => ({\n          tag: 'consultation',\n          obs: consultationService.buildObs('TPT Drugs Received', {\n            'value_drug': customRegimenIngredients.value.find(d => d.name === 'INH 300 / RFP 300 (3HP)')?.drug_id || 0,\n            'value_datetime': form?.tptStartDate.value || null,\n            'value_numeric': amount || 0\n          })\n        }),\n      },\n      tptStartLocation: {\n        value: props.observations['Location TPT Last Received'] || '',\n        label: \"TPT Transfer From\",\n        validation: async (date, form) => {\n          return form.tptHistory?.value?.label?.match(/currently/i) && \n            StandardValidations.required(date)\n        },\n        computedValue: (facility: Option | string) => ({\n          tag:'consultation',\n          obs: consultationService.buildValueText(\n            'Location TPT Last Received',\n            typeof facility === 'string' ? facility : facility.label\n          )\n        }),\n      },\n      confirmatoryTest: {\n        value: props.observations['Confirmatory hiv test type'] || '',\n        label: 'Confirmatory Test',\n        placeholder: 'Select confirmatory test',\n        required: true,\n        computedValue(test: Option){\n          return {\n            tag: 'registration',\n            obs: registrationService.buildValueCoded(\n              'Confirmatory hiv test type',\n              typeof test === 'string' ? test : test.value\n            )\n          }\n        }\n      },\n      confirmatoryTestLocation: {\n        value: props.observations['Confirmatory HIV test location'] || '',\n        label: 'Location of Confirmatory',\n        placeholder: 'Select location',\n        validation: async (location: Option, f: DTForm) => {\n          return !(f.confirmatoryTest.value.label === 'Not done' || f.confirmatoryTest.value === 'Not done') && \n            StandardValidations.required(location)\n        },\n        computedValue(facility: Option | string){\n          return {\n            tag: 'registration',\n            obs: registrationService.buildValueText(\n              'Confirmatory HIV test location', \n              typeof facility === 'string' ? facility : facility.label\n            )\n          }\n        }\n      },\n      confirmatoryTestDate: {\n        value: props.observations['Confirmatory HIV test date'] || '',\n        label: 'Confirmatory HIV Test Date',\n        validation: async (date: Option, f: DTForm) => {\n          return !(f.confirmatoryTest.value.label === 'Not done' || f.confirmatoryTest.value === 'Not done') && \n            StandardValidations.required(date)\n        },\n        computedValue: (date: string) => ({\n          tag: 'registration',\n          obs: registrationService.buildValueDate('Confirmatory HIV test date', date)\n        }),\n      },\n      patientType: {\n        value: \"New patient\",\n        computedValue: (patientType: string) => ({\n          tag: 'patient type',\n          obs: patientTypeService.buildValueCoded('Type of patient', patientType)\n        }),\n      }\n    });\n\n    const isConfirmatoryTestDone = computed(() => !(form.confirmatoryTest.value?.label === 'Not done' || form.confirmatoryTest.value === 'Not done'))\n\n    watch(form.receivedArvTreatmentBefore, state => {\n      if (state.value === 'No') {\n        form.everRegisteredAtClinic.value = ''\n      }\n    });\n\n    watch(form.initialVisitDate, (date) => {\n      EventBus.emit(EmcEvents.ON_INITIAL_VISIT_DATE, date.value)\n    })\n\n    const tptDrugs = computed(() => {\n      const tptHistory = typeof form.tptHistory.value === 'string' \n        ? form.tptHistory.value \n        : form.tptHistory.value?.label\n      \n        if(tptHistory?.match(/currently/i)){\n        if(tptHistory.match(/ipt/i)) {\n          return [\"INH or H (Isoniazid 300mg tablet)\"]\n        } else if(tptHistory.includes(\"3HP (RFP + INH)\")){\n          return ['INH or H (Isoniazid 300mg tablet)', 'Rifapentine (150mg)']\n        } else if(tptHistory.includes(\"INH 300 / RFP 300 (3HP)\")){\n          return [\"INH 300 / RFP 300 (3HP)\"]\n        }\n      }\n      return []\n    })\n\n    const onClear = async () => {\n      if((await alertConfirmation('Are you sure you want to clear all fields?'))) {\n        for(const key in form) {\n          if(key === 'patientType') continue;\n          form[key].value = undefined\n          form[key].error = \"\"\n        }\n      }\n      EventBus.emit(EmcEvents.ON_CLEAR)\n    }\n\n    const onSubmit = async () => {\n      patientTypeService.setDate(form.initialVisitDate.value)\n      registrationService.setDate(form.initialVisitDate.value)\n      vitalsService.setDate(form.initialVisitDate.value)\n      consultationService.setDate(form.initialVisitDate.value)\n      \n      await submitForm(form, async (formData, computedData) => {\n        emit(\"onValue\", {\n          type: 'registration',\n          data: {\n            formData,\n            computedData,\n            arvNumberEditable: !form.arvNumber.disabled\n          }\n        })\n        emit(\"onNext\")\n      })\n    }\n\n    onMounted(async () => {\n      const arvNumber = props.patient.getArvNumber()\n      if(arvNumber && arvNumber !== 'Unknown') {\n        form.arvNumber.value = arvNumber.split('-')[2]\n        form.arvNumber.disabled = true\n      }\n      RegimenService.getCustomIngridients().then(drugs => customRegimenIngredients.value = drugs)\n    }) \n \n    return {\n      today,\n      patientDob,\n      form,\n      isConfirmatoryTestDone,\n      initialTbStatusOptions,\n      tptHistoryOptions,\n      HIVTestOptions,\n      tptDrugs,\n      getFacilities,\n      onClear,\n      onSubmit,\n    };\n  },\n});\n","import { render } from \"./ClinicRegistration.vue?vue&type=template&id=da772458&ts=true\"\nimport script from \"./ClinicRegistration.vue?vue&type=script&lang=ts\"\nexport * from \"./ClinicRegistration.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}