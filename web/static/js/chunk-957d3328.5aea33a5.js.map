{"version":3,"sources":["webpack:///./src/apps/ART/services/consultation_service.ts","webpack:///./src/apps/ART/services/registration_service.ts","webpack:///./src/apps/EMC/utils/form.ts","webpack:///./src/apps/EMC/views/HIVReception.vue?ac8e","webpack:///./src/apps/EMC/views/HIVReception.vue","webpack:///./src/apps/EMC/views/HIVReception.vue?64ee","webpack:///./src/apps/ART/guidelines/staging_guidelines.ts","webpack:///./src/apps/ART/services/staging_service.ts","webpack:///./src/utils/loader.ts","webpack:///./src/apps/ART/services/vitals_service.ts","webpack:///./src/apps/EMC/interfaces/emc_event.ts"],"names":["ConsultationService","AppEncounterService","constructor","patientID","providerID","super","getFamilyPlanningMethods","getJson","this","obs","ObservationService","getFirstObs","value_text","match","obsInValidPeriod","getDrugSideEffects","getProgramID","date","getClient","getFirstValueCoded","req","id","isEmpty","lastScreened","duration","dayjs","diff","secondCheck","getFirstValueText","isTL","value_coded","tlObs","fpObs","drugs","uniqueDrugs","forEach","drug","drug_inventory_id","familyPlanningMethods","label","values","familyPlanningLogic","selected","map","data","value","isChecked","disabled","ClinicRegistrationService","async","isValidForm","form","key","required","error","validation","payload","errs","length","toString","console","log","Object","every","resolveFormValues","underscoreKeys","formData","computedFormData","fKey","toUnderscores","computedValue","resolveObs","tag","filter","d","reduce","accum","cur","Array","isArray","concat","push","Promise","all","optionsToGroupObs","conceptName","options","buildGroupValueCoded","option","submitForm","callback","showloader","loader","show","toastWarning","hide","render","_ctx","_cache","$props","$setup","$data","$options","_component_ion_col","_resolveComponent","_component_ion_row","_component_ion_grid","_component_layout","_openBlock","_createBlock","default","_withCtx","_createVNode","class","isReady","size","_KeepAlive","_resolveDynamicComponent","activeForm","patient","isNewPatient","sitePrefix","initialVisitDate","observations","onOnValue","onValue","onOnNext","onNext","onOnPrevious","onPrevious","onOnFinish","onFinish","_","_createCommentVNode","defineComponent","components","ClinicRegistration","defineAsyncComponent","Staging","Layout","IonGrid","IonRow","IonCol","IonButton","setup","route","useRoute","router","useRouter","ref","reactive","patientId","parseInt","params","new","isStaging","computed","isRegistration","firstVisitEncounters","isEnrolled","setEnrollementStatus","programService","PatientProgramService","getPrograms","then","programs","some","p","program","name","type","arvNumberEditable","computedData","registration","stagingData","staging","encounter","EncounterService","voidEncounter","setSessionDate","arvNumber","createArvNumber","patientTypeService","PatientTypeService","createEncounter","pTypeObs","saveObservationList","registrationService","regObs","everRegisteredAtClinic","vitalsService","VitalsService","vitalsObs","consultationService","consultationObs","stagingService","StagingService","getAge","patientProgram","setProgramDate","enrollProgram","resetSessionDate","toastSuccess","parseObs","v","includes","encounter_id","concept","ConceptService","getConceptName","concept_id","value_datetime","value_drug","value_numeric","value_modifier","onMounted","Store","get","prefix","enc","getEncounters","encounters","encounter_type","EventBus","on","EmcEvents","ON_INITIAL_VISIT_DATE","__exports__","CD4_AS_START_REASON_CUTOFF_DATE","ADULT_WHO_STAGE_CRITERIA","priority","conditions","stage","reasonForArt","reason","CHILD_WHO_STAGE_CRITERIA","CONTRADICTING_STAGE_DEFINITIONS_ALERTS","actions","alert","alertConfirmation","facts","bmi","confirmBtnLabel","cancelBtnLabel","selectedCondition","condition","keepAsymptomatic","selectedConditions","stageThreeConditions","stageFourConditions","stageTwoConditions","RECOMMENDED_CHILD_STAGING_CONDITIONS","description","color","info","weightPercentile","RECOMMENDED_ADULT_STAGING_CONDITIONS","CHILD_ART_ELIGIBILITY","ageInMonths","age","pshdConditions","getConceptsByCategory","pshdCondition","testType","cd4Date","Date","cd4","cd4Modifier","modifier","gender","breastFeeding","answer","pregnant","ADULT_ART_ELIGIBILITY","severeSymp","found","total","symp","StagingCategory","confirmatoryTest","isAdult","isPedaid","setAge","getFacilities","LocationService","getConfirmatoryTestType","cd4CountIsValid","e","getAlertGuidelines","getWhoStageGuidelines","getProgramEligibilityGuidelines","getRecommendedConditionGuidelines","getStagingConditions","category","getStagingCategoryByNum","getAllWhoStages","getAllReasonsForART","registrationDate","reasons","buildWhoStageObs","buildValueCoded","buildWhoCriteriaObs","buildReasonForArtObs","stageNumber","ADULT_STAGE_1","PEDAID_STAGE_1","ADULT_STAGE_2","PEDAID_STAGE_2","ADULT_STAGE_3","PEDAID_STAGE_3","ADULT_STAGE_4","PEDAID_STAGE_4","test","message","loadingController","create","spinner","translucent","present","getTop","dismiss","isNotEmptyandNumber","vital","isNotEmptyandFloat","other","checkMinMax","val","min","max","parseFloat","validateAll","vitals","j","validator","mergeErrors","errors","holder","element","isValidBPReading","isValidBP","split","bpSystolic","bpDiastolic","emptyErrors","minErrors"],"mappings":"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","file":"js/chunk-957d3328.5aea33a5.js","sourcesContent":["import { DrugInterface } from \"@/interfaces/Drug\";\nimport { AppEncounterService } from \"@/services/app_encounter_service\";\nimport { ObservationService } from \"@/services/observation_service\";\nimport dayjs from \"dayjs\";\nimport { isEmpty } from \"lodash\";\nimport { DrugOrderService } from \"@/services/drug_order_service\"\n\nexport class ConsultationService extends AppEncounterService {\n  constructor(patientID: number, providerID: number) {\n    super(patientID, 53, providerID);\n  }\n  getFamilyPlanningMethods() {\n    return [\n      \"ORAL CONTRACEPTIVE PILLS\",\n      \"DEPO-PROVERA\",\n      \"INTRAUTERINE CONTRACEPTION\",\n      \"CONTRACEPTIVE IMPLANT\",\n      \"MALE CONDOMS\",\n      \"FEMALE CONDOMS\",\n      \"TUBAL LIGATION\",\n      \"NONE\",\n    ];\n  }\n\n  async getTptTreatmentStatus() {\n    return AppEncounterService.getJson(`/patients/${this.patientID}/tpt_status`)\n  }\n\n  async patientHitMenopause() {\n    const obs = await ObservationService.getFirstObs(\n      this.patientID, 'Why does the woman not use birth control', \n    )\n    return obs && typeof obs?.value_text === 'string'\n      ? (obs.value_text.match(/menopause/i) ? true : false)\n      && AppEncounterService.obsInValidPeriod(obs)\n      : false\n  }\n\n  async hasTreatmentHistoryObs() {\n    const obs = await ObservationService.getFirstObs(this.patientID, 'Previous TB treatment history')\n    return obs && AppEncounterService.obsInValidPeriod(obs)\n  }\n\n  getDrugSideEffects() {\n    return AppEncounterService.getJson(`programs/${AppEncounterService.getProgramID()}/patients/${this.patientID}/medication_side_effects`, { \n      date: this.date \n    })\n  }\n\n  getClient() {\n    return AppEncounterService.getFirstValueCoded(this.patientID, 'Patient present');\n  }\n\n  async clientDueForCxCa() {\n    const req: any = await AppEncounterService.getJson(`last_cxca_screening_details`, {\n      id: this.patientID, date: this.date\n    })\n    if (!isEmpty(req)) {\n      const lastScreened = req['date_screened']\n      const duration = dayjs(this.date).diff(lastScreened, 'years')\n      return duration >= 1\n    }\n    return true\n  }\nasync clientHasHadAHysterectomy() {\n    const req: any = await AppEncounterService.getFirstValueCoded(this.patientID, 'Reason for NOT offering CxCa'); \n    if(req === \"Hysterectomy\") {\n      return true\n    }\n    const secondCheck: any = await AppEncounterService.getFirstValueText(this.patientID, 'Treatment'); \n    if(secondCheck === \"Hysterectomy\") {\n      return true\n    }\n    return false\n  }\n  async getTLObs() {\n    const isTL = ((obs: any) => obs && obs.value_coded === 'Tubal ligation' && AppEncounterService.obsInValidPeriod(obs))\n    const tlObs = await AppEncounterService.getFirstObs(this.patientID, 'Family planning')\n    if (isTL(tlObs)) {\n      return isTL(tlObs)\n    } else  {\n      const fpObs = await AppEncounterService.getFirstObs(this.patientID, 'Method of family planning')\n      return isTL(fpObs)\n    }\n  }\n  async getPreviousDrugs() {\n\n    const drugs = await AppEncounterService.getJson(\n      `patients/${this.patientID}/drugs_received`\n    )\n\n    if (!drugs) return\n\n    const uniqueDrugs = {} as any\n    drugs.forEach((drug: DrugInterface) => {\n      uniqueDrugs[drug.drug_inventory_id] = drug;\n    })\n    return uniqueDrugs;\n  }\n  familyPlanningMethods(label: string, values: any[]) {\n    const familyPlanningLogic: any = {\n      \"ORAL CONTRACEPTIVE PILLS\": {\n        \"DEPO-PROVERA\": 'N', \"INTRAUTERINE CONTRACEPTION\": 'N', 'CONTRACEPTIVE IMPLANT': 'N',\n        'MALE CONDOMS': 'Y', 'FEMALE CONDOMS': 'Y', 'RYTHM METHOD': 'N', 'TUBAL LIGATION': 'N',\n        'VASECTOMY': 'N'\n      },\n      \"DEPO-PROVERA\": {\n        \"ORAL CONTRACEPTIVE PILLS\": 'N', \"INTRAUTERINE CONTRACEPTION\": 'N', 'CONTRACEPTIVE IMPLANT': 'N',\n        'MALE CONDOMS': 'Y', 'FEMALE CONDOMS': 'Y', 'RYTHM METHOD': 'N', 'TUBAL LIGATION': 'N',\n        'VASECTOMY': 'N'\n      },\n      \"INTRAUTERINE CONTRACEPTION\": {\n        \"ORAL CONTRACEPTIVE PILLS\": 'N', \"DEPO-PROVERA\": 'N', 'CONTRACEPTIVE IMPLANT': 'N',\n        'MALE CONDOMS': 'Y', 'FEMALE CONDOMS': 'Y', 'RYTHM METHOD': 'N', 'TUBAL LIGATION': 'N',\n        'VASECTOMY': 'N'\n      },\n      \"CONTRACEPTIVE IMPLANT\": {\n        \"ORAL CONTRACEPTIVE PILLS\": 'N', \"DEPO-PROVERA\": 'N', 'INTRAUTERINE CONTRACEPTION': 'N',\n        'MALE CONDOMS': 'Y', 'FEMALE CONDOMS': 'Y', 'RYTHM METHOD': 'N', 'TUBAL LIGATION': 'N',\n        'VASECTOMY': 'N'\n      },\n      \"MALE CONDOMS\": {\n        \"ORAL CONTRACEPTIVE PILLS\": 'Y', \"DEPO-PROVERA\": 'Y', 'INTRAUTERINE CONTRACEPTION': 'Y',\n        'CONTRACEPTIVE IMPLANT': 'Y', 'FEMALE CONDOMS': 'Y', 'RYTHM METHOD': 'Y', 'TUBAL LIGATION': 'N',\n        'VASECTOMY': 'Y'\n      },\n      \"FEMALE CONDOMS\": {\n        \"ORAL CONTRACEPTIVE PILLS\": 'Y', \"DEPO-PROVERA\": 'Y', 'INTRAUTERINE CONTRACEPTION': 'Y',\n        'CONTRACEPTIVE IMPLANT': 'Y', 'MALE CONDOMS': 'Y', 'RYTHM METHOD': 'Y', 'TUBAL LIGATION': 'N',\n        'VASECTOMY': 'Y'\n      },\n      \"RYTHM METHOD\": {\n        \"ORAL CONTRACEPTIVE PILLS\": 'N', \"DEPO-PROVERA\": 'N', 'INTRAUTERINE CONTRACEPTION': 'N',\n        'MALE CONDOMS': 'Y', 'FEMALE CONDOMS': 'Y', 'CONTRACEPTIVE IMPLANT': 'N', 'TUBAL LIGATION': 'N',\n        'VASECTOMY': 'N'\n      },\n      \"TUBAL LIGATION\": {\n        \"ORAL CONTRACEPTIVE PILLS\": 'N', \"DEPO-PROVERA\": 'N', 'INTRAUTERINE CONTRACEPTION': 'N',\n        'MALE CONDOMS': 'N', 'FEMALE CONDOMS': 'N', 'CONTRACEPTIVE IMPLANT': 'N', 'RYTHM METHOD': 'N',\n        'VASECTOMY': 'N',\n      },\n      \"VASECTOMY\": {\n        \"ORAL CONTRACEPTIVE PILLS\": 'N', \"DEPO-PROVERA\": 'Y', 'INTRAUTERINE CONTRACEPTION': 'N',\n        'MALE CONDOMS': 'Y', 'FEMALE CONDOMS': 'N', 'CONTRACEPTIVE IMPLANT': 'Y', 'RYTHM METHOD': 'N',\n        'TUBAL LIGATION': 'N'\n      },\n      \"NONE\": {\n        \"ORAL CONTRACEPTIVE PILLS\": 'N', \"DEPO-PROVERA\": 'N', 'INTRAUTERINE CONTRACEPTION': 'N',\n        'MALE CONDOMS': 'N', 'FEMALE CONDOMS': 'N', 'CONTRACEPTIVE IMPLANT': 'N', 'RYTHM METHOD': 'N',\n        'TUBAL LIGATION': 'N'\n      }\n    }\n    const selected = familyPlanningLogic[label];\n    return values.map(data => {\n      if (selected[data.label] === \"N\") {\n        return {\n          label: data.label,\n          value: data.value,\n          isChecked: false,\n          disabled: true,\n        }\n      }\n      else {\n        return {\n          label: data.label,\n          value: data.value,\n          isChecked: data.isChecked,\n          disabled: false,\n        }\n      }\n\n    })\n  }\n\n}","import { AppEncounterService } from \"@/services/app_encounter_service\"\n\nexport class ClinicRegistrationService extends AppEncounterService {\n    constructor(patientID: number, providerID: number) {\n        super(patientID, 9, providerID) //TODO: Use encounter type reference name'\n    }\n}\n","import { ObsValue, ObservationService } from \"@/services/observation_service\"\nimport { DTForm } from \"../interfaces/dt_form_field\"\nimport { Option } from \"@/components/Forms/FieldInterface\";\nimport { toUnderscores } from \"@/utils/Strs\";\nimport { isEmpty } from \"lodash\";\nimport { loader } from \"@/utils/loader\";\nimport { toastWarning } from '@/utils/Alerts';\n\nexport async function isValidForm (form: DTForm) {\n  for (const key in form) {\n    if (form[key].required && isEmpty(form[key].value)) {\n      form[key].error = \"This field is required\";\n      continue;\n    }\n    if(typeof form[key].validation !== 'function') {\n      form[key].error = ''\n      continue\n    }\n    const payload = typeof form[key].value === 'object'\n        ? form[key].value\n        : { label: form[key].value, value: form[key].value }\n\n    const errs = await form[key].validation!(payload as Option, form)\n    if(errs && errs.length > 0) {\n      form[key].error = errs.toString()\n      console.log(key, form[key].error)\n    } else {\n      form[key].error = ''\n    }       \n  }\n  return Object.values(form).every(({ error }) => !error)\n}\n\nexport function resolveFormValues(form: DTForm, underscoreKeys = false) {\n  const formData: any = {}\n  const computedFormData: any = {}\n  for (const key in form) {\n    if(form[key].value) {\n      const fKey = underscoreKeys ? toUnderscores(key) : key\n      formData[fKey] = form[key].value\n      if(typeof form[key].computedValue === 'function') {\n        computedFormData[fKey] = form[key].computedValue!(form[key].value, form)\n      }\n    }\n  }\n  return { formData, computedFormData }\n}\n\nexport function resolveObs (obs: any, tag=''): Promise<ObsValue[]> {\n  const values: any = Object.values(obs)\n    .filter((d: any) => d && (d.tag === tag || tag === ''))\n    .reduce((accum: any, cur: any) => { \n      const data = cur.obs ? cur.obs : cur\n      if (Array.isArray(data)) {\n        accum = accum.concat(data)\n      } else {\n          accum.push(data)\n      }\n      return accum\n    }, [])\n  return Promise.all(values)\n}\n\nexport function optionsToGroupObs (conceptName: string, options: Option[]) {\n  return Promise.all(options.map(async (option) => {\n    return ObservationService.buildGroupValueCoded(conceptName, option.label, option.isChecked ? 'Yes' : 'No')\n  }))\n}\n\ntype SubmitFormCallback = (formData: Record<string, any>, computedData: Record<string, any>) => Promise<void> | void\ninterface SubmitOptios {\n  showloader?: boolean;\n  underscoreKeys?: boolean;\n}\n\nexport async function submitForm (form: DTForm, callback: SubmitFormCallback, options?: SubmitOptios) {\n  if(!await isValidForm(form)) return\n  const showloader = options?.showloader || false\n  try {\n    if (showloader) await loader.show()\n    const {formData, computedFormData} = resolveFormValues(form, options?.underscoreKeys)\n    await callback(formData, computedFormData)\n  } catch (error) {\n    toastWarning(`${error}`)\n    console.error(error)\n  } finally {\n    if(showloader) await loader.hide()\n  }\n}","import { resolveDynamicComponent as _resolveDynamicComponent, openBlock as _openBlock, createBlock as _createBlock, KeepAlive as _KeepAlive, resolveComponent as _resolveComponent, withCtx as _withCtx, createCommentVNode as _createCommentVNode, createVNode as _createVNode } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ion_col = _resolveComponent(\"ion-col\")!\n  const _component_ion_row = _resolveComponent(\"ion-row\")!\n  const _component_ion_grid = _resolveComponent(\"ion-grid\")!\n  const _component_layout = _resolveComponent(\"layout\")!\n\n  return (_openBlock(), _createBlock(_component_layout, null, {\n    default: _withCtx(() => [\n      _createVNode(_component_ion_grid, null, {\n        default: _withCtx(() => [\n          _createVNode(_component_ion_row, { class: \"his-card\" }, {\n            default: _withCtx(() => [\n              (_ctx.isReady)\n                ? (_openBlock(), _createBlock(_component_ion_col, {\n                    key: 0,\n                    size: \"12\"\n                  }, {\n                    default: _withCtx(() => [\n                      (_openBlock(), _createBlock(_KeepAlive, null, [\n                        (_openBlock(), _createBlock(_resolveDynamicComponent(_ctx.activeForm), {\n                          patient: _ctx.patient,\n                          isNewPatient: _ctx.isNewPatient,\n                          sitePrefix: _ctx.sitePrefix,\n                          initialVisitDate: _ctx.initialVisitDate,\n                          observations: _ctx.observations,\n                          onOnValue: _ctx.onValue,\n                          onOnNext: _ctx.onNext,\n                          onOnPrevious: _ctx.onPrevious,\n                          onOnFinish: _ctx.onFinish\n                        }, null, 40, [\"patient\", \"isNewPatient\", \"sitePrefix\", \"initialVisitDate\", \"observations\", \"onOnValue\", \"onOnNext\", \"onOnPrevious\", \"onOnFinish\"]))\n                      ], 1024))\n                    ]),\n                    _: 1\n                  }))\n                : _createCommentVNode(\"\", true)\n            ]),\n            _: 1\n          })\n        ]),\n        _: 1\n      })\n    ]),\n    _: 1\n  }))\n}","\nimport { computed, defineAsyncComponent, defineComponent, onMounted, reactive, ref } from 'vue'\nimport { useRoute, useRouter } from 'vue-router'\nimport Layout from \"@/apps/EMC/Components/Layout.vue\";\nimport { IonGrid, IonRow, IonCol, IonButton } from \"@ionic/vue\";\nimport { Patientservice } from '@/services/patient_service';\nimport Store from \"@/composables/ApiStore\"\nimport { toastSuccess, toastWarning } from '@/utils/Alerts';\nimport { loader } from '@/utils/loader';\nimport { ClinicRegistrationService } from '@/apps/ART/services/registration_service';\nimport { ConsultationService } from '@/apps/ART/services/consultation_service';\nimport { VitalsService } from '@/apps/ART/services/vitals_service';\nimport { PatientTypeService } from '@/apps/ART/services/patient_type_service';\nimport { resolveObs } from '../utils/form';\nimport { PatientProgramService } from '@/services/patient_program_service';\nimport { StagingService } from '@/apps/ART/services/staging_service';\nimport { EncounterService } from '@/services/encounter_service';\nimport { isEmpty, get } from 'lodash';\nimport { Encounter } from '@/interfaces/encounter';\nimport { Observation } from '@/interfaces/observation';\nimport { ConceptService } from '@/services/concept_service';\nimport EventBus from '@/utils/EventBus';\nimport { EmcEvents } from '../interfaces/emc_event';\n\nexport default defineComponent({\n  components: {\n    ClinicRegistration: defineAsyncComponent(() => import('@/apps/EMC/Components/ClinicRegistration.vue')),\n    Staging: defineAsyncComponent(() => import('@/apps/EMC/Components/Staging.vue')),\n    Layout,\n    IonGrid,\n    IonRow,\n    IonCol,\n    IonButton,\n  },\n  setup() {\n    const route = useRoute()\n    const router = useRouter()\n    const isReady = ref(false);\n    const data = reactive({} as any);\n    const activeForm = ref('ClinicRegistration')\n    const sitePrefix = ref('')\n    const patientId = parseInt(route.params.id.toString() || '')\n    const isNewPatient = route.params.new.toString().match(/true/i) ? true : false\n    const isStaging = computed(() => activeForm.value === 'Staging');\n    const isRegistration = computed(() => activeForm.value === 'Staging');\n    const patient = ref({} as Patientservice)\n    const initialVisitDate = ref('')\n    const firstVisitEncounters = ref([] as number[])\n    const observations = reactive({} as Record<string, any>)\n    const isEnrolled = ref(false);\n\n    const setEnrollementStatus = () => {\n      const programService = new PatientProgramService(patientId);\n      programService.getPrograms().then((programs: any[]) => {\n        isEnrolled.value = programs.some(p => p.program.name === \"HIV PROGRAM\")\n      })\n    }\n    \n    const onValue = (form: any) => data[form.type] = form.data;\n    const onNext = () => activeForm.value = \"Staging\"\n    const onPrevious = () => activeForm.value = \"ClinicRegistration\"\n\n    const onFinish = async () => {\n      const { arvNumberEditable, formData, computedData } = data.registration\n      const { computedData: stagingData } = data.staging\n      \n      try {\n        loader.show();\n        \n        // Void first visit encounters\n        if(!isNewPatient && !isEmpty(firstVisitEncounters.value)) {\n          for(const encounter of firstVisitEncounters.value) {\n            await EncounterService.voidEncounter(encounter, 'Duplicate')\n          }\n        }\n\n        // set session date\n        await ClinicRegistrationService.setSessionDate(formData.initialVisitDate)\n\n        // ARV Number\n        if(arvNumberEditable && formData.arvNumber) {\n          await patient.value.createArvNumber(`${sitePrefix.value}-ARV-${formData.arvNumber}`)\n        }\n\n        // Patient Type Encunter      \n        const patientTypeService = new PatientTypeService(patientId, -1);\n        await patientTypeService.createEncounter()\n        const pTypeObs = await resolveObs(computedData, 'patient type')\n        await patientTypeService.saveObservationList(pTypeObs)\n\n        // Registration Encounter\n        const registrationService = new ClinicRegistrationService(patientId, -1)\n        await registrationService.createEncounter()\n        const regObs = await resolveObs(computedData, 'registration')\n        await registrationService.saveObservationList(regObs)\n\n        // Vitals and Consultation Encounters\n        if(formData.everRegisteredAtClinic === 'Yes') {\n          const vitalsService = new VitalsService(patientId, -1)\n          await vitalsService.createEncounter()\n          const vitalsObs = await resolveObs(computedData, 'vitals')\n          await vitalsService.saveObservationList(vitalsObs)\n\n          const consultationService = new ConsultationService(patientId, -1)\n          await consultationService.createEncounter()\n          const consultationObs = await resolveObs(computedData, 'consultation')\n          await consultationService.saveObservationList(consultationObs)\n        }\n\n        // Staging encounter\n        const stagingService = new StagingService(patientId, patient.value.getAge(), -1)\n        await stagingService.createEncounter()\n        const obs = await resolveObs(stagingData)\n        await stagingService.saveObservationList(obs)        \n        \n        // enroll patient into HIV program\n        if(isNewPatient || !isEnrolled.value) {\n          const patientProgram = new PatientProgramService(patientId)\n          patientProgram.setProgramDate(formData.initialVisitDate)\n          await patientProgram.enrollProgram();\n        } \n        \n        await loader.hide()\n        await ClinicRegistrationService.resetSessionDate()\n        await toastSuccess('Saved successfully')\n        router.push(`/emc/patient/${patientId}`)\n      } catch (error) {\n        await loader.hide()\n        console.log(error)\n        toastWarning(`${error}`)\n      }\n    }\n\n    const parseObs = async (obs: Observation[]) => {\n      for (const v of obs) {\n        if(!firstVisitEncounters.value.includes(v.encounter_id)) firstVisitEncounters.value.push(v.encounter_id)\n        const concept = await ConceptService.getConceptName(v.concept_id);\n        let value = '' as any\n        if(v.value_datetime) value = v.value_datetime;\n        else if(v.value_drug) value = v.value_datetime;\n        else if(v.value_text) value = v.value_text;\n        else if(v.value_numeric) value = v.value_numeric;\n        else if(v.value_coded) value = await ConceptService.getConceptName(v.value_coded);\n        if(v.value_modifier) value = v.value_modifier + value;\n        observations[concept] = value\n      }\n    }\n    \n    onMounted(async () => {\n      setEnrollementStatus()\n      patient.value = await Store.get(\"ACTIVE_PATIENT\", { patientID: patientId });\n      Store.get('SITE_PREFIX').then(prefix => sitePrefix.value = prefix);      \n      if(!isNewPatient) {\n        const enc = await EncounterService.getEncounters(patientId, {\"encounter_type_id\": 9})\n        if(isEmpty(enc)) return isReady.value = true;\n        initialVisitDate.value = get(enc, '[0].encounter_datetime', '')\n        if(initialVisitDate.value) {\n          const encounters: Encounter[] = await  EncounterService.getEncounters(patientId, { date: initialVisitDate.value });\n          for (const enc of encounters){\n            if([9, 53, 6, 5, 52].includes(enc.encounter_type))\n              await parseObs(enc.observations)\n          }\n        }\n      }\n      isReady.value = true;\n      EventBus.on(EmcEvents.ON_INITIAL_VISIT_DATE, (date: string) => initialVisitDate.value = date)\n    })\n\n    return {\n      activeForm,\n      patient,\n      isNewPatient,\n      isStaging,\n      isRegistration,\n      sitePrefix,\n      isReady,\n      initialVisitDate,\n      observations,\n      onValue,\n      onFinish,\n      onNext,\n      onPrevious,\n    }\n  },\n})\n","import { render } from \"./HIVReception.vue?vue&type=template&id=a50f0016&ts=true\"\nimport script from \"./HIVReception.vue?vue&type=script&lang=ts\"\nexport * from \"./HIVReception.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { ConceptService } from \"@/services/concept_service\"\nimport { alertConfirmation } from \"@/utils/Alerts\"\nimport { GuideLineInterface } from \"@/utils/GuidelineEngine\"\n\nexport const CD4_AS_START_REASON_CUTOFF_DATE = \"2014-04-01\";\n\nexport const ADULT_WHO_STAGE_CRITERIA: Record<string, GuideLineInterface> = {\n    'Adults with stage 4 conditions': {\n        concept: 'WHO STAGE IV ADULT',\n        priority: 1,\n        conditions: {\n            stage: (stage: number) => stage === 4,\n        }\n    },\n    'Classify as stage 4 when reason for ART is WHO STAGE 4': {\n        concept: 'WHO STAGE IV ADULT',\n        priority: 2,\n        conditions: {\n            reasonForArt: (reason: string) => reason === 'WHO STAGE IV ADULT'\n        }\n    },\n    'Adults with stage 3 conditions': {\n        concept: 'WHO STAGE III ADULT',\n        priority: 3,\n        conditions: {\n            stage: (stage: number) => stage === 3\n        }\n    },\n    'Adults with stage 2 conditions': {\n        concept: 'WHO STAGE II ADULT',\n        priority: 4,\n        conditions: {\n            stage: (stage: number) => stage === 2,\n        }\n    },\n    'Adults with stage 1 conditions': {\n        concept: 'WHO STAGE I ADULT',\n        priority: 5,\n        conditions: {\n            stage: (stage: number) => stage === 1\n        }\n    }\n}\n\nexport const CHILD_WHO_STAGE_CRITERIA: Record<string, GuideLineInterface> = {\n    'Children with stage 4 conditions': {\n        concept: 'WHO STAGE IV PEDS',\n        priority: 1,\n        conditions: {\n            stage: (stage: number) => stage === 4,\n        }\n    },\n    'Classify as stage 4 when reason for ART is WHO STAGE 4': {\n        concept: 'WHO STAGE IV PEDS',\n        priority: 2,\n        conditions: {\n            reasonForArt: (reason: string) => reason === 'WHO STAGE IV PEDS'\n        }\n    },\n    'For children with stage 3 conditions': {\n        concept: 'WHO STAGE III PEDS',\n        priority: 3,\n        conditions: {\n            stage: (stage: number) => stage === 3\n        }\n    },\n    'Children with stage 2 conditions': {\n        concept: 'WHO STAGE II PEDS',\n        priority: 4,\n        conditions: {\n            stage: (stage: number) => stage === 2\n        }\n    },\n    'Children with stage 1 conditions': {\n        concept: 'WHO STAGE I PEDS',\n        priority: 5,\n        conditions: {\n            stage: (stage: number) => stage === 1\n        }\n    }\n}\n\nexport const CONTRADICTING_STAGE_DEFINITIONS_ALERTS: Record<string, GuideLineInterface> = {\n    \"Warn if Severe weight loss is selected when actual patient BMI is acceptable\": {\n        priority: 1,\n        actions: {\n            alert: async (facts: any) => await alertConfirmation(`Patient's BMI of ${facts.bmi} greater than 18.5, do you wish to proceed?`, {\n                confirmBtnLabel: 'Yes, keep severe weightloss',\n                cancelBtnLabel: 'No, cancel'\n            }),\n        },\n        conditions: {\n            selectedCondition (condition: string) {\n                return condition === 'Severe weight loss >10% and/or BMI <18.5kg/m^2, unexplained'\n            },\n            bmi:(bmi: number) => bmi > 18.5\n        }\n    },\n    \"Warn for contradicting stage defining conditions\": {\n        priority: 1,\n        actions: {\n            alert: async (facts: any) => {\n                const keepAsymptomatic = await alertConfirmation('CONTRADICTING STAGE DEFINING CONDITIONS', {\n                    confirmBtnLabel: \"Keep Asymptomatic\",\n                    cancelBtnLabel: 'Keep other(s)'\n                })\n                if(keepAsymptomatic) {\n                    facts.stage = 1\n                    facts.selectedConditions = []\n                    facts.stageThreeConditions = []\n                    facts.stageFourConditions = []\n                    facts.stageTwoConditions = []\n                    return true\n                }\n                return false\n            },\n        },\n        conditions: {\n            selectedCondition(condition: string){\n                return condition === 'Asymptomatic HIV infection'\n            },\n            stage: (stage: number) => stage >= 2\n        }\n    },\n}\n\nexport const RECOMMENDED_CHILD_STAGING_CONDITIONS: Record<string, GuideLineInterface> = {\n    'For children whose current weight percentile is less than 70' : {\n        priority: 1,\n        actions: {\n            isChecked: true\n        },\n        description: {\n            color: 'danger',\n            show: 'always',\n            info: (facts: any) => `Child has a low weight percentile of ${facts.weightPercentile}`\n        },\n        conditions: {\n            selectedCondition(condition: string) {\n                return condition === 'Severe unexplained wasting or malnutrition not responding to treatment (weight-for-height/ -age <70% or MUAC less than 11cm or oedema)'\n            },\n            weightPercentile(weightPercentile: number){\n                return weightPercentile < 70\n            }\n        }\n    },\n    'Enable Moderate unexplained malnutrition for children whose weight for height is 70-79%': {\n        priority: 1,\n        actions: {\n            isChecked: true\n        },\n        description: {\n            color: 'danger',\n            show: 'always',\n            info: (facts: any) => `Child has weight percentile of ${facts.weightPercentile}`\n        },\n        conditions: {\n            selectedCondition(condition: string) {\n                return condition === 'Moderate unexplained wasting/malnutrition not responding to treatment (weight-for-height/ -age 70-79% or muac 11-12 cm)'\n            },\n            weightPercentile(weightPercentile: number){\n                return weightPercentile >= 70 && weightPercentile <= 79\n            }\n        }\n    },\n    'Disable moderate weight loss when Severe unexplained weight loss is chosen': {\n        priority: 2,\n        actions: {\n            isChecked: false,\n            disabled: true\n        },\n        description: {\n            color: 'secondary',\n            show: 'always',\n            info: () => 'Severe weight loss/manutrition was already selected',\n        },\n        conditions: {\n            selectedCondition(condition: string) {\n                return condition === 'Moderate unexplained wasting/malnutrition not responding to treatment (weight-for-height/ -age 70-79% or muac 11-12 cm)'\n            },\n            selectedConditions(conditions: Array<string>) {\n                return conditions.includes('Severe unexplained wasting or malnutrition not responding to treatment (weight-for-height/ -age <70% or MUAC less than 11cm or oedema)')\n            }\n        }\n    }\n}\n\nexport const RECOMMENDED_ADULT_STAGING_CONDITIONS: Record<string, GuideLineInterface> = {\n    'Adults with a BMI less than 16': {\n        priority: 1,\n        actions: {\n            isChecked: true\n        },\n        description: {\n            color: 'danger',\n            show: 'always',\n            info: (facts: any) => `Adult has a low BMI of ${facts.bmi}`\n        },\n        conditions: {\n            selectedCondition(condition: string) {\n                return condition === 'Severe weight loss >10% and/or BMI <18.5kg/m^2, unexplained'\n            },\n            bmi: (bmi: number) => bmi < 16\n        }\n    },\n    'Adults whose BMI is between 16 and 18': {\n        priority: 3,\n        actions: {\n            isChecked: true\n        },\n        description: {\n            color: 'warning',\n            show: 'onChecked',\n            info: (facts: any) => `BMI of ${facts.bmi} is between 16 and 18`,\n        },\n        conditions: {\n            selectedCondition: (condition: string) => condition === 'Moderate weight loss less than or equal to 10 percent, unexplained',\n            bmi: (bmi: number) => bmi >= 16.0 && bmi <= 18.5\n        }\n    },\n    \"Disable Moderate weight loss if severe weightloss is selected\": {\n        priority: 2,\n        actions: {\n            isChecked: false,\n            disabled: true\n        },\n        description: {\n            color: 'secondary',\n            show: 'always',\n            info: () => 'Severe weight loss was already selected',\n        },\n        conditions: {\n            selectedCondition(condition: string) {\n                return condition === 'Moderate weight loss less than or equal to 10 percent, unexplained'\n            },\n            selectedConditions(conditions: Array<string>) {\n                return conditions.includes('Severe weight loss >10% and/or BMI <18.5kg/m^2, unexplained')\n            }\n        }\n    }\n}\n\nexport const CHILD_ART_ELIGIBILITY: Record<string, GuideLineInterface> = {\n    'Has stage 4 conditions': {\n        concept: 'WHO STAGE IV PEDS',\n        priority: 1,\n        conditions: {\n            stage: (stage: number) => stage === 4\n        }\n    },\n    'Has stage 3 conditions': {\n        concept: 'WHO STAGE III PEDS',\n        priority: 2,\n        conditions: {\n            stage: (stage: number) => stage === 3,\n        }\n    },\n    'Children under twelve months who tested positive on Rapid test and have presumed severe HIV': {\n        concept: 'PRESUMED SEVERE HIV',\n        priority: 3,\n        conditions: {\n            ageInMonths(age: number){\n                return age < 12 \n            },\n            selectedConditions: (conditions: Array<string>) => {\n                const pshdConditions = ConceptService.getConceptsByCategory('pshd_condition')\n                for (const pshdCondition in pshdConditions) {\n                    if (conditions.includes(pshdCondition)) return true\n                }\n                return false\n            },\n            testType(testType: string){\n                return testType === 'HIV rapid test'\n            },\n        }\n    },\n    \"Children under twelve who tested positive via HIV DNA Polymerase Chain Reaction test\": {\n        concept: 'HIV DNA polymerase chain reaction',\n        priority: 4,\n        conditions: {\n            ageInMonths: (age: number) => age < 12,\n            testType: (testType: string) => testType === \"HIV DNA polymerase chain reaction\",\n        }\n    },\n    \"Children who are less than 24 months\": {\n        concept: 'HIV infected',\n        priority: 5,\n        conditions: {\n            ageInMonths: (age: number) => age < 24\n        }\n    },\n    \"Children between 24 and 56 months who have stage 2 or 1 conditions\": {\n        concept: 'CD4 COUNT LESS THAN OR EQUAL TO 750',\n        priority: 6,\n        conditions: {\n            ageInMonths(age: number) {\n                return age >= 24 && age <= 56\n            },\n            cd4Date: (date: string) => {\n                return new Date(date) <= new Date(\"2014-04-01\")\n            },\n            cd4(cd4: number) {\n                return cd4 <= 750\n            },\n            cd4Modifier(modifier: string) {\n                return modifier === '<' || modifier === '='\n            },\n            stage(stage: number) {\n                return stage <= 2\n            }\n        }\n    },\n    \"Children with CD4 count less than 500 and have stage 1 and stage 2 conditions\": {\n        concept: 'CD4 COUNT LESS THAN OR EQUAL TO 500',\n        priority: 7,\n        conditions: {\n            cd4(cd4: number){\n                return cd4 <= 500\n            },\n            cd4Date: (date: string) => {\n                return new Date(date) <= new Date(\"2014-04-01\")\n            },\n            cd4Modifier(modifier: string){\n                return modifier === '<' || modifier === '='\n            },\n            stage(stage: number) {\n                return stage <= 2\n            }\n        }\n    },\n    \"Children over the date 2014-04-01 who are more than five years old and have cd4 count less than 500\": {\n        concept: 'CD4 COUNT LESS THAN OR EQUAL TO 500',\n        priority: 9,\n        conditions: {\n            cd4Date: (date: string) => {\n                return new Date(date) <= new Date(\"2014-04-01\")\n            },\n            age(age: number) {\n                return age > 5\n            },\n            cd4(cd4: number) {\n                return cd4 <= 500\n            },\n            cd4Modifier(modifier: string) {\n                return modifier === '<' || modifier === '='\n            }\n        }\n    },\n    \"Children over date 2014-04-01 and less than Five years old\": {\n        concept: 'HIV infected',\n        priority: 10,\n        conditions: {\n            date(date: string) {\n                return date >= '2014-04-01'\n            },\n            age(age: number) {\n                return age <= 5\n            }\n        }\n    },\n    'Women who are breast feeding': {\n        concept: 'BREASTFEEDING',\n        priority: 11,\n        conditions: {\n            gender(gender: string){\n                return gender === 'F'\n            },\n            breastFeeding(answer: string){\n                return  answer === 'Yes'\n            },\n            stage: (stage: number) => stage <= 2\n        }\n    },\n    'Women who are pregnant': {\n        concept: 'PATIENT PREGNANT',\n        priority: 12,\n        conditions: {\n            gender(gender: string) {\n                return gender === 'F'\n            },\n            pregnant(answer: string){\n                return answer === 'Yes'\n            },\n            stage(stage: number) {\n                return stage <= 2\n            },\n        }\n    },\n    \"Asymptomatic patient with either stage one or stage two conditions\": {\n        concept: 'Asymptomatic',\n        priority: 13,\n        conditions: {\n            stage: (stage: number) => stage <= 2\n        }\n    }\n}\n\nexport const ADULT_ART_ELIGIBILITY: Record<string, GuideLineInterface> = {\n    'Has stage 4 conditions': {\n        concept: 'WHO STAGE IV ADULT',\n        priority: 1,\n        conditions: {\n            stage: (stage: number) => stage === 4\n        }\n    },\n    'Has HIV wasting syndrome identified in stage 3': {\n        concept: 'WHO STAGE IV ADULT',\n        priority: 2,\n        conditions: {\n            selectedConditions: (conditions: Array<string>) => {\n                const severeSymp = ConceptService.getConceptsByCategory('severe_hiv_wasting_syndrome')\n                const found = severeSymp.reduce((total, symp) => conditions.includes(symp.name) ? total + 1 : 0, 0)\n                return found >= 2\n            }\n        }\n    },\n    'Has stage 3 conditions': {\n        concept: 'WHO STAGE III ADULT',\n        priority: 3,\n        conditions: {\n            stage: (stage: number) => stage === 3,\n        }\n    },\n    'CD4 less than 350 for adults before 2014': {\n        concept: 'cd4 less than or equal to 350',\n        priority: 4,\n        conditions: {\n            cd4Date: (date: string) => {\n                return new Date(date) <= new Date(\"2014-04-01\")\n            },\n            cd4(cd4: number) {\n                return cd4 <= 350\n            },\n            cd4Modifier(modifier: string) {\n                return modifier === '<' || modifier === '='\n            }\n        }\n    },\n    'CD4 less than 250 for adults after 2014': {\n        concept: 'cd4 less than or equal to 250',\n        priority: 4,\n        conditions: {\n            cd4Date: (date: string) => {\n                return new Date(date) <= new Date(\"2014-04-01\")\n            },\n            cd4(cd4: number) {\n                return cd4 <= 250\n            },\n            cd4Modifier(modifier: string) {\n                return modifier === '<' || modifier === '='\n            }\n        }\n    },\n    'CD4 less than 350 for adults after 2014': {\n        concept: 'cd4 less than or equal to 350',\n        priority: 5,\n        conditions: {\n            cd4Date: (date: string) => {\n                return new Date(date) <= new Date(\"2014-04-01\")\n            },\n            cd4(cd4: number) {\n                return cd4 <= 350\n            },\n            cd4Modifier(modifier: string) {\n                return modifier === '<' || modifier === '='\n            }\n        }\n    },\n    'CD4 less than 500 for adults after 2014': {\n        concept: 'cd4 less than or equal to 500',\n        priority: 6,\n        conditions: {\n            cd4Date: (date: string) => {\n                return new Date(date) <= new Date(\"2014-04-01\")\n            },\n            cd4(cd4: number){\n                return cd4 <= 500\n            },\n            cd4Modifier(modifier: string) {\n                return modifier === '<' || modifier === '='\n            }\n        }\n    },\n    'Women who are breast feeding': {\n        concept: 'BREASTFEEDING',\n        priority: 8,\n        conditions: {\n            gender(gender: string){\n                return gender === 'F'\n            },\n            breastFeeding(answer: string){\n                return  answer === 'Yes'\n            },\n            stage: (stage: number) => stage <= 2\n        }\n    },\n    'Women who are pregnant': {\n        concept: 'PATIENT PREGNANT',\n        priority: 7,\n        conditions: {\n            gender(gender: string) {\n                return gender === 'F'\n            },\n            pregnant(answer: string){\n                return answer === 'Yes'\n            },\n            stage(stage: number) {\n                return stage <= 2\n            },\n        }\n    },\n    \"Asymptomatic patient with either stage one or stage two conditions\": {\n        concept: 'Asymptomatic',\n        priority: 9,\n        conditions: {\n            stage: (stage: number) => stage <= 2,\n        }\n    }\n}\n","import { AppEncounterService } from \"@/services/app_encounter_service\"\nimport { LocationService } from \"@/services/location_service\"\nimport {\n    RECOMMENDED_ADULT_STAGING_CONDITIONS,\n    CHILD_ART_ELIGIBILITY,\n    ADULT_ART_ELIGIBILITY,\n    ADULT_WHO_STAGE_CRITERIA,\n    CHILD_WHO_STAGE_CRITERIA,\n    CONTRADICTING_STAGE_DEFINITIONS_ALERTS,\n    RECOMMENDED_CHILD_STAGING_CONDITIONS,\n    CD4_AS_START_REASON_CUTOFF_DATE\n} from \"@/apps/ART/guidelines/staging_guidelines\"\n\n/**\n * Enable for filtering staging categories in ConceptName Dictionary\n */\nenum StagingCategory {\n    ADULT_STAGE_4 = 'stage_4_conditions_adults',\n    ADULT_STAGE_3 = 'stage_3_conditions_adults',\n    ADULT_STAGE_2 = 'stage_2_conditions_adults',\n    ADULT_STAGE_1 = 'stage_1_conditions_adults',\n    PEDAID_STAGE_4 = 'stage_4_conditions_pedaids',\n    PEDAID_STAGE_3 = 'stage_3_conditions_pedaids',\n    PEDAID_STAGE_2 = 'stage_2_conditions_pedaids',\n    PEDAID_STAGE_1 = 'stage_1_conditions_pedaids'\n}\n\nexport class StagingService extends AppEncounterService {\n    age: number\n    confirmatoryTest: string | null;\n    constructor(patientID: number, age: number, providerID: number) {\n        super(patientID, 52, providerID) //TODO: Use encounter type reference name\n        this.age = age\n        this.confirmatoryTest = null\n    }\n\n    isAdult() { return this.age >= 15 }\n\n    isPedaid() { return this.age <= 14 }\n\n    setAge(age: number) {\n        this.age = age\n    }\n\n    getFacilities (filter='') { return LocationService.getFacilities({name: filter}) }\n    \n    getConfirmatoryTestType() { return this.confirmatoryTest }\n\n    cd4CountIsValid(value: string) {\n        try {\n            return value.match(/^(=|<|>)([0-9]*)$/m) ? true : false\n        }catch(e) {\n            return false\n        }\n    }\n\n    getAlertGuidelines() {\n        return CONTRADICTING_STAGE_DEFINITIONS_ALERTS\n    }\n\n    getWhoStageGuidelines() {\n        return this.isAdult() ? ADULT_WHO_STAGE_CRITERIA : CHILD_WHO_STAGE_CRITERIA\n    }\n\n    getProgramEligibilityGuidelines() {\n        return this.isAdult() ? ADULT_ART_ELIGIBILITY: CHILD_ART_ELIGIBILITY\n    }\n\n    getRecommendedConditionGuidelines() {\n        return this.isAdult() ? RECOMMENDED_ADULT_STAGING_CONDITIONS: RECOMMENDED_CHILD_STAGING_CONDITIONS\n    }\n\n    getStagingConditions(stage: number) {\n        const category = this.getStagingCategoryByNum(stage)\n        return AppEncounterService.getConceptsByCategory(category)\n    }\n\n    getAllWhoStages() {\n        return AppEncounterService.getConceptsByCategory('whole_staging_numbers')\n    }\n\n    getAllReasonsForART(registrationDate = this.date) {\n        const reasons = AppEncounterService.getConceptsByCategory('reason_for_art')\n        if(new Date(registrationDate) < new Date(CD4_AS_START_REASON_CUTOFF_DATE)) return reasons\n        return reasons.filter(reason => !reason.name.match(/cd4/i))\n    }\n\n    buildWhoStageObs(stage: string) {\n        return this.buildValueCoded('Who stage', stage)\n    }\n    \n    buildWhoCriteriaObs(condition: string) {\n        return this.buildValueCoded('Who stages criteria present', condition)\n    }\n\n    buildReasonForArtObs(reason: string) {\n        return this.buildValueCoded('Reason for ART eligibility', reason)\n    }\n\n    private getStagingCategoryByNum(stageNumber: number) {\n        switch(stageNumber) {\n            case 1:\n                return this.isAdult() ? StagingCategory.ADULT_STAGE_1 : StagingCategory.PEDAID_STAGE_1\n            case 2:\n                return this.isAdult() ? StagingCategory.ADULT_STAGE_2 : StagingCategory.PEDAID_STAGE_2\n            case 3:\n                return this.isAdult() ? StagingCategory.ADULT_STAGE_3 : StagingCategory.PEDAID_STAGE_3\n            case 4:\n                return this.isAdult() ? StagingCategory.ADULT_STAGE_4 : StagingCategory.PEDAID_STAGE_4\n            default: \n                return ''\n        }\n    }\n\n    async loadHivConfirmatoryTestType() {\n        const test = await AppEncounterService.getFirstValueCoded(\n            this.patientID, 'Confirmatory hiv test type'\n        )\n        if (test) this.confirmatoryTest = test\n    }\n}\n","import { loadingController } from \"@ionic/vue\";\n\nexport const loader = {\n  /**\n   * show loading spinner\n   * \n   * @param message message to display while loading. default is 'Loading...'\n   * @returns {Promise<void>}\n   */\n  async show(message?: string): Promise<void> {\n    return (await loadingController.create({\n      message: message || \"Loading...\",\n      spinner: 'crescent',\n      translucent: true\n    })).present();\n  },\n\n  /**\n   * hide loading spinner\n   * \n   * @returns {Promise<boolean>}\n   * */\n  async hide(): Promise<void> {\n    loadingController.getTop().then(v => v ? loadingController.dismiss() : null);\n  }\n}\n","import { AppEncounterService } from \"@/services/app_encounter_service\";\nimport { isArray } from \"lodash\";\nimport { Option } from '@/components/Forms/FieldInterface';\nexport class VitalsService extends AppEncounterService{\n  constructor(patientID: number, providerID: number) {\n    super(patientID, 6, providerID);\n  }\n  isNotEmptyandNumber(vital: Option) {\n    return `${vital.value}`.match(/^-?\\d+\\.?\\d*$/) ? null : [`Invalid entry for ${vital.label}`]\n  }\n  isNotEmptyandFloat(vital: Option) {\n    return `${vital.value}`.match(/^\\d{1,3}\\.\\d{1,5}$/) \n      ? null \n      : [`Invalid entry for ${vital.label}. Don't forget to add a decimal. e.g. 56.2 ${vital.other?.modifier || ''}`]\n  }\n  checkMinMax(val: Option, min: number, max: number) {\n    const p = [];\n    if (parseFloat(`${val.value}`) < min) {\n      p.push([`${val.label} entered is less than minimum ${min} ${val?.other?.modifier || ''}`])\n    }\n    if (parseFloat(`${val.value}`) > max) {\n      p.push([`${val.label} entered is greater than maximum ${max} ${val?.other?.modifier || ''}`])\n    }\n    return p.length > 0 ? p : null;\n  }\n  validateAll(vitals: Option[]) {\n    const p: any = [];\n    vitals.map((vital: any) => {\n      const j = this.validator(vital);\n      return isArray(j) ? p.push(j) : null\n    })\n    return p.length > 0 ? p : null;\n  }\n\n  mergeErrors(errors: any[]) {\n    const holder: any = [];\n    errors.forEach(element => {\n      if (isArray(element)) {\n        holder.push(element)\n      }\n    });\n    return holder.length > 0 ? holder : null\n  }\n  isValidBPReading(vital: any) {\n    const p = [];\n    const isValidBP =  `${vital.value}`.match(/^\\d{1,3}\\/\\d{1,3}$/g) ? null : ['Invalid BP reading']\n    p.push(isValidBP);\n    if(isValidBP == null) {\n      const value = `${vital.value}`.split('/');\n      \n      const bpSystolic = {\n        label: 'Systolic',\n        value: value[0]\n      };\n      const bpDiastolic = {\n        label: 'Diastolic',\n        value: value[1]\n      };\n      p.push(this.checkMinMax(bpDiastolic, 30, 200))\n      p.push(this.checkMinMax(bpSystolic, 40, 250))\n    }\n    return this.mergeErrors(p)\n  }\n  validator(vital: Option) {\n    const values = [\n      {\n        name: \"Weight\",\n        validator: (val: Option) => {\n          const emptyErrors = this.isNotEmptyandFloat(val);\n          const minErrors = this.checkMinMax(val, 2.0, 250.0);\n          return this.mergeErrors([emptyErrors, minErrors]); \n        },\n      },\n      {\n        name: \"Height\",\n        validator: (val: Option) => {\n          const errors = []\n          errors.push(this.isNotEmptyandNumber(val))\n          errors.push(this.checkMinMax(val, 40, 220))\n          return this.mergeErrors(errors); \n        },\n      }, {\n        name: \"BP\",\n        validator: (val: any) => {\n          return this.isValidBPReading(val)\n        },\n      }, {\n        name: \"Temp\",\n        validator: (val: any) => {\n          const emptyErrors = this.isNotEmptyandNumber(val);\n          const minErrors = this.checkMinMax(val, 30, 42);\n          return this.mergeErrors([emptyErrors, minErrors]); \n        },\n      }, {\n        name: \"SP02\",\n        validator: (val: any) => {\n          const minErrors = this.checkMinMax(val, 40, 100);\n          return this.mergeErrors([minErrors]); \n        },\n      }, {\n        name: \"Pulse\",\n        validator: (val: any) => {\n          const minErrors = this.checkMinMax(val, 50, 120);\n          return this.mergeErrors([minErrors]); \n        },\n      }\n    ]\n    const v = values.filter(element => {\n      return element.name === vital.label;\n    });\n    if (v.length > 0) {\n      return v[0].validator(vital);\n    }\n    return null\n  }\n}","export enum EmcEvents {\n  RELOAD_PATIENT_DATA = 'reload_patient_data',\n  RELOAD_PATIENT_VISIT_DATA = 'reload_patient_visit_data',\n  RELOAD_GUARDIAN_DATA = 'reload_guardian_data',\n  RELOAD_LATEST_VL_RESULT = 'reload_latest_vl_result',\n  RELOAD_STAGING_INFORMATION = 'reload_staging_info',\n  ON_CLEAR = \"on_clear\",\n  ON_INITIAL_VISIT_DATE = \"on_initital_visit_date\"\n}"],"sourceRoot":""}