{"version":3,"sources":["webpack:///./src/apps/OPD/views/reports/clinic/DrugsGivenWithPrescription.vue?c33e","webpack:///./src/apps/OPD/views/reports/clinic/DrugsGivenWithPrescription.vue","webpack:///./src/apps/OPD/views/reports/clinic/DrugsGivenWithPrescription.vue?1043","webpack:///./src/apps/OPD/services/opd_report_service.ts"],"names":["render","_ctx","_cache","$props","$setup","$data","$options","_component_report_template","_resolveComponent","_component_ion_page","_openBlock","_createBlock","default","_withCtx","_createVNode","title","rows","fields","columns","period","onReportConfiguration","init","customBtns","_","defineComponent","components","ReportTemplate","IonPage","mixins","ReportMixin","data","reportData","highLevelStats","table","thTxt","created","this","getDateDurationFields","push","name","size","slot","color","visible","onClick","async","showModal","methods","config","reportService","OpdReportService","setStartDate","start_date","setEndDate","end_date","getDateIntervalPeriod","getDrugsGivenWithPrescription","buildRows","length","map","record","td","given_name","family_name","gender","HisDate","toStandardHisDisplayFormat","birthdate","drug_name","quantity","date","buildHighlevelView","counter","asyncRows","drug","label","value","drilldownData","result","reduce","r","e","Object","keys","d","__exports__","LA_TYPES","one","two","three","four","NCD_TYPES","MENTAL_HEALTH_DIAGNOSIS","Service","constructor","super","endDate","startDate","epiweek","getSessionDate","programID","getProgramID","getPatientsWithNIDs","getReport","getClinicRegistrations","getAttendance","getDrugsGivenWithoutPrescription","getDiagnosis","url","getJson","getDiagnosisByAddress","getLaPrescriptions","getMalariaReport","printLaReport","printService","PrintoutService","params","forEach","v","i","printLbl","Url","parameterizeObjToString","setEpiWeek","getReportPeriod","buildRequest","payload","minDuration","quarters","year","getCurrentYear","start","end"],"mappings":"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","file":"js/chunk-67356a1a.4a621803.js","sourcesContent":["import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_report_template = _resolveComponent(\"report-template\")!\n  const _component_ion_page = _resolveComponent(\"ion-page\")!\n\n  return (_openBlock(), _createBlock(_component_ion_page, null, {\n    default: _withCtx(() => [\n      _createVNode(_component_report_template, {\n        title: _ctx.title,\n        rows: _ctx.rows,\n        fields: _ctx.fields,\n        columns: _ctx.columns,\n        period: _ctx.period,\n        onReportConfiguration: _ctx.init,\n        customBtns: _ctx.customBtns\n      }, null, 8, [\"title\", \"rows\", \"fields\", \"columns\", \"period\", \"onReportConfiguration\", \"customBtns\"])\n    ]),\n    _: 1\n  }))\n}","\nimport { defineComponent } from 'vue'\nimport { OpdReportService } from \"@/apps/OPD/services/opd_report_service\"\nimport ReportTemplate from \"@/views/reports/BaseTableReport.vue\"\nimport table, { ColumnInterface, RowInterface } from \"@/components/DataViews/tables/ReportDataTable\"\nimport HisDate from '@/utils/Date'\nimport ReportMixin from '@/apps/ART/views/reports/ReportMixin.vue'\nimport { IonPage } from \"@ionic/vue\";\n\nexport default defineComponent({\n  components: { ReportTemplate, IonPage },\n  mixins: [ReportMixin],\n  data: () => ({\n    title: 'OPD medication given (with prescription)',\n    rows: [] as RowInterface[][], \n    reportData: [] as any,\n    highLevelStats: [] as any,\n    columns: [[\n      table.thTxt('First Name'),\n      table.thTxt('Last Name'),\n      table.thTxt('Gender'),\n      table.thTxt('DOB'),\n      table.thTxt('Drug'),\n      table.thTxt('Quantity'),\n      table.thTxt('Date'),\n    ]] as ColumnInterface[][],\n    customBtns: [] as any\n  }),\n  created(){\n    this.fields = this.getDateDurationFields()\n    this.customBtns.push({\n      name: \"High level view\",\n      size: \"large\",\n      slot: \"start\",\n      color: \"primary\",\n      visible: true,\n      onClick: async () => await this.showModal()\n    })\n  },\n  methods: {\n    async init(_: any, config: any){\n      const reportService = new OpdReportService()\n      reportService.setStartDate(config.start_date)\n      reportService.setEndDate(config.end_date)\n      this.period = reportService.getDateIntervalPeriod()\n      this.reportData = await reportService.getDrugsGivenWithPrescription();\n      this.rows = this.buildRows(this.reportData)\n    },\n    buildRows(data: any[]): RowInterface[][] {\n      if(!data.length) return []\n      return data.map((record: any) => [\n        table.td(record.given_name),\n        table.td(record.family_name),\n        table.td(record.gender),\n        table.td(HisDate.toStandardHisDisplayFormat(record.birthdate)),\n        table.td(record.drug_name),\n        table.td(record.quantity),\n        table.td(HisDate.toStandardHisDisplayFormat(record.date)),\n      ])\n    },\n    async showModal() {\n      await this.buildHighlevelView();\n      const columns = [\n        [\n          table.thTxt('Number'),\n          table.thTxt('Drug Name'),\n          table.thTxt('Quantity')\n        ]\n      ]\n      let counter = 1;\n      const asyncRows = this.highLevelStats.map((drug: any) => ([\n                          table.td(counter++),\n                          table.td(drug.label),\n                          table.td(drug.value)\n                        ]))\n\n      await this.drilldownData(\"Durgs Given with prescription Report Summary\", columns, asyncRows, false)\n    },\n    async buildHighlevelView(){\n      const result = await this.reportData.reduce(function(r: any, e: any) {\n        if(!r[e.drug_name]) {\n          r[e.drug_name] = {label:e.drug_name,value:0}\n        }\n        r[e.drug_name].value += e.quantity\n        return r\n      }, {})\n      this.highLevelStats = Object.keys(result).map((d) => {return result[d]})\n    }\n  },\n})\n","import { render } from \"./DrugsGivenWithPrescription.vue?vue&type=template&id=325c741b&ts=true\"\nimport script from \"./DrugsGivenWithPrescription.vue?vue&type=script&lang=ts\"\nexport * from \"./DrugsGivenWithPrescription.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { Service } from \"@/services/service\";\nimport HisDate from \"@/utils/Date\"\nimport { PrintoutService } from '@/services/printout_service';\nimport Url from \"@/utils/Url\";\n\nexport interface QuarterInterface {\n    name: string;\n    start: string;\n    end: string;\n}\n\nexport const AGE_GROUPS = [\n    '0-5 months', '6-11 months',\n    '12-23 months', '2-4 years', \n    '5-9 years', '10-14 years', \n    '15-17 years', '18-19 years', \n    '20-24 years', '25-29 years', \n    '30-34 years', '35-39 years', \n    '40-44 years', '45-49 years', \n    '50 plus years'\n]\n\nexport const OTHER_AGE_GROUPS = [\n    '<1 year', '1-4 years',\n    '5-9 years', '10-14 years',\n    '15-19 years', '20-24 years',\n    '25-29 years', '30-34 years',\n    '35-39 years', '40-44 years',\n    '45-49 years', '50 plus years'\n]\n\nexport const LA_TYPES: Record<string, string> = {\n    one: 'AL 1', \n    two: 'AL 2', \n    three: 'AL 3', \n    four: 'LA 4'\n}\n\nexport const NCD_TYPES = [\n    'Diabetes',\n    'Hypertension',\n    'Stroke',\n    'Suspected cancer',\n    'Confirmed cancer',\n    'Palliative cancer',\n    'Asthma',\n    'Depression',\n    'Acute psychosis',\n    'Chronic psychosis',\n    'Epilepsy'\n]\n\nexport const MENTAL_HEALTH_DIAGNOSIS = [\n    'Organic mental disorder (Chronic)',\n    'Organic mental disorder (acute)',\n    'Alcohol use mental disorder',\n    'Drug use mental disorder',\n    'Schizophrenia',\n    'Acute and transient psychotic disorder',\n    'Schizo-affective disorder',\n    'Mood-affective disorder (MANIC)',\n    'Mood-affective disorder (BIPOLAR)',\n    'Mood-affective disorder (DEPRESSION)',\n    'Anxiety disorder',\n    'Stress reaction adjustment disorder',\n    'Dissociative conversion disorder',\n    'Somatoform disorder',\n    'Puerperal mental disorder',\n    'Personality/Behaviour disorder',\n    'Mental retardation',\n    'Psychological mental disorder',\n    'Hyperkinetic conduct disorder',\n    'Epilepsy'\n]\n\nexport class OpdReportService extends Service {\n    programID: number;\n    startDate: string;\n    endDate: string;\n    date: string;\n    epiweek: string;\n    constructor() {\n        super()\n        this.endDate = ''\n        this.startDate = ''\n        this.epiweek = ''\n        this.date = Service.getSessionDate()\n        this.programID = Service.getProgramID()\n    }\n\n    getPatientsWithNIDs() {\n        return this.getReport('with_nids')\n    }\n\n    getClinicRegistrations(){\n        return this.getReport('registration');\n    }\n\n    getAttendance(){\n        return this.getReport(`programs/${this.programID}/reports/attendance`)\n    }\n\n    getDrugsGivenWithoutPrescription() {\n        return this.getReport('drugs_given_without_prescription')\n    }\n\n    getDrugsGivenWithPrescription() {\n        return this.getReport('drugs_given_with_prescription')\n    }\n\n    getDiagnosis(){\n        const url = `programs/${this.programID}/reports/diagnosis`\n        return Service.getJson(url, {\n            'start_date': this.startDate,\n            'end_date': this.endDate,\n            'date': this.date\n        })\n    }\n\n    getDiagnosisByAddress(){\n        return this.getReport('diagnosis_by_address')\n    }\n\n    getLaPrescriptions(){\n        const url = `programs/${this.programID}/reports/la_prescriptions`\n        return Service.getJson(url, {\n            'start_date': this.startDate,\n            'end_date': this.endDate,\n            \n        })\n    }\n\n    getMalariaReport(){\n        const url = `programs/${this.programID}/reports/malaria_report`\n        return Service.getJson(url, {\n            'start_date': this.startDate,\n            'end_date': this.endDate,\n            'date': this.date\n        })\n    }\n    \n    printLaReport(data: Record<string, any>){\n        const printService = new PrintoutService()\n        const url = `programs/${this.programID}/barcodes/la_report`\n        const params: Record<string, any> = {\n            \"date[start]\": this.startDate,\n            \"date[end]\": this.endDate\n        }\n        Object.keys(LA_TYPES).forEach((v, i) => {\n            i++\n            params[`${i}[prescription]`] = data[`total_la_${v}_prescribed_drugs`]\n            params[`${i}[dispensed]`] = data[`total_la_${v}_dispensed_drugs`]\n        })\n        return printService.printLbl(`${url}?${Url.parameterizeObjToString(params)}`)\n    }\n\n    getDateIntervalPeriod() {\n        return `${HisDate.toStandardHisDisplayFormat(this.startDate)} - ${HisDate.toStandardHisDisplayFormat(this.endDate)}`\n    }\n\n    setStartDate(startDate: string) {\n        this.startDate = startDate\n    }  \n\n    setEndDate(endDate: string) {\n        this.endDate = endDate\n    }\n\n    setEpiWeek(epiweek: string) {\n        this.epiweek = epiweek\n    }\n\n    getReportPeriod() {\n        return this.startDate && this.endDate\n         ? `${HisDate.toStandardHisDisplayFormat(this.startDate)} - ${HisDate.toStandardHisDisplayFormat(this.endDate)}`\n         : '-'\n    }\n\n    getReport(url: string, params={}) {\n        return Service.getJson(url, this.buildRequest(params))\n    }\n\n    buildRequest(config: Record<string, any> = {}) {\n        const payload: any = {'date': this.date, 'program_id': this.programID}\n        if (this.startDate && this.endDate) {\n            payload['start_date'] = this.startDate\n            payload['end_date'] = this.endDate\n        }\n        if (this.epiweek) {\n            payload['epiweek'] = this.epiweek\n        }\n        return { ...payload, ...config }\n    }\n\n    static getReportQuarters(minDuration= 4) {\n        const quarters: Array<QuarterInterface> = []\n        let year = HisDate.getCurrentYear()\n        for(let i=0; i < minDuration; ++i) {\n            quarters.push({ name: `Q4 ${year}`, start: `${year}-10-01`, end: `${year}-12-31` })\n            quarters.push({ name: `Q3 ${year}`, start: `${year}-07-01`, end: `${year}-09-30` })\n            quarters.push({ name: `Q2 ${year}`, start: `${year}-04-01`, end: `${year}-06-30` })\n            quarters.push({ name: `Q1 ${year}`, start: `${year}-01-01`, end: `${year}-03-31` })\n            --year\n        }\n        return quarters\n    }\n\n}"],"sourceRoot":""}