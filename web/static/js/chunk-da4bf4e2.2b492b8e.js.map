{"version":3,"sources":["webpack:///./src/apps/ART/Components/ReportErrors.vue?b184","webpack:///./src/apps/ART/services/reports/lab_report_service.ts","webpack:///./src/apps/ART/views/reports/ReportMixin.vue","webpack:///./src/apps/ART/views/reports/ReportMixin.vue?5c96","webpack:///./src/apps/ART/views/reports/TableReportTemplate.vue?b609","webpack:///./src/apps/ART/Components/ReportErrors.vue?b749","webpack:///./src/apps/ART/Components/ReportErrors.vue","webpack:///./src/apps/ART/Components/ReportErrors.vue?bb12","webpack:///./src/apps/ART/views/reports/TableReportTemplate.vue","webpack:///./src/apps/ART/views/reports/TableReportTemplate.vue?7fcc","webpack:///./src/apps/ART/views/reports/TableReportTemplate.vue?cff6","webpack:///./src/components/Forms/HisStandardForm.vue?8e31","webpack:///./src/components/Forms/HisStandardForm.vue","webpack:///./src/components/Forms/HisStandardForm.vue?5176","webpack:///./src/apps/LOS/views/Reports/TestResultsReport.vue?bc4f","webpack:///./src/apps/LOS/views/Reports/TestResultsReport.vue","webpack:///./src/apps/LOS/views/Reports/TestResultsReport.vue?2712"],"names":["LabReportService","ArtReportService","constructor","super","this","programID","getSamplesDrawnReport","getReport","getLabResultsReport","defineComponent","data","fields","report","reportReady","period","startDate","endDate","customFileName","drillDownCache","methods","formatGender","gender","upCaseGender","toUpperCase","test","toDate","date","HisDate","toStandardHisDisplayFormat","sortByArvNumber","attr","sort","a","b","getArvInt","e","console","error","arv","prfx","art","arvNumStr","split","arvNumInt","parseInt","tdARV","params","table","td","sortValue","confirmPatient","patient","$router","push","title","columns","asyncRows","canExport","modal","modalController","create","component","DrilldownTable","cssClass","componentProps","showFilters","rowsPerPage","paginated","showReportStamp","footerColor","onFinish","dismiss","present","rows","rowParser","getDefaultDrillDownTable","thTxt","async","ARV_NUM_INDEX","t","tableRows","map","id","index","isArray","defaultRow","num","key","oldIndex","rest","Patientservice","findByID","row","getArvNumber","getGender","tdDate","getBirthdate","toString","tdBtn","path","Promise","all","runTableDrill","drilldownData","drill","values","length","tdLink","getQuaterOptions","quarters","getReportQuarters","q","label","name","value","start","other","getDateDurationFields","useQuarter","setCustomQuarterPeriod","maxQuarter","maxDate","Service","getSessionDate","minDate","helpText","type","FieldType","TT_SELECT","condition","validation","val","Validation","required","options","items","generateDateFields","f","quarter","estimation","allowUnknown","computeValue","unload","d","s","c","end_date","_","start_date","__exports__","_hoisted_1","_hoisted_2","class","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","render","_ctx","_cache","$props","$setup","$data","$options","_component_his_standard_form","_resolveComponent","_component_ion_title","_component_ion_img","_component_ion_thumbnail","_component_ion_chip","_component_ion_label","_component_ion_item","_component_ion_toolbar","_component_ion_header","_component_report_table","_component_ion_content","_component_ion_footer","_component_his_footer","_component_ion_page","_openBlock","_createElementBlock","_Fragment","_withDirectives","_createVNode","onOnFinish","skipSummary","_vShow","canShowReport","_createBlock","default","_withCtx","showtitleOnly","_createElementVNode","innerHTML","_createCommentVNode","slot","src","logo","_createTextVNode","_toDisplayString","_renderList","headerInfoList","info","_info$other","_info$other2","onclick","href","onClick","_withModifiers","$event","showValidationStatus","hasErrors","showErrors","color","errorCount","config","tableCssTheme","onOnActiveColumns","onActiveColumns","onOnActiveRows","onActiveRows","coreVersion","apiVersion","btns","_component_ion_list","_component_ion_grid","_component_ion_button","errors","size","closeModal","components","IonGrid","IonList","IonItem","IonFooter","IonButton","IonToolbar","IonHeader","IonTitle","props","String","Array","HisStandardForm","ReportTable","HisFooter","IonPage","IonContent","IonChip","IonLabel","IonThumbnail","IonImg","encryptPDF","Boolean","validationErrors","Object","reportPrefix","reportLogo","customBtns","hasServerSideCaching","canExportPDf","canExportCsv","enabledPDFHorizontalPageBreak","onFinishBtnAction","Function","onReportConfiguration","onDefaultConfiguration","formData","computeFormData","activeColumns","activeRows","isLoadingData","siteUUID","getSiteUUID","getApiVersion","getCoreVersion","artVersion","getAppVersion","watch","handler","isEmpty","deep","immediate","forEach","visible","computed","match","Img","ReportErrors","backdropDismiss","pdfEncryptionData","password","getUserName","encryption","userPassword","ownerPassword","userPermissions","refreshTimeStamp","dayjs","format","getFileName","getLocationName","removeTags","presentLoading","loadingController","toastDanger","computedData","shouldRebuildCache","onLoadDefault","loading","message","created","toExportableFormat","toCsv","mode","option","infoActionSheet","toTablePDF","alertConfirmation","header","reloadReport","_resolveDynamicComponent","formType","activeField","cancelDestinationPath","onFinishAction","onOnIndex","onIndex","TouchScreenForm","emits","$emit","i","_component_report_template","onPeriod","mixins","ReportMixin","ReportTemplate","cohort","reportType","patientLevelColumns","disaggregatedColumns","getFormFields","tests","getDateIntervalPeriod","setDisaggregatedRows","setPatientLevelRows","TT_MULTIPLE_SELECT","x","setStartDate","setEndDate","availableTests","buildAvailableTests","buildAvailableTestOptions","results","result","measures","measure","patient_id","arv_number","ageGroup","age_group","birthdate","ordered","order_date","specimen","modifier","released","result_date","males","females","concat","ageGroupIndex","AGE_GROUPS","group","maleRow","femaleRow","filterByGender","filter"],"mappings":"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","file":"js/chunk-da4bf4e2.2b492b8e.js","sourcesContent":["export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./ReportErrors.vue?vue&type=style&index=0&id=0ed0c7a2&scoped=true&lang=css\"","import { ArtReportService } from \"./art_report_service\";\n\nexport class LabReportService extends ArtReportService {\n    constructor() {\n        super()\n        this.programID = 23\n    }\n    \n    getSamplesDrawnReport() {\n        return this.getReport('samples_drawn')\n    }\n    getLabResultsReport() {\n        return this.getReport(`lab_test_results`)\n    }\n}\n","\nimport { Service } from \"@/services/service\"\nimport { defineComponent } from 'vue'\nimport { Field } from '@/components/Forms/FieldInterface'\nimport { generateDateFields } from \"@/utils/HisFormHelpers/MultiFieldDateHelper\"\nimport { Patientservice } from \"@/services/patient_service\"\nimport HisDate from \"@/utils/Date\"\nimport { modalController } from \"@ionic/vue\";\nimport DrilldownTable from \"@/apps/ART/views/reports/BasicReportTemplate.vue\"\nimport { ArtReportService } from \"@/apps/ART/services/reports/art_report_service\"\nimport { FieldType } from \"@/components/Forms/BaseFormElements\"\nimport { Option } from '@/components/Forms/FieldInterface'\nimport Validation from \"@/components/Forms/validations/StandardValidations\"\nimport table from \"@/components/DataViews/tables/ReportDataTable\"\nimport { isArray } from \"lodash\"\nimport { toGenderString } from \"@/utils/Strs\"\n\nexport default defineComponent({\n    data: () => ({\n        fields: [] as Array<Field>,\n        report: {} as any,\n        reportReady: false as boolean,\n        period: '' as string,\n        startDate: '' as string,\n        endDate: '' as string,\n        customFileName: '' as string,\n        drillDownCache: {} as Record<number, Array<any>>\n    }),\n    methods: {\n        formatGender(gender: string) {\n            const upCaseGender = `${gender}`.toUpperCase()\n            if (upCaseGender === 'M' || upCaseGender === 'MALE') {\n                return 'Male'\n            }\n            if (upCaseGender === 'F' || upCaseGender === 'FEMALE') {\n                return 'Female'\n            }\n            if (/fbf|fnp|fp/i.test(gender)) {\n                return upCaseGender\n            }\n            return gender\n        },\n        toDate(date: string) {\n            return HisDate.toStandardHisDisplayFormat(date)\n        },\n        sortByArvNumber(data: Array<any>, attr='arv_number') {\n            try {\n                return data.sort((a: any, b: any) => this.getArvInt(a[attr]) > this.getArvInt(b[attr]) ? 1 : -1)\n            } catch(e) {\n                console.error(e)\n                return data\n            }\n        },\n        getArvInt(arv: string) {\n            if (typeof arv === 'string') {\n                const [prfx, art, arvNumStr] = arv.split('-')\n                const arvNumInt = parseInt(arvNumStr)\n                return typeof arvNumInt === 'number' ? arvNumInt : 0 \n            }\n            return 0\n        },\n        tdARV(arv: string, params={}) {\n            return table.td(arv, { sortValue: this.getArvInt(arv), ...params})\n        },\n        confirmPatient(patient: number) {\n            return this.$router.push(`/patients/confirm?person_id=${patient}`)\n        },\n        async drilldownAsyncRows(title: string, columns: Array<any>, asyncRows: Function, canExport=true) {\n            const modal = await modalController.create({\n                component: DrilldownTable,\n                cssClass: 'large-modal',\n                componentProps: { \n                    title, \n                    columns, \n                    asyncRows,\n                    canExport,\n                    showFilters: true,\n                    rowsPerPage: 50,\n                    paginated: true,\n                    showReportStamp: false,\n                    footerColor: 'light',\n                    onFinish: () => modalController.dismiss()\n                }\n            })\n            modal.present()\n        },\n        async drilldownData(title: string, columns: Array<any>, rows: Array<any>, rowParser: any) {\n            const modal = await modalController.create({\n                component: DrilldownTable,\n                cssClass: 'large-modal',\n                componentProps: { \n                    title, \n                    columns, \n                    rows,\n                    rowParser,\n                    rowsPerPage: 50,\n                    showFilters: true,\n                    paginated: true,\n                    showReportStamp: false,\n                    footerColor: 'light',\n                    onFinish: () => modalController.dismiss()\n                }\n            })\n            modal.present()\n        },\n        getDefaultDrillDownTable() {\n            const columns = [\n                [\n                    table.thTxt('ARV number'), \n                    table.thTxt('Gender'),\n                    table.thTxt('Birth Date'), \n                    table.thTxt('Actions')\n                ]\n            ]\n            const rowParser = async (tableRows: Array<any[]>) => {\n                let ARV_NUM_INDEX = 0\n                const t = tableRows.map(async (defaultRow: Array<any>) => {\n                    let id: any = null\n                    let index: null | number = null\n                    if (isArray(defaultRow)) {\n                        const [num, key ] = defaultRow\n                        index = num\n                        if (key in this.drillDownCache) {\n                            const [oldIndex, ...rest] = this.drillDownCache[key]\n                            return [index, ...rest] // Assign new index number and maintain patient record\n                        }\n                    } else {\n                        id = defaultRow\n                        if (id in this.drillDownCache) {\n                            return this.drillDownCache[id]\n                        }\n                    }\n    \n                    const data = await Patientservice.findByID(id)\n                    const patient = new Patientservice(data)\n                    const row = []\n                    if (index) {\n                        ARV_NUM_INDEX = 1\n                        row.push(index)\n                    } \n                    row.push(this.tdARV(patient.getArvNumber()))\n                    row.push(table.td(this.formatGender(patient.getGender())))\n                    row.push(table.tdDate(patient.getBirthdate().toString()))\n                    row.push(table.tdBtn('Show', async () => {\n                        await modalController.dismiss({})\n                        this.$router.push({ path: `/patient/dashboard/${id}`})\n                    }))\n                    this.drillDownCache[id] = row\n                    return row\n                })\n                const rows = await Promise.all(t)\n                return rows.sort((a: any, b: any) => \n                        a[ARV_NUM_INDEX].sortValue > b[ARV_NUM_INDEX].sortValue \n                        ? 1 : -1)\n            }\n            return { rowParser, columns }\n        },\n        runTableDrill(data: any, title='Drilldown patients') {\n            const { columns, rowParser } = this.getDefaultDrillDownTable()\n            this.drilldownData(title, columns, data, rowParser)\n        },\n        drill(values: Array<number>, title='Drill table') {\n            if (values && values.length > 0) {\n                return table.tdLink(\n                    values.length, \n                    () => this.runTableDrill(values, title)\n                )\n            }\n            return table.td(0)\n        },\n        getQuaterOptions() {\n            const quarters = ArtReportService.getReportQuarters()\n            return quarters.map((q: any) => ({\n                label: q.name, value: q.start, other: q\n            }))\n        },\n        getDateDurationFields(\n            useQuarter=false, \n            setCustomQuarterPeriod=false, \n            maxQuarter=5, \n            maxDate=Service.getSessionDate() as string | null,\n        ): Array<Field> {\n            const minDate = '2000-01-01'\n            return [\n                {\n                    id: 'quarter',\n                    helpText: 'Select Quarter',\n                    type: FieldType.TT_SELECT,\n                    condition: () => useQuarter,\n                    validation: (val: Option) => Validation.required(val),\n                    options: () => {\n                        const quarters = ArtReportService.getReportQuarters(maxQuarter)\n                        let items: Array<Option> = quarters.map((q: any) => ({\n                            label: q.name,\n                            value: q.start,\n                            other: q\n                        }))\n                        if (setCustomQuarterPeriod) {\n                            items = [\n                                {\n                                    label: 'Set custom period',\n                                    value: 'custom_period',\n                                    other: {}\n                                },\n                                ...items\n                            ]\n                        }\n                        return items\n                    }\n                },\n                ...generateDateFields({\n                    id: 'start_date',\n                    helpText: 'Start',\n                    required: true,\n                    condition: (f: any) => f.quarter && f.quarter.value === 'custom_period' || !useQuarter,\n                    minDate: () => minDate,\n                    maxDate: () => maxDate,\n                    estimation: {\n                        allowUnknown: false\n                    },\n                    computeValue: (date: string) => date \n                }),\n                ...generateDateFields({\n                    id: 'end_date',\n                    helpText: 'End',\n                    required: true,\n                    condition: (f: any) => f.quarter && f.quarter.value === 'custom_period' || !useQuarter,\n                    unload: (d: any, s: any, f: any, c: any) => {\n                        if (s === 'next') {\n                            this.endDate = c.end_date\n                        }\n                    },\n                    minDate: (_: any, c: any) => c.start_date,\n                    maxDate: () => maxDate,\n                    estimation: {\n                        allowUnknown: false\n                    },\n                    computeValue: (date: string) => date\n                })\n            ]\n        }\n    }\n})\n","import script from \"./ReportMixin.vue?vue&type=script&lang=ts\"\nexport * from \"./ReportMixin.vue?vue&type=script&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { resolveComponent as _resolveComponent, vShow as _vShow, createVNode as _createVNode, withDirectives as _withDirectives, createElementVNode as _createElementVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, createElementBlock as _createElementBlock, withModifiers as _withModifiers, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-f22df5d8\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = [\"innerHTML\"]\nconst _hoisted_2 = { class: \"header-text-list\" }\nconst _hoisted_3 = [\"onClick\"]\nconst _hoisted_4 = { key: 1 }\nconst _hoisted_5 = [\"innerHTML\"]\nconst _hoisted_6 = { key: 0 }\nconst _hoisted_7 = { class: \"report-content\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_his_standard_form = _resolveComponent(\"his-standard-form\")!\n  const _component_ion_title = _resolveComponent(\"ion-title\")!\n  const _component_ion_img = _resolveComponent(\"ion-img\")!\n  const _component_ion_thumbnail = _resolveComponent(\"ion-thumbnail\")!\n  const _component_ion_chip = _resolveComponent(\"ion-chip\")!\n  const _component_ion_label = _resolveComponent(\"ion-label\")!\n  const _component_ion_item = _resolveComponent(\"ion-item\")!\n  const _component_ion_toolbar = _resolveComponent(\"ion-toolbar\")!\n  const _component_ion_header = _resolveComponent(\"ion-header\")!\n  const _component_report_table = _resolveComponent(\"report-table\")!\n  const _component_ion_content = _resolveComponent(\"ion-content\")!\n  const _component_ion_footer = _resolveComponent(\"ion-footer\")!\n  const _component_his_footer = _resolveComponent(\"his-footer\")!\n  const _component_ion_page = _resolveComponent(\"ion-page\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _withDirectives(_createVNode(_component_his_standard_form, {\n      onOnFinish: _ctx.onFinish,\n      skipSummary: true,\n      fields: _ctx.fields\n    }, null, 8, [\"onOnFinish\", \"fields\"]), [\n      [_vShow, !_ctx.canShowReport]\n    ]),\n    (_ctx.canShowReport)\n      ? (_openBlock(), _createBlock(_component_ion_page, { key: 0 }, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_header, null, {\n              default: _withCtx(() => [\n                _createVNode(_component_ion_toolbar, null, {\n                  default: _withCtx(() => [\n                    (_ctx.showtitleOnly)\n                      ? (_openBlock(), _createBlock(_component_ion_title, { key: 0 }, {\n                          default: _withCtx(() => [\n                            _createElementVNode(\"span\", { innerHTML: _ctx.title }, null, 8, _hoisted_1)\n                          ]),\n                          _: 1\n                        }))\n                      : _createCommentVNode(\"\", true),\n                    (!_ctx.showtitleOnly)\n                      ? (_openBlock(), _createBlock(_component_ion_item, { key: 1 }, {\n                          default: _withCtx(() => [\n                            _createVNode(_component_ion_thumbnail, { slot: \"start\" }, {\n                              default: _withCtx(() => [\n                                _createVNode(_component_ion_img, { src: _ctx.logo }, null, 8, [\"src\"])\n                              ]),\n                              _: 1\n                            }),\n                            _createVNode(_component_ion_label, null, {\n                              default: _withCtx(() => [\n                                _createElementVNode(\"ul\", _hoisted_2, [\n                                  _createElementVNode(\"li\", null, [\n                                    _createTextVNode(\"Title \"),\n                                    _createElementVNode(\"b\", null, _toDisplayString(_ctx.title), 1)\n                                  ]),\n                                  _createElementVNode(\"li\", null, [\n                                    _createTextVNode(\"Period \"),\n                                    _createElementVNode(\"b\", null, _toDisplayString(_ctx.period), 1)\n                                  ]),\n                                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.headerInfoList, (info, index) => {\n                                    return (_openBlock(), _createElementBlock(\"li\", { key: index }, [\n                                      _createTextVNode(_toDisplayString(info.label) + \" \", 1),\n                                      (info && info?.other?.onclick)\n                                        ? (_openBlock(), _createElementBlock(\"a\", {\n                                            key: 0,\n                                            href: \"#\",\n                                            onClick: _withModifiers(($event: any) => (info.other.onclick()), [\"prevent\"])\n                                          }, _toDisplayString(info.value), 9, _hoisted_3))\n                                        : _createCommentVNode(\"\", true),\n                                      (info && !info?.other?.onclick)\n                                        ? (_openBlock(), _createElementBlock(\"b\", _hoisted_4, [\n                                            _createElementVNode(\"span\", {\n                                              innerHTML: info.value\n                                            }, null, 8, _hoisted_5)\n                                          ]))\n                                        : _createCommentVNode(\"\", true)\n                                    ]))\n                                  }), 128)),\n                                  (_ctx.showValidationStatus)\n                                    ? (_openBlock(), _createElementBlock(\"li\", _hoisted_6, [\n                                        (_ctx.hasErrors)\n                                          ? (_openBlock(), _createBlock(_component_ion_chip, {\n                                              key: 0,\n                                              onClick: _ctx.showErrors,\n                                              color: \"danger\"\n                                            }, {\n                                              default: _withCtx(() => [\n                                                _createElementVNode(\"b\", null, _toDisplayString(_ctx.errorCount), 1),\n                                                _createTextVNode(\" Error(s) found. Click for more \")\n                                              ]),\n                                              _: 1\n                                            }, 8, [\"onClick\"]))\n                                          : _createCommentVNode(\"\", true),\n                                        (!_ctx.hasErrors)\n                                          ? (_openBlock(), _createBlock(_component_ion_chip, {\n                                              key: 1,\n                                              color: \"success\"\n                                            }, {\n                                              default: _withCtx(() => [\n                                                _createTextVNode(\" Report is Consistent \")\n                                              ]),\n                                              _: 1\n                                            }))\n                                          : _createCommentVNode(\"\", true)\n                                      ]))\n                                    : _createCommentVNode(\"\", true)\n                                ])\n                              ]),\n                              _: 1\n                            })\n                          ]),\n                          _: 1\n                        }))\n                      : _createCommentVNode(\"\", true)\n                  ]),\n                  _: 1\n                })\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_ion_content, null, {\n              default: _withCtx(() => [\n                _createElementVNode(\"div\", _hoisted_7, [\n                  _createVNode(_component_report_table, {\n                    rows: _ctx.rows,\n                    columns: _ctx.columns,\n                    showFilters: _ctx.showFilters,\n                    config: {\n            ..._ctx.config,\n            tableCssTheme: _ctx.tableCssTheme\n          },\n                    onOnActiveColumns: _ctx.onActiveColumns,\n                    onOnActiveRows: _ctx.onActiveRows\n                  }, null, 8, [\"rows\", \"columns\", \"showFilters\", \"config\", \"onOnActiveColumns\", \"onOnActiveRows\"])\n                ])\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_ion_footer, null, {\n              default: _withCtx(() => [\n                _createVNode(_component_ion_toolbar, null, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_ion_chip, { color: \"primary\" }, {\n                      default: _withCtx(() => [\n                        _createTextVNode(\"Date Created: \"),\n                        _createElementVNode(\"b\", null, _toDisplayString(_ctx.date), 1)\n                      ]),\n                      _: 1\n                    }),\n                    _createVNode(_component_ion_chip, { color: \"primary\" }, {\n                      default: _withCtx(() => [\n                        _createTextVNode(\"His-Core Version: \"),\n                        _createElementVNode(\"b\", null, _toDisplayString(_ctx.coreVersion), 1)\n                      ]),\n                      _: 1\n                    }),\n                    _createVNode(_component_ion_chip, { color: \"primary\" }, {\n                      default: _withCtx(() => [\n                        _createTextVNode(\"API Version: \"),\n                        _createElementVNode(\"b\", null, _toDisplayString(_ctx.apiVersion), 1)\n                      ]),\n                      _: 1\n                    })\n                  ]),\n                  _: 1\n                })\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_his_footer, { btns: _ctx.btns }, null, 8, [\"btns\"])\n          ]),\n          _: 1\n        }))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}","import { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-0ed0c7a2\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = [\"innerHTML\"]\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ion_title = _resolveComponent(\"ion-title\")!\n  const _component_ion_toolbar = _resolveComponent(\"ion-toolbar\")!\n  const _component_ion_header = _resolveComponent(\"ion-header\")!\n  const _component_ion_item = _resolveComponent(\"ion-item\")!\n  const _component_ion_list = _resolveComponent(\"ion-list\")!\n  const _component_ion_grid = _resolveComponent(\"ion-grid\")!\n  const _component_ion_button = _resolveComponent(\"ion-button\")!\n  const _component_ion_footer = _resolveComponent(\"ion-footer\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(_component_ion_header, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_title, null, {\n              default: _withCtx(() => [\n                _createTextVNode(_toDisplayString(_ctx.title), 1)\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_grid, { class: \"selector\" }, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_list, null, {\n          default: _withCtx(() => [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.errors, (error, index) => {\n              return (_openBlock(), _createBlock(_component_ion_item, {\n                class: \"his-md-text ion-padding\",\n                key: index\n              }, {\n                default: _withCtx(() => [\n                  _createElementVNode(\"span\", {\n                    innerHTML: `(${index + 1}) ${error}`\n                  }, null, 8, _hoisted_1)\n                ]),\n                _: 2\n              }, 1024))\n            }), 128))\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_footer, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_button, {\n              class: \"close-btn\",\n              color: \"danger\",\n              size: \"large\",\n              onClick: _ctx.closeModal,\n              slot: \"end\"\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\" Close \")\n              ]),\n              _: 1\n            }, 8, [\"onClick\"])\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    })\n  ], 64))\n}","\nimport { defineComponent } from \"vue\";\nimport {\n  IonList,\n  IonItem,\n  IonButton,\n  IonGrid,\n  IonFooter,\n  IonToolbar,\n  IonHeader,\n  IonTitle,\n  modalController \n} from \"@ionic/vue\"; \n\nexport default defineComponent({\n  components: { \n    IonGrid, \n    IonList,\n    IonItem, \n    IonFooter,\n    IonButton,\n    IonToolbar,\n    IonHeader,\n    IonTitle,\n  },\n  props: {\n    title: {\n      type: String,\n      default: 'Report Errors'\n    },\n    errors: {\n      type: Array,\n      required: true\n    }\n  },\n  methods: {\n    async closeModal() {\n      await modalController.dismiss({})\n    }\n  }\n})\n","import { render } from \"./ReportErrors.vue?vue&type=template&id=0ed0c7a2&scoped=true&ts=true\"\nimport script from \"./ReportErrors.vue?vue&type=script&lang=ts\"\nexport * from \"./ReportErrors.vue?vue&type=script&lang=ts\"\n\nimport \"./ReportErrors.vue?vue&type=style&index=0&id=0ed0c7a2&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/daniel/projects/malawi-emr/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-0ed0c7a2\"]])\n\nexport default __exports__","\nimport { defineComponent, PropType } from \"vue\";\nimport HisFooter from \"@/components/HisDynamicNavFooter.vue\";\nimport ReportTable from \"@/components/DataViews/tables/ReportDataTable.vue\"\nimport { Field } from '@/components/Forms/FieldInterface'\nimport { toCsv, toTablePDF } from \"@/utils/Export\"\nimport { toExportableFormat, ColumnInterface, RowInterface} from \"@/components/DataViews/tables/ReportDataTable\" \nimport HisStandardForm from \"@/components/Forms/HisStandardForm.vue\";\nimport { \n  IonPage,\n  IonHeader,\n  IonContent,\n  IonFooter,\n  IonToolbar,\n  IonLabel,\n  IonThumbnail,\n  IonItem,\n  IonChip,\n  IonImg,\n  loadingController,\n  modalController\n} from \"@ionic/vue\"\nimport { alertConfirmation, toastDanger } from \"@/utils/Alerts\";\nimport Img from \"@/utils/Img\"\nimport { Service } from \"@/services/service\"\nimport dayjs from \"dayjs\";\nimport { isEmpty } from \"lodash\";\nimport ReportErrors from \"@/apps/ART/Components/ReportErrors.vue\"\nimport { EncryptionOptions } from \"jspdf\";\nimport { infoActionSheet } from \"@/utils/ActionSheets\";\nimport { removeTags } from \"@/utils/Strs\";\n\nexport default defineComponent({\n  components: { \n    HisStandardForm,   \n    IonHeader,\n    ReportTable, \n    HisFooter, \n    IonPage, \n    IonContent, \n    IonToolbar,\n    IonChip,\n    IonFooter,\n    IonLabel,\n    IonThumbnail,\n    IonItem,\n    IonImg\n  },\n  props: {\n    encryptPDF: {\n      type: Boolean,\n      default: false\n    },\n    showValidationStatus: {\n      type: Boolean,\n      default: false\n    },\n    validationErrors: {\n      type: Array,\n      default: () => []\n    },\n    config: {\n      type: Object\n    },\n    headerInfoList: {\n      type: Array,\n      default: () => []\n    },\n    reportPrefix: {\n      type: String,\n      default: 'HIS-Core'\n    },\n    reportLogo: {\n      type: String,\n    },\n    showtitleOnly: {\n      type: Boolean,\n      default: false\n    },\n    title: {\n      type: String,\n      required: true,\n    },\n    period: {\n      type: String\n    },\n    showFilters: {\n      type: Boolean,\n      default: false\n    },\n    fields: {\n      type: Object as PropType<Field[]>\n    },\n    columns: {\n      type: Object as PropType<Array<ColumnInterface[]>>,\n      required: true\n    },\n    rows: {\n      type: Object as PropType<Array<RowInterface[]>>,\n      required: true\n    },\n    customBtns: {\n      type: Array,\n      default: () => []\n    },\n    hasServerSideCaching: {\n      type: Boolean,\n      default: false\n    },\n    canExportPDf: {\n      type: Boolean,\n      default: true\n    },\n    canExportCsv: {\n      type: Boolean,\n      default: true\n    },\n    enabledPDFHorizontalPageBreak: {\n      type: Boolean,\n      default: false\n    },\n    onFinishBtnAction: {\n      type: Function\n    },\n    onReportConfiguration: {\n      type: Function,\n      required: true\n    },\n    onDefaultConfiguration: {\n      type: Function\n    },\n    customFileName: {\n      type: String,\n      default: ''\n    }\n  },\n  data: () => ({\n    date: '',\n    formData: {} as any,\n    btns: [] as Array<any>,\n    computeFormData: {} as any,\n    activeColumns: [] as any,\n    activeRows: [] as any,\n    isLoadingData: false as boolean,\n    canShowReport: false as boolean,\n    siteUUID: Service.getSiteUUID() as string,\n    apiVersion: Service.getApiVersion(),\n    coreVersion: Service.getCoreVersion(),\n    artVersion: Service.getAppVersion(),\n    tableCssTheme: 'art-report-theme'\n  }),\n  watch: {\n    validationErrors: {\n      handler(errors: string[]) {\n        if (!isEmpty(errors)) this.showErrors()\n      },\n      deep: true,\n      immediate: true\n    },\n    fields: {\n      handler(fields: Array<any>) {\n        if (!isEmpty(fields)) {\n          this.btns.forEach(b => {\n            if (b.name === 'Back') {\n              b.visible = true\n            } \n          })\n        }\n      },\n      immediate: true\n    }\n  },\n  computed: {\n    logo(): string {\n      if (!this.reportLogo && typeof this.reportPrefix === 'string') {\n        if (this.reportPrefix.match(/pepfar/i)) {\n          return Img('login-logos/PEPFAR.png')\n        }\n        if (this.reportPrefix.match(/moh/i)) {          \n          return Img('login-logos/Malawi-Coat_of_arms_of_arms.png')\n        }\n      }\n      return Img('reports.png')\n    },\n    hasErrors(): boolean {\n      return !isEmpty(this.validationErrors)\n    },\n    errorCount(): number {\n      return this.validationErrors ? this.validationErrors.length : 0\n    }\n  },\n  methods: {\n    async showErrors() {\n      const modal = await modalController.create({\n        component: ReportErrors,\n        backdropDismiss: false,\n        cssClass: \"large-modal\",\n        componentProps: {\n          errors: this.validationErrors\n        }\n      })\n      modal.present();\n    },\n    pdfEncryptionData(): Record<\"encryption\", EncryptionOptions> {\n      const password = Service.getUserName()\n      return {\n        encryption: {\n          userPassword: password,\n          ownerPassword: password,\n          userPermissions: [\"print\"]\n        }\n      }\n    },\n    refreshTimeStamp() {\n      this.date = dayjs().format('DD/MMM/YYYY HH:MM:ss')\n    },\n    onActiveColumns(columns: any) {\n      this.activeColumns = columns\n    },\n    onActiveRows(rows: any) {\n      this.activeRows = rows\n    },\n    getFileName() {\n      return this.customFileName || `${this.reportPrefix} ${Service.getLocationName()} ${removeTags(this.title)} ${this.period}`\n    },\n    /**\n     * Loads report without depending on Field configurations\n     */\n    async onLoadDefault() {\n      this.canShowReport = true\n      await this.presentLoading()\n      try {\n        this.refreshTimeStamp()\n        if (this.onDefaultConfiguration) {\n          await this.onDefaultConfiguration()\n        }\n        loadingController.dismiss()\n      }catch(e) {\n        toastDanger(`${e}`)\n        console.error(e)\n        loadingController.dismiss()\n      }\n    },\n    /**\n     * Callback is used when a form has been submitted with report configurations\n     */\n    async onFinish(formData: any, computedData: any, shouldRebuildCache=false) {\n      this.formData = formData\n      this.computeFormData = computedData\n      this.canShowReport = true\n      await this.presentLoading()\n      try {\n        this.refreshTimeStamp()\n        await this.onReportConfiguration(\n          this.formData,\n          this.computeFormData,\n          shouldRebuildCache\n        )\n        loadingController.dismiss()\n      }catch(e) {\n        toastDanger(`${e}`)\n        console.error(e)\n        loadingController.dismiss()\n      }\n    },\n    /**Reinitiate the report with default configurations */\n    async reloadReport(shouldRebuildCache=false) {\n      if (!isEmpty(this.formData) || !isEmpty(this.computeFormData)) {\n        await this.onFinish(this.formData, this.computeFormData, shouldRebuildCache)\n        return\n      }\n      if (this.onDefaultConfiguration) {\n        await this.onLoadDefault()\n      }\n    },\n    async presentLoading() {\n      const loading = await loadingController\n        .create({\n          message: 'Please wait...',\n          backdropDismiss: false\n        })\n      await loading.present()\n    }\n  },\n  created() {\n    if (this.onDefaultConfiguration) {\n      this.onLoadDefault()\n    } \n    this.btns = this.customBtns\n    this.btns.push({\n      name: \"CSV\",\n      size: \"large\",\n      slot: \"start\",\n      color: \"primary\",\n      visible: this.canExportCsv,\n      onClick: async () => {\n        const {columns, rows} = toExportableFormat(this.activeColumns, this.activeRows, 'csvMode')\n        toCsv(\n          columns, \n          [\n            ...rows,\n            [`Date Created: ${this.date}`],\n            [`Quarter: ${this.period}`],\n            [`HIS-Core Version: ${this.coreVersion}`],\n            [`API Version: ${this.apiVersion}`],\n            [`Site UUID: ${this.siteUUID}`],\n            [`Generated by: ${Service.getUserName()}`]\n          ],\n          this.getFileName()\n        )\n      }\n    })\n    this.btns.push({\n      name: \"PDF\",\n      size: \"large\",\n      slot: \"start\",\n      color: \"primary\",\n      visible: this.canExportPDf,\n      onClick: async () => {\n        let mode: 'pdfMode' | 'ignorePDFColumnexport' = 'pdfMode'\n        if (this.encryptPDF) {\n          const option = await infoActionSheet(\n            'Security warning',\n            'PDF may contain private data that will require a password to unlock',\n            'To access private data choose Secure PDF over Regular PDF',\n            [\n              { \n                name: \"Secure PDF\",\n                slot: \"start\",\n                color: \"success\"\n              },\n              { \n                name: \"Regular PDF\",\n                slot: \"start\",\n                color: \"success\"\n              }\n            ],\n            'his-danger-color'\n          )\n          mode = option === 'Secure PDF' ? 'pdfMode' : 'ignorePDFColumnexport'\n        }\n        const {columns, rows} = toExportableFormat(this.activeColumns, this.activeRows, mode)\n        toTablePDF(\n          columns, \n          rows, \n          this.getFileName(), \n          this.enabledPDFHorizontalPageBreak,\n          this.encryptPDF && mode !='ignorePDFColumnexport' ? this.pdfEncryptionData() : {}\n        )\n      }\n    })\n    this.btns.push({\n      name: \"Refresh/Rebuild\",\n      size: \"large\",\n      slot: \"end\",\n      color: \"warning\",\n      visible: true,\n      onClick: async () => {\n        let shouldRebuildCache = false\n        if (this.hasServerSideCaching) {\n          shouldRebuildCache = await alertConfirmation('Do you want to rebuild report cache?', { header: \"Rebuild Report\"})\n        }\n        this.reloadReport(shouldRebuildCache)\n      } \n    })\n    this.btns.push({\n      name: \"Back\",\n      size: \"large\",\n      slot: \"end\",\n      color: \"primary\",\n      visible: !isEmpty(this.fields),\n      onClick: () => this.canShowReport = false\n    })\n    this.btns.push({\n      name: \"Finish\",\n      size: \"large\",\n      slot: \"end\",\n      color: \"success\",\n      visible: true,\n      onClick: () => {\n        if (this.onFinishBtnAction) {\n          this.onFinishBtnAction()\n        } else {\n          this.$router.push({ path:'/' })   \n        }\n      }\n    })\n  }\n})\n","import { render } from \"./TableReportTemplate.vue?vue&type=template&id=f22df5d8&scoped=true&ts=true\"\nimport script from \"./TableReportTemplate.vue?vue&type=script&lang=ts\"\nexport * from \"./TableReportTemplate.vue?vue&type=script&lang=ts\"\n\nimport \"./TableReportTemplate.vue?vue&type=style&index=0&id=f22df5d8&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/daniel/projects/malawi-emr/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-f22df5d8\"]])\n\nexport default __exports__","export * from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./TableReportTemplate.vue?vue&type=style&index=0&id=f22df5d8&scoped=true&lang=css\"","import { resolveDynamicComponent as _resolveDynamicComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createBlock(_resolveDynamicComponent(_ctx.formType), {\n    fields: _ctx.fields,\n    skipSummary: _ctx.skipSummary,\n    activeField: _ctx.activeField,\n    cancelDestinationPath: _ctx.cancelDestinationPath,\n    onOnFinish: _ctx.onFinish,\n    onFinish: _ctx.onFinishAction,\n    onOnIndex: _ctx.onIndex\n  }, null, 40, [\"fields\", \"skipSummary\", \"activeField\", \"cancelDestinationPath\", \"onOnFinish\", \"onFinish\", \"onOnIndex\"]))\n}","\nimport TouchScreenForm from \"@/components/Forms/TouchScreenForm.vue\";\nimport { defineComponent, PropType } from \"vue\";\nimport { Field } from \"./FieldInterface\";\n\nexport default defineComponent({\n    name: \"HisStandardForm\",\n    components: { TouchScreenForm },\n    emits: [\n        'onFinish',\n        'onIndex'\n    ],\n    data: () => ({\n        formType: 'touch-screen-form' as string\n    }),\n    props: {\n        onFinishAction: {\n            type: Function\n        },\n        skipSummary: {\n            type: Boolean,\n            default: false\n        },\n        activeField: {\n            type: String\n        },\n        fields: {\n            type: Object as PropType<Field[]>,\n            required: true\n        },\n        cancelDestinationPath: {\n            type: String,\n            required: false,\n        }\n    },\n    methods: {\n        onFinish(formData: any, computedData: any) {\n            this.$emit('onFinish', formData, computedData)\n        },\n        onIndex(i: number) {\n            this.$emit('onIndex', i)\n        }\n    }\n})\n","import { render } from \"./HisStandardForm.vue?vue&type=template&id=6daa0375&ts=true\"\nimport script from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\nexport * from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/projects/malawi-emr/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_report_template = _resolveComponent(\"report-template\")!\n\n  return (_openBlock(), _createBlock(_component_report_template, {\n    title: _ctx.title,\n    period: _ctx.period,\n    rows: _ctx.rows,\n    fields: _ctx.fields,\n    columns: _ctx.columns,\n    canExportCsv: true,\n    canExportPDf: true,\n    reportReady: _ctx.reportReady,\n    onReportConfiguration: _ctx.onPeriod\n  }, null, 8, [\"title\", \"period\", \"rows\", \"fields\", \"columns\", \"reportReady\", \"onReportConfiguration\"]))\n}","\nimport { defineComponent } from 'vue'\nimport { LabReportService } from \"@/apps/ART/services/reports/lab_report_service\"\nimport ReportMixin from \"@/apps/ART/views/reports/ReportMixin.vue\"\nimport ReportTemplate from \"@/apps/ART/views/reports/TableReportTemplate.vue\"\nimport { AGE_GROUPS } from \"@/apps/ART/services/reports/patient_report_service\"\nimport { FieldType } from '@/components/Forms/BaseFormElements'\nimport { Field } from '@/components/Forms/FieldInterface'\nimport { Option } from '@/components/Forms/FieldInterface'\nimport table from \"@/components/DataViews/tables/ReportDataTable\"\n\nexport default defineComponent({\n    mixins: [ReportMixin],\n    components: { ReportTemplate },\n    data: () => ({\n        title: 'Lab test result(s)',\n        rows: [] as Array<any>,\n        cohort: [] as Array<any>,\n        reportType: '' as string,\n        reportReady: false as boolean,\n        columns: [] as Array<any>,\n        patientLevelColumns:[ \n            [\n                table.thTxt('ARV#'), \n                table.thTxt('Gender'), \n                table.thTxt('Birthdate'), \n                table.thTxt('Ordered'), \n                table.thTxt('Specimen'), \n                table.thTxt('Test'), \n                table.thTxt('Result'), \n                table.thTxt('Released')\n            ]\n        ],\n        disaggregatedColumns: [\n            table.thTxt('Age group'), \n            table.thTxt('Gender')\n        ]\n    }),\n    created() {\n        this.report = new LabReportService()\n        this.fields = this.getFormFields()\n    },\n    methods: {\n        async onPeriod({type, tests}: any) {\n            this.reportReady = true\n            this.rows = []\n            this.period = this.report.getDateIntervalPeriod()\n            this.reportType = type.value\n            if (this.reportType === 'disaggregated') {\n                this.setDisaggregatedRows(tests)\n            } else if (this.reportType === 'patient_level') {\n                this.setPatientLevelRows(tests)\n            }\n        },\n        getFormFields(): Array<Field> {\n            return [\n                ...this.getDateDurationFields(),\n                {\n                    id: 'tests',\n                    helpText: 'Available test(s) results',\n                    type: FieldType.TT_MULTIPLE_SELECT,\n                    options: async (_: any, x: any, config: any) => {\n                        this.report.setStartDate(config.start_date)\n                        this.report.setEndDate(config.end_date)\n                        const data = await this.report.getLabResultsReport()\n                        const availableTests = this.buildAvailableTests(data)\n                        return this.buildAvailableTestOptions(availableTests)\n                    } \n                },\n                {\n                    id: 'type',\n                    helpText: 'Select report type',\n                    type: FieldType.TT_SELECT,\n                    options: () => [\n                        {\n                            label: 'Disaggregated',\n                            value: 'disaggregated',\n                        },\n                        {\n                            label: 'Patient level',\n                            value: 'patient_level',\n                        }\n                    ]\n                }\n            ]\n        },\n        buildAvailableTests(results: any) {\n            const tests: Record<string, any> = {}\n            this.sortByArvNumber(results).forEach((result: any) => {\n                result.measures.forEach((measure: any) => {\n                    if (!(measure.name in tests)) {\n                        tests[measure.name] = []\n                    }\n                    tests[measure.name].push({\n                        id: result.patient_id,\n                        arv: result.arv_number,\n                        gender: result.gender,\n                        ageGroup: result.age_group,\n                        birthdate: this.toDate(result.birthdate),\n                        ordered: this.toDate(result.order_date),\n                        specimen: result.test,\n                        test:  measure.name,\n                        result: `${measure.modifier} ${measure.value}`,\n                        released: this.toDate(result.result_date)\n                    })\n                })\n            })\n            return tests\n        },\n        buildAvailableTestOptions(availableTests: Record<string, any>) {\n            const options: Array<Option> = []\n            for(const test in availableTests) {\n                const result = availableTests[test]\n                options.push({\n                    label: test,\n                    value: result.length,\n                    other: result\n                })\n            }\n            return options\n        },\n        setDisaggregatedRows(results: Array<Option>) {\n            const males = []\n            const females = []\n            this.columns = [this.disaggregatedColumns.concat(results.map((i: any) => table.thTxt(i.label)))]\n            for(const ageGroupIndex in AGE_GROUPS) {\n                const group = AGE_GROUPS[ageGroupIndex]\n                const maleRow: any = [table.td(group), table.td('M')]\n                const femaleRow: any = [table.td(group), table.td('F')]\n                results.forEach(({other}: Option) => {\n                    const filterByGender = (gender: 'F' | 'M') => {\n                        return other.filter((i: any) => i.gender === gender && i.ageGroup === group)\n                                    .map((i: any) => i.id)\n                    }\n                    maleRow.push(this.drill(filterByGender('M')))\n                    femaleRow.push(this.drill(filterByGender('F')))\n                })\n                males.push(maleRow)\n                females.push(femaleRow)\n                this.rows = [...females, ...males]\n            }\n        },\n        setPatientLevelRows(results: Array<Option>) {\n            this.columns = this.patientLevelColumns\n            results.forEach(({other}: Option)  => {\n                other.forEach((d: any) => {\n                    this.rows.push([\n                        this.tdARV(d.arv),\n                        table.td(d.gender),\n                        table.tdDate(d.birthdate),\n                        table.tdDate(d.ordered),\n                        table.td(d.specimen),\n                        table.td(d.test),\n                        table.td(d.result),\n                        table.tdDate(d.released)\n                    ])\n                })\n            })\n        }\n    }\n})\n","import { render } from \"./TestResultsReport.vue?vue&type=template&id=d8742962&ts=true\"\nimport script from \"./TestResultsReport.vue?vue&type=script&lang=ts\"\nexport * from \"./TestResultsReport.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/projects/malawi-emr/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}