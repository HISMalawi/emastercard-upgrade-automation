(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0b9969"],{"341c":function(e,t,a){"use strict";a.r(t);a("14d9");var n=a("7a23"),i=a("7920"),o=a("2706"),c=a("d95e"),l=a("d867"),s=a("93c7"),r=a("cc6f");class d extends r["a"]{constructor(e,t){super(e,42,t)}}var u=a("5713"),b=a("b5e4"),f=Object(n["defineComponent"])({__name:"AdmitPatient",setup(e){const t=Object(n["ref"])([]);let a;const{goToNextTask:r,patientDashboardUrl:f}=Object(s["a"])((e,n)=>{a=new d(n,e),t.value.push(w())});async function p(e,t){const n=await Promise.all([t.internal_sections]);await a.createEncounter(),await a.saveObservationList(n),r()}function w(){return{id:"internal_sections",helpText:"Select Ward/internal section",type:c["b"].TT_SELECT,validation:e=>o["a"].required(e),computedValue:e=>a.buildValueText("Admit to ward",e.label),options:()=>u["a"].getInternalSections(),config:{showKeyboard:!0,footerBtns:[{name:"Add Section",slot:"end",color:"success",onClick:async(e,t,a)=>{if("string"!=typeof a.filter||a.filter.length<3)return Object(b["e"])("Please enter a valid section name");if(a.filtered.some(e=>e.label.toLowerCase()===a.filter.toLowerCase()))return Object(b["e"])("Section already existing");if(await Object(b["a"])("Do you want to add internal section?")){const e=await u["a"].createInternalSection(a.filter.toUpperCase());e?(a.filter=e.name,a.listData=[{label:e.name,value:e.id},...a.listData]):Object(b["c"])("Unable to add "+a.filter)}}}]}}}return(e,a)=>(Object(n["openBlock"])(),Object(n["createBlock"])(Object(n["unref"])(l["IonPage"]),null,{default:Object(n["withCtx"])(()=>[Object(n["createVNode"])(i["a"],{cancelDestinationPath:Object(n["unref"])(f),fields:t.value,onFinishAction:p,skipSummary:!0},null,8,["cancelDestinationPath","fields"])]),_:1}))}});const p=f;t["default"]=p}}]);
//# sourceMappingURL=chunk-2d0b9969.c7715795.js.map