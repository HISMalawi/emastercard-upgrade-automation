{"version":3,"sources":["webpack:///./src/apps/ART/services/reception_service.ts","webpack:///./src/guidelines/encounter_guidelines.ts","webpack:///./src/views/EncounterMixin.vue","webpack:///./src/views/EncounterMixin.vue?fc39","webpack:///./src/apps/ART/views/encounters/Reception.vue?2203","webpack:///./src/apps/ART/views/encounters/Reception.vue","webpack:///./src/apps/ART/views/encounters/Reception.vue?fa9c","webpack:///./src/components/Forms/HisStandardForm.vue?8e31","webpack:///./src/components/Forms/HisStandardForm.vue","webpack:///./src/components/Forms/HisStandardForm.vue?5176","webpack:///./src/utils/GuidelineEngine.ts","webpack:///./src/components/Forms/BaseFormElements.ts","webpack:///./src/components/FormElements lazy ^\\.\\/.*\\.vue$ namespace object"],"names":["ReceptionService","AppEncounterService","constructor","patientID","providerID","super","_defineProperty","this","sitePrefix","getSitePrefix","GLOBAL_PROP","createArvNumber","identifier","ProgramService","postJson","buildArvNumber","arv","FlowState","dformat","d","HisDate","toStandardHisDisplayFormat","ENCOUNTER_GUIDELINES","priority","actions","alert","async","outcomeStartDate","action","infoActionSheet","name","slot","color","GO_TO_PATIENT_DASHBOARD","CHANGE_PATIENT_OUTCOME","CONTINUE","conditions","outcome","startDate","sessionDate","birthDate","CHANGE_SESSION_DATE","selection","providers","encounterName","apiDate","modal","optionsActionSheet","role","value","flowState","SET_PROVIDER","isBdeMode","isBDE","defineComponent","components","HisStandardForm","data","patient","fields","facts","ready","watch","handler","route","params","patient_id","parseInt","Store","get","then","patientData","setEncounterFacts","checkEncounterGuidelines","immediate","deep","computed","cancelDestination","patientDashboardUrl","methods","runflowState","state","states","username","split","provider","find","person_id","$router","push","EXIT","gotoPatientDashboard","findings","matchToGuidelines","index","_finding$actions","_finding$actions3","finding","_finding$actions2","status","_finding$actions4","program","e","console","error","toastDanger","getSessionDate","getCachedApiDate","getBirthdate","$route","toString","toUpperCase","sort","a","b","usernameA","usernameB","map","p","_p$person","isEmpty","person","names","_p$person2","latestName","given_name","family_name","toOption","label","other","mapStrToOptions","items","i","path","nextTask","yesNoOptions","toYesNoOption","values","mapOptions","options","option","yesNoUnknownOptions","resolveObs","obs","tag","Object","filter","reduce","accum","cur","Array","isArray","concat","Promise","all","inArray","arr","expression","length","validateSeries","condition","__exports__","render","_ctx","_cache","$props","$setup","$data","$options","_component_his_standard_form","_resolveComponent","_openBlock","_createBlock","activeField","onFinishAction","onFinish","skipSummary","cancelDestinationPath","mixins","EncounterMixinVue","reception","hasARVNumber","suggestedNumber","patientType","getFields","formData","computedData","encounter","createEncounter","toastWarning","registrationObs","saveObservationList","capture_arv","arv_number","invalidate","toastSuccess","guardianPresent","who_is_present","getGuardian","id","helpText","type","FieldType","TT_MULTIPLE_YES_NO","validation","val","Validation","required","neitherOr","anyEmpty","computedValue","buildValueCoded","concept","onValueUpdate","active","o","form","property","TT_SELECT","requireNext","init","ARVNumber","getPatientIdentifier","PatientTypeService","loadPatientType","getType","TT_TEXT","loadSitePrefix","j","getNextSuggestedARVNumber","replace","f","defaultValue","config","prependValue","artApp","HisApp","getActiveApp","programPatientIdentifiers","arvType","prefix","_resolveDynamicComponent","formType","onOnFinish","onOnIndex","onIndex","TouchScreenForm","emits","props","Function","Boolean","default","String","$emit","isCondition","ignored","undefined","prop","includes","every","sortByPriority","sortByWeight","weight","guidelines","target","targetEvent","sortBy","matches","guidelineIndex","targetValidations","some","title","description","text","info","COMPONENT_REFS","TT_MULTI_SELECT_GRID","TT_AGE_INPUT","TT_BARCODE","TT_NOTE","TT_CARD_SELECTOR","TT_MULTIPLE_SELECT","TT_NUMBER","TT_MONTHLY_DAYS","TT_ART_REGIMEN_SELECTION","TT_NEXT_VISIT_INTERVAL_SELECTION","TT_TABLE_VIEWER","TT_DOSAGE_INPUT","TT_YES_NO","TT_WEIGHT_CHART","TT_VITALS_ENTRY","TT_APPOINTMENTS_ENTRY","TT_COMPLAINTS_PICKER","TT_CLINIC_HOLIDAY_PICKER","TT_SUMMARY","TT_ART_STAGING_SUMMARY","TT_ADHERENCE_INPUT","TT_LAB_ORDERS","TT_PERSON_RESULT_VIEW","TT_PROGRAM_SELECTION","TT_DATE_PICKER","TT_RELATION_SELECTION","TT_FILING_NUMBER_VIEW","TT_PERSON_MATCH_VIEW","TT_FULL_DATE","TT_BATCH_ENTRY","TT_BATCH_VERIFICATION","TT_BATCH_MOVEMENT","TT_IP_ADDRESS","TT_TEXT_BANNER","TT_DISPENSATION_INPUT","TT_DATA_TABLE","TT_GROUP_SELECTOR","TT_ANC_PREGNANCY_INPUT_CONFIG","TT_ANC_PREGNANCY_DETAILS_INPUT","TT_ANC_LMP_DATE_INPUT","TT_DRUG_TRANSFER_IN","TT_GRID_SELECTOR","TT_ANC_DRUGSET_INPUT","TT_RADIOLOGY_PICKER","TT_PRESCRIPTION_INPUT","TT_INFINITE_SCROLL_MULTIPLE_SELECT","TT_DRUG_DISPENSER","webpackAsyncContext","req","__webpack_require__","resolve","Error","code","ids","slice","keys","module","exports"],"mappings":"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","file":"js/chunk-2e43cc02.c19bc6f7.js","sourcesContent":["import { AppEncounterService } from \"@/services/app_encounter_service\"\nimport { ProgramService } from \"@/services/program_service\";\nimport GLOBAL_PROP from \"@/apps/GLOBAL_APP/global_prop\";\n\nexport class ReceptionService extends AppEncounterService {\n    sitePrefix: string\n    constructor(patientID: number, providerID: number) {\n        super(patientID, 51, providerID) //TODO: Use encounter type reference name'\n        this.sitePrefix = ''\n    }\n\n    getSitePrefix() {\n        return this.sitePrefix\n    }\n\n    async loadSitePrefix() {\n        this.sitePrefix = await GLOBAL_PROP.sitePrefix();\n    }\n\n    createArvNumber(identifier: string) {\n        return ProgramService.postJson(\"/patient_identifiers/\", {\n            'patient_id': this.patientID,  \n            'identifier_type': 4,\n            identifier,\n        })\n    }\n\n    buildArvNumber(arv: number) {\n        return `${this.sitePrefix}-ARV-${arv}`    \n    }\n}\n","import { infoActionSheet, optionsActionSheet } from \"@/utils/ActionSheets\";\nimport { GuideLineInterface } from \"@/utils/GuidelineEngine\";\nimport HisDate from '@/utils/Date'\n\nexport enum FlowState {\n    SET_PROVIDER = 'SET_PROVIDER',\n    CHANGE_SESSION_DATE = 'change_session_date',\n    GO_TO_PATIENT_DASHBOARD = 'go_to_patient_dashboard',\n    CHANGE_PATIENT_OUTCOME = 'change_outcome',\n    CONTINUE = 'continue',\n    EXIT = 'exit'\n}\nconst dformat = (d: string) => HisDate.toStandardHisDisplayFormat(d)\n\nexport const ENCOUNTER_GUIDELINES: Record<string, GuideLineInterface> = {\n    \"Warn if attempting to create new encounters for a deceased patient\": {\n        priority: 1,\n        actions: {\n            alert: async ({ outcomeStartDate }: any) => {\n                const action = await infoActionSheet(\n                    'Data Integrity Issue Found',\n                    `Patient died on ${dformat(outcomeStartDate)}`,\n                    'Proceeding with this outcome might affect accuracy of some reports',\n                    [\n                        { name: 'Cancel', slot: 'end', color: 'primary'},\n                        { name: 'Change outcome', slot: 'end', color: 'primary'},\n                        { name: 'Continue Anyway', slot: 'end', color: 'danger'}\n                    ]\n                )\n                return action === 'Cancel'\n                    ? FlowState.GO_TO_PATIENT_DASHBOARD\n                    : action === 'Change outcome'\n                    ? FlowState.CHANGE_PATIENT_OUTCOME\n                    : FlowState.CONTINUE\n            }\n        },\n        conditions: {\n            outcome(outcome: string) {\n                return outcome === 'Patient died'\n            },\n            outcomeStartDate(startDate: string, { sessionDate }: any) {\n                return sessionDate >= startDate\n            }\n        }\n    },\n    \"A patient's date of birth must not be less than Session Date\": {\n        priority: 2,\n        actions: {\n            alert: async ({ birthDate, sessionDate}: any) => {\n                const action = await infoActionSheet(\n                    'Data integrity issue found', '',\n                    `Session date ${dformat(sessionDate)} is less than birth date of ${dformat(birthDate)}`,\n                    [\n                        { name: 'Cancel', slot: 'end', color: 'danger'},\n                        { name: 'Change session date', slot: 'end', color: 'success'}\n                    ]\n                )\n                return action === 'Change session date'\n                    ? FlowState.CHANGE_SESSION_DATE\n                    : FlowState.GO_TO_PATIENT_DASHBOARD\n            }\n        },\n        conditions: {\n            birthDate(birthDate: string, { sessionDate }: any) {\n                return sessionDate < birthDate\n            }\n        }\n    },\n    \"Select Encounter provider when in back data entry\": {\n        priority: 3,\n        actions: {\n            selection: async ({ providers, encounterName, sessionDate, apiDate }: any) => {\n                const modal = await optionsActionSheet(\n                    `Please select a provider for ${encounterName}`,\n                    `BDE: ${dformat(sessionDate)} | Current: ${dformat(apiDate)}`,\n                    providers,\n                    [\n                        { name: 'Cancel', color: 'danger', slot: 'start', role: 'default'},\n                        { name: 'Confirm', slot: 'end', role: 'action' }\n                    ]\n                )\n                return modal.action === 'Cancel' \n                    ? { value: -1, flowState: FlowState.GO_TO_PATIENT_DASHBOARD }\n                    : { value: modal.selection, flowState: FlowState.SET_PROVIDER }\n            }\n        },\n        conditions: {\n            isBdeMode(isBDE: boolean) {\n                return isBDE\n            }\n        }\n    }\n}","\nimport { defineComponent } from 'vue'\nimport { Field, Option } from '@/components/Forms/FieldInterface'\nimport { ProgramService } from \"@/services/program_service\"\nimport { find, isEmpty } from \"lodash\"\nimport { nextTask } from \"@/utils/WorkflowTaskHelper\"\nimport { ENCOUNTER_GUIDELINES, FlowState } from \"@/guidelines/encounter_guidelines\"\nimport { matchToGuidelines } from \"@/utils/GuidelineEngine\"\nimport HisStandardForm from \"@/components/Forms/HisStandardForm.vue\";\nimport { toastDanger } from '@/utils/Alerts'\nimport Store from \"@/composables/ApiStore\"\n\nexport default defineComponent({\n    components: { HisStandardForm },\n    data: () => ({\n        patient: {} as any,\n        fields: [] as Array<Field>,\n        patientID: '' as any,\n        providerID: -1 as number,\n        providers: [] as any,\n        facts: {\n            sessionDate: '' as string,\n            apiDate: '' as string,\n            encounterName: 'N/A' as string,\n            providers: [] as Array<any>,\n            isBdeMode: false as boolean,\n            birthDate: '' as string,\n            outcome: '' as string,\n            outcomeStartDate: '' as string\n        },\n        ready: false\n    }),\n    watch: {\n       '$route': {\n            handler(route: any) {\n                if(route.params.patient_id && this.patientID != route.params.patient_id) {\n                    this.patientID = parseInt(route.params.patient_id);\n                    Store.get('ACTIVE_PATIENT', { patientID: this.patientID})\n                        .then(patientData => {\n                            this.patient = patientData\n                            this.setEncounterFacts().then(() => {\n                                this.checkEncounterGuidelines().then(() => {\n                                    this.ready = true\n                                })\n                            })\n                        })\n                    }\n            },\n            immediate: true,\n            deep: true\n        }\n    },\n    computed: {\n        cancelDestination(): string {\n            return this.patientDashboardUrl()\n        }\n    },\n    methods: {\n        runflowState(state: FlowState, params=null) {\n            const states: any = {}\n            states[FlowState.SET_PROVIDER] = (selection: any) => {\n                const [ username ] = selection.split(' ')\n                const provider = find(this.providers, { username })\n                if (provider) this.providerID = provider.person_id\n                return FlowState.CONTINUE\n            }\n            states[FlowState.CHANGE_SESSION_DATE] = () => { \n                this.$router.push(`/session/date?patient_dashboard_redirection_id=${this.patientID}`)\n                return FlowState.EXIT\n            }\n            states[FlowState.CHANGE_PATIENT_OUTCOME] = () => {\n                this.$router.push(`/patient/programs/${this.patientID}`)\n                return FlowState.EXIT\n            }\n            states[FlowState.GO_TO_PATIENT_DASHBOARD] = () => {\n                this.gotoPatientDashboard()\n                return FlowState.EXIT\n            }\n            if (state in states) {\n                return states[state](params)\n            }\n        },\n        async checkEncounterGuidelines() {\n            const findings = matchToGuidelines(this.facts, ENCOUNTER_GUIDELINES)\n            for(const index in findings) {\n                const finding = findings[index]\n                if (finding?.actions?.alert) {\n                    const status = this.runflowState((await finding?.actions?.alert(this.facts)))\n                    if (status === FlowState.EXIT) return\n                }\n                if (finding?.actions?.selection) {\n                    const selection = await finding?.actions?.selection(this.facts)\n                    this.runflowState(selection.flowState, selection.value)\n                }\n            }\n        },\n        async setEncounterFacts() {\n            try {\n                const program = await Store.get('PATIENT_PROGRAM', { patientID: this.patientID })\n                this.facts.outcome = program.outcome\n                this.facts.outcomeStartDate = program.startDate\n            } catch (e) {\n                console.error(e)\n                toastDanger(`${e}`)\n            }\n            this.facts.sessionDate = ProgramService.getSessionDate()\n            this.facts.apiDate = ProgramService.getCachedApiDate() as string\n            this.facts.isBdeMode = ProgramService.isBDE() as boolean\n            this.facts.birthDate = this.patient.getBirthdate()\n            this.facts.encounterName = this.$route.name \n                ? this.$route.name.toString().toUpperCase()\n                : 'N/A'\n            if (ProgramService.isBDE()) {\n                this.providers = await Store.get('PROVIDERS')\n                this.facts.providers = this.providers\n                    .sort((a: any, b: any) => {\n                        const usernameA = a.username.toUpperCase()\n                        const usernameB = b.username.toUpperCase()\n                        return usernameA < usernameB ? -1 : usernameA > usernameB  ? 1 : 0\n                    })\n                    .map((p: any) => {\n                        let name = `${p.username}`\n                        if (!isEmpty(p?.person?.names)) {\n                            const [ latestName ] = p.person?.names || []\n                            name += ` (${latestName.given_name} ${latestName.family_name})`\n                        }\n                        return name\n                    })\n            }\n        },\n        toOption(label: string, other={}) {\n            return {\n                label,\n                value: label,\n                other\n            }\n        },\n        mapStrToOptions(items: string[]) {\n            return items.map(i => ({label: i, value: i}))\n        },\n        patientDashboardUrl(): string {\n            return `/patient/dashboard/${this.patientID}`\n        },\n        gotoPatientDashboard() {\n            return this.$router.push({path: this.patientDashboardUrl()})\n        },\n        nextTask() {\n            return nextTask(this.patientID, this.$router)\n        },\n        yesNoOptions(): Option[] {\n            return [\n                { label: \"Yes\", value: \"Yes\" },\n                { label: \"No\", value: \"No\" }\n            ]\n        },\n        toYesNoOption(label: string, other: any={}): Option {\n            return {\n                label,\n                value: '',\n                other: {\n                    ...other,\n                    values: this.yesNoOptions()\n                }\n            } \n        },\n        mapOptions(options: Array<string>) {\n            return options.map((option) => {\n                return { label: option, value: option }\n            });\n        },\n        yesNoUnknownOptions(): Option[] {\n            return [\n                { label: \"Yes\", value: \"Yes\" },\n                { label: \"No\", value: \"No\" },\n                { label: \"Unknown\", value: \"Unknown\" }\n            ]\n        },\n        resolveObs(obs: any, tag='') {\n            const values: any = Object.values(obs)\n                .filter((d: any) => d && (d.tag === tag || tag === ''))\n                .reduce((accum: any, cur: any) => { \n                    const data = cur.obs ? cur.obs : cur\n                    if (Array.isArray(data)) {\n                        accum = accum.concat(data)\n                    } else if (typeof data === 'function') {\n                        accum.push(data())\n                    } else {\n                        accum.push(data)\n                    }\n                    return accum\n                    }, [])\n            return Promise.all(values)\n        },\n        inArray(arr: Array<any>, expression: (i: any) => boolean): boolean {\n            try {\n                return arr.filter((i: any) => expression(i)).length > 0\n            } catch (e) {\n                return false\n            }\n        },\n        validateSeries(conditions: Array<any>){\n            try {\n                for(const i in conditions) {\n                    const condition = conditions[i]()\n\n                    if (condition) return condition\n                }\n            } catch (e) {\n                return [e]\n            }\n        }\n    }\n})\n","import script from \"./EncounterMixin.vue?vue&type=script&lang=ts\"\nexport * from \"./EncounterMixin.vue?vue&type=script&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_his_standard_form = _resolveComponent(\"his-standard-form\")!\n\n  return (_openBlock(), _createBlock(_component_his_standard_form, {\n    fields: _ctx.fields,\n    activeField: _ctx.activeField,\n    onFinishAction: _ctx.onFinish,\n    skipSummary: true,\n    cancelDestinationPath: _ctx.cancelDestination\n  }, null, 8, [\"fields\", \"activeField\", \"onFinishAction\", \"cancelDestinationPath\"]))\n}","\nimport { defineComponent } from \"vue\";\nimport { Field, Option } from \"@/components/Forms/FieldInterface\"\nimport { FieldType } from \"@/components/Forms/BaseFormElements\";\nimport HisStandardForm from \"@/components/Forms/HisStandardForm.vue\";\nimport Validation from \"@/components/Forms/validations/StandardValidations\";\nimport { ReceptionService } from \"@/apps/ART/services/reception_service\"\nimport { PatientTypeService } from \"@/apps/ART/services/patient_type_service\";\nimport { ProgramService } from \"@/services/program_service\";\nimport { toastWarning, toastSuccess } from \"@/utils/Alerts\"\nimport EncounterMixinVue from '../../../../views/EncounterMixin.vue'\nimport HisApp from \"@/apps/app_lib\"\nimport { find, isEmpty } from \"lodash\";\nimport Store from \"@/composables/ApiStore\"\n\nexport default defineComponent({\n  mixins: [EncounterMixinVue],\n  components: { HisStandardForm },\n  data: () => ({\n    reception: {} as any,\n    activeField: \"\",\n    hasARVNumber: true,\n    suggestedNumber: \"\" as any,\n    patientType: {} as any,\n  }),\n  watch: {\n    ready: {\n      handler(ready: any) {\n        if (!ready) return\n        this.reception = new ReceptionService(this.patientID, this.providerID)\n        this.fields = this.getFields();\n      },\n      immediate: true\n    },\n  },\n  methods: {\n    async onFinish(formData: any, computedData: any) {\n      const encounter = await this.reception.createEncounter()\n\n      if (!encounter) return toastWarning('Unable to create encounter')\n\n      const registrationObs = await this.resolveObs(computedData, 'obs')\n\n      const obs = await this.reception.saveObservationList(registrationObs)\n\n      if (!obs) return toastWarning('Unable to create Obs')\n\n      if (formData.capture_arv && formData.capture_arv.value === 'Yes') {\n        const arv = await this.reception.createArvNumber(computedData.arv_number)\n        if (!arv) return toastWarning('Unable to save Arv number')\n        Store.invalidate('ACTIVE_PATIENT')\n      }\n      toastSuccess('Encounter created')\n      const guardianPresent = find(formData.who_is_present, { value: 'Yes', label: 'Guardian present?'})\n      if (guardianPresent) {\n        if (isEmpty((await this.patient.getGuardian()))) {\n          return this.$router.push(`/guardian/registration/${this.patientID}`)\n        } \n      }\n      this.nextTask()\n    },\n    getFields(): Array<Field> {\n      return [\n        {\n          id: \"who_is_present\",\n          helpText: \"HIV reception\",\n          type: FieldType.TT_MULTIPLE_YES_NO,\n          validation: (val: any) => Validation.required(val) || Validation.neitherOr(val) || Validation.anyEmpty(val),\n          computedValue: (d: Array<Option>) => {\n            return {\n              tag: 'obs',\n              obs: d.map(({ other, value }: Option) => this.reception.buildValueCoded(other.concept, value))\n            }\n          },\n          onValueUpdate: async (options: Option[], active: Option) => {\n            return options.map(o => {\n              if (active.label != o.label && active.value === 'No') {\n                o.value = \"Yes\"\n              }\n              return o\n            })\n          },\n          options: (form: any) => {\n            if (form.who_is_present) return form.who_is_present as Option[]\n            return [\n              {\n                label: \"Patient present?\",\n                value: \"\",\n                other: {\n                  concept: \"Patient Present\",\n                  property: \"patient_present\",\n                  values: this.yesNoOptions(),\n                },\n              },\n              {\n                label: \"Guardian present?\",\n                value: \"\",\n                other: {\n                  concept: \"Guardian Present\",\n                  property: \"guardian_present\",\n                  values: this.yesNoOptions(),\n                },\n              }\n            ]\n          }\n        },\n        {\n          id: \"capture_arv\",\n          helpText: \"Capture ARV Number?\",\n          type: FieldType.TT_SELECT,\n          requireNext: true,\n          init: async() => {\n            const ARVNumber = this.patient.getPatientIdentifier(4);\n            if (ARVNumber === \"\") this.hasARVNumber = false;\n            this.patientType = new PatientTypeService(this.patientID, this.providerID);\n            await this.patientType.loadPatientType()\n            return true\n          },\n          condition: () => !this.hasARVNumber && this.patientType.getType() === \"New patient\",\n          validation: (val: any) => Validation.required(val),\n          options: () => this.yesNoOptions(),\n        },\n        {\n          id: \"arv_number\",\n          helpText: \"ART number\",\n          type: FieldType.TT_TEXT,\n          init: async() => {\n            await this.reception.loadSitePrefix()\n            if (!this.hasARVNumber) {\n              const j = await ProgramService.getNextSuggestedARVNumber();\n              this.suggestedNumber = j.arv_number.replace(/^\\D+|\\s/g, \"\");\n            }\n            return true\n          },\n          computedValue: ({ value }: Option) => {\n            return value\n          },\n          validation: (val: any) => Validation.required(val),\n          condition: (f: any) => !this.hasARVNumber && f.capture_arv.value === \"Yes\",\n          defaultValue: () => this.suggestedNumber,\n          config: {\n            prependValue: () => {\n              const artApp = HisApp.getActiveApp()\n              if (artApp && artApp.programPatientIdentifiers) {\n                const arvType = artApp.programPatientIdentifiers['ARV Number']\n                return arvType.prefix()\n              }\n              return ''\n            }\n          }\n        }\n      ]\n    }\n  }\n});\n","import { render } from \"./Reception.vue?vue&type=template&id=73d30112&ts=true\"\nimport script from \"./Reception.vue?vue&type=script&lang=ts\"\nexport * from \"./Reception.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/projects/malawi-emr/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { resolveDynamicComponent as _resolveDynamicComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createBlock(_resolveDynamicComponent(_ctx.formType), {\n    fields: _ctx.fields,\n    skipSummary: _ctx.skipSummary,\n    activeField: _ctx.activeField,\n    cancelDestinationPath: _ctx.cancelDestinationPath,\n    onOnFinish: _ctx.onFinish,\n    onFinish: _ctx.onFinishAction,\n    onOnIndex: _ctx.onIndex\n  }, null, 40, [\"fields\", \"skipSummary\", \"activeField\", \"cancelDestinationPath\", \"onOnFinish\", \"onFinish\", \"onOnIndex\"]))\n}","\nimport TouchScreenForm from \"@/components/Forms/TouchScreenForm.vue\";\nimport { defineComponent, PropType } from \"vue\";\nimport { Field } from \"./FieldInterface\";\n\nexport default defineComponent({\n    name: \"HisStandardForm\",\n    components: { TouchScreenForm },\n    emits: [\n        'onFinish',\n        'onIndex'\n    ],\n    data: () => ({\n        formType: 'touch-screen-form' as string\n    }),\n    props: {\n        onFinishAction: {\n            type: Function\n        },\n        skipSummary: {\n            type: Boolean,\n            default: false\n        },\n        activeField: {\n            type: String\n        },\n        fields: {\n            type: Object as PropType<Field[]>,\n            required: true\n        },\n        cancelDestinationPath: {\n            type: String,\n            required: false,\n        }\n    },\n    methods: {\n        onFinish(formData: any, computedData: any) {\n            this.$emit('onFinish', formData, computedData)\n        },\n        onIndex(i: number) {\n            this.$emit('onIndex', i)\n        }\n    }\n})\n","import { render } from \"./HisStandardForm.vue?vue&type=template&id=6daa0375&ts=true\"\nimport script from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\nexport * from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/projects/malawi-emr/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","/**\n * Compares patient facts against a predefined guideline Object.\n*/\nexport interface DescriptionInterface {\n    color?: 'primary' | 'secondary' | 'danger' | 'warning';\n    info: Function;\n    text?: string;\n    show: 'onChecked' | 'always';\n}\n\nexport interface GuideLineInterface {\n    title?: string;\n    concept?: string;\n    weight?: number;\n    priority?: number;\n    conditions: Record<string, Function>;\n    actions?: Record<string, any>; //TODO: should <key, Function>\n    data?: Record<string, any>;\n    description?: DescriptionInterface;\n    target?: string;\n    targetEvent?: string;\n}\n\n/**\n * Match the facts with guidelines\n * @param facts \n * @param conditions \n * @returns \n */\nfunction isCondition(facts: Record<string, any>, conditions: Record<string, Function>): boolean {\n    const state = [] \n    const ignored = [-1, '', null, undefined]\n\n    for(const prop in conditions) {\n        if (!(prop in facts)) \n            continue\n        \n        const value = facts[prop]\n        if (ignored.includes(value)) {\n            state.push(false)\n            continue\n        }\n\n        state.push(conditions[prop](value, facts))\n    }\n    return state.every(Boolean)\n}\n\n/**\n * Sort guidelines in the order of importance/relevance\n * @param findings \n * @returns \n */\nfunction sortByPriority(findings: GuideLineInterface[]) {\n    return findings.sort((a, b) => (a.priority && b.priority) && a.priority < b.priority ? -1 : 1)\n}\n\nfunction sortByWeight(findings: GuideLineInterface[]) {\n    return findings.sort((a, b) => (a.weight && b.weight) && a.weight > b.weight ? -1 : 1)\n}\n\nexport function logFindingsByWeight(guidelines: Record<string, GuideLineInterface>) {\n    const findings: any = Object.keys(guidelines).map(i => ({ name: i, weight: guidelines[i].weight}))\n    console.log(sortByWeight(findings).map((i: any) => `${i.weight} -> ${i.name}`))\n}\n\n/**\n * Check the guideline for matching facts and return matching object \n * @param facts: key value pair for used for searching in guidelines\n * @param guidelines: A dictionary containing fixed rules/validations that conforms to GuideLineInterface\n * @param target: Used for matching a target defined in a guidlines before executing conditions\n * @param targetEvent: used for matching a target event in a guideline before executing conditions\n * @returns\n */\nexport function matchToGuidelines(\n    facts: Record<string, any>, \n    guidelines: Record<string, GuideLineInterface>,\n    target='', \n    targetEvent='',\n    sortBy='priority' as 'priority' | 'weight'): Array<GuideLineInterface> {\n    const matches = []\n    for(const guidelineIndex in guidelines) {\n        const data: GuideLineInterface = guidelines[guidelineIndex]\n        const targetValidations = [\n            (data.target && target && data.target != target),\n            (data.targetEvent && targetEvent \n                && data.targetEvent != targetEvent)\n        ]\n\n        if (targetValidations.some(Boolean)) {\n            continue\n        }\n\n        if (isCondition(facts, data.conditions)) {\n            data.title = guidelineIndex\n            if (data.description) {\n                data.description.text = data.description.info(facts)\n            }\n            matches.push(data)\n        }\n    }\n    return sortBy === 'priority' ? sortByPriority(matches) : sortByWeight(matches)\n}\n","/**\n * Map all formElements/components defined in \"@/components/FormElements\" \n * in the Enum below by their file name.\n * \n * Next step is to add FieldType entry in COMPONENT_REFS in the \n * Array below the FieldType Enum\n */\nexport enum FieldType {\n    TT_MULTI_SELECT_GRID= 'HisMultiSelectGrid',\n    TT_AGE_INPUT='HisAgeInput',\n    TT_GROUP_SELECTOR = 'HisGroupSelector',\n    TT_DATA_TABLE = 'HisDataTable',\n    TT_GRID_SELECTOR = 'HisGridSelector',\n    TT_NOTE = 'HisNote',\n    TT_BARCODE = 'HisBarcodeInput',\n    TT_MONTHLY_DAYS=\"HisMonthlyDays\",\n    TT_TEXT=\"HisTextInput\",\n    TT_NUMBER = \"HisNumberInput\",\n    TT_DATETIME=\"datetime\",\n    TT_SELECT=\"HisSelect\",\n    TT_MULTIPLE_SELECT=\"HisMultipleSelect\",\n    TT_ART_REGIMEN_SELECTION=\"HisArtRegimenSelection\",\n    TT_NEXT_VISIT_INTERVAL_SELECTION=\"HisNextVisitInterval\",\n    TT_TABLE_VIEWER=\"HisTableViewer\",\n    TT_DOSAGE_INPUT=\"HisDosageInput\",\n    TT_YES_NO=\"YesNoSelect\",\n    TT_MULTIPLE_YES_NO=\"MultiYesNoSelect\",\n    TT_SUMMARY=\"HisSummary\",\n    TT_WEIGHT_CHART = \"HisWeightChart\",\n    TT_VITALS_ENTRY=\"HisVitalsEntry\",\n    TT_ADHERENCE_INPUT = \"HisAdherenceInput\",\n    TT_ART_STAGING_SUMMARY = \"ArtStagingSummary\",\n    TT_LAB_ORDERS = \"HisLabOrders\",\n    TT_APPOINTMENTS_ENTRY = \"HisAppointments\",\n    TT_DISPENSATION_INPUT = 'DrugDispensationSelection',\n    TT_PROGRAM_SELECTION = 'ProgramSelection',\n    TT_DATE_PICKER = 'HisDatePicker',\n    TT_PERSON_RESULT_VIEW = 'PersonSearchView',\n    TT_RELATION_SELECTION = 'RelationsSelection',\n    TT_FILING_NUMBER_VIEW = 'FilingNumberView',\n    TT_CARD_SELECTOR = 'HisCardSelector',\n    TT_PERSON_MATCH_VIEW = 'PersonMatchView',\n    TT_FULL_DATE = 'HisDateInput',\n    TT_BATCH_ENTRY = 'HisBatchEntry',\n    TT_BATCH_VERIFICATION = 'HisBatchVerification',\n    TT_BATCH_MOVEMENT = 'HisBatchMovement',\n    TT_COMPLAINTS_PICKER = 'HisComplaintsPicker',\n    TT_RADIOLOGY_PICKER = 'HisRadiologyPicker',\n    TT_IP_ADDRESS = 'HisIPAddress',\n    TT_TEXT_BANNER = 'HisTextBanner',\n    TT_DRUG_DISPENSER = 'GeneralDrugDispenser',\n    TT_CLINIC_HOLIDAY_PICKER = 'HisClinicHolidayPicker',\n    TT_ANC_PREGNANCY_INPUT_CONFIG = 'AncPregnancyInfoConfig',\n    TT_ANC_PREGNANCY_DETAILS_INPUT = 'AncPregnancyDetailsInput',\n    TT_ANC_LMP_DATE_INPUT = 'AncLmpDateInput',\n    TT_ANC_DRUGSET_INPUT = 'AncDrugSetInput',\n    TT_DRUG_TRANSFER_IN = 'DrugTransferInput',\n    TT_PRESCRIPTION_INPUT = 'HisPrescriptionInput',\n    TT_INFINITE_SCROLL_MULTIPLE_SELECT=\"HisInfiniteScrollMultipleSelect\"\n}\n\n// Register FieldTypes here that will be registered at runtime\nexport const COMPONENT_REFS: FieldType[] = [\n    FieldType.TT_MULTI_SELECT_GRID,\n    FieldType.TT_AGE_INPUT,\n    FieldType.TT_BARCODE,\n    FieldType.TT_NOTE,\n    FieldType.TT_SELECT,\n    FieldType.TT_CARD_SELECTOR,\n    FieldType.TT_MULTIPLE_SELECT,\n    FieldType.TT_TEXT,\n    FieldType.TT_NUMBER,\n    FieldType.TT_MONTHLY_DAYS,\n    FieldType.TT_ART_REGIMEN_SELECTION,\n    FieldType.TT_NEXT_VISIT_INTERVAL_SELECTION,\n    FieldType.TT_TABLE_VIEWER,\n    FieldType.TT_DOSAGE_INPUT,\n    FieldType.TT_YES_NO,\n    FieldType.TT_MULTIPLE_YES_NO,\n    FieldType.TT_WEIGHT_CHART,\n    FieldType.TT_VITALS_ENTRY,\n    FieldType.TT_APPOINTMENTS_ENTRY,\n    FieldType.TT_COMPLAINTS_PICKER,\n    FieldType.TT_CLINIC_HOLIDAY_PICKER,\n    FieldType.TT_SUMMARY,\n    FieldType.TT_ART_STAGING_SUMMARY,\n    FieldType.TT_ADHERENCE_INPUT,\n    FieldType.TT_LAB_ORDERS,\n    FieldType.TT_PERSON_RESULT_VIEW,\n    FieldType.TT_PROGRAM_SELECTION,\n    FieldType.TT_DATE_PICKER,\n    FieldType.TT_RELATION_SELECTION,\n    FieldType.TT_FILING_NUMBER_VIEW,\n    FieldType.TT_PERSON_MATCH_VIEW,\n    FieldType.TT_FULL_DATE,\n    FieldType.TT_BATCH_ENTRY,\n    FieldType.TT_BATCH_VERIFICATION,\n    FieldType.TT_BATCH_MOVEMENT,\n    FieldType.TT_IP_ADDRESS,\n    FieldType.TT_TEXT_BANNER,\n    FieldType.TT_DISPENSATION_INPUT,\n    FieldType.TT_DATA_TABLE,\n    FieldType.TT_GROUP_SELECTOR,\n    FieldType.TT_ANC_PREGNANCY_INPUT_CONFIG,\n    FieldType.TT_ANC_PREGNANCY_DETAILS_INPUT,\n    FieldType.TT_ANC_LMP_DATE_INPUT,\n    FieldType.TT_DRUG_TRANSFER_IN,\n    FieldType.TT_GRID_SELECTOR,\n    FieldType.TT_ANC_DRUGSET_INPUT,\n    FieldType.TT_RADIOLOGY_PICKER,\n    FieldType.TT_PRESCRIPTION_INPUT,\n    FieldType.TT_INFINITE_SCROLL_MULTIPLE_SELECT,\n    FieldType.TT_DRUG_DISPENSER\n]\n","var map = {\n\t\"./AncDrugSetInput.vue\": [\n\t\t\"c99f\",\n\t\t\"TouchFormElement0\"\n\t],\n\t\"./AncLmpDateInput.vue\": [\n\t\t\"101a\",\n\t\t\"TouchFormElement1\"\n\t],\n\t\"./AncPregnancyDetailsInput.vue\": [\n\t\t\"b043\",\n\t\t\"TouchFormElement2\"\n\t],\n\t\"./AncPregnancyInfoConfig.vue\": [\n\t\t\"262e\",\n\t\t\"TouchFormElement3\"\n\t],\n\t\"./ArtStagingSummary.vue\": [\n\t\t\"43db\",\n\t\t\"TouchFormElement4\"\n\t],\n\t\"./BaseTextInput.vue\": [\n\t\t\"36ad\",\n\t\t\"TouchFormElement5\"\n\t],\n\t\"./DrugDispensationSelection.vue\": [\n\t\t\"05d5\",\n\t\t\"TouchFormElement6\"\n\t],\n\t\"./DrugTransferInput.vue\": [\n\t\t\"de42\",\n\t\t\"TouchFormElement7\"\n\t],\n\t\"./FieldMixin.vue\": [\n\t\t\"51c8\",\n\t\t\"TouchFormElement8\"\n\t],\n\t\"./FilingNumberView.vue\": [\n\t\t\"c650\",\n\t\t\"TouchFormElement9\"\n\t],\n\t\"./GeneralDrugDispenser.vue\": [\n\t\t\"7737\",\n\t\t\"TouchFormElement10\"\n\t],\n\t\"./HisAdherenceInput.vue\": [\n\t\t\"f2c3\",\n\t\t\"TouchFormElement11\"\n\t],\n\t\"./HisAgeInput.vue\": [\n\t\t\"c05f\",\n\t\t\"TouchFormElement12\"\n\t],\n\t\"./HisAppointments.vue\": [\n\t\t\"b2eb\",\n\t\t\"chunk-366b6f0a\",\n\t\t\"TouchFormElement13\"\n\t],\n\t\"./HisArtRegimenSelection.vue\": [\n\t\t\"47b9\",\n\t\t\"TouchFormElement14\"\n\t],\n\t\"./HisBarcodeInput.vue\": [\n\t\t\"dd65\",\n\t\t\"TouchFormElement15\"\n\t],\n\t\"./HisBatchEntry.vue\": [\n\t\t\"f2ab\",\n\t\t\"chunk-182277b5\",\n\t\t\"TouchFormElement16\"\n\t],\n\t\"./HisBatchMovement.vue\": [\n\t\t\"5148\",\n\t\t\"chunk-182277b5\",\n\t\t\"TouchFormElement17\"\n\t],\n\t\"./HisBatchVerification.vue\": [\n\t\t\"7b0f\",\n\t\t\"chunk-182277b5\",\n\t\t\"TouchFormElement18\"\n\t],\n\t\"./HisCardSelector.vue\": [\n\t\t\"0734\",\n\t\t\"TouchFormElement19\"\n\t],\n\t\"./HisClinicHolidayPicker.vue\": [\n\t\t\"4030\",\n\t\t\"chunk-366b6f0a\",\n\t\t\"TouchFormElement20\"\n\t],\n\t\"./HisComplaintsPicker.vue\": [\n\t\t\"82d1\",\n\t\t\"TouchFormElement21\"\n\t],\n\t\"./HisDataTable.vue\": [\n\t\t\"a6ba\",\n\t\t\"TouchFormElement22\"\n\t],\n\t\"./HisDateInput.vue\": [\n\t\t\"374c\",\n\t\t\"TouchFormElement23\"\n\t],\n\t\"./HisDatePicker.vue\": [\n\t\t\"9b30\",\n\t\t\"chunk-366b6f0a\",\n\t\t\"TouchFormElement24\"\n\t],\n\t\"./HisDosageInput.vue\": [\n\t\t\"b34c\",\n\t\t\"TouchFormElement25\"\n\t],\n\t\"./HisGridSelector.vue\": [\n\t\t\"112a\",\n\t\t\"TouchFormElement26\"\n\t],\n\t\"./HisGroupSelector.vue\": [\n\t\t\"81cf\",\n\t\t\"TouchFormElement27\"\n\t],\n\t\"./HisIPAddress.vue\": [\n\t\t\"2a82\",\n\t\t\"TouchFormElement28\"\n\t],\n\t\"./HisInfiniteScrollMultipleSelect.vue\": [\n\t\t\"52a3\",\n\t\t\"TouchFormElement29\"\n\t],\n\t\"./HisLabOrders.vue\": [\n\t\t\"e614\",\n\t\t\"TouchFormElement30\"\n\t],\n\t\"./HisMonthlyDays.vue\": [\n\t\t\"69cf\",\n\t\t\"TouchFormElement31\"\n\t],\n\t\"./HisMultiSelectGrid.vue\": [\n\t\t\"0fa3\",\n\t\t\"TouchFormElement32\"\n\t],\n\t\"./HisMultipleSelect.vue\": [\n\t\t\"2fd5\",\n\t\t\"chunk-45847ec4\",\n\t\t\"TouchFormElement33\"\n\t],\n\t\"./HisNextVisitInterval.vue\": [\n\t\t\"3126\",\n\t\t\"TouchFormElement34\"\n\t],\n\t\"./HisNote.vue\": [\n\t\t\"c927\",\n\t\t\"TouchFormElement35\"\n\t],\n\t\"./HisNumberInput.vue\": [\n\t\t\"5e75\",\n\t\t\"TouchFormElement36\"\n\t],\n\t\"./HisPrescriptionInput.vue\": [\n\t\t\"87e5\",\n\t\t\"TouchFormElement37\"\n\t],\n\t\"./HisRadiologyPicker.vue\": [\n\t\t\"adc7\",\n\t\t\"chunk-418a3f72\",\n\t\t\"TouchFormElement38\"\n\t],\n\t\"./HisSelect.vue\": [\n\t\t\"d11f\",\n\t\t\"TouchFormElement39\"\n\t],\n\t\"./HisSummary.vue\": [\n\t\t\"e0bd\",\n\t\t\"TouchFormElement40\"\n\t],\n\t\"./HisTableViewer.vue\": [\n\t\t\"8904\",\n\t\t\"TouchFormElement41\"\n\t],\n\t\"./HisTextBanner.vue\": [\n\t\t\"952c\",\n\t\t\"TouchFormElement42\"\n\t],\n\t\"./HisTextInput.vue\": [\n\t\t\"6ef9\",\n\t\t\"TouchFormElement43\"\n\t],\n\t\"./HisVitalsEntry.vue\": [\n\t\t\"e333\",\n\t\t\"TouchFormElement44\"\n\t],\n\t\"./HisWeightChart.vue\": [\n\t\t\"26a1\",\n\t\t\"TouchFormElement45\"\n\t],\n\t\"./MultiYesNoSelect.vue\": [\n\t\t\"5fd1\",\n\t\t\"TouchFormElement46\"\n\t],\n\t\"./PersonMatchView.vue\": [\n\t\t\"6591\",\n\t\t\"TouchFormElement47\"\n\t],\n\t\"./PersonSearchView.vue\": [\n\t\t\"28b2\",\n\t\t\"TouchFormElement48\"\n\t],\n\t\"./ProgramSelection.vue\": [\n\t\t\"e3b4\",\n\t\t\"TouchFormElement49\"\n\t],\n\t\"./RelationsSelection.vue\": [\n\t\t\"0e57\",\n\t\t\"TouchFormElement50\"\n\t],\n\t\"./SelectMixin.vue\": [\n\t\t\"82a9\",\n\t\t\"TouchFormElement51\"\n\t],\n\t\"./YesNoSelect.vue\": [\n\t\t\"71f2\",\n\t\t\"TouchFormElement52\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"f159\";\nmodule.exports = webpackAsyncContext;"],"sourceRoot":""}