{"version":3,"sources":["webpack:///./src/apps/ART/services/reports/disaggregated_service.ts","webpack:///./src/apps/EMC/utils/common.ts","webpack:///./src/apps/EMC/utils/exports.ts","webpack:///./src/apps/EMC/Components/tables/DrilldownTable.vue?76ca","webpack:///./src/apps/EMC/Components/tables/DrilldownTable.vue","webpack:///./src/apps/EMC/Components/tables/DrilldownTable.vue?02d4","webpack:///./src/apps/EMC/Components/tables/BaseReportTable.vue?7c71","webpack:///./src/apps/EMC/Components/tables/BaseReportTable.vue","webpack:///./src/apps/EMC/Components/tables/BaseReportTable.vue?c151","webpack:///./src/apps/ART/services/reports/regimen_report_service.ts","webpack:///./src/utils/modal.ts","webpack:///./src/apps/EMC/views/reports/pepfar/PepfarDisaggregated.vue?9873","webpack:///./src/apps/EMC/views/reports/pepfar/PepfarDisaggregated.vue","webpack:///./src/apps/EMC/views/reports/pepfar/PepfarDisaggregated.vue?d62f"],"names":["DisaggregatedReportService","ArtReportService","constructor","super","this","gender","ageGroup","AGE_GROUPS","initialize","rebuildOutcome","req","getCohort","temp_disaggregated","setAgeGroup","setInitialization","isInit","setRebuildOutcome","isRebuild","setGender","getGender","getReport","getTxIpt","getTxCurrTB","getRegimenDistribution","sortByARV","arvNumber","parseInt","split","sanitize","str","replace","trim","error","convertToCsv","columns","rows","quarter","period","filters","filter","column","exportable","map","label","join","sortRows","sort","row","value","get","path","formatter","drillable","Array","isArray","length","dayjs","format","Service","getAppVersion","getApiVersion","getSiteUUID","exportToCSV","opts","csvData","Blob","type","link","document","createElement","href","window","URL","createObjectURL","setAttribute","filename","body","appendChild","click","removeChild","render","_ctx","_cache","$props","$setup","$data","$options","_component_IonIcon","_resolveComponent","_component_IonButton","_component_IonButtons","_component_IonTitle","_component_IonToolbar","_component_IonHeader","_component_data_table","_component_IonContent","_component_IonPage","_openBlock","_createBlock","default","_withCtx","_createVNode","slot","onClick","$event","modal","hide","icon","close","_","_createTextVNode","_toDisplayString","title","asyncRows","rowActionButtons","actionBtns","color","defineComponent","name","components","DataTable","IonButton","IonPage","IonHeader","IonContent","IonToolbar","IonButtons","IonTitle","IonIcon","props","String","Function","actionButtons","canExportCsv","Boolean","setup","computed","btns","push","action","async","_a","includes","substring","__exports__","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","key","_hoisted_5","_hoisted_6","_hoisted_7","_component_ion_col","_component_ion_row","_component_ion_grid","_component_ion_card_header","_component_ion_card_content","_component_ion_card","_component_Layout","style","size","class","_createElementVNode","src","reportIcon","_normalizeStyle","height","subtitle","width","innerHTML","_createElementBlock","_createCommentVNode","useDateRangeFilter","useQuarterFilter","useDateFilter","date","totalClients","config","showIndices","onCustomFilter","onDrilldown","_createSlots","_renderList","$slots","fn","_renderSlot","IonCard","IonCardHeader","IonCardContent","Layout","IonGrid","IonRow","IonCol","Object","Number","canExportPDF","showRefreshButton","customFilters","emits","emit","PatientReportService","getLocationName","f","id","gridSize","startDate","endDate","options","getReportQuarters","q","other","customfilters","Date","dateRange","toastWarning","every","required","isEmpty","values","v","data","REGIMENS","REGIMEN_WEIGHT_DISTRIBUTION","WEIGHT_BAND","FORMULATIONS","RegimenReportService","setReportType","getTptNewInitiations","programID","getRegimenFormulationReport","regimen","formulation","getRegimenReport","getRegimenSwitchReport","isPepfar","pepfar","getRegimensByWeight","getSCReport","component","componentProps","cssClass","backdropDismiss","m","modalController","create","present","onWillDismiss","dismiss","_component_base_report_table","fetchData","onRegenerate","BaseReportTable","report","cohortData","reactive","ref","sortIndexes","aggregations","keys","a","b","reduce","acc","concat","i","index","initialSort","initialSortOrder","toGenderString","r","addAggregation","col","getRegimenRow","group","distribution","total","val","getTotalAggregations","getTotalRegimensAggregations","setTotalMalesRow","txNew","txCurr","txGivenIpt","txScreenTB","isPregnant","patientID","match","accum","cur","setFemaleNotPregnantRow","fnpTD","fnpRegimensRow","buildRows","category","altAgeGroup","toLowerCase","altGender","ageGroups","regenerate","loader","show","setStartDate","setEndDate","setQuarter","getDateIntervalPeriod","initialised","init","start","end","preSort","DISPLAY_DATE_FORMAT","patients","getPatients","patient","Patientservice","findByID","p","getArvNumber","getBirthdate","getCurrentVillage","DrilldownTableVue","age_group"],"mappings":"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","file":"js/chunk-41a25cf6.fbd15e0a.js","sourcesContent":["import { ArtReportService } from \"./art_report_service\";\nimport { AGE_GROUPS } from \"./patient_report_service\";\n\nexport class DisaggregatedReportService extends ArtReportService {\n    gender: string;\n    ageGroup: string;\n    initialize: boolean;\n    rebuildOutcome: boolean;\n\n    constructor() {\n        super()\n        this.gender = ''\n        this.ageGroup = AGE_GROUPS[0]\n        this.initialize = true\n        this.rebuildOutcome = true\n    }\n\n    async init() {\n        this.initialize = true\n        const req = await this.getCohort()\n        if (req && req.temp_disaggregated === 'created') {\n            this.initialize = false\n            return true\n        }\n        return false\n    }\n\n    setAgeGroup(ageGroup: string) {\n        this.ageGroup = ageGroup\n    }\n\n    setInitialization(isInit: boolean) {\n        this.initialize = isInit\n    }\n\n    setRebuildOutcome(isRebuild: boolean) {\n        this.rebuildOutcome = isRebuild\n    }\n\n    setGender(gender: string) {\n        this.gender = gender\n    }\n\n    getGender() {\n        return this.gender\n    }\n\n    getCohort() {\n        return this.getReport('cohort_disaggregated', {\n            'age_group': `${this.ageGroup}`,\n            'rebuild_outcome': `${this.rebuildOutcome}`,\n            'initialize': `${this.initialize}`\n        })\n    }\n\n    getTxIpt() {\n        return this.getReport('clients_given_ipt', { \n            'gender': this.gender, 'age_group': `${this.ageGroup}` \n        })\n    }\n\n    getTxCurrTB() {\n        return this.getReport('screened_for_tb', { \n            'gender': this.gender, 'age_group': `${this.ageGroup}` \n        })\n    }\n\n    getRegimenDistribution() {\n        return this.getReport('disaggregated_regimen_distribution', {\n            'gender': `${this.gender}`, 'age_group': `${this.ageGroup}`\n        })\n    }\n}\n","export function sortByARV(arvNumber: string) {\n  return parseInt(arvNumber.split(\"-\")[2]) || 0\n}","import { sortRows, TableColumnInterface, TableFilterInterface } from '@uniquedj95/vtable';\nimport { get } from 'lodash';\nimport { Service } from '@/services/service';\nimport dayjs from 'dayjs';\n\nfunction sanitize(str: string) {\n  try {\n    return str.replace(/<(?:.|\\n)*?>/gm, \" \")\n      .replace(/\\n/g, \" \")\n      .replace(/\\t/g, \" \")\n      .replace(/\\s{2,}/g, \" \")\n      .replace(/=/g, \" \")\n      .replace(/,/g, \" \")\n      .trim();\n  } catch (error) {\n    return str;\n  }\n}\n\ninterface CsvOptions {\n  columns: TableColumnInterface[];\n  rows: any[];\n  filename: string;\n  quarter?: string;\n  period?: string;\n  filters?: TableFilterInterface;\n}\n\nfunction convertToCsv({columns, rows, quarter, period, filters}: CsvOptions) {\n  let str = columns.filter((column) => column.exportable !== false)\n    .map((column) => column.label)\n    .join(\",\");\n\n  str += \"\\n\";\n  str += sortRows(rows, filters?.sort || []).map((row) => columns\n    .filter(column => column.exportable !== false)\n    .map(column => {\n      let value = get(row, column.path);\n      if (typeof column.formatter === 'function' && value) value = column.formatter(value, row)\n      return sanitize(column.drillable && Array.isArray(value) ? value.length : value);\n    })\n    .join(\",\")\n  ).join(\"\\n\");\n\n  str += \"\\n\" + `Date Created:  ${dayjs().format('DD/MMM/YYYY HH:MM:ss')}`;\n  if (quarter) str += \"\\n\" + `Quarter: ${quarter}`;\n  if (period) str += \"\\n\" + `Quarter: ${period}`;\n  str += \"\\n\" + `e-Mastercard Version : ${Service.getAppVersion()}`;\n  str += \"\\n\" + `API Version ${Service.getApiVersion()}`;\n  str += \"\\n\" + `Site UUID: ${Service.getSiteUUID()}`;\n\n  return str;\n}\n\nexport function exportToCSV(opts: CsvOptions) {\n  const csvData = new Blob([convertToCsv(opts)], { type: \"text/csv;charset=utf-8;\" });\n  const link = document.createElement(\"a\");\n  link.href = window.URL.createObjectURL(csvData);\n  link.setAttribute(\"download\", `${opts.filename}.csv`);\n  document.body.appendChild(link);\n  link.click();\n  document.body.removeChild(link);\n}\n","import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_IonIcon = _resolveComponent(\"IonIcon\")!\n  const _component_IonButton = _resolveComponent(\"IonButton\")!\n  const _component_IonButtons = _resolveComponent(\"IonButtons\")!\n  const _component_IonTitle = _resolveComponent(\"IonTitle\")!\n  const _component_IonToolbar = _resolveComponent(\"IonToolbar\")!\n  const _component_IonHeader = _resolveComponent(\"IonHeader\")!\n  const _component_data_table = _resolveComponent(\"data-table\")!\n  const _component_IonContent = _resolveComponent(\"IonContent\")!\n  const _component_IonPage = _resolveComponent(\"IonPage\")!\n\n  return (_openBlock(), _createBlock(_component_IonPage, null, {\n    default: _withCtx(() => [\n      _createVNode(_component_IonHeader, null, {\n        default: _withCtx(() => [\n          _createVNode(_component_IonToolbar, null, {\n            default: _withCtx(() => [\n              _createVNode(_component_IonButtons, { slot: \"end\" }, {\n                default: _withCtx(() => [\n                  _createVNode(_component_IonButton, {\n                    slot: \"end\",\n                    onClick: _cache[0] || (_cache[0] = ($event: any) => (_ctx.modal.hide())),\n                    \"icon-only\": \"\"\n                  }, {\n                    default: _withCtx(() => [\n                      _createVNode(_component_IonIcon, { icon: _ctx.close }, null, 8, [\"icon\"])\n                    ]),\n                    _: 1\n                  })\n                ]),\n                _: 1\n              }),\n              _createVNode(_component_IonTitle, null, {\n                default: _withCtx(() => [\n                  _createTextVNode(_toDisplayString(_ctx.title), 1)\n                ]),\n                _: 1\n              })\n            ]),\n            _: 1\n          })\n        ]),\n        _: 1\n      }),\n      _createVNode(_component_IonContent, null, {\n        default: _withCtx(() => [\n          _createVNode(_component_data_table, {\n            rows: _ctx.rows,\n            \"async-rows\": _ctx.asyncRows,\n            columns: _ctx.columns,\n            \"row-actions-buttons\": _ctx.rowActionButtons,\n            \"actions-buttons\": _ctx.actionBtns,\n            color: \"custom\"\n          }, null, 8, [\"rows\", \"async-rows\", \"columns\", \"row-actions-buttons\", \"actions-buttons\"])\n        ]),\n        _: 1\n      })\n    ]),\n    _: 1\n  }))\n}","\nimport { computed, defineComponent, PropType } from \"vue\";\nimport { IonButton, IonPage, IonHeader, IonToolbar, IonContent, IonButtons, IonTitle, IonIcon } from \"@ionic/vue\";\nimport { DataTable, ActionButtonInterface, TableColumnInterface, RowActionButtonInterface } from \"@uniquedj95/vtable\";\nimport { close } from \"ionicons/icons\";\nimport { modal } from \"@/utils/modal\";\nimport dayjs from \"dayjs\";\nimport { exportToCSV } from \"../../utils/exports\";\n\nexport default defineComponent({\n  name: \"DrilldownTable\",\n  components: {\n    DataTable,\n    IonButton,\n    IonPage,\n    IonHeader,\n    IonContent,\n    IonToolbar,\n    IonButtons,\n    IonTitle,\n    IonIcon,\n  },\n  props: {\n    title: {\n      type: String,\n      default: \"Report\",\n    },\n    rows: {\n      type: Array as PropType<any[]>,\n      default: () => [],\n    },\n    asyncRows: {\n      type: Function as PropType<() => Promise<any[]>>,\n    },\n    columns: {\n      type: Array as PropType<TableColumnInterface[]>,\n      default: () => [],\n    },\n    rowActionButtons: {\n      type: Array as PropType<RowActionButtonInterface[]>,\n      default: () => [],\n    },\n    actionButtons: {\n      type: Array as PropType<ActionButtonInterface[]>,\n      default: () => [],\n    },\n    canExportCsv: {\n      type: Boolean,\n      default: true,\n    },\n    period: {\n      type: String,\n      default: \"\",\n    },\n  },\n  setup(props){\n    const actionBtns = computed<ActionButtonInterface[]>(() => {\n      const btns = [...props.actionButtons];\n      if (props.canExportCsv) {\n        btns.push({\n          label: \"CSV\",\n          color: \"primary\",\n          action: async (_a, rows, filters, columns) => exportToCSV({\n            rows, \n            filters,\n            columns, \n            period: props.period.includes('Custom') ? props.period.substring(6) : props.period,\n            filename: `${props.title}-${dayjs().format('DD-MMM-YYYY')}`\n          })\n        })\n      }\n      return btns;\n    })\n\n    return {\n      close,\n      modal,\n      actionBtns,\n    }\n  }\n})\n","import { render } from \"./DrilldownTable.vue?vue&type=template&id=63bf706e&ts=true\"\nimport script from \"./DrilldownTable.vue?vue&type=script&lang=ts\"\nexport * from \"./DrilldownTable.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { normalizeStyle as _normalizeStyle, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, renderSlot as _renderSlot, renderList as _renderList, createSlots as _createSlots, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = [\"src\"]\nconst _hoisted_2 = [\"innerHTML\"]\nconst _hoisted_3 = [\"innerHTML\"]\nconst _hoisted_4 = { key: 1 }\nconst _hoisted_5 = { key: 2 }\nconst _hoisted_6 = { key: 3 }\nconst _hoisted_7 = { key: 4 }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ion_col = _resolveComponent(\"ion-col\")!\n  const _component_ion_row = _resolveComponent(\"ion-row\")!\n  const _component_ion_grid = _resolveComponent(\"ion-grid\")!\n  const _component_ion_card_header = _resolveComponent(\"ion-card-header\")!\n  const _component_data_table = _resolveComponent(\"data-table\")!\n  const _component_ion_card_content = _resolveComponent(\"ion-card-content\")!\n  const _component_ion_card = _resolveComponent(\"ion-card\")!\n  const _component_Layout = _resolveComponent(\"Layout\")!\n\n  return (_openBlock(), _createBlock(_component_Layout, null, {\n    default: _withCtx(() => [\n      _createVNode(_component_ion_card, { style: {\"padding\":\"0 !important\"} }, {\n        default: _withCtx(() => [\n          _createVNode(_component_ion_card_header, { style: {\"border-bottom\":\"1px solid #c2c2c2\",\"font-weight\":\"500\",\"color\":\"#000\"} }, {\n            default: _withCtx(() => [\n              _createVNode(_component_ion_grid, null, {\n                default: _withCtx(() => [\n                  _createVNode(_component_ion_row, null, {\n                    default: _withCtx(() => [\n                      _createVNode(_component_ion_col, {\n                        size: \"1\",\n                        class: \"ion-padding ion-margin-end\"\n                      }, {\n                        default: _withCtx(() => [\n                          _createElementVNode(\"img\", {\n                            src: `assets/images/${_ctx.reportIcon}`,\n                            style: _normalizeStyle({height: _ctx.subtitle ? 7 : 5 + 'rem', width: _ctx.subtitle ? 7 : 5 + 'rem'})\n                          }, null, 12, _hoisted_1)\n                        ]),\n                        _: 1\n                      }),\n                      _createVNode(_component_ion_col, null, {\n                        default: _withCtx(() => [\n                          _createElementVNode(\"h1\", { innerHTML: _ctx.title }, null, 8, _hoisted_2),\n                          (_ctx.subtitle)\n                            ? (_openBlock(), _createElementBlock(\"h3\", {\n                                key: 0,\n                                innerHTML: _ctx.subtitle,\n                                style: {\"color\":\"#818181\"}\n                              }, null, 8, _hoisted_3))\n                            : _createCommentVNode(\"\", true),\n                          (_ctx.useDateRangeFilter)\n                            ? (_openBlock(), _createElementBlock(\"h5\", _hoisted_4, \" Period: \" + _toDisplayString(_ctx.period), 1))\n                            : (_ctx.useQuarterFilter)\n                              ? (_openBlock(), _createElementBlock(\"h5\", _hoisted_5, \" Quarter: \" + _toDisplayString(_ctx.quarter.value), 1))\n                              : (_ctx.useDateFilter)\n                                ? (_openBlock(), _createElementBlock(\"h5\", _hoisted_6, \"Date: \" + _toDisplayString(_ctx.dayjs(_ctx.date).format(\"DD/MMM/YYYY\")), 1))\n                                : _createCommentVNode(\"\", true),\n                          (_ctx.totalClients)\n                            ? (_openBlock(), _createElementBlock(\"h5\", _hoisted_7, \"Total Clients: \" + _toDisplayString(_ctx.totalClients), 1))\n                            : _createCommentVNode(\"\", true)\n                        ]),\n                        _: 1\n                      })\n                    ]),\n                    _: 1\n                  })\n                ]),\n                _: 1\n              })\n            ]),\n            _: 1\n          }),\n          _createVNode(_component_ion_card_content, {\n            class: \"ion-no-padding\",\n            style: {\"min-height\":\"45vh\"}\n          }, {\n            default: _withCtx(() => [\n              _createVNode(_component_data_table, {\n                rows: _ctx.rows,\n                \"async-rows\": _ctx.asyncRows,\n                columns: _ctx.columns,\n                \"actions-buttons\": _ctx.actionBtns,\n                \"row-actions-buttons\": _ctx.rowActionButtons,\n                \"custom-filters\": _ctx.filters,\n                config: { showIndices: _ctx.showIndices },\n                onCustomFilter: _ctx.onCustomFilter,\n                onDrilldown: _ctx.onDrilldown,\n                color: \"custom\"\n              }, _createSlots({ _: 2 }, [\n                _renderList(_ctx.$slots, (_, name) => {\n                  return {\n                    name: name,\n                    fn: _withCtx(({ filter }) => [\n                      _renderSlot(_ctx.$slots, name, { filter: filter })\n                    ])\n                  }\n                })\n              ]), 1032, [\"rows\", \"async-rows\", \"columns\", \"actions-buttons\", \"row-actions-buttons\", \"custom-filters\", \"config\", \"onCustomFilter\", \"onDrilldown\"])\n            ]),\n            _: 3\n          })\n        ]),\n        _: 3\n      })\n    ]),\n    _: 3\n  }))\n}","\nimport { computed, defineComponent, PropType } from \"vue\";\nimport { IonCard, IonCardContent, IonCardHeader, IonGrid, IonRow, IonCol } from \"@ionic/vue\";\nimport { PatientReportService } from \"@/apps/ART/services/reports/patient_report_service\";\nimport dayjs from \"dayjs\";\nimport Layout from \"@/apps/EMC/Components/Layout.vue\";\nimport { ArtReportService } from \"@/apps/ART/services/reports/art_report_service\";\nimport { Option } from '@/components/Forms/FieldInterface';\nimport { \n  ActionButtonInterface, \n  CustomFilterInterface, \n  DataTable, \n  RowActionButtonInterface, \n  TableColumnInterface \n} from '@uniquedj95/vtable'\nimport { toastWarning } from \"@/utils/Alerts\";\nimport { isEmpty } from \"lodash\";\nimport { exportToCSV } from \"../../utils/exports\";\n\nexport default defineComponent({\n  name: \"BaseReportTable\",\n  components: {\n    IonCard,\n    IonCardHeader,\n    IonCardContent,\n    Layout,\n    IonGrid,\n    IonRow,\n    IonCol,\n    DataTable,\n  },\n  props: {\n    title: {\n      type: String,\n      default: \"Report\",\n    },\n    subtitle: {\n      type: String,\n      default: \"\",\n    },\n    period: {\n      type: String,\n      default: \"\",\n    },\n    date: {\n      type: String,\n      default: \"\",\n    },\n    quarter: {\n      type: Object as PropType<Option>,\n      default: () => ({}),\n    },\n    totalClients: {\n      type: Number,\n      default: 0,\n    },\n    reportIcon: {\n      type: String,\n      default: \"reports/report.png\",\n    },\n    columns: {\n      type: Array as PropType<TableColumnInterface[]>,\n      default: () => [],\n    },\n    rows: {\n      type: Array as PropType<any[]>,\n      default: () => [],\n    },\n    asyncRows: {\n      type: Function as PropType<() => Promise<any[]>>,\n    },\n    actionButtons: {\n      type: Array as PropType<ActionButtonInterface[]>,\n      default: () => [],\n    },\n    rowActionButtons: {\n      type: Array as PropType<RowActionButtonInterface[]>,\n      default: () => [],\n    },\n    canExportCsv: {\n      type: Boolean,\n      default: true,\n    },\n    canExportPDF: {\n      type: Boolean,\n      default: true,\n    },\n    showRefreshButton: {\n      type: Boolean,\n      default: true,\n    },\n    useDateRangeFilter: {\n      type: Boolean,\n      default: false,\n    },\n    useQuarterFilter: {\n      type: Boolean,\n      default: false,\n    },\n    useDateFilter: {\n      type: Boolean,\n      default: false,\n    },\n    customFilters: {\n      type: Array as PropType<CustomFilterInterface[]>,\n      default: () => [],\n    },\n    showIndices: {\n      type: Boolean,\n      default: false\n    },\n    filename: {\n      type: String,\n      default: \"\",\n    }\n  },\n  emits: [\"regenerate\", \"customFilter\", \"drilldown\"],\n  setup(props, { emit }) {\n    const filename = computed(() => {\n      return `${PatientReportService.getLocationName()} ${props.filename || props.title} ${ props.period ? props.period : props.date }`;\n    })\n\n    const actionBtns = computed<ActionButtonInterface[]>(() => {\n      const btns = [...props.actionButtons];\n\n      if(props.showRefreshButton){\n        btns.push({ label: \"Refresh/Rebuild\", color: 'success', action: () => emit(\"regenerate\") });\n      }\n\n      if (props.canExportCsv) {\n        btns.push({\n          label: \"CSV\",\n          color: \"primary\",\n          action: async (_a, rows, filters, columns) => exportToCSV({\n            rows, \n            filters,\n            columns, \n            quarter: props.quarter?.label,\n            period: props.period,\n            filename: filename.value\n          })\n        })\n      }\n      return btns;\n    })\n\n    const filters = computed<CustomFilterInterface[]>(() => {\n      const f = [...props.customFilters];\n      if(props.useDateRangeFilter) {\n        f.push({\n          id: \"dateRange\",\n          label: \"Date Range\",\n          type: \"dateRange\",\n          gridSize: 5,\n          value: {\n            startDate: props.period.split(\"-\")[0],\n            endDate: props.period.split(\"-\")[1],\n          },\n        })\n      } else if(props.useQuarterFilter) {\n        f.push({\n          id: \"quarter\",\n          label: \"Quarter:\",\n          type: \"select\",\n          value: props.quarter,\n          options: ArtReportService.getReportQuarters().map(q => ({label: q.name, value: q.name, other: q})),\n        })\n      } else if (props.useDateFilter) {\n        f.push({\n          id: \"date\",\n          label: \"Date\",\n          type: \"date\",\n          value: props.date,\n        })\n      }\n      return f;\n    })\n\n    const onCustomFilter = (customfilters: Record<string, any>) => {\n      if (\"dateRange\" in customfilters && (new Date(customfilters.dateRange.startDate) > new Date(customfilters.dateRange.endDate))) {\n        return toastWarning(\"Invalid date range\")\n      }\n      if (filters.value.every(f => {\n        if (f.required === false) return true;\n        if (!isEmpty(customfilters[f.id]) && typeof customfilters[f.id] === 'object') return Object.values(customfilters[f.id]).every(v => !isEmpty(v));\n        return !isEmpty(customfilters[f.id]);\n      })) {\n        return emit(\"customFilter\", customfilters);\n      }\n      toastWarning(\"Invalid filters\")\n    }\n\n    const onDrilldown = (data: {column: TableColumnInterface; row: any}) => {\n      emit(\"drilldown\", data);\n    }\n\n    return {\n      actionBtns,\n      filters,\n      onCustomFilter,\n      onDrilldown,\n      dayjs,\n    }\n  }\n})\n","import { render } from \"./BaseReportTable.vue?vue&type=template&id=325b5b18&ts=true\"\nimport script from \"./BaseReportTable.vue?vue&type=script&lang=ts\"\nexport * from \"./BaseReportTable.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { ArtReportService } from './art_report_service';\n\nexport const REGIMENS = [\n    '0A', '2A', '4A', '5A', '6A', '7A', '8A', '9A', '10A', '11A', '12A', '13A', '14A', '15A', '16A', '17A',\n    '0P', '2P', '4PP', '4PA', '9PP', '9PA', '11PP', '11PA', '12PP', '12PA', '14PP', '14PA', '15PP', '15PA', '16P', '17PP', '17PA'\n]\n\nexport const REGIMEN_WEIGHT_DISTRIBUTION = [\n    '0A', '2A', '4A', '5A', '6A', '7A', '8A', \n    '9A', '10A', '11A', '12A', '13A', '14A', '15A', '16A', '17A',\n    '0P', '2P', '4P', '4PP', '4PA', '9P', '9PP', '9PA', '11P', '11PP', \n    '11PA', '12PP', '12PA', '14P', '14PP', '14PA', '15P', '15PP', \n    '15PA', '16P', '17P', '17PP', '17PA'\n]\nexport const WEIGHT_BAND = [\n    '10 - 13.9 Kg',\n    '14 - 19.9 Kg',\n    '20 - 24.9 Kg',\n    '25 - 29.9 Kg',\n    '3 - 3.9 Kg',\n    '30 - 34.9 Kg',\n    '35 - 39.9 Kg',\n    '4 - 4.9 Kg',\n    '40 Kg +',\n    '40 - 49.9 Kg',\n    '50 Kg +',\n    '6 - 9.9 Kg',\n    'Unknown'\n]\n\nexport const FORMULATIONS = [\n    'pellets',\n    'tablets',\n    'granules'\n]\n\nexport class RegimenReportService extends ArtReportService {\n    type: string;\n    constructor() {\n        super()\n        this.type = 'pepfar'\n    }\n\n    setReportType(type: string) {\n        this.type = type\n    }\n\n    getTptNewInitiations() {\n        return this.getReport(`programs/${this.programID}/reports/tpt_newly_initiated`)\n    }\n\n    getRegimenFormulationReport(regimen: string, formulation: string) {\n        return this.getReport(`programs/${this.programID}/reports/regimens_and_formulations`, { regimen, formulation })\n    }\n\n    getRegimenReport() {\n        return this.getReport('regimen_report', { type: this.type})\n    }\n\n    getRegimenSwitchReport(isPepfar=false) {\n        return this.getReport('regimen_switch', { pepfar: isPepfar })\n    }\n\n    getRegimensByWeight() {\n        return this.getReport(`programs/${this.programID}/reports/regimens_by_weight_and_gender`)\n    }\n    \n    getSCReport(isPepfar=false) {\n        return this.getReport('sc_arvdisp', { pepfar: isPepfar })\n    }\n    \n}\n","import { modalController } from \"@ionic/vue\";\n\nexport const modal = {\n  async show(component: any, componentProps?: Record<string, any>, cssClass = 'custom-modal', backdropDismiss = true) {\n    const m = await modalController.create({\n      component,\n      cssClass,\n      backdropDismiss,\n      componentProps,\n    });\n    m.present();\n    const { data } = await m.onWillDismiss();\n    if(data) return data;\n  },\n  async hide(data?: Record<string, any>) {\n    await modalController.dismiss(data);\n  }\n}","import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_base_report_table = _resolveComponent(\"base-report-table\")!\n\n  return (_openBlock(), _createBlock(_component_base_report_table, {\n    title: \"PEPFAR Disaggregated Report\",\n    \"report-icon\": \"reports/split.png\",\n    columns: _ctx.columns,\n    rows: _ctx.rows,\n    period: _ctx.period,\n    useDateRangeFilter: \"\",\n    onCustomFilter: _ctx.fetchData,\n    onDrilldown: _ctx.onDrilldown,\n    onRegenerate: _ctx.onRegenerate\n  }, null, 8, [\"columns\", \"rows\", \"period\", \"onCustomFilter\", \"onDrilldown\", \"onRegenerate\"]))\n}","\nimport { computed, defineComponent, reactive, ref } from \"vue\";\nimport { loader } from \"@/utils/loader\";\nimport BaseReportTable from \"@/apps/EMC/Components/tables/BaseReportTable.vue\";\nimport { TableColumnInterface } from \"@uniquedj95/vtable\";\nimport { modal } from \"@/utils/modal\";\nimport DrilldownTableVue from \"@/apps/EMC/Components/tables/DrilldownTable.vue\";\nimport dayjs from \"dayjs\";\nimport { DisaggregatedReportService } from \"@/apps/ART/services/reports/disaggregated_service\";\nimport { toastWarning } from \"@/utils/Alerts\";\nimport { get, isEmpty } from \"lodash\";\nimport { AGE_GROUPS } from \"@/apps/ART/services/reports/patient_report_service\";\nimport { REGIMENS } from \"@/apps/ART/services/reports/regimen_report_service\"\nimport { Patientservice } from \"@/services/patient_service\";\nimport { DISPLAY_DATE_FORMAT } from \"@/utils/Date\";\nimport { toGenderString } from \"@/utils/Strs\";\nimport { sortByARV } from \"@/apps/EMC/utils/common\";\n\ninterface Category {\n  index: number;\n  gender: string;\n  altGender: string;\n  ageGroups: string[];\n  altAgeGroup?: string;\n  other?: string;\n}\nexport default defineComponent({\n  name: \"CohortDisaggregated\",\n  components: { BaseReportTable },\n  setup() {\n    const report = new DisaggregatedReportService()\n    let cohortData = reactive({} as Record<string, any>);\n    const period = ref(\"-\");\n    let sortIndexes = reactive({} as Record<string, any[]>);\n    let aggregations = reactive([] as any[]);\n    \n    const rows = computed(() => \n      Object.keys(sortIndexes).sort((a, b) => parseInt(a) - parseInt(b))\n        .reduce((acc, key) => acc.concat(sortIndexes[key]), [] as any[])\n        .map((row, i) => ({ index: i + 1, ...row, }))\n    )\n    \n    const columns: TableColumnInterface[] = [\n      { path: \"index\", label: \"#\", initialSort: true, initialSortOrder: 'asc'}, \n      { path: \"age_group\", label: \"Age Group\" },\n      { path: \"gender\", label: \"Gender\", formatter: toGenderString },\n      { path: \"txNew\", label: \"Tx new (new on ART)\", drillable: true },\n      { path: \"txCurr\", label: \"TX curr (receiving ART)\", drillable: true },\n      { path: \"txGivenIpt\", label: \"TX curr (received IPT)\", drillable: true },\n      { path: \"txScreenTB\", label: \"TX curr (screened for TB)\", drillable: true },\n      ...REGIMENS.map(r => ({ path: r, label: r, drillable: true })),\n      { path: \"N/A\", label: \"Unknown\", drillable: true },\n      { path: \"total\", label: \"Total\", drillable: true },\n    ]\n\n    const addAggregation = (col: string, gender: string, data = [] as any[]) => {\n      aggregations.push({col, gender, data});\n    }\n\n    const getRegimenRow = async (group: string, gender: string) => {\n      const row: Record<string, any> = {}\n      const distribution = await report.getRegimenDistribution()\n      for (const regimen of [...REGIMENS, 'N/A']) {\n        const data = get(distribution, regimen, [])\n        row[regimen] = data\n        addAggregation(regimen, gender, data)\n      }\n      row.total = Object.values(row).reduce((acc, val) => acc.concat(val), [])\n      addAggregation('regimenTotals', gender, row.total)\n      return row\n    }\n\n    const getTotalAggregations = (column: string, gender: string) => {\n      return aggregations\n        .filter(a => a.col === column && a.gender === gender)\n        .reduce((acc, val) => acc.concat(val.data), [])\n    }\n\n    const getTotalRegimensAggregations = (gender: string) => {\n      const row: Record<string, any> = {}\n      for (const regimen of [...REGIMENS, 'N/A']) {\n        row[regimen] = getTotalAggregations(regimen, gender)\n      }\n      return row\n    }\n\n    const setTotalMalesRow = (index: number) => {\n      sortIndexes[index] = [{\n        'age_group': \"All\",\n        gender: \"Male\",\n        txNew: getTotalAggregations('txNew', 'Male'),\n        txCurr: getTotalAggregations('txCurr', 'Male'),\n        txGivenIpt: getTotalAggregations('txGivenIpt', 'Male'),\n        txScreenTB: getTotalAggregations('txScreenTB', 'Male'),\n        ...getTotalRegimensAggregations(\"Male\"),\n        total: getTotalAggregations('regimenTotals', 'Male'),\n      }]\n    }\n\n    const isPregnant = (patientID: number, column: string) => {\n      return aggregations\n        .filter((a: any) => a.gender.match(/fp|fbf/i) && a.col === column)\n        .reduce((accum: any, cur: any) => accum.concat(cur.data || []), [])\n        .includes(patientID)\n    }\n\n    const setFemaleNotPregnantRow = (index: number) => {\n      const fnpTD = (column: string) => aggregations\n        .filter((a: any) => a.gender === 'Female' && a.col === column)\n        .reduce((accum: any, cur: any) => accum.concat(cur.data.filter((i: any) => !isPregnant(i, column))), [])\n\n      const fnpRegimensRow = () => {\n        const row: Record<string, any> = {}\n        for (const regimen of [...REGIMENS, 'N/A']) {\n          row[regimen] = fnpTD(regimen)\n        }\n        return row\n      }\n\n      sortIndexes[index] = [{\n        'age_group': \"All\",\n        gender: \"FNP\",\n        txNew: fnpTD('txNew'),\n        txCurr: fnpTD('txCurr'),\n        txGivenIpt: fnpTD('txGivenIpt'),\n        txScreenTB: fnpTD('txScreenTB'),\n        ...fnpRegimensRow(),\n        total: fnpTD('regimenTotals'),\n      }]\n    }\n\n    const buildRows = async (category: Category) => {\n      report.setGender(category.altAgeGroup ? category.altAgeGroup.toLowerCase() : category.altGender.toLowerCase());\n      for (const ageGroup of category.ageGroups) {\n        let txNew = []\n        let txCurr = []\n        let txGivenIpt = []\n        let txScreenTB = []\n        const group = category.altAgeGroup ? category.altAgeGroup : ageGroup\n        report.setAgeGroup(group);\n\n        if(!(group in cohortData)) {\n          const data = await report.getCohort()\n          report.setRebuildOutcome(false)\n          cohortData[group] = isEmpty(data) ? {} : data[group]\n        }\n\n        if(!isEmpty(cohortData[group])) {\n          txNew = get(cohortData, `${group}.${category.gender}.tx_new`, [])\n          txCurr = get(cohortData, `${group}.${category.gender}.tx_curr`, [])\n          txGivenIpt = await report.getTxIpt()\n          txScreenTB = await report.getTxCurrTB()\n          addAggregation('txNew', category.altGender, txNew)\n          addAggregation('txCurr', category.altGender, txCurr)\n          addAggregation('txGivenIpt', category.altGender, txGivenIpt)\n          addAggregation('txScreenTB', category.altGender, txScreenTB)\n        }\n\n\n        switch(report.getGender()) {\n          case 'breastfeeding':\n            report.setAgeGroup('All')\n            report.setGender('Fbf')\n            break\n          case 'pregnant':\n            report.setAgeGroup('All')\n            report.setGender('FP')\n            break\n        }\n\n        if(!sortIndexes[category.index]) sortIndexes[category.index] = []\n        sortIndexes[category.index].push({\n          'age_group': ageGroup,\n          gender: category.altGender,\n          txNew,\n          txCurr,\n          txGivenIpt,\n          txScreenTB,\n          ...await getRegimenRow(group, category.altGender),\n        })\n      }\n    }\n\n    const fetchData =  async ({ dateRange }: Record<string, any>, regenerate=false) => {\n      await loader.show()\n      report.setStartDate(dateRange.startDate)\n      report.setEndDate(dateRange.endDate)\n      report.setRebuildOutcome(regenerate)\n      report.setQuarter(\"pepfar\")     \n      period.value = report.getDateIntervalPeriod()\n      const initialised = await report.init()\n      if (!initialised) return toastWarning('Unable to initialise report')\n\n      await buildRows({index: 1, gender: \"F\", altGender: \"Female\", ageGroups: AGE_GROUPS })\n      await buildRows({index: 2, gender: \"M\", altGender: \"Male\", ageGroups: AGE_GROUPS })\n      setTotalMalesRow(3)\n      await buildRows({index: 4, gender: \"F\", altGender: \"FP\", ageGroups: ['All'], altAgeGroup: 'Pregnant' })\n      await buildRows({index: 6, gender: \"F\", altGender: \"FBf\", ageGroups: ['All'], altAgeGroup: 'Breastfeeding' })\n      setFemaleNotPregnantRow(5)\n      \n      await loader.hide();\n    }\n\n    const onRegenerate = async () => {\n      sortIndexes = {}\n      aggregations = []\n      cohortData = {}\n      const [ start, end ] = period.value.split('-')\n      if(start && end ) {\n        await fetchData({dateRange: {\n          startDate: dayjs(start).format(\"YYYY-MM-DD\"), \n          endDate: dayjs(end).format(\"YYYY-MM-DD\")\n        }}, true)\n      }\n    }\n\n    const onDrilldown = async (data: {column: TableColumnInterface; row: any}) => {\n      const columns: TableColumnInterface[] = [\n        { path: \"arv_number\", label: \"ARV Number\", preSort: sortByARV, initialSort: true },\n        { path: \"birthdate\", label: \"Date of Birth\", formatter: (v) => dayjs(v).format(DISPLAY_DATE_FORMAT) },\n        { path: \"gender\", label: \"Gender\", formatter: toGenderString },\n        { path: \"address\", label: \"Address\" }\n      ]\n      const patients = data.row[data.column.path]\n      const rows = ref<Array<any>>([])\n      const getPatients = async () => {\n        for(const patient of patients) {\n          const data = await Patientservice.findByID(patient)\n          const p = new Patientservice(data)\n          rows.value.push({\n            \"arv_number\": p.getArvNumber(),\n            \"birthdate\": p.getBirthdate(),\n            \"gender\": p.getGender(),\n            \"address\": `${p.getCurrentVillage()}`\n          })\n        }\n      }\n\n      getPatients();\n\n      await modal.show(DrilldownTableVue, {\n        columns,\n        rows: rows.value,\n        title: `${data.row.age_group} ${data.column.label} | ${data.row.gender}s`,\n      })\n    }\n\n    return {\n      rows,\n      columns,\n      period,\n      fetchData,\n      onDrilldown,\n      onRegenerate,\n    }\n  }\n})\n","import { render } from \"./PepfarDisaggregated.vue?vue&type=template&id=f5307852&ts=true\"\nimport script from \"./PepfarDisaggregated.vue?vue&type=script&lang=ts\"\nexport * from \"./PepfarDisaggregated.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}