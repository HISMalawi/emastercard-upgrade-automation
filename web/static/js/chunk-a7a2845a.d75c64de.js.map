{"version":3,"sources":["webpack:///./src/apps/AETC/views/encounters/OutcomeStatus.vue?1dfc","webpack:///./src/apps/AETC/services/patient_referral_service.ts","webpack:///./src/apps/AETC/services/patient_admit_service.ts","webpack:///./src/apps/AETC/views/encounters/OutcomeStatus.vue","webpack:///./src/apps/AETC/views/encounters/OutcomeStatus.vue?df48","webpack:///./src/views/EncounterMixin.vue","webpack:///./src/views/EncounterMixin.vue?fc39","webpack:///./src/components/Forms/HisStandardForm.vue?8e31","webpack:///./src/components/Forms/HisStandardForm.vue","webpack:///./src/components/Forms/HisStandardForm.vue?5176","webpack:///./src/guidelines/encounter_guidelines.ts","webpack:///./src/utils/GuidelineEngine.ts","webpack:///./src/components/Forms/BaseFormElements.ts","webpack:///./src/utils/HisFormHelpers/LocationFieldOptions.ts","webpack:///./src/components/FormElements lazy ^\\.\\/.*\\.vue$ namespace object"],"names":["render","_ctx","_cache","$props","$setup","$data","$options","_component_his_standard_form","_resolveComponent","_openBlock","_createBlock","cancelDestinationPath","cancelDestination","fields","onFinishAction","onSubmit","PatientReferralService","AppEncounterService","constructor","patientID","providerID","super","PatientAdmitService","defineComponent","components","HisStandardForm","mixins","EncounterMixinVue","data","referralService","admissionService","watch","ready","isReady","this","getFields","immediate","deep","methods","formData","computedData","opd_outcome","value","createEncounter","admissionData","resolveObs","saveObservationList","referralData","nextTask","id","helpText","type","FieldType","TT_SELECT","validation","Validation","required","options","label","computedValue","tag","obs","buildValueText","condition","_","filter","getFacilities","config","showKeyboard","isFilterDataViaApi","other","buildValueCodedFromConceptId","concept_id","getSpecialistClinics","getFacilityWards","__exports__","patient","providers","facts","sessionDate","apiDate","encounterName","isBdeMode","birthDate","outcome","outcomeStartDate","handler","route","params","patient_id","parseInt","Store","get","then","patientData","setEncounterFacts","checkEncounterGuidelines","computed","patientDashboardUrl","runflowState","state","states","FlowState","SET_PROVIDER","selection","username","split","provider","find","person_id","CONTINUE","CHANGE_SESSION_DATE","$router","push","EXIT","CHANGE_PATIENT_OUTCOME","GO_TO_PATIENT_DASHBOARD","gotoPatientDashboard","findings","matchToGuidelines","ENCOUNTER_GUIDELINES","index","_finding$actions","_finding$actions3","finding","actions","alert","_finding$actions2","status","_finding$actions4","flowState","program","startDate","e","console","error","toastDanger","ProgramService","getSessionDate","getCachedApiDate","isBDE","getBirthdate","$route","name","toString","toUpperCase","sort","a","b","usernameA","usernameB","map","p","_p$person","isEmpty","person","names","_p$person2","latestName","given_name","family_name","toOption","mapStrToOptions","items","i","path","yesNoOptions","toYesNoOption","values","mapOptions","option","yesNoUnknownOptions","Object","d","reduce","accum","cur","Array","isArray","concat","Promise","all","inArray","arr","expression","length","validateSeries","conditions","_resolveDynamicComponent","formType","skipSummary","activeField","onOnFinish","onFinish","onOnIndex","onIndex","TouchScreenForm","emits","props","Function","Boolean","default","String","$emit","dformat","HisDate","toStandardHisDisplayFormat","priority","async","action","infoActionSheet","slot","color","modal","optionsActionSheet","role","isCondition","ignored","undefined","prop","includes","every","sortByPriority","sortByWeight","weight","guidelines","target","targetEvent","sortBy","matches","guidelineIndex","targetValidations","some","title","description","text","info","COMPONENT_REFS","TT_ASYNC_MULTI_SELECT","TT_LINKAGE_CODE","TT_MULTI_SELECT_GRID","TT_AGE_INPUT","TT_BARCODE","TT_NOTE","TT_CARD_SELECTOR","TT_MULTIPLE_SELECT","TT_TEXT","TT_NUMBER","TT_MONTHLY_DAYS","TT_ART_REGIMEN_SELECTION","TT_NEXT_VISIT_INTERVAL_SELECTION","TT_TABLE_VIEWER","TT_DOSAGE_INPUT","TT_YES_NO","TT_MULTIPLE_YES_NO","TT_WEIGHT_CHART","TT_VITALS_ENTRY","TT_APPOINTMENTS_ENTRY","TT_COMPLAINTS_PICKER","TT_CLINIC_HOLIDAY_PICKER","TT_SUMMARY","TT_ART_STAGING_SUMMARY","TT_ADHERENCE_INPUT","TT_LAB_ORDERS","TT_PERSON_RESULT_VIEW","TT_PROGRAM_SELECTION","TT_DATE_PICKER","TT_RELATION_SELECTION","TT_FILING_NUMBER_VIEW","TT_PERSON_MATCH_VIEW","TT_FULL_DATE","TT_BATCH_ENTRY","TT_BATCH_VERIFICATION","TT_BATCH_MOVEMENT","TT_IP_ADDRESS","TT_TEXT_BANNER","TT_DISPENSATION_INPUT","TT_DATA_TABLE","TT_GROUP_SELECTOR","TT_ANC_PREGNANCY_INPUT_CONFIG","TT_ANC_PREGNANCY_DETAILS_INPUT","TT_ANC_LMP_DATE_INPUT","TT_DRUG_TRANSFER_IN","TT_GRID_SELECTOR","TT_ANC_DRUGSET_INPUT","TT_RADIOLOGY_PICKER","TT_PRESCRIPTION_INPUT","TT_INFINITE_SCROLL_MULTIPLE_SELECT","TT_DRUG_DISPENSER","facilities","LocationService","f","trim","facility","location_id","getLabFacilities","getLabs","wards","ward","clinics","clinic","getRegions","regions","region","region_id","getDistricts","regionID","districts","district","district_id","getTraditionalAuthorities","districtID","TAs","TA","traditional_authority_id","getVillages","traditionalAuthorityID","villages","village","village_id","getVillagesByName","page","getLandmarks","landmarks","landmark","code","webpackAsyncContext","req","__webpack_require__","o","resolve","Error","ids","slice","keys","module","exports"],"mappings":"yIAEM,SAAUA,EAAOC,EAAUC,EAAYC,EAAYC,EAAYC,EAAWC,GAC9E,MAAMC,EAA+BC,8BAAkB,qBAEvD,OAAQC,yBAAcC,yBAAaH,EAA8B,CAC/DI,sBAAuBV,EAAKW,kBAC5BC,OAAQZ,EAAKY,OACbC,eAAgBb,EAAKc,UACpB,KAAM,EAAG,CAAC,wBAAyB,SAAU,mB,4ECP5C,MAAOC,UAA+BC,OACxCC,YAAYC,EAAmBC,GAC3BC,MAAMF,EAAW,IAAKC,ICFxB,MAAOE,UAA4BL,OACrCC,YAAYC,EAAmBC,GAC3BC,MAAMF,EAAW,GAAIC,ICOdG,mCAAgB,CAC7BC,WAAY,CAAEC,wBACdC,OAAQ,CAACC,QACTC,KAAMA,KAAA,CACJC,gBAAiB,GACjBC,iBAAkB,KAEpBC,MAAO,CACLC,MAAO,CACL,cAAcC,GACTA,IACDC,KAAKL,gBAAkB,IAAIb,EAAuBkB,KAAKf,UAAWe,KAAKd,YACvEc,KAAKJ,iBAAmB,IAAIR,EAAoBY,KAAKf,UAAWe,KAAKd,YACrEc,KAAKrB,OAASqB,KAAKC,cAGvBC,WAAW,EACXC,MAAM,IAGVC,QAAS,CACP,eAAeC,EAAeC,GAC5B,GAAkC,cAA/BD,EAASE,YAAYC,MAAuB,OACvCR,KAAKJ,iBAAiBa,kBAC5B,MAAMC,QAAsBV,KAAKW,WAAW,IAAIL,GAAe,mBACzDN,KAAKJ,iBAAiBgB,oBAAoBF,OAC3C,OACCV,KAAKL,gBAAgBc,kBAC3B,MAAMI,QAAqBb,KAAKW,WAAW,IAAIL,GAAe,kBACxDN,KAAKL,gBAAgBiB,oBAAoBC,GAGjDb,KAAKc,YAEPb,YACE,MAAO,CACL,CACEc,GAAI,cACJC,SAAU,iBACVC,KAAMC,OAAUC,UAChBC,WAAaZ,GAAea,OAAWC,SAASd,GAChDe,QAASA,IACA,CACL,CAAEC,MAAO,QAAShB,MAAO,aACzB,CAAEgB,MAAO,oBAAqBhB,MAAO,qBACrC,CAAEgB,MAAO,mCAAoChB,MAAO,uBAI1D,CACEO,GAAI,gBACJC,SAAU,uBACVC,KAAMC,OAAUC,UAChBC,WAAaZ,GAAea,OAAWC,SAASd,GAChDiB,cAAeA,EAAGjB,YAAoB,CACpCkB,IAAK,WACLC,IAAK3B,KAAKL,gBAAgBiC,eAAe,WAAYpB,KAEvDqB,UAAYlD,GAA6C,sBAA7BA,EAAO4B,YAAYC,MAC/Ce,QAASA,CAACO,EAAQC,EAAO,KAAOC,eAAcD,GAC9CE,OAAQ,CACJC,cAAc,EACdC,oBAAoB,IAG1B,CACEpB,GAAI,oBACJC,SAAU,gBACVC,KAAMC,OAAUC,UAChBC,WAAaZ,GAAea,OAAWC,SAASd,GAChDiB,cAAeA,EAAGW,YAAoB,CACpCV,IAAK,WACLC,IAAK3B,KAAKL,gBAAgB0C,6BAA6B,oBAAqBD,EAAME,cAEpFT,UAAYlD,GAA6C,sBAA7BA,EAAO4B,YAAYC,MAC/Ce,QAASA,IAAMgB,iBACfN,OAAQ,CAAEC,cAAc,IAE1B,CACEnB,GAAI,QACJC,SAAU,cACVC,KAAMC,OAAUC,UAChBU,UAAYlD,GAA6C,cAA7BA,EAAO4B,YAAYC,MAC/CY,WAAaZ,GAAea,OAAWC,SAASd,GAChDiB,cAAeA,EAAGjB,YAAoB,CACpCkB,IAAK,YACLC,IAAK3B,KAAKJ,iBAAiBgC,eAAe,gBAAiBpB,KAE7De,QAASA,CAACO,EAAQC,EAAO,KAAOS,eAAiBT,GACjDE,OAAQ,CACJC,cAAc,EACdC,oBAAoB,S,qBCjGlC,MAAMM,EAA2B,IAAgB,EAAQ,CAAC,CAAC,SAAS3E,KAErD,gB,sKCSAuB,+BAAgB,CAC3BC,WAAY,CAAEC,wBACdG,KAAMA,KAAA,CACFgD,QAAS,GACT/D,OAAQ,GACRM,UAAW,GACXC,YAAa,EACbyD,UAAW,GACXC,MAAO,CACHC,YAAa,GACbC,QAAS,GACTC,cAAe,MACfJ,UAAW,GACXK,WAAW,EACXC,UAAW,GACXC,QAAS,GACTC,iBAAkB,IAEtBrD,OAAO,IAEXD,MAAO,CACJ,OAAU,CACLuD,QAAQC,GACDA,EAAMC,OAAOC,YAAcvD,KAAKf,WAAaoE,EAAMC,OAAOC,aACzDvD,KAAKf,UAAYuE,SAASH,EAAMC,OAAOC,YACvCE,OAAMC,IAAI,iBAAkB,CAAEzE,UAAWe,KAAKf,YACzC0E,KAAKC,IACF5D,KAAK0C,QAAUkB,EACf5D,KAAK6D,oBAAoBF,KAAK,KAC1B3D,KAAK8D,2BAA2BH,KAAK,KACjC3D,KAAKF,OAAQ,UAMrCI,WAAW,EACXC,MAAM,IAGd4D,SAAU,CACNrF,oBACI,OAAOsB,KAAKgE,wBAGpB5D,QAAS,CACL6D,aAAaC,EAAkBZ,EAAO,MAClC,MAAMa,EAAc,GAmBpB,GAlBAA,EAAOC,OAAUC,cAAiBC,IAC9B,MAAQC,GAAaD,EAAUE,MAAM,KAC/BC,EAAWC,kBAAK1E,KAAK2C,UAAW,CAAE4B,aAExC,OADIE,IAAUzE,KAAKd,WAAauF,EAASE,WAClCP,OAAUQ,UAErBT,EAAOC,OAAUS,qBAAuB,KACpC7E,KAAK8E,QAAQC,KAAK,kDAAkD/E,KAAKf,WAClEmF,OAAUY,MAErBb,EAAOC,OAAUa,wBAA0B,KACvCjF,KAAK8E,QAAQC,KAAK,qBAAqB/E,KAAKf,WACrCmF,OAAUY,MAErBb,EAAOC,OAAUc,yBAA2B,KACxClF,KAAKmF,uBACEf,OAAUY,MAEjBd,KAASC,EACT,OAAOA,EAAOD,GAAOZ,IAG7B,iCACI,MAAM8B,EAAWC,eAAkBrF,KAAK4C,MAAO0C,QAC/C,IAAI,MAAMC,KAASH,EAAU,KAAAI,EAAAC,EACzB,MAAMC,EAAUN,EAASG,GACzB,GAAW,OAAPG,QAAO,IAAPA,GAAgB,QAATF,EAAPE,EAASC,eAAO,IAAAH,GAAhBA,EAAkBI,MAAO,KAAAC,EACzB,MAAMC,EAAS9F,KAAKiE,mBAA2B,OAAPyB,QAAO,IAAPA,GAAgB,QAATG,EAAPH,EAASC,eAAO,IAAAE,OAAT,EAAPA,EAAkBD,MAAM5F,KAAK4C,SACrE,GAAIkD,IAAW1B,OAAUY,KAAM,OAEnC,GAAW,OAAPU,QAAO,IAAPA,GAAgB,QAATD,EAAPC,EAASC,eAAO,IAAAF,GAAhBA,EAAkBnB,UAAW,KAAAyB,EAC7B,MAAMzB,QAAyB,OAAPoB,QAAO,IAAPA,GAAgB,QAATK,EAAPL,EAASC,eAAO,IAAAI,OAAT,EAAPA,EAAkBzB,UAAUtE,KAAK4C,QACzD5C,KAAKiE,aAAaK,EAAU0B,UAAW1B,EAAU9D,UAI7D,0BACI,IACI,MAAMyF,QAAgBxC,OAAMC,IAAI,kBAAmB,CAAEzE,UAAWe,KAAKf,YACrEe,KAAK4C,MAAMM,QAAU+C,EAAQ/C,QAC7BlD,KAAK4C,MAAMO,iBAAmB8C,EAAQC,UACxC,MAAOC,GACLC,QAAQC,MAAMF,GACdG,eAAY,GAAGH,GAEnBnG,KAAK4C,MAAMC,YAAc0D,OAAeC,iBACxCxG,KAAK4C,MAAME,QAAUyD,OAAeE,mBACpCzG,KAAK4C,MAAMI,UAAYuD,OAAeG,QACtC1G,KAAK4C,MAAMK,UAAYjD,KAAK0C,QAAQiE,eACpC3G,KAAK4C,MAAMG,cAAgB/C,KAAK4G,OAAOC,KACjC7G,KAAK4G,OAAOC,KAAKC,WAAWC,cAC5B,MACFR,OAAeG,UACf1G,KAAK2C,gBAAkBc,OAAMC,IAAI,aACjC1D,KAAK4C,MAAMD,UAAY3C,KAAK2C,UACvBqE,KAAK,CAACC,EAAQC,KACX,MAAMC,EAAYF,EAAE1C,SAASwC,cACvBK,EAAYF,EAAE3C,SAASwC,cAC7B,OAAOI,EAAYC,GAAa,EAAID,EAAYC,EAAa,EAAI,IAEpEC,IAAKC,IAAU,IAAAC,EACZ,IAAIV,EAAO,GAAGS,EAAE/C,SAChB,IAAKiD,qBAAS,OAADF,QAAC,IAADA,GAAS,QAARC,EAADD,EAAGG,cAAM,IAAAF,OAAR,EAADA,EAAWG,OAAQ,KAAAC,EAC5B,MAAQC,IAAuB,QAARD,EAAAL,EAAEG,cAAM,IAAAE,OAAA,EAARA,EAAUD,QAAS,GAC1Cb,GAAQ,KAAKe,EAAWC,cAAcD,EAAWE,eAErD,OAAOjB,MAIvBkB,SAASvG,EAAeY,EAAM,IAC1B,MAAO,CACHZ,QACAhB,MAAOgB,EACPY,UAGR4F,gBAAgBC,GACZ,OAAOA,EAAMZ,IAAIa,IAAK,CAAE1G,MAAO0G,EAAG1H,MAAO0H,MAE7ClE,sBACI,MAAO,sBAAsBhE,KAAKf,WAEtCkG,uBACI,OAAOnF,KAAK8E,QAAQC,KAAK,CAACoD,KAAMnI,KAAKgE,yBAEzClD,WACI,OAAOA,eAASd,KAAKf,UAAWe,KAAK8E,UAEzCsD,eACI,MAAO,CACH,CAAE5G,MAAO,MAAOhB,MAAO,OACvB,CAAEgB,MAAO,KAAMhB,MAAO,QAG9B6H,cAAc7G,EAAeY,EAAW,IACpC,MAAO,CACHZ,QACAhB,MAAO,GACP4B,MAAO,IACAA,EACHkG,OAAQtI,KAAKoI,kBAIzBG,WAAWhH,GACP,OAAOA,EAAQ8F,IAAKmB,IACT,CAAEhH,MAAOgH,EAAQhI,MAAOgI,MAGvCC,sBACI,MAAO,CACH,CAAEjH,MAAO,MAAOhB,MAAO,OACvB,CAAEgB,MAAO,KAAMhB,MAAO,MACtB,CAAEgB,MAAO,UAAWhB,MAAO,aAGnCG,WAAWgB,EAAUD,EAAI,IACrB,MAAM4G,EAAcI,OAAOJ,OAAO3G,GAC7BI,OAAQ4G,GAAWA,IAAMA,EAAEjH,MAAQA,GAAe,KAARA,IAC1CkH,OAAO,CAACC,EAAYC,KACjB,MAAMpJ,EAAOoJ,EAAInH,IAAMmH,EAAInH,IAAMmH,EAQjC,OAPIC,MAAMC,QAAQtJ,GACdmJ,EAAQA,EAAMI,OAAOvJ,GACE,oBAATA,EACdmJ,EAAM9D,KAAKrF,KAEXmJ,EAAM9D,KAAKrF,GAERmJ,GACJ,IACX,OAAOK,QAAQC,IAAIb,IAEvBc,QAAQC,EAAiBC,GACrB,IACI,OAAOD,EAAItH,OAAQmG,GAAWoB,EAAWpB,IAAIqB,OAAS,EACxD,MAAOpD,GACL,OAAO,IAGfqD,eAAeC,GACX,IACI,IAAI,MAAMvB,KAAKuB,EAAY,CACvB,MAAM5H,EAAY4H,EAAWvB,KAE7B,GAAIrG,EAAW,OAAOA,GAE5B,MAAOsE,GACL,MAAO,CAACA,QCjNxB,MAAM1D,EAAc,EAEL,U,kDCHT,SAAU3E,EAAOC,EAAUC,EAAYC,EAAYC,EAAYC,EAAWC,GAC9E,OAAQG,yBAAcC,yBAAakL,qCAAyB3L,EAAK4L,UAAW,CAC1EhL,OAAQZ,EAAKY,OACbiL,YAAa7L,EAAK6L,YAClBC,YAAa9L,EAAK8L,YAClBpL,sBAAuBV,EAAKU,sBAC5BqL,WAAY/L,EAAKgM,SACjBA,SAAUhM,EAAKa,eACfoL,UAAWjM,EAAKkM,SACf,KAAM,GAAI,CAAC,SAAU,cAAe,cAAe,wBAAyB,aAAc,WAAY,c,gBCN5F5K,+BAAgB,CAC3BwH,KAAM,kBACNvH,WAAY,CAAE4K,wBACdC,MAAO,CACH,WACA,WAEJzK,KAAMA,KAAA,CACFiK,SAAU,sBAEdS,MAAO,CACHxL,eAAgB,CACZqC,KAAMoJ,UAEVT,YAAa,CACT3I,KAAMqJ,QACNC,SAAS,GAEbV,YAAa,CACT5I,KAAMuJ,QAEV7L,OAAQ,CACJsC,KAAMyH,OACNpH,UAAU,GAEd7C,sBAAuB,CACnBwC,KAAMuJ,OACNlJ,UAAU,IAGlBlB,QAAS,CACL2J,SAAS1J,EAAeC,GACpBN,KAAKyK,MAAM,WAAYpK,EAAUC,IAErC2J,QAAQ/B,GACJlI,KAAKyK,MAAM,UAAWvC,O,qBCnClC,MAAMzF,EAA2B,IAAgB,EAAQ,CAAC,CAAC,SAAS3E,KAErD,U,kCCPf,wEAIYsG,EAJZ,yBAIA,SAAYA,GACRA,EAAA,+BACAA,EAAA,6CACAA,EAAA,qDACAA,EAAA,2CACAA,EAAA,uBACAA,EAAA,gBANJ,CAAYA,MAAS,KAQrB,MAAMsG,EAAW/B,GAAcgC,OAAQC,2BAA2BjC,GAErDrD,EAA2D,CACpE,qEAAsE,CAClEuF,SAAU,EACVlF,QAAS,CACLC,MAAOkF,OAAS3H,uBACZ,MAAM4H,QAAeC,eACjB,6BACA,mBAAmBN,EAAQvH,GAC3B,qEACA,CACI,CAAE0D,KAAM,SAAUoE,KAAM,MAAOC,MAAO,WACtC,CAAErE,KAAM,iBAAkBoE,KAAM,MAAOC,MAAO,WAC9C,CAAErE,KAAM,kBAAmBoE,KAAM,MAAOC,MAAO,YAGvD,MAAkB,WAAXH,EACD3G,EAAUc,wBACC,mBAAX6F,EACA3G,EAAUa,uBACVb,EAAUQ,WAGxB6E,WAAY,CACRvG,QAAQA,GACJ,MAAmB,iBAAZA,GAEXC,iBAAiB+C,GAAmB,YAAErD,IAClC,OAAOA,GAAeqD,KAIlC,+DAAgE,CAC5D2E,SAAU,EACVlF,QAAS,CACLC,MAAOkF,OAAS7H,YAAWJ,kBACvB,MAAMkI,QAAeC,eACjB,6BAA8B,GAC9B,gBAAgBN,EAAQ7H,iCAA2C6H,EAAQzH,KAC3E,CACI,CAAE4D,KAAM,SAAUoE,KAAM,MAAOC,MAAO,UACtC,CAAErE,KAAM,sBAAuBoE,KAAM,MAAOC,MAAO,aAG3D,MAAkB,wBAAXH,EACD3G,EAAUS,oBACVT,EAAUc,0BAGxBuE,WAAY,CACRxG,UAAUA,GAAmB,YAAEJ,IAC3B,OAAOA,EAAcI,KAIjC,oDAAqD,CACjD4H,SAAU,EACVlF,QAAS,CACLrB,UAAWwG,OAASnI,YAAWI,gBAAeF,cAAaC,cACvD,MAAMqI,QAAcC,eAChB,gCAAgCrI,EAChC,QAAQ2H,EAAQ7H,iBAA2B6H,EAAQ5H,KACnDH,EACA,CACI,CAAEkE,KAAM,SAAUqE,MAAO,SAAUD,KAAM,QAASI,KAAM,WACxD,CAAExE,KAAM,UAAWoE,KAAM,MAAOI,KAAM,YAG9C,MAAwB,WAAjBF,EAAMJ,OACP,CAAEvK,OAAQ,EAAGwF,UAAW5B,EAAUc,yBAClC,CAAE1E,MAAO2K,EAAM7G,UAAW0B,UAAW5B,EAAUC,gBAG7DoF,WAAY,CACRzG,UAAU0D,GACN,OAAOA,O,8ECvDvB,SAAS4E,EAAY1I,EAAuB6G,GACxC,MAAMvF,EAAQ,GACRqH,EAAU,EAAE,EAAG,GAAI,UAAMC,GAE/B,IAAI,MAAMC,KAAQhC,EAAY,CAC1B,KAAMgC,KAAQ7I,GACV,SAEJ,MAAMpC,EAAQoC,EAAM6I,GAChBF,EAAQG,SAASlL,GACjB0D,EAAMa,MAAK,GAIfb,EAAMa,KAAK0E,EAAWgC,GAAMjL,EAAOoC,IAEvC,OAAOsB,EAAMyH,MAAMrB,SAQvB,SAASsB,EAAexG,GACpB,OAAOA,EAAS4B,KAAK,CAACC,EAAGC,IAAOD,EAAE4D,UAAY3D,EAAE2D,UAAa5D,EAAE4D,SAAW3D,EAAE2D,UAAY,EAAI,GAGhG,SAASgB,EAAazG,GAClB,OAAOA,EAAS4B,KAAK,CAACC,EAAGC,IAAOD,EAAE6E,QAAU5E,EAAE4E,QAAW7E,EAAE6E,OAAS5E,EAAE4E,QAAU,EAAI,GAgBlF,SAAUzG,EACZzC,EACAmJ,EACAC,EAAO,GACPC,EAAY,GACZC,EAAO,YACP,MAAMC,EAAU,GAChB,IAAI,MAAMC,KAAkBL,EAAY,CACpC,MAAMrM,EAA2BqM,EAAWK,GACtCC,EAAoB,CACrB3M,EAAKsM,QAAUA,GAAUtM,EAAKsM,QAAUA,EACxCtM,EAAKuM,aAAeA,GACdvM,EAAKuM,aAAeA,GAG3BI,EAAkBC,KAAKhC,UAIvBgB,EAAY1I,EAAOlD,EAAK+J,cACxB/J,EAAK6M,MAAQH,EACT1M,EAAK8M,cACL9M,EAAK8M,YAAYC,KAAO/M,EAAK8M,YAAYE,KAAK9J,IAElDuJ,EAAQpH,KAAKrF,IAGrB,MAAkB,aAAXwM,EAAwBN,EAAeO,GAAWN,EAAaM,K,kCClGnE,IAAKjL,EAPZ,oEAOA,SAAYA,GACRA,EAAA,4CACAA,EAAA,sCACAA,EAAA,6CACAA,EAAA,8BACAA,EAAA,wCACAA,EAAA,gCACAA,EAAA,sCACAA,EAAA,qBACAA,EAAA,gCACAA,EAAA,oCACAA,EAAA,0BACAA,EAAA,8BACAA,EAAA,0BACAA,EAAA,yBACAA,EAAA,0CACAA,EAAA,qDACAA,EAAA,2DACAA,EAAA,oCACAA,EAAA,oCACAA,EAAA,2BACAA,EAAA,yCACAA,EAAA,2BACAA,EAAA,oCACAA,EAAA,oCACAA,EAAA,0CACAA,EAAA,8CACAA,EAAA,gCACAA,EAAA,2CACAA,EAAA,qDACAA,EAAA,2CACAA,EAAA,kCACAA,EAAA,4CACAA,EAAA,8CACAA,EAAA,4CACAA,EAAA,sCACAA,EAAA,0CACAA,EAAA,+BACAA,EAAA,kCACAA,EAAA,gDACAA,EAAA,wCACAA,EAAA,8CACAA,EAAA,4CACAA,EAAA,gCACAA,EAAA,kCACAA,EAAA,4CACAA,EAAA,qDACAA,EAAA,0DACAA,EAAA,6DACAA,EAAA,2CACAA,EAAA,0CACAA,EAAA,2CACAA,EAAA,gDACAA,EAAA,wEArDJ,CAAYA,MAAS,KAyDd,MAAMyL,EAA8B,CACvCzL,EAAU0L,sBACV1L,EAAU2L,gBACV3L,EAAU4L,qBACV5L,EAAU6L,aACV7L,EAAU8L,WACV9L,EAAU+L,QACV/L,EAAUC,UACVD,EAAUgM,iBACVhM,EAAUiM,mBACVjM,EAAUkM,QACVlM,EAAUmM,UACVnM,EAAUoM,gBACVpM,EAAUqM,yBACVrM,EAAUsM,iCACVtM,EAAUuM,gBACVvM,EAAUwM,gBACVxM,EAAUyM,UACVzM,EAAU0M,mBACV1M,EAAU2M,gBACV3M,EAAU4M,gBACV5M,EAAU6M,sBACV7M,EAAU8M,qBACV9M,EAAU+M,yBACV/M,EAAUgN,WACVhN,EAAUiN,uBACVjN,EAAUkN,mBACVlN,EAAUmN,cACVnN,EAAUoN,sBACVpN,EAAUqN,qBACVrN,EAAUsN,eACVtN,EAAUuN,sBACVvN,EAAUwN,sBACVxN,EAAUyN,qBACVzN,EAAU0N,aACV1N,EAAU2N,eACV3N,EAAU4N,sBACV5N,EAAU6N,kBACV7N,EAAU8N,cACV9N,EAAU+N,eACV/N,EAAUgO,sBACVhO,EAAUiO,cACVjO,EAAUkO,kBACVlO,EAAUmO,8BACVnO,EAAUoO,+BACVpO,EAAUqO,sBACVrO,EAAUsO,oBACVtO,EAAUuO,iBACVvO,EAAUwO,qBACVxO,EAAUyO,oBACVzO,EAAU0O,sBACV1O,EAAU2O,mCACV3O,EAAU4O,oB,kCCpHd,gXAIOhF,eAAe9I,EAAcD,EAAO,IACvC,MAAMgO,QAAmBC,OAAgBhO,cAAc,CAAC6E,KAAM9E,IAC9D,OAAOgO,EAAWhO,OAAQkO,IAAYzI,qBAAQyI,IAAsB,IAAhBA,EAAEpJ,KAAKqJ,QACtD7I,IAAK8I,IAAa,CACf3O,MAAO2O,EAAStJ,KAChBrG,MAAO2P,EAASC,YAChBhO,MAAO+N,KAIZrF,eAAeuF,EAAiBtO,EAAO,IAC1C,MAAMgO,QAAmBC,OAAgBM,QAAQ,CAAC,YAAevO,IACjE,OAAOgO,EAAW1I,IAAK8I,IAAa,CAC5B3O,MAAO2O,EACP3P,MAAO2P,KAIZrF,eAAetI,EAAiBT,EAAO,IAC1C,MAAMwO,QAAcP,OAAgBhO,cAAc,CAC9C6E,KAAM9E,EACNL,IAAK,4BAGT,OAAO6O,EAAMlJ,IAAKmJ,IAAS,CACvBhP,MAAOgP,EAAK3J,KACZrG,MAAOgQ,EAAK3J,KACZzE,MAAOoO,KAIR1F,eAAevI,IAClB,MAAMkO,QAAgBT,OAAgBzN,uBACtC,OAAOkO,EAAQpJ,IAAKqJ,IAAW,CAC3BlP,MAAOkP,EAAO7J,KACdrG,MAAOkQ,EAAO7J,KACdzE,MAAOsO,KAIR5F,eAAe6F,IAClB,MAAMC,QAAgBZ,OAAgBW,aACtC,OAAOC,EAAQvJ,IAAKwJ,IAAW,CAC3BrP,MAAOqP,EAAOhK,KACdrG,MAAOqQ,EAAOC,UACd1O,MAAOyO,KAIR/F,eAAeiG,EAAaC,GAC/B,MAAMC,QAAkBjB,OAAgBe,aAAaC,GACrD,OAAOC,EAAU5J,IAAK6J,IAAa,CAC/B1P,MAAO0P,EAASrK,KAChBrG,MAAO0Q,EAASC,YAChB/O,MAAO8O,KAIRpG,eAAesG,EAA0BC,EAAoBxK,EAAK,IACrE,MAAMyK,QAAYtB,OAAgBoB,0BAA0BC,EAAYxK,GACxE,OAAOyK,EAAIjK,IAAKkK,IAAO,CACnB/P,MAAO+P,EAAG1K,KACVrG,MAAO+Q,EAAGC,yBACVpP,MAAOmP,KAIRzG,eAAe2G,EAAYC,EAAgC7K,EAAK,IACnE,MAAM8K,QAAiB3B,OAAgByB,YAAYC,EAAwB7K,GAC3E,OAAO8K,EAAStK,IAAKuK,IAAY,CAC7BpQ,MAAOoQ,EAAQ/K,KACfrG,MAAOoR,EAAQC,WACfzP,MAAOwP,KAIR9G,eAAegH,EAAkBjL,EAAK,IAAKkL,EAAK,GACnD,MAAMJ,QAAiB3B,OAAgB8B,kBAAkBjL,EAAMkL,GAC/D,OAAOJ,EAAStK,IAAKuK,IAAY,CAC7BpQ,MAAOoQ,EAAQ/K,KACfrG,MAAOoR,EAAQC,WACfzP,MAAOwP,KAIT,SAAUI,IACZ,MAAMC,EAAY,CACd,kBACA,OACA,cACA,SACA,iBACA,WACA,mBACA,UACA,SACA,kBACA,SAGJ,OAAOA,EAAU5K,IAAI6K,IAAQ,CACzB1Q,MAAO0Q,EACP1R,MAAO0R,EACP9P,MAAO,CACH+P,KAAMD,Q,qBC5GlB,IAAI7K,EAAM,CACT,wBAAyB,CACxB,OACA,qBAED,wBAAyB,CACxB,OACA,qBAED,iCAAkC,CACjC,OACA,qBAED,+BAAgC,CAC/B,OACA,qBAED,0BAA2B,CAC1B,OACA,qBAED,yBAA0B,CACzB,OACA,iBACA,qBAED,sBAAuB,CACtB,OACA,qBAED,kCAAmC,CAClC,OACA,qBAED,0BAA2B,CAC1B,OACA,iBACA,qBAED,mBAAoB,CACnB,OACA,qBAED,yBAA0B,CACzB,OACA,sBAED,6BAA8B,CAC7B,OACA,sBAED,0BAA2B,CAC1B,OACA,iBACA,sBAED,oBAAqB,CACpB,OACA,sBAED,wBAAyB,CACxB,OACA,iBACA,sBAED,+BAAgC,CAC/B,OACA,sBAED,wBAAyB,CACxB,OACA,sBAED,sBAAuB,CACtB,OACA,iBACA,iBACA,sBAED,yBAA0B,CACzB,OACA,iBACA,iBACA,sBAED,6BAA8B,CAC7B,OACA,iBACA,iBACA,sBAED,wBAAyB,CACxB,OACA,sBAED,+BAAgC,CAC/B,OACA,iBACA,sBAED,4BAA6B,CAC5B,OACA,sBAED,qBAAsB,CACrB,OACA,sBAED,qBAAsB,CACrB,OACA,sBAED,sBAAuB,CACtB,OACA,iBACA,sBAED,uBAAwB,CACvB,OACA,iBACA,sBAED,wBAAyB,CACxB,OACA,sBAED,yBAA0B,CACzB,OACA,sBAED,qBAAsB,CACrB,OACA,sBAED,wCAAyC,CACxC,OACA,sBAED,qBAAsB,CACrB,OACA,iBACA,sBAED,uBAAwB,CACvB,OACA,sBAED,2BAA4B,CAC3B,OACA,sBAED,0BAA2B,CAC1B,OACA,iBACA,sBAED,6BAA8B,CAC7B,OACA,sBAED,gBAAiB,CAChB,OACA,sBAED,uBAAwB,CACvB,OACA,sBAED,6BAA8B,CAC7B,OACA,iBACA,sBAED,2BAA4B,CAC3B,OACA,sBAED,kBAAmB,CAClB,OACA,sBAED,mBAAoB,CACnB,OACA,sBAED,uBAAwB,CACvB,OACA,sBAED,sBAAuB,CACtB,OACA,sBAED,qBAAsB,CACrB,OACA,sBAED,uBAAwB,CACvB,OACA,sBAED,uBAAwB,CACvB,OACA,sBAED,yBAA0B,CACzB,OACA,sBAED,yBAA0B,CACzB,OACA,sBAED,wBAAyB,CACxB,OACA,sBAED,yBAA0B,CACzB,OACA,sBAED,yBAA0B,CACzB,OACA,sBAED,2BAA4B,CAC3B,OACA,sBAED,oBAAqB,CACpB,OACA,sBAED,oBAAqB,CACpB,OACA,uBAGF,SAAS+K,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAElL,EAAKgL,GAC9B,OAAOnJ,QAAQsJ,UAAU7O,MAAK,WAC7B,IAAIwC,EAAI,IAAIsM,MAAM,uBAAyBJ,EAAM,KAEjD,MADAlM,EAAEgM,KAAO,mBACHhM,KAIR,IAAIuM,EAAMrL,EAAIgL,GAAMtR,EAAK2R,EAAI,GAC7B,OAAOxJ,QAAQC,IAAIuJ,EAAIC,MAAM,GAAGtL,IAAIiL,EAAoBnM,IAAIxC,MAAK,WAChE,OAAO2O,EAAoBvR,MAG7BqR,EAAoBQ,KAAO,WAC1B,OAAOlK,OAAOkK,KAAKvL,IAEpB+K,EAAoBrR,GAAK,OACzB8R,EAAOC,QAAUV","file":"js/chunk-a7a2845a.d75c64de.js","sourcesContent":["import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_his_standard_form = _resolveComponent(\"his-standard-form\")!\n\n  return (_openBlock(), _createBlock(_component_his_standard_form, {\n    cancelDestinationPath: _ctx.cancelDestination,\n    fields: _ctx.fields,\n    onFinishAction: _ctx.onSubmit\n  }, null, 8, [\"cancelDestinationPath\", \"fields\", \"onFinishAction\"]))\n}","import { AppEncounterService } from \"@/services/app_encounter_service\"\n\nexport class PatientReferralService extends AppEncounterService {\n    constructor(patientID: number, providerID: number) {\n        super(patientID, 114, providerID) \n    }\n}","import { AppEncounterService } from \"@/services/app_encounter_service\"\n\nexport class PatientAdmitService extends AppEncounterService {\n    constructor(patientID: number, providerID: number) {\n        super(patientID, 42, providerID) \n    }\n}","\nimport { defineComponent} from 'vue'\nimport HisStandardForm from \"@/components/Forms/HisStandardForm.vue\";\nimport EncounterMixinVue from '@/views/EncounterMixin.vue';\nimport Validation from '@/components/Forms/validations/StandardValidations';\nimport { Field, Option } from '@/components/Forms/FieldInterface';\nimport { FieldType } from '@/components/Forms/BaseFormElements';\nimport { getFacilities, getFacilityWards, getSpecialistClinics } from '@/utils/HisFormHelpers/LocationFieldOptions';\nimport { PatientReferralService } from '@/apps/AETC/services/patient_referral_service'\nimport { PatientAdmitService } from '@/apps/AETC/services/patient_admit_service'\n\nexport default defineComponent({\n  components: { HisStandardForm },\n  mixins: [EncounterMixinVue],\n  data: () => ({\n    referralService: {} as any,\n    admissionService: {} as any\n  }),\n  watch: {\n    ready: {\n      async handler(isReady: boolean) {\n        if(isReady){\n          this.referralService = new PatientReferralService(this.patientID, this.providerID)\n          this.admissionService = new PatientAdmitService(this.patientID, this.providerID)\n          this.fields = this.getFields()\n        }\n      },\n      immediate: true,\n      deep: true\n    }\n  },\n  methods: {\n    async onSubmit(formData: any, computedData: any){\n      if(formData.opd_outcome.value === 'Admission') {\n        await this.admissionService.createEncounter()\n        const admissionData = await this.resolveObs({...computedData}, 'admission')\n        await this.admissionService.saveObservationList(admissionData)\n      } else {\n        await this.referralService.createEncounter()\n        const referralData = await this.resolveObs({...computedData}, 'referral')\n        await this.referralService.saveObservationList(referralData)\n      }\n      \n      this.nextTask()        \n    },\n    getFields(): Array<Field>{\n      return [\n        {\n          id: 'opd_outcome',\n          helpText: 'Select outcome',\n          type: FieldType.TT_SELECT,\n          validation: (value: any) => Validation.required(value),\n          options: () => {\n            return [\n              { label: 'Admit', value: 'Admission' },\n              { label: 'Internal referral', value: 'Internal referral' },\n              { label: 'Refer to another hospital/clinic', value: 'External referral' },\n            ]\n          }\n        },\n        {\n          id: 'facility_name',\n          helpText: 'Select Facility name',\n          type: FieldType.TT_SELECT,\n          validation: (value: any) => Validation.required(value),\n          computedValue: ({ value }: Option) => ({\n            tag: 'referral',\n            obs: this.referralService.buildValueText('Referred', value)\n          }),\n          condition: (fields: any) => fields.opd_outcome.value === 'External referral',\n          options: (_: any, filter='') => getFacilities(filter),\n          config: {\n              showKeyboard: true,\n              isFilterDataViaApi: true\n          }\n        },\n        {\n          id: 'specialist_clinic',\n          helpText: 'Select clinic',\n          type: FieldType.TT_SELECT,\n          validation: (value: any) => Validation.required(value),\n          computedValue: ({ other }: Option) => ({\n            tag: 'referral',\n            obs: this.referralService.buildValueCodedFromConceptId('Specialist clinic', other.concept_id)\n          }),\n          condition: (fields: any) => fields.opd_outcome.value === 'Internal referral',\n          options: () => getSpecialistClinics(),\n          config: { showKeyboard: true }\n        },    \n        {\n          id: 'wards',\n          helpText: 'Select ward',\n          type: FieldType.TT_SELECT,\n          condition: (fields: any) => fields.opd_outcome.value === 'Admission',\n          validation: (value: any) => Validation.required(value),\n          computedValue: ({ value }: Option) => ({\n            tag: 'admission',\n            obs: this.admissionService.buildValueText('Admit to ward', value)\n          }),\n          options: (_: any, filter='') => getFacilityWards(filter),\n          config: {\n              showKeyboard: true,\n              isFilterDataViaApi: true\n          }\n        },  \n      ]\n    }\n  }\n})\n","import { render } from \"./OutcomeStatus.vue?vue&type=template&id=0e0975c2&ts=true\"\nimport script from \"./OutcomeStatus.vue?vue&type=script&lang=ts\"\nexport * from \"./OutcomeStatus.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/anthony/Documents/source/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","\n/**\n * @deprecated moved to useEncounter composable\n * \n */\nimport { defineComponent } from 'vue'\nimport { Field, Option } from '@/components/Forms/FieldInterface'\nimport { ProgramService } from \"@/services/program_service\"\nimport { find, isEmpty } from \"lodash\"\nimport { nextTask } from \"@/utils/WorkflowTaskHelper\"\nimport { ENCOUNTER_GUIDELINES, FlowState } from \"@/guidelines/encounter_guidelines\"\nimport { matchToGuidelines } from \"@/utils/GuidelineEngine\"\nimport HisStandardForm from \"@/components/Forms/HisStandardForm.vue\";\nimport { toastDanger } from '@/utils/Alerts'\nimport Store from \"@/composables/ApiStore\"\n\nexport default defineComponent({\n    components: { HisStandardForm },\n    data: () => ({\n        patient: {} as any,\n        fields: [] as Array<Field>,\n        patientID: '' as any,\n        providerID: -1 as number,\n        providers: [] as any,\n        facts: {\n            sessionDate: '' as string,\n            apiDate: '' as string,\n            encounterName: 'N/A' as string,\n            providers: [] as Array<any>,\n            isBdeMode: false as boolean,\n            birthDate: '' as string,\n            outcome: '' as string,\n            outcomeStartDate: '' as string\n        },\n        ready: false\n    }),\n    watch: {\n       '$route': {\n            handler(route: any) {\n                if(route.params.patient_id && this.patientID != route.params.patient_id) {\n                    this.patientID = parseInt(route.params.patient_id);\n                    Store.get('ACTIVE_PATIENT', { patientID: this.patientID})\n                        .then(patientData => {\n                            this.patient = patientData\n                            this.setEncounterFacts().then(() => {\n                                this.checkEncounterGuidelines().then(() => {\n                                    this.ready = true\n                                })\n                            })\n                        })\n                    }\n            },\n            immediate: true,\n            deep: true\n        }\n    },\n    computed: {\n        cancelDestination(): string {\n            return this.patientDashboardUrl()\n        }\n    },\n    methods: {\n        runflowState(state: FlowState, params=null) {\n            const states: any = {}\n            states[FlowState.SET_PROVIDER] = (selection: any) => {\n                const [ username ] = selection.split(' ')\n                const provider = find(this.providers, { username })\n                if (provider) this.providerID = provider.person_id\n                return FlowState.CONTINUE\n            }\n            states[FlowState.CHANGE_SESSION_DATE] = () => { \n                this.$router.push(`/session/date?patient_dashboard_redirection_id=${this.patientID}`)\n                return FlowState.EXIT\n            }\n            states[FlowState.CHANGE_PATIENT_OUTCOME] = () => {\n                this.$router.push(`/patient/programs/${this.patientID}`)\n                return FlowState.EXIT\n            }\n            states[FlowState.GO_TO_PATIENT_DASHBOARD] = () => {\n                this.gotoPatientDashboard()\n                return FlowState.EXIT\n            }\n            if (state in states) {\n                return states[state](params)\n            }\n        },\n        async checkEncounterGuidelines() {\n            const findings = matchToGuidelines(this.facts, ENCOUNTER_GUIDELINES)\n            for(const index in findings) {\n                const finding = findings[index]\n                if (finding?.actions?.alert) {\n                    const status = this.runflowState((await finding?.actions?.alert(this.facts)))\n                    if (status === FlowState.EXIT) return\n                }\n                if (finding?.actions?.selection) {\n                    const selection = await finding?.actions?.selection(this.facts)\n                    this.runflowState(selection.flowState, selection.value)\n                }\n            }\n        },\n        async setEncounterFacts() {\n            try {\n                const program = await Store.get('PATIENT_PROGRAM', { patientID: this.patientID })\n                this.facts.outcome = program.outcome\n                this.facts.outcomeStartDate = program.startDate\n            } catch (e) {\n                console.error(e)\n                toastDanger(`${e}`)\n            }\n            this.facts.sessionDate = ProgramService.getSessionDate()\n            this.facts.apiDate = ProgramService.getCachedApiDate() as string\n            this.facts.isBdeMode = ProgramService.isBDE() as boolean\n            this.facts.birthDate = this.patient.getBirthdate()\n            this.facts.encounterName = this.$route.name \n                ? this.$route.name.toString().toUpperCase()\n                : 'N/A'\n            if (ProgramService.isBDE()) {\n                this.providers = await Store.get('PROVIDERS')\n                this.facts.providers = this.providers\n                    .sort((a: any, b: any) => {\n                        const usernameA = a.username.toUpperCase()\n                        const usernameB = b.username.toUpperCase()\n                        return usernameA < usernameB ? -1 : usernameA > usernameB  ? 1 : 0\n                    })\n                    .map((p: any) => {\n                        let name = `${p.username}`\n                        if (!isEmpty(p?.person?.names)) {\n                            const [ latestName ] = p.person?.names || []\n                            name += ` (${latestName.given_name} ${latestName.family_name})`\n                        }\n                        return name\n                    })\n            }\n        },\n        toOption(label: string, other={}) {\n            return {\n                label,\n                value: label,\n                other\n            }\n        },\n        mapStrToOptions(items: string[]) {\n            return items.map(i => ({label: i, value: i}))\n        },\n        patientDashboardUrl(): string {\n            return `/patient/dashboard/${this.patientID}`\n        },\n        gotoPatientDashboard() {\n            return this.$router.push({path: this.patientDashboardUrl()})\n        },\n        nextTask() {\n            return nextTask(this.patientID, this.$router)\n        },\n        yesNoOptions(): Option[] {\n            return [\n                { label: \"Yes\", value: \"Yes\" },\n                { label: \"No\", value: \"No\" }\n            ]\n        },\n        toYesNoOption(label: string, other: any={}): Option {\n            return {\n                label,\n                value: '',\n                other: {\n                    ...other,\n                    values: this.yesNoOptions()\n                }\n            } \n        },\n        mapOptions(options: Array<string>) {\n            return options.map((option) => {\n                return { label: option, value: option }\n            });\n        },\n        yesNoUnknownOptions(): Option[] {\n            return [\n                { label: \"Yes\", value: \"Yes\" },\n                { label: \"No\", value: \"No\" },\n                { label: \"Unknown\", value: \"Unknown\" }\n            ]\n        },\n        resolveObs(obs: any, tag='') {\n            const values: any = Object.values(obs)\n                .filter((d: any) => d && (d.tag === tag || tag === ''))\n                .reduce((accum: any, cur: any) => { \n                    const data = cur.obs ? cur.obs : cur\n                    if (Array.isArray(data)) {\n                        accum = accum.concat(data)\n                    } else if (typeof data === 'function') {\n                        accum.push(data())\n                    } else {\n                        accum.push(data)\n                    }\n                    return accum\n                    }, [])\n            return Promise.all(values)\n        },\n        inArray(arr: Array<any>, expression: (i: any) => boolean): boolean {\n            try {\n                return arr.filter((i: any) => expression(i)).length > 0\n            } catch (e) {\n                return false\n            }\n        },\n        validateSeries(conditions: Array<any>){\n            try {\n                for(const i in conditions) {\n                    const condition = conditions[i]()\n\n                    if (condition) return condition\n                }\n            } catch (e) {\n                return [e]\n            }\n        }\n    }\n})\n","import script from \"./EncounterMixin.vue?vue&type=script&lang=ts\"\nexport * from \"./EncounterMixin.vue?vue&type=script&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { resolveDynamicComponent as _resolveDynamicComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createBlock(_resolveDynamicComponent(_ctx.formType), {\n    fields: _ctx.fields,\n    skipSummary: _ctx.skipSummary,\n    activeField: _ctx.activeField,\n    cancelDestinationPath: _ctx.cancelDestinationPath,\n    onOnFinish: _ctx.onFinish,\n    onFinish: _ctx.onFinishAction,\n    onOnIndex: _ctx.onIndex\n  }, null, 40, [\"fields\", \"skipSummary\", \"activeField\", \"cancelDestinationPath\", \"onOnFinish\", \"onFinish\", \"onOnIndex\"]))\n}","\nimport TouchScreenForm from \"@/components/Forms/TouchScreenForm.vue\";\nimport { defineComponent, PropType } from \"vue\";\nimport { Field } from \"./FieldInterface\";\n\nexport default defineComponent({\n    name: \"HisStandardForm\",\n    components: { TouchScreenForm },\n    emits: [\n        'onFinish',\n        'onIndex'\n    ],\n    data: () => ({\n        formType: 'touch-screen-form' as string\n    }),\n    props: {\n        onFinishAction: {\n            type: Function\n        },\n        skipSummary: {\n            type: Boolean,\n            default: false\n        },\n        activeField: {\n            type: String\n        },\n        fields: {\n            type: Object as PropType<Field[]>,\n            required: true\n        },\n        cancelDestinationPath: {\n            type: String,\n            required: false,\n        }\n    },\n    methods: {\n        onFinish(formData: any, computedData: any) {\n            this.$emit('onFinish', formData, computedData)\n        },\n        onIndex(i: number) {\n            this.$emit('onIndex', i)\n        }\n    }\n})\n","import { render } from \"./HisStandardForm.vue?vue&type=template&id=6daa0375&ts=true\"\nimport script from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\nexport * from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/anthony/Documents/source/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { infoActionSheet, optionsActionSheet } from \"@/utils/ActionSheets\";\nimport { GuideLineInterface } from \"@/utils/GuidelineEngine\";\nimport HisDate from '@/utils/Date'\n\nexport enum FlowState {\n    SET_PROVIDER = 'SET_PROVIDER',\n    CHANGE_SESSION_DATE = 'change_session_date',\n    GO_TO_PATIENT_DASHBOARD = 'go_to_patient_dashboard',\n    CHANGE_PATIENT_OUTCOME = 'change_outcome',\n    CONTINUE = 'continue',\n    EXIT = 'exit'\n}\nconst dformat = (d: string) => HisDate.toStandardHisDisplayFormat(d)\n\nexport const ENCOUNTER_GUIDELINES: Record<string, GuideLineInterface> = {\n    \"Warn if attempting to create new encounters for a deceased patient\": {\n        priority: 1,\n        actions: {\n            alert: async ({ outcomeStartDate }: any) => {\n                const action = await infoActionSheet(\n                    'Data Integrity Issue Found',\n                    `Patient died on ${dformat(outcomeStartDate)}`,\n                    'Proceeding with this outcome might affect accuracy of some reports',\n                    [\n                        { name: 'Cancel', slot: 'end', color: 'primary'},\n                        { name: 'Change outcome', slot: 'end', color: 'primary'},\n                        { name: 'Continue Anyway', slot: 'end', color: 'danger'}\n                    ]\n                )\n                return action === 'Cancel'\n                    ? FlowState.GO_TO_PATIENT_DASHBOARD\n                    : action === 'Change outcome'\n                    ? FlowState.CHANGE_PATIENT_OUTCOME\n                    : FlowState.CONTINUE\n            }\n        },\n        conditions: {\n            outcome(outcome: string) {\n                return outcome === 'Patient died'\n            },\n            outcomeStartDate(startDate: string, { sessionDate }: any) {\n                return sessionDate >= startDate\n            }\n        }\n    },\n    \"A patient's date of birth must not be less than Session Date\": {\n        priority: 2,\n        actions: {\n            alert: async ({ birthDate, sessionDate}: any) => {\n                const action = await infoActionSheet(\n                    'Data integrity issue found', '',\n                    `Session date ${dformat(sessionDate)} is less than birth date of ${dformat(birthDate)}`,\n                    [\n                        { name: 'Cancel', slot: 'end', color: 'danger'},\n                        { name: 'Change session date', slot: 'end', color: 'success'}\n                    ]\n                )\n                return action === 'Change session date'\n                    ? FlowState.CHANGE_SESSION_DATE\n                    : FlowState.GO_TO_PATIENT_DASHBOARD\n            }\n        },\n        conditions: {\n            birthDate(birthDate: string, { sessionDate }: any) {\n                return sessionDate < birthDate\n            }\n        }\n    },\n    \"Select Encounter provider when in back data entry\": {\n        priority: 3,\n        actions: {\n            selection: async ({ providers, encounterName, sessionDate, apiDate }: any) => {\n                const modal = await optionsActionSheet(\n                    `Please select a provider for ${encounterName}`,\n                    `BDE: ${dformat(sessionDate)} | Current: ${dformat(apiDate)}`,\n                    providers,\n                    [\n                        { name: 'Cancel', color: 'danger', slot: 'start', role: 'default'},\n                        { name: 'Confirm', slot: 'end', role: 'action' }\n                    ]\n                )\n                return modal.action === 'Cancel' \n                    ? { value: -1, flowState: FlowState.GO_TO_PATIENT_DASHBOARD }\n                    : { value: modal.selection, flowState: FlowState.SET_PROVIDER }\n            }\n        },\n        conditions: {\n            isBdeMode(isBDE: boolean) {\n                return isBDE\n            }\n        }\n    }\n}","/**\n * Compares patient facts against a predefined guideline Object.\n*/\nexport interface DescriptionInterface {\n    color?: 'primary' | 'secondary' | 'danger' | 'warning';\n    info: (facts: FactsInterface) => any;\n    text?: string;\n    show: 'onChecked' | 'always';\n}\n\nexport interface GuideLineInterface {\n    title?: string;\n    concept?: string;\n    weight?: number;\n    priority?: number;\n    conditions: ConditionsInteface;\n    actions?: Record<string, any>; //TODO: should <key, Function>\n    data?: Record<string, any>;\n    description?: DescriptionInterface;\n    target?: string;\n    targetEvent?: string;\n}\n\nexport type FactsInterface = Record<string, any>\nexport type ConditionResolver = (value: any, facts: FactsInterface) => boolean | RegExpMatchArray | null\nexport type ConditionsInteface = Record<string, ConditionResolver>\n\n/**\n * Match the facts with guidelines\n * @param facts \n * @param conditions \n * @returns \n */\nfunction isCondition(facts: FactsInterface, conditions: ConditionsInteface): boolean {\n    const state = [] \n    const ignored = [-1, '', null, undefined]\n\n    for(const prop in conditions) {\n        if (!(prop in facts)) \n            continue\n        \n        const value = facts[prop]\n        if (ignored.includes(value)) {\n            state.push(false)\n            continue\n        }\n\n        state.push(conditions[prop](value, facts))\n    }\n    return state.every(Boolean)\n}\n\n/**\n * Sort guidelines in the order of importance/relevance\n * @param findings \n * @returns \n */\nfunction sortByPriority(findings: GuideLineInterface[]) {\n    return findings.sort((a, b) => (a.priority && b.priority) && a.priority < b.priority ? -1 : 1)\n}\n\nfunction sortByWeight(findings: GuideLineInterface[]) {\n    return findings.sort((a, b) => (a.weight && b.weight) && a.weight > b.weight ? -1 : 1)\n}\n\nexport function logFindingsByWeight(guidelines: Record<string, GuideLineInterface>) {\n    const findings: any = Object.keys(guidelines).map(i => ({ name: i, weight: guidelines[i].weight}))\n    console.log(sortByWeight(findings).map((i: any) => `${i.weight} -> ${i.name}`))\n}\n\n/**\n * Check the guideline for matching facts and return matching object \n * @param facts: key value pair for used for searching in guidelines\n * @param guidelines: A dictionary containing fixed rules/validations that conforms to GuideLineInterface\n * @param target: Used for matching a target defined in a guidlines before executing conditions\n * @param targetEvent: used for matching a target event in a guideline before executing conditions\n * @returns\n */\nexport function matchToGuidelines(\n    facts: FactsInterface, \n    guidelines: Record<string, GuideLineInterface>,\n    target='', \n    targetEvent='',\n    sortBy='priority' as 'priority' | 'weight'): Array<GuideLineInterface> {\n    const matches = []\n    for(const guidelineIndex in guidelines) {\n        const data: GuideLineInterface = guidelines[guidelineIndex]\n        const targetValidations = [\n            (data.target && target && data.target != target),\n            (data.targetEvent && targetEvent \n                && data.targetEvent != targetEvent)\n        ]\n\n        if (targetValidations.some(Boolean)) {\n            continue\n        }\n\n        if (isCondition(facts, data.conditions)) {\n            data.title = guidelineIndex\n            if (data.description) {\n                data.description.text = data.description.info(facts)\n            }\n            matches.push(data)\n        }\n    }\n    return sortBy === 'priority' ? sortByPriority(matches) : sortByWeight(matches)\n}\n","/**\n * Map all formElements/components defined in \"@/components/FormElements\" \n * in the Enum below by their file name.\n * \n * Next step is to add FieldType entry in COMPONENT_REFS in the \n * Array below the FieldType Enum\n */\nexport enum FieldType {\n    TT_ASYNC_MULTI_SELECT = 'AsyncMultiSelect',\n    TT_LINKAGE_CODE = 'LinkageCodeInput',\n    TT_MULTI_SELECT_GRID= 'HisMultiSelectGrid',\n    TT_AGE_INPUT='HisAgeInput',\n    TT_GROUP_SELECTOR = 'HisGroupSelector',\n    TT_DATA_TABLE = 'HisDataTable',\n    TT_GRID_SELECTOR = 'HisGridSelector',\n    TT_NOTE = 'HisNote',\n    TT_BARCODE = 'HisBarcodeInput',\n    TT_MONTHLY_DAYS=\"HisMonthlyDays\",\n    TT_TEXT=\"HisTextInput\",\n    TT_NUMBER = \"HisNumberInput\",\n    TT_DATETIME=\"datetime\",\n    TT_SELECT=\"HisSelect\",\n    TT_MULTIPLE_SELECT=\"HisMultipleSelect\",\n    TT_ART_REGIMEN_SELECTION=\"HisArtRegimenSelection\",\n    TT_NEXT_VISIT_INTERVAL_SELECTION=\"HisNextVisitInterval\",\n    TT_TABLE_VIEWER=\"HisTableViewer\",\n    TT_DOSAGE_INPUT=\"HisDosageInput\",\n    TT_YES_NO=\"YesNoSelect\",\n    TT_MULTIPLE_YES_NO=\"MultiYesNoSelect\",\n    TT_SUMMARY=\"HisSummary\",\n    TT_WEIGHT_CHART = \"HisWeightChart\",\n    TT_VITALS_ENTRY=\"HisVitalsEntry\",\n    TT_ADHERENCE_INPUT = \"HisAdherenceInput\",\n    TT_ART_STAGING_SUMMARY = \"ArtStagingSummary\",\n    TT_LAB_ORDERS = \"HisLabOrders\",\n    TT_APPOINTMENTS_ENTRY = \"HisAppointments\",\n    TT_DISPENSATION_INPUT = 'DrugDispensationSelection',\n    TT_PROGRAM_SELECTION = 'ProgramSelection',\n    TT_DATE_PICKER = 'HisDatePicker',\n    TT_PERSON_RESULT_VIEW = 'PersonSearchView',\n    TT_RELATION_SELECTION = 'RelationsSelection',\n    TT_FILING_NUMBER_VIEW = 'FilingNumberView',\n    TT_CARD_SELECTOR = 'HisCardSelector',\n    TT_PERSON_MATCH_VIEW = 'PersonMatchView',\n    TT_FULL_DATE = 'HisDateInput',\n    TT_BATCH_ENTRY = 'HisBatchEntry',\n    TT_BATCH_VERIFICATION = 'HisBatchVerification',\n    TT_BATCH_MOVEMENT = 'HisBatchMovement',\n    TT_COMPLAINTS_PICKER = 'HisComplaintsPicker',\n    TT_RADIOLOGY_PICKER = 'HisRadiologyPicker',\n    TT_IP_ADDRESS = 'HisIPAddress',\n    TT_TEXT_BANNER = 'HisTextBanner',\n    TT_DRUG_DISPENSER = 'GeneralDrugDispenser',\n    TT_CLINIC_HOLIDAY_PICKER = 'HisClinicHolidayPicker',\n    TT_ANC_PREGNANCY_INPUT_CONFIG = 'AncPregnancyInfoConfig',\n    TT_ANC_PREGNANCY_DETAILS_INPUT = 'AncPregnancyDetailsInput',\n    TT_ANC_LMP_DATE_INPUT = 'AncLmpDateInput',\n    TT_ANC_DRUGSET_INPUT = 'AncDrugSetInput',\n    TT_DRUG_TRANSFER_IN = 'DrugTransferInput',\n    TT_PRESCRIPTION_INPUT = 'HisPrescriptionInput',\n    TT_INFINITE_SCROLL_MULTIPLE_SELECT=\"HisInfiniteScrollMultipleSelect\"\n}\n\n// Register FieldTypes here that will be registered at runtime\nexport const COMPONENT_REFS: FieldType[] = [\n    FieldType.TT_ASYNC_MULTI_SELECT,\n    FieldType.TT_LINKAGE_CODE,\n    FieldType.TT_MULTI_SELECT_GRID,\n    FieldType.TT_AGE_INPUT,\n    FieldType.TT_BARCODE,\n    FieldType.TT_NOTE,\n    FieldType.TT_SELECT,\n    FieldType.TT_CARD_SELECTOR,\n    FieldType.TT_MULTIPLE_SELECT,\n    FieldType.TT_TEXT,\n    FieldType.TT_NUMBER,\n    FieldType.TT_MONTHLY_DAYS,\n    FieldType.TT_ART_REGIMEN_SELECTION,\n    FieldType.TT_NEXT_VISIT_INTERVAL_SELECTION,\n    FieldType.TT_TABLE_VIEWER,\n    FieldType.TT_DOSAGE_INPUT,\n    FieldType.TT_YES_NO,\n    FieldType.TT_MULTIPLE_YES_NO,\n    FieldType.TT_WEIGHT_CHART,\n    FieldType.TT_VITALS_ENTRY,\n    FieldType.TT_APPOINTMENTS_ENTRY,\n    FieldType.TT_COMPLAINTS_PICKER,\n    FieldType.TT_CLINIC_HOLIDAY_PICKER,\n    FieldType.TT_SUMMARY,\n    FieldType.TT_ART_STAGING_SUMMARY,\n    FieldType.TT_ADHERENCE_INPUT,\n    FieldType.TT_LAB_ORDERS,\n    FieldType.TT_PERSON_RESULT_VIEW,\n    FieldType.TT_PROGRAM_SELECTION,\n    FieldType.TT_DATE_PICKER,\n    FieldType.TT_RELATION_SELECTION,\n    FieldType.TT_FILING_NUMBER_VIEW,\n    FieldType.TT_PERSON_MATCH_VIEW,\n    FieldType.TT_FULL_DATE,\n    FieldType.TT_BATCH_ENTRY,\n    FieldType.TT_BATCH_VERIFICATION,\n    FieldType.TT_BATCH_MOVEMENT,\n    FieldType.TT_IP_ADDRESS,\n    FieldType.TT_TEXT_BANNER,\n    FieldType.TT_DISPENSATION_INPUT,\n    FieldType.TT_DATA_TABLE,\n    FieldType.TT_GROUP_SELECTOR,\n    FieldType.TT_ANC_PREGNANCY_INPUT_CONFIG,\n    FieldType.TT_ANC_PREGNANCY_DETAILS_INPUT,\n    FieldType.TT_ANC_LMP_DATE_INPUT,\n    FieldType.TT_DRUG_TRANSFER_IN,\n    FieldType.TT_GRID_SELECTOR,\n    FieldType.TT_ANC_DRUGSET_INPUT,\n    FieldType.TT_RADIOLOGY_PICKER,\n    FieldType.TT_PRESCRIPTION_INPUT,\n    FieldType.TT_INFINITE_SCROLL_MULTIPLE_SELECT,\n    FieldType.TT_DRUG_DISPENSER\n]\n","import {LocationService} from \"@/services/location_service\"\nimport { Option } from \"@/components/Forms/FieldInterface\"\nimport { isEmpty } from \"lodash\"\n\nexport async function getFacilities(filter=''): Promise<Option[]> {\n    const facilities = await LocationService.getFacilities({name: filter})\n    return facilities.filter((f: any) => !isEmpty(f) && f.name.trim() !='')\n        .map((facility: any) => ({\n            label: facility.name,\n            value: facility.location_id,\n            other: facility\n        }))\n}\n\nexport async function getLabFacilities(filter=''): Promise<Option[]> {\n    const facilities = await LocationService.getLabs({'search_name': filter})\n    return facilities.map((facility: any) => ({\n            label: facility,\n            value: facility\n        }))\n}\n\nexport async function getFacilityWards(filter=''): Promise<Option[]> {\n    const wards = await LocationService.getFacilities({\n        name: filter,\n        tag: 'Facility adult sections'\n    })\n\n    return wards.map((ward: any) => ({\n        label: ward.name,\n        value: ward.name,\n        other: ward\n    }))\n}\n\nexport async function getSpecialistClinics(): Promise<Option[]> {\n    const clinics = await LocationService.getSpecialistClinics()\n    return clinics.map((clinic: any) => ({\n        label: clinic.name,\n        value: clinic.name,\n        other: clinic\n    }))\n}\n\nexport async function getRegions(): Promise<Option[]> {\n    const regions = await LocationService.getRegions()\n    return regions.map((region: any) => ({\n        label: region.name,\n        value: region.region_id,\n        other: region\n    }))\n}\n\nexport async function getDistricts(regionID: number): Promise<Option[]> {\n    const districts = await LocationService.getDistricts(regionID)\n    return districts.map((district: any) => ({\n        label: district.name,\n        value: district.district_id,\n        other: district\n    }))\n}\n\nexport async function getTraditionalAuthorities(districtID: number, name=''): Promise<Option[]> {\n    const TAs = await LocationService.getTraditionalAuthorities(districtID, name)\n    return TAs.map((TA: any) => ({\n        label: TA.name,\n        value: TA.traditional_authority_id,\n        other: TA\n    }))\n}\n\nexport async function getVillages(traditionalAuthorityID: number, name=''): Promise<Option[]> {\n    const villages = await LocationService.getVillages(traditionalAuthorityID, name)\n    return villages.map((village: any) => ({\n        label: village.name,\n        value: village.village_id,\n        other: village\n    }))\n}\n\nexport async function getVillagesByName(name='a', page=1): Promise<Option[]> {\n    const villages = await LocationService.getVillagesByName(name, page)\n    return villages.map((village: any) => ({\n        label: village.name,\n        value: village.village_id,\n        other: village\n    }))\n}\n\nexport function getLandmarks(): Option[] {\n    const landmarks = [\n        'Catholic Church',\n        'CCAP',\n        'Seventh Day',\n        'Mosque',\n        'Primary School',\n        'Borehole',\n        'Secondary School',\n        'College',\n        'Market',\n        'Football Ground',\n        'Other'\n    ]\n\n    return landmarks.map(landmark =>({\n        label: landmark,\n        value: landmark,\n        other: {\n            code: landmark\n        }\n    }))\n}\n","var map = {\n\t\"./AncDrugSetInput.vue\": [\n\t\t\"c99f\",\n\t\t\"TouchFormElement0\"\n\t],\n\t\"./AncLmpDateInput.vue\": [\n\t\t\"101a\",\n\t\t\"TouchFormElement1\"\n\t],\n\t\"./AncPregnancyDetailsInput.vue\": [\n\t\t\"b043\",\n\t\t\"TouchFormElement2\"\n\t],\n\t\"./AncPregnancyInfoConfig.vue\": [\n\t\t\"262e\",\n\t\t\"TouchFormElement3\"\n\t],\n\t\"./ArtStagingSummary.vue\": [\n\t\t\"43db\",\n\t\t\"TouchFormElement4\"\n\t],\n\t\"./AsyncMultiSelect.vue\": [\n\t\t\"5de2\",\n\t\t\"chunk-03993608\",\n\t\t\"TouchFormElement5\"\n\t],\n\t\"./BaseTextInput.vue\": [\n\t\t\"36ad\",\n\t\t\"TouchFormElement6\"\n\t],\n\t\"./DrugDispensationSelection.vue\": [\n\t\t\"05d5\",\n\t\t\"TouchFormElement7\"\n\t],\n\t\"./DrugTransferInput.vue\": [\n\t\t\"de42\",\n\t\t\"chunk-337918c0\",\n\t\t\"TouchFormElement8\"\n\t],\n\t\"./FieldMixin.vue\": [\n\t\t\"51c8\",\n\t\t\"TouchFormElement9\"\n\t],\n\t\"./FilingNumberView.vue\": [\n\t\t\"c650\",\n\t\t\"TouchFormElement10\"\n\t],\n\t\"./GeneralDrugDispenser.vue\": [\n\t\t\"7737\",\n\t\t\"TouchFormElement11\"\n\t],\n\t\"./HisAdherenceInput.vue\": [\n\t\t\"f2c3\",\n\t\t\"chunk-337918c0\",\n\t\t\"TouchFormElement12\"\n\t],\n\t\"./HisAgeInput.vue\": [\n\t\t\"c05f\",\n\t\t\"TouchFormElement13\"\n\t],\n\t\"./HisAppointments.vue\": [\n\t\t\"b2eb\",\n\t\t\"chunk-366b6f0a\",\n\t\t\"TouchFormElement14\"\n\t],\n\t\"./HisArtRegimenSelection.vue\": [\n\t\t\"47b9\",\n\t\t\"TouchFormElement15\"\n\t],\n\t\"./HisBarcodeInput.vue\": [\n\t\t\"dd65\",\n\t\t\"TouchFormElement16\"\n\t],\n\t\"./HisBatchEntry.vue\": [\n\t\t\"f2ab\",\n\t\t\"chunk-182277b5\",\n\t\t\"chunk-337918c0\",\n\t\t\"TouchFormElement17\"\n\t],\n\t\"./HisBatchMovement.vue\": [\n\t\t\"5148\",\n\t\t\"chunk-182277b5\",\n\t\t\"chunk-337918c0\",\n\t\t\"TouchFormElement18\"\n\t],\n\t\"./HisBatchVerification.vue\": [\n\t\t\"7b0f\",\n\t\t\"chunk-182277b5\",\n\t\t\"chunk-337918c0\",\n\t\t\"TouchFormElement19\"\n\t],\n\t\"./HisCardSelector.vue\": [\n\t\t\"0734\",\n\t\t\"TouchFormElement20\"\n\t],\n\t\"./HisClinicHolidayPicker.vue\": [\n\t\t\"4030\",\n\t\t\"chunk-366b6f0a\",\n\t\t\"TouchFormElement21\"\n\t],\n\t\"./HisComplaintsPicker.vue\": [\n\t\t\"82d1\",\n\t\t\"TouchFormElement22\"\n\t],\n\t\"./HisDataTable.vue\": [\n\t\t\"a6ba\",\n\t\t\"TouchFormElement23\"\n\t],\n\t\"./HisDateInput.vue\": [\n\t\t\"374c\",\n\t\t\"TouchFormElement24\"\n\t],\n\t\"./HisDatePicker.vue\": [\n\t\t\"9b30\",\n\t\t\"chunk-366b6f0a\",\n\t\t\"TouchFormElement25\"\n\t],\n\t\"./HisDosageInput.vue\": [\n\t\t\"b34c\",\n\t\t\"chunk-337918c0\",\n\t\t\"TouchFormElement26\"\n\t],\n\t\"./HisGridSelector.vue\": [\n\t\t\"112a\",\n\t\t\"TouchFormElement27\"\n\t],\n\t\"./HisGroupSelector.vue\": [\n\t\t\"81cf\",\n\t\t\"TouchFormElement28\"\n\t],\n\t\"./HisIPAddress.vue\": [\n\t\t\"2a82\",\n\t\t\"TouchFormElement29\"\n\t],\n\t\"./HisInfiniteScrollMultipleSelect.vue\": [\n\t\t\"52a3\",\n\t\t\"TouchFormElement30\"\n\t],\n\t\"./HisLabOrders.vue\": [\n\t\t\"e614\",\n\t\t\"chunk-03993608\",\n\t\t\"TouchFormElement31\"\n\t],\n\t\"./HisMonthlyDays.vue\": [\n\t\t\"69cf\",\n\t\t\"TouchFormElement32\"\n\t],\n\t\"./HisMultiSelectGrid.vue\": [\n\t\t\"0fa3\",\n\t\t\"TouchFormElement33\"\n\t],\n\t\"./HisMultipleSelect.vue\": [\n\t\t\"2fd5\",\n\t\t\"chunk-03993608\",\n\t\t\"TouchFormElement34\"\n\t],\n\t\"./HisNextVisitInterval.vue\": [\n\t\t\"3126\",\n\t\t\"TouchFormElement35\"\n\t],\n\t\"./HisNote.vue\": [\n\t\t\"c927\",\n\t\t\"TouchFormElement36\"\n\t],\n\t\"./HisNumberInput.vue\": [\n\t\t\"5e75\",\n\t\t\"TouchFormElement37\"\n\t],\n\t\"./HisPrescriptionInput.vue\": [\n\t\t\"87e5\",\n\t\t\"chunk-337918c0\",\n\t\t\"TouchFormElement38\"\n\t],\n\t\"./HisRadiologyPicker.vue\": [\n\t\t\"adc7\",\n\t\t\"TouchFormElement39\"\n\t],\n\t\"./HisSelect.vue\": [\n\t\t\"d11f\",\n\t\t\"TouchFormElement40\"\n\t],\n\t\"./HisSummary.vue\": [\n\t\t\"e0bd\",\n\t\t\"TouchFormElement41\"\n\t],\n\t\"./HisTableViewer.vue\": [\n\t\t\"8904\",\n\t\t\"TouchFormElement42\"\n\t],\n\t\"./HisTextBanner.vue\": [\n\t\t\"952c\",\n\t\t\"TouchFormElement43\"\n\t],\n\t\"./HisTextInput.vue\": [\n\t\t\"6ef9\",\n\t\t\"TouchFormElement44\"\n\t],\n\t\"./HisVitalsEntry.vue\": [\n\t\t\"e333\",\n\t\t\"TouchFormElement45\"\n\t],\n\t\"./HisWeightChart.vue\": [\n\t\t\"26a1\",\n\t\t\"TouchFormElement46\"\n\t],\n\t\"./LinkageCodeInput.vue\": [\n\t\t\"ac86\",\n\t\t\"TouchFormElement47\"\n\t],\n\t\"./MultiYesNoSelect.vue\": [\n\t\t\"5fd1\",\n\t\t\"TouchFormElement48\"\n\t],\n\t\"./PersonMatchView.vue\": [\n\t\t\"6591\",\n\t\t\"TouchFormElement49\"\n\t],\n\t\"./PersonSearchView.vue\": [\n\t\t\"28b2\",\n\t\t\"TouchFormElement50\"\n\t],\n\t\"./ProgramSelection.vue\": [\n\t\t\"e3b4\",\n\t\t\"TouchFormElement51\"\n\t],\n\t\"./RelationsSelection.vue\": [\n\t\t\"0e57\",\n\t\t\"TouchFormElement52\"\n\t],\n\t\"./SelectMixin.vue\": [\n\t\t\"82a9\",\n\t\t\"TouchFormElement53\"\n\t],\n\t\"./YesNoSelect.vue\": [\n\t\t\"71f2\",\n\t\t\"TouchFormElement54\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"f159\";\nmodule.exports = webpackAsyncContext;"],"sourceRoot":""}