{"version":3,"sources":["webpack:///./src/apps/ART/services/adherence_service.ts","webpack:///./src/utils/Arrays.ts","webpack:///./src/apps/ART/services/lab_order_service.ts","webpack:///./src/services/person_attributes_service.ts","webpack:///./src/services/patient_registration_service.ts","webpack:///./src/services/relations_service.ts","webpack:///./src/apps/ART/services/htn_service.ts","webpack:///./src/services/patient_lab_result_service.ts","webpack:///./src/apps/EMC/utils/form.ts","webpack:///./src/apps/ART/services/stock_service.ts","webpack:///./src/apps/ART/services/dispensation_service.ts","webpack:///./src/apps/ART/services/reception_service.ts","webpack:///./src/apps/EMC/Components/InformationHeader.vue?4303","webpack:///./src/services/drug_order_service.ts","webpack:///./src/utils/ActionSheetHelpers/VoidReason.ts","webpack:///./src/components/DataViews/DrillTableModal.vue?eb68","webpack:///./src/components/DataViews/DrillTableModal.vue","webpack:///./src/components/DataViews/DrillTableModal.vue?7a9b","webpack:///./src/apps/ART/services/appointment_service.ts","webpack:///./src/apps/EMC/Components/tables/VisitsSummary.vue?d2bd","webpack:///./src/apps/EMC/Components/modals/PatientVisit.vue?940d","webpack:///./src/apps/EMC/views/Mastercard.vue?03d1","webpack:///./src/apps/EMC/Components/tables/VisitsSummary.vue?8da6","webpack:///./src/apps/EMC/Components/modals/ViralLoadResult.vue?d4f6","webpack:///./src/apps/EMC/Components/modals/ViralLoadResult.vue","webpack:///./src/apps/EMC/Components/modals/ViralLoadResult.vue?887d","webpack:///./src/apps/EMC/Components/modals/OutcomeStatus.vue?3ff5","webpack:///./src/apps/EMC/Components/tables/OutcomesTable.vue?74aa","webpack:///./src/apps/EMC/Components/tables/OutcomesTable.vue","webpack:///./src/apps/EMC/Components/tables/OutcomesTable.vue?e442","webpack:///./src/apps/EMC/Components/EnrollmentForm.vue?9722","webpack:///./src/apps/EMC/Components/EnrollmentForm.vue","webpack:///./src/apps/EMC/Components/EnrollmentForm.vue?4be1","webpack:///./src/apps/EMC/Components/OutcomeForm.vue?f994","webpack:///./src/apps/EMC/Components/OutcomeForm.vue","webpack:///./src/apps/EMC/Components/OutcomeForm.vue?6644","webpack:///./src/apps/EMC/Components/modals/OutcomeStatus.vue","webpack:///./src/apps/EMC/Components/modals/OutcomeStatus.vue?0dcc","webpack:///./src/apps/EMC/Components/modals/PatientVisit.vue?fe05","webpack:///./src/services/patient_observation_service.ts","webpack:///./src/apps/EMC/Components/modals/PatientVisit.vue","webpack:///./src/apps/EMC/Components/modals/PatientVisit.vue?f13b","webpack:///./src/apps/EMC/Components/tables/VisitsSummary.vue","webpack:///./src/apps/EMC/Components/tables/VisitsSummary.vue?f28b","webpack:///./src/apps/EMC/Components/InformationHeader.vue?1914","webpack:///./src/apps/EMC/Components/modals/VLResultTrail.vue","webpack:///./src/apps/EMC/Components/modals/VLResultTrail.vue?5cff","webpack:///./src/apps/EMC/Components/InformationHeader.vue","webpack:///./src/apps/EMC/Components/InformationHeader.vue?d582","webpack:///./src/apps/EMC/Components/modals/PatientDemographics.vue?28d4","webpack:///./src/apps/EMC/Components/modals/PatientDemographics.vue","webpack:///./src/apps/EMC/Components/modals/PatientDemographics.vue?9f15","webpack:///./src/apps/EMC/Components/modals/GuardianDemographics.vue","webpack:///./src/apps/EMC/Components/modals/GuardianDemographics.vue?dad6","webpack:///./src/apps/EMC/Components/modals/ArvNumber.vue?964d","webpack:///./src/apps/EMC/Components/modals/ArvNumber.vue","webpack:///./src/apps/EMC/Components/modals/ArvNumber.vue?5f12","webpack:///./src/apps/EMC/views/Mastercard.vue","webpack:///./src/apps/EMC/views/Mastercard.vue?94de","webpack:///./src/apps/ART/services/vitals_service.ts","webpack:///./src/apps/EMC/interfaces/emc_event.ts","webpack:///./src/services/person_service.ts","webpack:///./src/utils/modal.ts","webpack:///./src/apps/ART/services/prescription_service.ts"],"names":["AdherenceService","AppEncounterService","constructor","patientID","providerID","super","_defineProperty","this","lastDrugs","lastReceiptDate","optimiseHangingPills","date","Date","setDate","getDate","d","HisDate","toStandardHisFormat","drugs","getJson","isEmpty","reduce","receiptDate","drug","order","start_date","htnDrugs","BPManagementService","htnDrugReferences","map","drug_id","filter","includes","lastPillCounts","getPreviousDrugPillCount","quantity","getReceiptDate","getLastDrugs","receivedDrugsBefore","buildPillCountObs","orderId","pillCount","buildValueNumber","programID","drugId","adherence","concept","getConceptID","getSessionDate","isAdherenceGood","calculateAdherence","given","pills","expected","Math","round","calculateExpected","equivalentDailyDose","startDate","frequency","timeUnit","daysGone","calcTimeElapsed","parseFloat","toString","date1","dayjs","diff","calculateUnaccountedOrMissed","actual","exp","uniqueBy","arr","iteratee","Map","Boolean","item","uniqueKey","Array","isArray","k","join","values","swapAdjacentItems","index","length","Error","sortBy","prop","sortOrder","sort","a","b","joinWithCommasAnd","slice","LabOrderService","PersonAttributeService","Service","attributes","postJson","PatientRegistrationService","personId","getPersonID","setPersonID","personID","person","personAttributes","createPerson","createPersonAttributes","patient","createPatient","printPatient","updatePerson","PersonService","update","data","create","person_id","ProgramService","PatientPrintoutService","printNidLbl","RelationsService","relationID","reason","void","guardianID","curRelationID","newRelationTypeID","voidRelation","createRelation","patientA","patientB","relationType","HTN_SESSION_KEY","sbp","dbp","bpTrail","firstRecentGrade","secondRecentGrade","Object","bp","getBpGrade","getSystolicBp","ObservationService","getFirstValueNumber","getDiastolicBp","query","getFirstValueCoded","drugID","state","getDrugs","HCZ","drugName","amount","current","selected","isChecked","dispensed","expectedRemaining","notes","Enalapril","remaining","Amlodipine","Atenolol","PatientLabResultService","patientId","testTypeID","resultDate","testID","createLabResult","measures","encounterID","getTestID","getTestTypeID","setTestTypeID","test","setResultDate","setTestID","getTestsWithoutResults","OrderService","getOrders","status","getTestIndicators","async","isValidForm","form","key","required","value","validation","error","payload","label","errs","every","resolveFormValues","underscoreKeys","formData","computedFormData","computedValue","fKey","toUnderscores","resolveObs","obs","tag","accum","cur","concat","push","Promise","all","optionsToGroupObs","conceptName","options","buildGroupValueCoded","option","submitForm","callback","showloader","loader","show","toastWarning","console","hide","StockService","stock","current_quantity","packSize","pack_size","DRUG_PACK_SIZES","DispensationService","drugHistory","currentDrugOrder","useDrugManagement","setIsDrugManagementEnabled","isEnabled","ART_PROP","drugManagementEnabled","getDrugHistory","getCurrentOrder","buildDispensations","tabs","totalPacks","dispensations","i","saveDispensations","getProgramID","DrugOrderService","getDrugOrderHistory","e","warn","getDrugOrders","stocks","fetchAvailableDrugStock","getDrugPackSizes","calcCompletePack","units","drugOrderBarcodes","barcodes","parseInt","completePack","ReceptionService","sitePrefix","getSitePrefix","GLOBAL_PROP","createArvNumber","identifier","buildArvNumber","arv","orders","pageSize","params","popVoidReason","size","modal","optionsActionSheet","name","slot","color","role","selection","action","_hoisted_1","_hoisted_2","render","_ctx","_cache","$props","$setup","$data","$options","_component_ion_title","_resolveComponent","_component_ion_toolbar","_component_ion_header","_component_his_basic_table","_component_text_skeloton","_component_ion_content","_component_ion_button","_component_ion_footer","_openBlock","_createElementBlock","_Fragment","_createVNode","default","_withCtx","_createTextVNode","_toDisplayString","title","_","ready","columns","rows","onClick","closeModal","defineComponent","components","HisBasicTable","IonHeader","IonToolbar","IonContent","IonFooter","IonButton","TextSkeloton","props","type","String","onRows","Function","watch","func","immediate","deep","methods","modalController","dismiss","__exports__","AppointmentService","paginate","_component_information_header","_component_ion_col","_component_ion_row","_component_visits_summary","_component_ion_grid","isReady","_createBlock","class","guardians","artStartDate","onUpdateARVNumber","updateARVNumber","onUpdateGuardian","updateGuardian","onUpdatePatient","updateDemographics","_createCommentVNode","_withScopeId","n","_pushScopeId","_popScopeId","_createElementVNode","_component_ion_icon","_component_ion_card_title","_component_ion_card_header","_component_report_table","_component_ion_card_content","_component_ion_card","style","_renderList","actionButtons","btn","icon","config","tableConfig","_component_DateInput","_component_SelectInput","_component_NumberInput","_component_ion_label","_component_ion_checkbox","_component_ion_item","modelValue","orderDate","$event","minDate","birthdate","maxDate","today","reasons","specimenConcept","specimens","modifier","modifiers","result","min","ldl","resetResults","saveResults","IonTitle","IonLabel","IonGrid","IonRow","IonCol","IonCheckbox","IonItem","DateInput","SelectInput","NumberInput","setup","ref","toOptions","format","STANDARD_DATE_FORMAT","getBirthdate","reactive","isValid","placeholder","setSessionDate","orderService","getID","vlConceptId","ConceptService","encounter","createEncounter","formattedOrders","buildLabOrders","saveOrdersArray","encounter_id","resultService","tests","id","resultEnc","resetSessionDate","EventBus","emit","EmcEvents","RELOAD_LATEST_VL_RESULT","RELOAD_PATIENT_VISIT_DATA","alertConfirmation","ON_CLEAR","isLDL","undefined","disabled","onMounted","getSpecimens","specimen","_component_ion_badge","_component_enrollment_form","_component_outcome_form","_component_outcomes_table","enrollmentStatus","isEnrolled","outcomes","enrollDate","onSaveOutcome","saveOutcome","_normalizeStyle","minHeight","totalStates","_ctx$program","patientStates","program","patient_states","onVoidOutcome","voidOutcome","patientProgram","onEnrollProgram","enrollProgram","voidProgram","_component_data_table","TableRowActions","DataTable","emits","path","formatter","v","DISPLAY_DATE_FORMAT","showSearchField","showSubmitButton","computed","stateId","row","patient_state_id","onReset","_component_text_input","dateEnrolled","isTransferredOut","nextFacility","asyncOptions","getFacilities","transferOutReasons","specifyOther","otherReason","onSave","TextInput","facility","StandardValidations","_form$status","_form$reason","_form$status$value","_form$reason2","IonBadge","OutcomesTable","EnrollmentForm","OutcomeForm","toStandardHisDisplayFormat","PatientProgramService","_program$value$patien","_program$value","setStateDate","setStateId","finalReason","transferOutEncounter","other","updateState","toastSuccess","setProgramDate","_program$value2","setPatientProgramId","patient_program_id","_program$value3","voidState","splice","programs","getPrograms","find","l","date_enrolled","states","getProgramOutcomes","program_workflow_state_id","_component_yes_no_input","_component_multi_column_view","visitDate","weight","showHeightField","isOnActiveTBTreatment","height","tbStatus","tbStatuses","isOnTBTreatment","tbTreatmentStartDate","tbTreatmentPeriod","isFemale","isPregnant","inline","isBreastfeeding","hasContraindications","items","contraIndications","numberOfColumns","entries","entry","lines","hasSideEffects","sideEffects","regimen","regimens","totalArvsGiven","totalCPTGiven","tbMed","tbMeds","hasGiven6H","hasGivenRFP","totalIPTGiven","totalRFPGiven","hasGiven3HP","total3HPGiven","totalPyridoxineGiven","patientPresent","guardianPresent","prevDrugs","nextAppointmentDate","drugRunOutDate","onClear","onSubmit","PatientObservationService","Patientservice","getFirstObs","value_coded","match","obsInValidPeriod","getFirstObsDatetime","getLastValueCoded","getConceptName","getLastValueNumber","weights","getAll","value_numeric","obs_datetime","value_text","value_datetime","getAllDrugOrders","Number","MAX_SAFE_INTEGER","getFirstValueText","getWhoStage","YesNoInput","MultiColumnView","vitals","VitalsService","consultations","ConsultationService","prescription","PrescriptionService","dispensation","reception","appointment","prevHeight","getAge","validator","buildValueCoded","buildValueDate","isNumber","_form$tbMed$value","_form$tbMed$value2","_form$tbMed$value3","_form$tbMed$value4","_form$tbMed$value5","validateSeries","some","x","period","getRegimens","onTB","unknownReg","regs","RegimenService","getRegimensByWeight","keys","isPresent","newWeight","calculateMinDuration","totalGiven","_drug$am","_drug$noon","_drug$pm","am","noon","pm","remainingDrugs","duration","add","checkForActiveTB","_form$tbMed$value6","_form$tbMed$value7","_form$tbMed$value8","_form$tbStatus$value","previousTBStatus","getFirstValueDatetime","timeElapsed","buildBmiObs","bmi","BMIService","calculateBMI","buildFpmObs","getFamilyPlanningMethods","forEach","method","getTbSymptomsObs","getConceptsByCategory","toDrugOrder","calculateEquivalentDosage","calculateDosage","getInstructions","drug_name","_formData$tbMed","vitalsObs","bmiObs","saveObservationList","consultationObs","drugOrders","arvDrugs","getRegimenExtras","iptRegimens","pyridoxine","INH","rfpRegimens","threeHPRegimens","createDrugOrder","drug_inventory_id","order_id","qty","flat","receptionObs","adherenceObs","equivalent_daily_dose","adh","buildAdherenceObs","appointmentObs","RELOAD_STAGING_INFORMATION","getRecentHeight","recentWeight","getRecentWeight","getLastDrugsReceived","concept_id","ReportTable","IonCard","IonCardHeader","IonCardTitle","IonCardContent","showIndex","tableCssTheme","PatientVisit","OutcomeStatus","ViralLoadResult","table","thTxt","formatVisitDate","monthsElapsed","drill","component","DrillTableModalVue","cssClass","componentProps","present","showDrugsDispensed","showSideEffects","removeEncounters","activeRows","encounters","EncounterService","getEncounters","voidEncounter","buildRows","getPatientVisits","then","dates","getCurrentProgramInformation","nextAppointment","pregnant","breastfeeding","vlResult","outcome","nDate","vlObs","td","getCachedConceptName","tdLink","side_effects","pills_dispensed","tdBtn","on","width","display","justifyContent","_hoisted_3","_hoisted_4","_hoisted_5","_component_ion_list","patientInfo","button","clickable","onClickHandler","_defineComponent","__name","__props","getFullName","voidBtn","isVLTestWithResults","loadOrders","ApiStore","get","_order$tests","_test$result","value_modifier","result_date","_unref","initWeight","initHeight","initBmi","initTBStatus","breastFeedingAtInitiation","pregnantAtInitiation","receivedART","agreesToFollowUp","reasonForStartingART","hivTestDate","hivTestPlace","stagingCondition","latestVLResult","whoSTage","hasGuardians","_item$other","getDobAndAgeAtInitiation","dob","ageAtInitiation","setLatestVLResult","force","invalidate","results","rs","r","t","c","updateStagingInfo","router","formattedRelations","relationshipType","getArvNumber","getNationalID","getGivenName","getFamilyName","toGenderString","getGender","getCurrentVillage","getClosestLandmark","getPhoneNumber","VLResultTrail","setHIVTestDate","getHIVTestDate","setStagingInfo","getInitialWeight","getInitialHeight","getInitialBMI","getInitialTBStatus","hasPregnancyAtARTInitiation","breastFeedingAtARTInitiation","everReceivedART","getReasonForStartingART","getHIVTestLocation","getStagingCondition","_component_ion_buttons","_component_TextInput","givenName","middleName","familyName","allowEstimation","estimationLabel","onIsEstimated","estimate","isBirthdateEstimated","gender","genderOptions","cellPhoneNumber","allowUnknown","homeVillage","getVillagesByName","allowCustom","landmark","getLandmarks","onFinish","patientService","isName","getMiddleName","phone","Validation","isMWPhoneNumber","resolveAddress","_village$other","address","village","TA","traditional_authority_id","LocationService","getTraditionalAuthorityById","district","getDistrictByID","district_id","updatedPatient","assign","RELOAD_PATIENT_DATA","_props$guardians$map","_props$guardians","registrationService","isNew","btnLabel","relationTypes","guardianOptions","g","activeGuardian","guardian","relation","addNewGuardian","registerGuardian","_data$relation$value","_data$relation","newGuardian","oldGuardian","guardianId","names","given_name","family_name","phoneNumber","cell_phone_number","_newGuardian$relation","_newGuardian$relation2","amendRelation","_g$other$names$given_","_g$other","_g$other$names$family","_g$other2","_g$other$phoneNumber","_g$other3","_g$other$relationship","_g$other4","RELOAD_GUARDIAN_DATA","relations","getRelations","b_is_to_a","relationship_type_id","arvNumber","prefix","hasValidARVNumber","voidARV","split","isNumberErr","patients","findByOtherID","confirm","voidARVNumber","log","VisitsSummary","InformationHeader","route","useRoute","setPatient","patientData","findByID","setPatientGuardian","RelationshipService","getGuardianDetails","PatientDemographics","attribute","GuardianDemographicsVue","ARVNumberVue","_patient$value","getARTStartDate","isNotEmptyandNumber","vital","isNotEmptyandFloat","_vital$other","checkMinMax","val","max","p","_val$other","_val$other2","validateAll","j","mergeErrors","errors","holder","element","isValidBPReading","isValidBP","bpSystolic","bpDiastolic","emptyErrors","minErrors","putJson","backdropDismiss","m","onWillDismiss","AdverseEffectsCategories","nextVisitInterval","fastTrack","regimenExtras","fastTrackMedications","hangingPills","medicationOrders","treatmentState","contraindications","tptPrescriptionCount","lastSideEffectDate","setNextVisitInterval","getHangingPills","getMedicationOrders","getTptPrescriptionCount","getLastSideEffectDate","getContraindications","getSideEffects","getPatientRegimens","getARVs","getCustomIngridients","getFastTrackMedications","getTreatmentState","isFastTrack","medicationOrdersAvailable","shouldPrescribeArvs","arvs","getCachedConceptID","shouldPrescribeExtras","extras","extrasAvailable","getRegimenStarterpack","regimenCode","patientWeight","contraindication","getObs","o","drugInduced","value_drug","res","count","yes","meds","toDate","_o$order","drug_order","withDosages","dosage","getDrugDosages","req","findAndGroupDrugSideEffects","allSideEffects","calculatePillsPerDay","estimatePackSize","pillsPerDay","packs","roundedPacks","morningTabs","eveningTabs","dose","calculateDateFromInterval","dateObj","getDrugPackSize","toOrderObj","response","saveValueTextObs","reasonForSwitch"],"mappings":"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","file":"js/chunk-978465e4.3d253877.js","sourcesContent":["import { AppEncounterService } from \"@/services/app_encounter_service\"\nimport { DrugInterface } from \"@/interfaces/Drug\"\nimport HisDate from \"@/utils/Date\"\nimport { isEmpty } from \"lodash\"\nimport { BPManagementService } from \"./htn_service\"\nimport dayjs from \"dayjs\"\n\nexport class AdherenceService extends AppEncounterService {\n    lastDrugs: Array<DrugInterface>\n    lastReceiptDate: string\n    constructor(patientID: number, providerID: number) {\n        super(patientID, 68, providerID) //TODO: Use encounter type reference name\n        this.lastDrugs = []\n        this.lastReceiptDate = ''\n    }\n\n    async loadPreviousDrugs(optimiseHangingPills=false) {\n        const date = new Date(this.date)\n        date.setDate(date.getDate() - 1) // we don't want current date to count\n        const d = (date: string | Date) => HisDate.toStandardHisFormat(date)\n        const drugs = await AppEncounterService.getJson(\n            `patients/${this.patientID}/drugs_received`, { date: d(date) }\n        )\n        if (!isEmpty(drugs)) {\n            this.lastReceiptDate = drugs.reduce((receiptDate: string | null,  drug: any) => {\n                return !receiptDate || (new Date(d(drug.order.start_date)) > new Date(receiptDate))\n                    ?  d(drug.order.start_date)\n                    : receiptDate\n            }, null)\n            const htnDrugs = BPManagementService.htnDrugReferences().map((d: any) => d.drug_id)\n            this.lastDrugs = drugs.filter((drug: DrugInterface) => \n                !htnDrugs.includes(drug.drug['drug_id']) && d(drug.order.start_date) === this.lastReceiptDate\n            )\n            if (optimiseHangingPills) {\n                const lastPillCounts: Record<number, number> = (await this.getPreviousDrugPillCount()) || {}\n                this.lastDrugs = this.lastDrugs.map((d: DrugInterface) => {\n                    if (lastPillCounts[d.drug.drug_id] && d.quantity) {\n                        d.quantity += lastPillCounts[d.drug.drug_id]\n                    }\n                    return d\n                })\n            }\n        }\n    }\n\n    getReceiptDate() { return this.lastReceiptDate }\n\n    getLastDrugs() { return this.lastDrugs }\n\n    receivedDrugsBefore() { return !isEmpty(this.lastDrugs) }\n\n    buildPillCountObs(orderId: number, pillCount: number) {\n        return this.buildValueNumber('Number of tablets brought to clinic', pillCount, null, orderId)\n    }\n    \n    getPreviousDrugPillCount() {\n        return AppEncounterService.getJson('last_drugs_pill_count', {\n            'patient_id': this.patientID,\n            'program_id': this.programID,\n            'date': this.lastReceiptDate\n        })\n    }\n\n    async buildAdherenceObs(orderId: number, drugId: number, adherence: number) {\n        const concept = await AppEncounterService.getConceptID('Drug adherence', true)\n        return {\n            'concept_id': concept,\n            'value_numeric': adherence,\n            'value_drug': drugId,\n            'value_modifier': '%',\n            'order_id': orderId,\n            'person_id': this.patientID,\n            'obs_datetime': AppEncounterService.getSessionDate()\n        }\n    }\n\n    isAdherenceGood(adherence: number) {\n        return adherence >= 95 && adherence <= 105\n    }\n\n    calculateAdherence(given: number, pills: number, expected: number) {\n        return Math.round(100 * (given - pills) / (given - expected));\n    }\n\n    calculateExpected(\n        given: number, \n        equivalentDailyDose: number, \n        startDate: string, \n        frequency: 'QOD' | 'QW'\n    ) {\n        const timeUnit = frequency === 'QW' ? 'week' : 'day'\n        const daysGone = this.calcTimeElapsed(startDate, timeUnit);\n        return (given - (daysGone * parseFloat(equivalentDailyDose.toString())));\n    }\n\n    calcTimeElapsed(date1: string, timeUnit: 'week' | 'day') {\n        // Consider this example: 2022-01-28 to 2022-01-01 diff is supposed to give us a difference of 28 days. \n        // However, dayjs calculates it as a difference of 27 days. Adding a one to correct this issue for a better calculation\n        return dayjs(HisDate.toStandardHisFormat(this.date)).diff(HisDate.toStandardHisFormat(date1), timeUnit) + 1\n    }\n\n    calculateUnaccountedOrMissed(expected: string, actual: string) {\n        const exp = (parseFloat(expected) - parseFloat(actual));\n        return (exp < 0 ? ((exp * -1) + ' missed') : (exp + ' unacc'));\n    }\n}\n","import { isEmpty } from \"lodash\";\n\n/**\n * A function that remove duplicates from an array\n * \n * @param arr list of items with possible duplicates\n * @param iteratee a key or list of keys to be used to remove duplicates\n * @returns list of unique items\n */\nexport function uniqueBy(arr: any[], iteratee: string | string[]) {\n  return [...new Map(arr.filter(Boolean).map(item => {\n    const uniqueKey = Array.isArray(iteratee) \n      ? iteratee.map(k => item[k]).join('_')\n      : item[iteratee]\n    return [uniqueKey, item]\n  })).values()]\n}\n\n/**\n * Swap two adjacent items in an array\n * \n * @param arr list of items \n * @param index position of the first item to be swapped\n * @returns \n */\nexport function swapAdjacentItems<T = any>(arr: Array<T>, index: number) {\n  if (index < 0 || index >= arr.length - 1) {\n    throw new Error(\"Invalid index or no adjacent items to swap.\");\n  }\n\n  [arr[index], arr[index + 1]] = [arr[index + 1], arr[index]]\n  return arr\n}\n\ntype SortOrder = \"asc\" | \"desc\";\ntype ObjArray = Array<Record<string, any>>;\n\n/**\n * Sorts an array of objects based on a specified property and order.\n *\n * @param arr - The array of objects to be sorted.\n * @param prop - The property by which to sort the objects.\n * @param order - Optional sorting order (\"asc\" for ascending, \"desc\" for descending). default is \"asc\"\n * @returns The sorted array of objects.\n */\nexport function sortBy(arr: ObjArray, prop: string, order?: SortOrder) {\n  if(isEmpty(arr)) return arr;\n  const sortOrder = order === \"desc\" ? -1 : 1;\n  return arr.sort((a, b) => {\n    if (a[prop] > b[prop]) return 1 * sortOrder;\n    if (a[prop] < b[prop]) return -1 * sortOrder;\n    return 0;\n  })\n}\n\n /* Joins items in an array with commas and an \"and\" for the last element.\n * \n * @param arr - The array of items to join.\n * @returns The joined string.\n * \n * @example \n * const fruits = ['apple', 'banana', 'cherry', 'date'];\n * const result = joinWithCommasAnd(fruits);\n * console.log(result); \n * // Output: \"apple, banana, cherry and date\"\n */\nexport function joinWithCommasAnd(arr: Array<any>): string {\n  const length = arr.length;\n  if (length === 0) return '';\n  if (length === 1) return arr[0];\n  return `${arr.slice(0, length - 1).join(', ')} and ${arr[length - 1]}`;\n}\n","import { AppEncounterService } from \"@/services/app_encounter_service\";\nexport class LabOrderService extends AppEncounterService {\n  constructor(patientID: number, providerID: number) {\n    super(patientID, 57, providerID);\n  }\n}","import { Service } from \"./service\"\n\nexport interface NewAttribute {\n    person_id: number;\n    person_attribute_type_id: number;\n    value: number | string;\n}\n\nexport class PersonAttributeService extends Service { \n    constructor() {\n        super()\n    }\n\n    static create(attributes: Array<NewAttribute>) { \n        return super.postJson('/person_attributes', attributes) \n    }\n}\n","import { Service } from \"./service\"\nimport { ProgramService } from \"@/services/program_service\";\nimport { Person } from \"@/interfaces/person\"\nimport { PersonService } from \"@/services/person_service\"\nimport { PersonAttributeService } from '@/services/person_attributes_service'\nimport { PatientPrintoutService } from \"@/services/patient_printout_service\";\n\nexport class PatientRegistrationService extends Service {\n    personId: number\n    constructor() {\n        super()\n        this.personId = 0\n    }\n\n    getPersonID() {\n        return this.personId\n    }\n\n    setPersonID(personID: number) {\n        this.personId = personID\n    }\n\n    async registerPatient(person: any, personAttributes: any) {\n        await this.createPerson(person)\n        await this.createPersonAttributes(personAttributes)\n        const patient = await this.createPatient()\n        await this.printPatient()\n        return patient\n    }\n\n    async registerGuardian(person: any) {\n        return this.createPerson(person)\n    }\n\n    updatePerson(person: any) {\n       return new PersonService(person).update(this.personId)\n    }\n\n    async createPerson(person: any) {\n        const data: Person = await new PersonService(person).create()\n        this.personId = data.person_id\n        return data\n    }\n\n    createPatient() {\n        return ProgramService.createPatient(this.personId)\n    }\n\n    async createPersonAttributes(attributes: Array<any>) {\n        for(const index in attributes) {\n            await PersonAttributeService.create({\n                ...attributes[index],\n                'person_id': this.personId\n            })\n        }\n    }\n\n    printPatient() {\n        return new PatientPrintoutService(this.personId).printNidLbl()\n    }\n}\n","import { Service } from \"./service\";\n\nexport class RelationsService extends Service {\n    constructor() {\n        super()\n    }\n\n    static voidRelation(patientID: number, relationID: number, reason: string) {\n\t\treturn Service.void(`people/${patientID}/relationships/${relationID}`, { reason })\n\t}\n\n    static async amendRelation(patientID: number, guardianID: number, curRelationID: number, newRelationTypeID: number) {\n        await RelationsService.voidRelation(patientID, curRelationID,\n            'Updating guardian relationship'\n        )\n        return RelationsService.createRelation(\n            patientID, guardianID, newRelationTypeID\n        )\n    }\n\n    static getRelations() {\n        return super.getJson('types/relationships')\n    }\n\n    static createRelation(patientA: number, patientB: number, relationType: number) {\n        return super.postJson(`people/${patientA}/relationships`, {\n            'relationship_type_id': relationType,\n            'relation_id': patientB\n        })\n    }\n}\n","import { AppEncounterService } from \"@/services/app_encounter_service\"\nimport { ObservationService } from \"@/services/observation_service\"\n\nexport enum HTN_SESSION_KEY {\n  Prescription = \"htnPrescription\"\n}\n\nexport class BPManagementService extends AppEncounterService {\n    constructor(patientID: number, providerID: number) {\n      super(patientID, 48, providerID) //TODO: Use encounter type reference name'\n    }\n\n    static getBpGrade(sbp: number, dbp: number) {\n      if ((sbp < 140) && (dbp < 90)) {\n        return \"normal\"\n      }\n      else if ((sbp >= 140 && sbp < 160) || (dbp >= 100 && dbp < 110)) {\n        return \"grade 1\"\n      }\n      else if ((sbp >= 180 && dbp > 110) || sbp >= 180) {\n        return \"grade 3\"\n      }\n      else if ((sbp >= 160 && sbp < 180) || (dbp >= 110)) {\n        return \"grade 2\"\n      }\n      return 'N/A'\n    }\n\n    /**\n     * BP is normointensive if two most recent consecutive tests are normal\n     * @param bpTrail \n     * @returns\n    */\n    static isBpNormotensive(bpTrail: any) {\n      const [ firstRecentGrade, secondRecentGrade ] = Object.values(bpTrail)\n        .sort((a: any, b: any) => a.date < b.date ? 1 : 0)\n        .map((bp: any) => this.getBpGrade(bp.sbp, bp.dbp))\n      return firstRecentGrade === 'normal' && secondRecentGrade === 'normal'\n    }\n\n    getSystolicBp() {\n      return ObservationService.getFirstValueNumber(this.patientID, 'Systolic blood pressure')\n    }\n\n    getDiastolicBp() {\n      return ObservationService.getFirstValueNumber(this.patientID, 'Diastolic blood pressure')\n    }\n\n    async onBpDrugs() {\n      const query = await ObservationService.getFirstValueCoded(this.patientID, 'Treatment status')\n      return query ? query === 'Yes' : false\n    }\n  \n    async getBPTrail() {\n      return await AppEncounterService.getJson(`/patients/${this.patientID}/bp_trail`);\n    }\n    async getCurrentDrugs() {\n      return await AppEncounterService.getJson(`/patients/${this.patientID}/current_bp_drugs`);\n    }\n    async getLastDrugs() {\n      return await AppEncounterService.getJson(`/patients/${this.patientID}/last_bp_drugs_dispensation`);\n    }\n    async getAdherence(drugID: number, pills: number) {\n      return await AppEncounterService.postJson(`/patients/${this.patientID}/remaining_bp_drugs`, {\n        'drug_id': drugID,\n        pills: pills\n      });\n    }\n    async enrollPatient(state: any) {\n      return await AppEncounterService.postJson(`/patients/${this.patientID}/update_or_create_htn_state`, state);\n    }\n    static htnDrugReferences() {\n      return [\n        { \n          'drug_id': 275,\n          'drug_name': \"HCZ (25mg tablet)\",\n          'units': 'tab(s)',\n          'am': 0,\n          'noon': 0,\n          'pm': 1,\n          'frequency': 'Daily (QOD)'\n        },\n        {\n          'drug_id': 942,\n          'drug_name': \"Enalapril (5mg tablet)\",\n          'units': 'tab(s)',\n          'am': 0,\n          'noon': 0,\n          'pm': 1,\n          'frequency': 'Daily (QOD)'\n        },\n        {\n          'drug_id': 943,\n          'drug_name': \"Enalapril (10mg tablet)\",\n          'units': 'tab(s)',\n          'am': 0,\n          'noon': 0,\n          'pm': 1,\n          'frequency': 'Daily (QOD)'\n        },\n        {\n          'drug_id': 558,\n          'drug_name': \"Amlodipine (5mg tablet)\",\n          'units': 'tab(s)',\n          'am': 0,\n          'noon': 0,\n          'pm': 1,\n          'frequency': 'Daily (QOD)'\n        },\n        {\n          'drug_id': 559,\n          'drug_name': \"Amlodipine (10mg tablet)\",\n          'units': 'tab(s)',\n          'am': 0,\n          'noon': 0,\n          'pm': 1,\n          'frequency': 'Daily (QOD)'\n        },\n        {\n          'drug_id': 117,\n          'drug_name': \"Atenolol (50mg tablet)\",\n          'units': 'tab(s)',\n          'am': 0,\n          'noon': 0,\n          'pm': 1,\n          'frequency': 'Daily (QOD)'\n        },\n        {\n          'drug_id': 11,\n          'drug_name': \"Atenolol(100mg tablet)\",\n          'units': 'tab(s)',\n          'am': 0,\n          'noon': 0,\n          'pm': 1,\n          'frequency': 'Daily (QOD)'\n        }\n      ]\n    }\n    getDrugs() {\n        return {\n        HCZ: {\n          drugs: [\n            {\n              drugName: \"HCZ (25mg tablet)\",\n              drugID: 275,\n              amount: '25mg',\n              current: false,\n              selected: false,\n              isChecked: false,\n              dispensed: null,\n              expectedRemaining: null,\n              adherence: null,\n            },\n          ],\n          selected: null,\n          notes: [],\n        },\n        Enalapril: {\n          drugs: [\n            {\n              drugName: \"Enalapril (5mg tablet)\",\n              drugID: 942,\n              amount: '5mg',\n              current: false,\n              selected: false,\n              isChecked: false,\n              dispensed: null,\n              expectedRemaining: null,\n              adherence: null,\n              remaining: null,\n            },\n            {\n              drugName: \"Enalapril (10mg tablet)\",\n              drugID: 943,\n              amount: '10mg',\n              current: false,\n              selected: false,\n              isChecked: false,\n              dispensed: null,\n              expectedRemaining: null,\n              adherence: null,\n              remaining: null,\n            },\n          ],\n          selected: null,\n          notes: [],\n        },\n        Amlodipine: {\n          drugs: [\n            {\n              drugName: \"Amlodipine (5mg tablet)\",\n              drugID: 558,\n              amount: '5mg',\n              current: false,\n              selected: false,\n              isChecked: false,\n              dispensed: null,\n              expectedRemaining: null,\n              adherence: null,\n              remaining: null,\n            },\n            {\n              drugName: \"Amlodipine (10mg tablet)\",\n              drugID: 559,\n              amount: '10mg',\n              current: false,\n              selected: false,\n              isChecked: false,\n              dispensed: null,\n              expectedRemaining: null,\n              adherence: null,\n              remaining: null,\n            },\n          ],\n          selected: null,\n          notes: [],\n        },\n        Atenolol: {\n          drugs: [\n            {\n              drugName: \"Atenolol (50mg tablet)\",\n              drugID: 117,\n              amount: '50mg',\n              current: false,\n              selected: false,\n              isChecked: false,\n              dispensed: null,\n              expectedRemaining: null,\n              adherence: null,\n              remaining: null,\n            },\n            {\n              drugName: \"Atenolol(100mg tablet)\",\n              drugID: 11,\n              amount: '100mg',\n              current: false,\n              selected: false,\n              isChecked: false,\n              dispensed: null,\n              expectedRemaining: null,\n              adherence: null,\n              remaining: null,\n            },\n          ],\n          selected: null,\n          notes: [],\n        },\n      }\n    }\n}","import { OrderService } from '@/services/order_service'\nimport { AppEncounterService } from './app_encounter_service';\n\nexport class PatientLabResultService extends AppEncounterService {\n    patientID: number;\n    testTypeID: number;\n    resultDate: string;\n    testID: number;\n    constructor(patientId: number) {\n        super(patientId, 57)\n        this.patientID = patientId\n        this.testTypeID = -1\n        this.resultDate = ''\n        this.testID = -1\n    }\n\n    createLabResult(measures: Array<any>) {\n        return AppEncounterService.postJson(`lab/tests/${this.testID}/results`, {\n            'encounter_id': this.encounterID,\n            date: this.resultDate,\n            measures\n        })\n    }\n\n    getTestID() {\n        return this.testID\n    }\n\n    getTestTypeID() {\n        return this.testTypeID\n    }\n\n    setTestTypeID(test: number) {\n        this.testTypeID = test\n    }\n\n    setResultDate(date: string) {\n        this.resultDate = date\n    }\n\n    setTestID(test: number) {\n        this.testID = test\n    }   \n\n    getTestsWithoutResults() {\n        return OrderService.getOrders(this.patientID, {\n            status: 'drawn'\n        })\n    }\n\n    getTestIndicators() {\n      return OrderService.getJson(\n        `lab/test_result_indicators`, {\n        'test_type_id': this.testTypeID\n      })\n    }\n\n    \n}\n","import { ObsValue, ObservationService } from \"@/services/observation_service\"\nimport { DTForm } from \"../interfaces/dt_form_field\"\nimport { Option } from \"@/components/Forms/FieldInterface\";\nimport { toUnderscores } from \"@/utils/Strs\";\nimport { isEmpty } from \"lodash\";\nimport { loader } from \"@/utils/loader\";\nimport { toastWarning } from '@/utils/Alerts';\n\nexport async function isValidForm(form: DTForm) {\n  for (const key in form) {\n    const { required, value, validation } = form[key];\n    if (required && isEmpty(value)) {\n      form[key].error = \"This field is required\";\n      continue;\n    }\n    if (typeof validation === 'function') {\n      const payload = typeof value === 'object' ? value : { label: value, value };\n      const errs = await validation(payload as Option, form);\n      form[key].error = isEmpty(errs) ? \"\" : (errs as Array<string>).join();\n    }\n    else {\n      form[key].error = '';\n    }\n  }\n  return Object.values(form).every(({ error }) => !error);\n}\n\n\nexport function resolveFormValues(form: DTForm, underscoreKeys = false) {\n  const formData: any = {}\n  const computedFormData: any = {}\n  for (const key in form) {\n    const { value, computedValue } = form[key];\n    if(value) {\n      const fKey = underscoreKeys ? toUnderscores(key) : key\n      formData[fKey] = value\n      if(typeof computedValue === 'function') {\n        computedFormData[fKey] = computedValue(form[key].value, form)\n      }\n    }\n  }\n  return { formData, computedFormData }\n}\n\nexport function resolveObs (obs: any, tag=''): Promise<ObsValue[]> {\n  const values: any = Object.values(obs)\n    .filter((d: any) => d && (d.tag === tag || tag === ''))\n    .reduce((accum: any, cur: any) => { \n      const data = cur.obs ? cur.obs : cur\n      if (Array.isArray(data)) {\n        accum = accum.concat(data)\n      } else {\n          accum.push(data)\n      }\n      return accum\n    }, [])\n  return Promise.all(values)\n}\n\nexport function optionsToGroupObs (conceptName: string, options: Option[]) {\n  return Promise.all(options.map(async (option) => {\n    return ObservationService.buildGroupValueCoded(conceptName, option.label, option.isChecked ? 'Yes' : 'No')\n  }))\n}\n\ntype SubmitFormCallback = (formData: Record<string, any>, computedData: Record<string, any>) => Promise<void> | void\ninterface SubmitOptios {\n  showloader?: boolean;\n  underscoreKeys?: boolean;\n}\n\nexport async function submitForm (form: DTForm, callback: SubmitFormCallback, options?: SubmitOptios) {\n  if(!await isValidForm(form)) return\n  const showloader = options?.showloader || false\n  try {\n    if (showloader) await loader.show()\n    const {formData, computedFormData} = resolveFormValues(form, options?.underscoreKeys)\n    await callback(formData, computedFormData)\n  } catch (error) {\n    toastWarning(`${error}`)\n    console.error(error)\n  } finally {\n    if(showloader) await loader.hide()\n  }\n}","import { Service } from \"@/services/service\";\nimport { isEmpty } from \"lodash\";\n\nexport class StockService extends Service {\n    constructor() {\n        super()\n    }\n\n    static async fetchAvailableDrugStock(drugId: number) {\n        const stock = await this.getJson('pharmacy/items', { 'drug_id': drugId })\n        if(isEmpty(stock)) return\n        return stock.map((drug: any) => ({\n            quantity: drug.current_quantity,\n            packSize: drug.pack_size\n        }));\n    }\n}\n","import { AppEncounterService } from \"@/services/app_encounter_service\";\nimport { DrugOrderService } from \"@/services/drug_order_service\";\nimport { StockService } from \"./stock_service\";\nimport ART_PROP from '@/apps/ART/art_global_props';\n// ripped from old ART system\nexport const DRUG_PACK_SIZES: Record<string, any> = {\n    '11': [ 30 ],\n    '21': [ 25 ],\n    '22': [ 60 ],\n    '24': [ 30, 60, 90, 100 ],\n    '30': [ 90 ],\n    '39': [ 60 ],\n    '73': [ 120 ],\n    '74': [ 60 ],\n    '76': [ 1000 ],\n    '297': [ 30, 60, 90 ],\n    '576': [ 30, 60, 90 ],\n    '613': [ 60 ],\n    '731': [ 60 ],\n    '732': [ 60 ],\n    '733': [ 60 ],\n    '734': [ 30 ],\n    '735': [ 30 ],\n    '736': [ 60 ],\n    '738': [ 60 ],\n    '931': [ 12, 30, 60 ],\n    '932': [ 30 ],\n    '954': [ 60 ],\n    '963': [ 30, 60, 90 ],\n    '968': [ 60 ],\n    '969': [ 30 ],\n    '971': [ 30,60,90 ],\n    '976': [ 60 ],\n    '977': [ 30 ],\n    '982': [ 30 ],\n    '983': [ 30, 90 ],\n    '1039': [ 30,60,90 ],\n    '1043': [ 60 ],\n    '1044': [ 30],\n    '1056': [ 24 ],\n    '1216': [3, 6, 8, 12]\n}\n\nexport class DispensationService extends AppEncounterService {\n    drugHistory: Array<any>;\n    currentDrugOrder: Array<any>;\n    useDrugManagement: boolean; \n    constructor(patientID: number, providerID: number) {\n        super(patientID, 54, providerID)\n        this.drugHistory = []\n        this.currentDrugOrder = []\n        this.useDrugManagement = false\n    }\n\n    setIsDrugManagementEnabled(isEnabled: boolean) {\n        this.useDrugManagement = isEnabled\n    }\n\n    async loadDrugManagementEnabled() {\n        this.useDrugManagement = await ART_PROP.drugManagementEnabled()\n    }\n\n    getDrugHistory() {\n        return this.drugHistory\n    }\n\n    getCurrentOrder() {\n        return this.currentDrugOrder\n    }\n\n    buildDispensations(orderId: number, tabs: number, totalPacks: number) {\n        const dispensations = []\n        for(let i=0; i < totalPacks; i++) {\n            dispensations.push({\n                'drug_order_id': orderId,\n                date: this.date,\n                quantity: (tabs / totalPacks)\n            })\n        }\n        return dispensations\n    }\n\n    saveDispensations(dispensations: Array<any>) {\n        return AppEncounterService.postJson('/dispensations', { \n            dispensations, \n            'program_id': AppEncounterService.getProgramID()\n        })\n    }\n\n    async voidOrder(orderId: number) {\n        return AppEncounterService.void(`/dispensations/${orderId}`, {})\n    }\n\n    async loadDrugHistory() {\n        try {\n            this.drugHistory = (await DrugOrderService.getDrugOrderHistory(this.patientID))||[]\n        } catch (e) {\n            console.warn(e)\n        }\n    }\n\n    async loadCurrentDrugOrder() {\n        this.currentDrugOrder = (await DrugOrderService.getDrugOrders(this.patientID))||[]\n        if (!this.useDrugManagement) return\n        for(const order of this.currentDrugOrder) {\n            order.stocks = await StockService.fetchAvailableDrugStock(order.drug.drug_id)\n        }\n    }\n\n    getDrugPackSizes(drugId: number) {\n        if (drugId in DRUG_PACK_SIZES) {\n            return DRUG_PACK_SIZES[drugId]\n        }\n        return [30, 60, 90]\n    }\n\n    // Ripped from old ART system for backwards compatibility purposes\n    calcCompletePack(drug: any, units: number) {\n        //sorting in an ascending order by tabs\n        const drugOrderBarcodes = drug.barcodes.sort((a: any, b: any) => a.tabs - b.tabs); \n        if (drugOrderBarcodes.length == 0 || units == 0.0) return units;\n        for (const i in drugOrderBarcodes) {\n            const { tabs } = drugOrderBarcodes[i]\n            if (parseInt(tabs) >= units) return tabs;\n        }\n        const completePack = parseInt(drugOrderBarcodes[drugOrderBarcodes.length - 1].tabs)\n        return completePack\n    }\n}\n","import { AppEncounterService } from \"@/services/app_encounter_service\"\nimport { ProgramService } from \"@/services/program_service\";\nimport GLOBAL_PROP from \"@/apps/GLOBAL_APP/global_prop\";\n\nexport class ReceptionService extends AppEncounterService {\n    sitePrefix: string\n    constructor(patientID: number, providerID: number) {\n        super(patientID, 51, providerID) //TODO: Use encounter type reference name'\n        this.sitePrefix = ''\n    }\n\n    getSitePrefix() {\n        return this.sitePrefix\n    }\n\n    async loadSitePrefix() {\n        this.sitePrefix = await GLOBAL_PROP.sitePrefix();\n    }\n\n    createArvNumber(identifier: string) {\n        return ProgramService.postJson(\"/patient_identifiers/\", {\n            'patient_id': this.patientID,  \n            'identifier_type': 4,\n            identifier,\n        })\n    }\n\n    buildArvNumber(arv: number) {\n        return `${this.sitePrefix}-ARV-${arv}`    \n    }\n}\n","export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./InformationHeader.vue?vue&type=style&index=0&id=3cb2ba83&scoped=true&lang=css\"","import { DrugOrderInterface } from \"@/interfaces/DrugOrder\";\nimport { Service } from \"./service\";\n\nexport class DrugOrderService extends Service {\n    constructor() {\n        super()\n    }\n\n    static create(orders: DrugOrderInterface) {\n        return this.postJson('drug_orders', orders)\n    }\n\n    static updateDispensationOrders(orders: any) {\n        return this.postJson('dispensations', {\n            'program_id': this.getProgramID(),\n            dispensations: orders.map((order: any) => ({\n                'date': this.getSessionDate(),\n                'drug_order_id': order['order_id'],\n                'quantity': order['quantity']\n            }))\n        })\n    }\n\n    static getDrugOrderHistory(patientID: number) {\n        return this.getJson('drug_orders', { 'patient_id': patientID })\n    }\n\n    static getDrugOrders(patientID: number) {\n        return this.getJson('drug_orders', {\n            'patient_id': patientID,\n            'date': this.getSessionDate(),\n            'program_id': this.getProgramID()\n        })\n    }\n\n    static getAllDrugOrders(patientID: number, pageSize=1000) {\n        return this.getJson('drug_orders', {\n            'patient_id': patientID,\n            'program_id': Service.getProgramID(),\n            'page_size': pageSize\n        })\n    }\n\n    static getLastDrugsReceived(patientID: number) {\n        return this.getJson(`patients/${patientID}/last_drugs_received`, {\n            'date': this.getSessionDate(),\n            'program_id': this.getProgramID()\n        })\n    }\n\n    static getDrugDosages(patientID: number, drugID: number, date=this.getSessionDate()) {\n        const params = { 'drug_id': drugID, 'date': date }\n        return this.getJson(`programs/${this.getProgramID()}/patients/${patientID}/drug_doses`, params)\n    }\n\n    static getOrderByPatient(patientId: number, params: any) {\n        return this.getJson('/drug_orders', {\n            'patient_id': patientId,\n            'program_id': this.getProgramID(),\n            ...params\n        })\n    }\n\n}","import { optionsActionSheet } from '@/utils/ActionSheets'\n\ntype OnVoidHandler = (reason: string) => Promise<void> | void\n\nexport default async function popVoidReason(callback: OnVoidHandler, size = 'action-sheet-modal') {\n    const modal = await optionsActionSheet(\n        'Are you sure you want to void record?',\n        'Please specify reason for voiding this record',\n        [\n          'Mistake/ Wrong Entry',\n          'Duplicate',\n          'System Error' \n        ],\n        [\n            { name: 'Cancel', slot:'start'},\n            { name: 'Void', color: 'danger', slot:'end', role: 'action'}\n        ],\n        '',\n        size\n    )\n    if (modal.selection && modal.action === 'Void') {\n        await callback(modal.selection)\n    }\n}\n","import { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment } from \"vue\"\n\nconst _hoisted_1 = { key: 0 }\nconst _hoisted_2 = { key: 1 }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ion_title = _resolveComponent(\"ion-title\")!\n  const _component_ion_toolbar = _resolveComponent(\"ion-toolbar\")!\n  const _component_ion_header = _resolveComponent(\"ion-header\")!\n  const _component_his_basic_table = _resolveComponent(\"his-basic-table\")!\n  const _component_text_skeloton = _resolveComponent(\"text-skeloton\")!\n  const _component_ion_content = _resolveComponent(\"ion-content\")!\n  const _component_ion_button = _resolveComponent(\"ion-button\")!\n  const _component_ion_footer = _resolveComponent(\"ion-footer\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(_component_ion_header, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_title, null, {\n              default: _withCtx(() => [\n                _createTextVNode(_toDisplayString(_ctx.title), 1)\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_content, null, {\n      default: _withCtx(() => [\n        (_ctx.ready)\n          ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n              _createVNode(_component_his_basic_table, {\n                columns: _ctx.columns,\n                rows: _ctx.rows\n              }, null, 8, [\"columns\", \"rows\"])\n            ]))\n          : (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [\n              _createVNode(_component_text_skeloton)\n            ]))\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_footer, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_button, {\n              color: \"danger\",\n              onClick: _ctx.closeModal,\n              slot: \"end\"\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\" Close \")\n              ]),\n              _: 1\n            }, 8, [\"onClick\"])\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    })\n  ], 64))\n}","\nimport { defineComponent, PropType } from \"vue\";\nimport HisBasicTable from \"./HisBasicTable.vue\";\nimport { modalController } from \"@ionic/vue\";\nimport TextSkeloton from \"@/components/TextSkeleton.vue\"\nimport {\n  IonHeader, \n  IonToolbar, \n  IonContent, \n  IonFooter, \n  IonButton\n} from \"@ionic/vue\"\nimport { AsyncTableRowHandler } from \"./tables/ReportDataTable\";\n  \nexport default defineComponent({\n  components: { \n    HisBasicTable,\n    IonHeader, \n    IonToolbar, \n    IonContent, \n    IonFooter, \n    IonButton,\n    TextSkeloton\n  },\n  props: {\n    title: {\n      type: String,\n      required: true,\n    },\n    columns: {\n      type: Object as PropType<string[]>,\n      required: true,\n    },\n    onRows: {\n      type: Function as PropType<AsyncTableRowHandler>,\n      required: true,\n    },\n  },\n  data: () => ({\n    rows: [] as Array<any>,\n    ready: false,\n  }),\n  watch: {\n    onRows: {\n      async handler(func: AsyncTableRowHandler) {\n        if (func) {\n          this.rows = await func();\n          this.ready = true;\n        }\n      },\n      immediate: true,\n      deep: true,\n    },\n  },\n  methods: {\n    async closeModal() {\n      await modalController.dismiss({});\n    },\n  },\n});\n","import { render } from \"./DrillTableModal.vue?vue&type=template&id=1cc581b2&ts=true\"\nimport script from \"./DrillTableModal.vue?vue&type=script&lang=ts\"\nexport * from \"./DrillTableModal.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/projects/malawi-emr/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { AppEncounterService } from \"@/services/app_encounter_service\";\n\nexport class AppointmentService extends AppEncounterService {\n  constructor(patientID: number, providerID: number) {\n    super(patientID, 7, providerID);\n  }\n\n  async getNextAppointment() {\n    return AppEncounterService.getJson(`/programs/${this.programID}/patients/${this.patientID}/next_appointment_date`, {date: this.date})\n  }\n  \n  static async getDailiyAppointments(date: any) {\n    const programID = AppEncounterService.getProgramID();\n    return AppEncounterService.getJson(`/programs/${programID}/booked_appointments`, {date: date, paginate: false})\n  }\n\n}","export * from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./VisitsSummary.vue?vue&type=style&index=0&id=4291ea78&scoped=true&lang=css\"","export * from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./PatientVisit.vue?vue&type=style&index=0&id=77d303f6&scoped=true&lang=css\"","import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, withCtx as _withCtx, createVNode as _createVNode } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_information_header = _resolveComponent(\"information-header\")!\n  const _component_ion_col = _resolveComponent(\"ion-col\")!\n  const _component_ion_row = _resolveComponent(\"ion-row\")!\n  const _component_visits_summary = _resolveComponent(\"visits-summary\")!\n  const _component_ion_grid = _resolveComponent(\"ion-grid\")!\n\n  return (_ctx.isReady)\n    ? (_openBlock(), _createBlock(_component_ion_grid, {\n        key: 0,\n        class: \"ion-no-margin ion-no-padding\"\n      }, {\n        default: _withCtx(() => [\n          _createVNode(_component_ion_row, null, {\n            default: _withCtx(() => [\n              _createVNode(_component_ion_col, { size: \"12\" }, {\n                default: _withCtx(() => [\n                  (_ctx.patient)\n                    ? (_openBlock(), _createBlock(_component_information_header, {\n                        key: 0,\n                        patient: _ctx.patient,\n                        guardians: _ctx.guardians,\n                        artStartDate: _ctx.artStartDate,\n                        onUpdateARVNumber: _ctx.updateARVNumber,\n                        onUpdateGuardian: _ctx.updateGuardian,\n                        onUpdatePatient: _ctx.updateDemographics\n                      }, null, 8, [\"patient\", \"guardians\", \"artStartDate\", \"onUpdateARVNumber\", \"onUpdateGuardian\", \"onUpdatePatient\"]))\n                    : _createCommentVNode(\"\", true)\n                ]),\n                _: 1\n              })\n            ]),\n            _: 1\n          }),\n          _createVNode(_component_ion_row, null, {\n            default: _withCtx(() => [\n              _createVNode(_component_ion_col, null, {\n                default: _withCtx(() => [\n                  (_ctx.patient)\n                    ? (_openBlock(), _createBlock(_component_visits_summary, {\n                        key: 0,\n                        patient: _ctx.patient,\n                        startDate: _ctx.artStartDate\n                      }, null, 8, [\"patient\", \"startDate\"]))\n                    : _createCommentVNode(\"\", true)\n                ]),\n                _: 1\n              })\n            ]),\n            _: 1\n          })\n        ]),\n        _: 1\n      }))\n    : _createCommentVNode(\"\", true)\n}","import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, withCtx as _withCtx, createVNode as _createVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-4291ea78\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", { class: \"title\" }, \"Summary of Visits\", -1))\nconst _hoisted_2 = { class: \"ion-float-right ion-margin-end ion-margin-bottom\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ion_icon = _resolveComponent(\"ion-icon\")!\n  const _component_ion_button = _resolveComponent(\"ion-button\")!\n  const _component_ion_card_title = _resolveComponent(\"ion-card-title\")!\n  const _component_ion_card_header = _resolveComponent(\"ion-card-header\")!\n  const _component_report_table = _resolveComponent(\"report-table\")!\n  const _component_ion_card_content = _resolveComponent(\"ion-card-content\")!\n  const _component_ion_card = _resolveComponent(\"ion-card\")!\n\n  return (_openBlock(), _createBlock(_component_ion_card, {\n    class: \"his-card\",\n    style: {\"padding\":\"0 !important\"}\n  }, {\n    default: _withCtx(() => [\n      _createVNode(_component_ion_card_header, null, {\n        default: _withCtx(() => [\n          _createVNode(_component_ion_card_title, null, {\n            default: _withCtx(() => [\n              _hoisted_1,\n              _createElementVNode(\"span\", _hoisted_2, [\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.actionButtons, (btn) => {\n                  return (_openBlock(), _createBlock(_component_ion_button, {\n                    key: btn.label,\n                    onClick: btn.action,\n                    color: btn.color || 'primary'\n                  }, {\n                    default: _withCtx(() => [\n                      (btn.icon)\n                        ? (_openBlock(), _createBlock(_component_ion_icon, {\n                            key: 0,\n                            icon: btn.icon,\n                            class: \"ion-margin-right\"\n                          }, null, 8, [\"icon\"]))\n                        : _createCommentVNode(\"\", true),\n                      _createTextVNode(\" \" + _toDisplayString(btn.label), 1)\n                    ]),\n                    _: 2\n                  }, 1032, [\"onClick\", \"color\"]))\n                }), 128))\n              ])\n            ]),\n            _: 1\n          })\n        ]),\n        _: 1\n      }),\n      _createVNode(_component_ion_card_content, {\n        class: \"ion-no-padding\",\n        style: {\"min-height\":\"45vh\"}\n      }, {\n        default: _withCtx(() => [\n          _createVNode(_component_report_table, {\n            rows: _ctx.rows,\n            columns: _ctx.columns,\n            config: _ctx.tableConfig\n          }, null, 8, [\"rows\", \"columns\", \"config\"])\n        ]),\n        _: 1\n      })\n    ]),\n    _: 1\n  }))\n}","import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ion_title = _resolveComponent(\"ion-title\")!\n  const _component_ion_toolbar = _resolveComponent(\"ion-toolbar\")!\n  const _component_ion_header = _resolveComponent(\"ion-header\")!\n  const _component_DateInput = _resolveComponent(\"DateInput\")!\n  const _component_ion_col = _resolveComponent(\"ion-col\")!\n  const _component_SelectInput = _resolveComponent(\"SelectInput\")!\n  const _component_NumberInput = _resolveComponent(\"NumberInput\")!\n  const _component_ion_row = _resolveComponent(\"ion-row\")!\n  const _component_ion_label = _resolveComponent(\"ion-label\")!\n  const _component_ion_checkbox = _resolveComponent(\"ion-checkbox\")!\n  const _component_ion_item = _resolveComponent(\"ion-item\")!\n  const _component_ion_grid = _resolveComponent(\"ion-grid\")!\n  const _component_ion_content = _resolveComponent(\"ion-content\")!\n  const _component_ion_button = _resolveComponent(\"ion-button\")!\n  const _component_ion_footer = _resolveComponent(\"ion-footer\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(_component_ion_header, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_title, null, {\n              default: _withCtx(() => [\n                _createTextVNode(\"Viral Load Results\")\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_content, { class: \"ion-padding\" }, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_grid, { style: {\"width\":\"100%\"} }, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_row, null, {\n              default: _withCtx(() => [\n                _createVNode(_component_ion_col, {\n                  size: \"12\",\n                  class: \"ion-margin-vertical\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_DateInput, {\n                      modelValue: _ctx.form.orderDate,\n                      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((_ctx.form.orderDate) = $event)),\n                      form: _ctx.form,\n                      minDate: _ctx.birthdate,\n                      maxDate: _ctx.today\n                    }, null, 8, [\"modelValue\", \"form\", \"minDate\", \"maxDate\"])\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ion_col, {\n                  size: \"6\",\n                  class: \"ion-margin-vertical\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_SelectInput, {\n                      modelValue: _ctx.form.reason,\n                      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((_ctx.form.reason) = $event)),\n                      options: _ctx.reasons\n                    }, null, 8, [\"modelValue\", \"options\"])\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ion_col, {\n                  size: \"6\",\n                  class: \"ion-margin-vertical\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_SelectInput, {\n                      modelValue: _ctx.form.specimenConcept,\n                      \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((_ctx.form.specimenConcept) = $event)),\n                      options: _ctx.specimens\n                    }, null, 8, [\"modelValue\", \"options\"])\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ion_col, {\n                  size: \"12\",\n                  class: \"ion-margin-vertical\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_DateInput, {\n                      modelValue: _ctx.form.resultDate,\n                      \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((_ctx.form.resultDate) = $event)),\n                      form: _ctx.form,\n                      minDate: _ctx.form.orderDate.value,\n                      \"max-date\": _ctx.today\n                    }, null, 8, [\"modelValue\", \"form\", \"minDate\", \"max-date\"])\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ion_col, {\n                  size: \"6\",\n                  class: \"ion-margin-vertical\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_SelectInput, {\n                      modelValue: _ctx.form.modifier,\n                      \"onUpdate:modelValue\": _cache[4] || (_cache[4] = ($event: any) => ((_ctx.form.modifier) = $event)),\n                      options: _ctx.modifiers\n                    }, null, 8, [\"modelValue\", \"options\"])\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ion_col, {\n                  size: \"6\",\n                  class: \"ion-margin-vertical\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_NumberInput, {\n                      modelValue: _ctx.form.result,\n                      \"onUpdate:modelValue\": _cache[5] || (_cache[5] = ($event: any) => ((_ctx.form.result) = $event)),\n                      form: _ctx.form,\n                      min: 1\n                    }, null, 8, [\"modelValue\", \"form\"])\n                  ]),\n                  _: 1\n                })\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_ion_row, { class: \"ion-margin-top\" }, {\n              default: _withCtx(() => [\n                _createVNode(_component_ion_col, { size: \"12\" }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_ion_label, { class: \"ion-padding-vertical bold\" }, {\n                      default: _withCtx(() => [\n                        _createTextVNode(\"Other Results Options: \")\n                      ]),\n                      _: 1\n                    }),\n                    _createVNode(_component_ion_item, null, {\n                      default: _withCtx(() => [\n                        _createVNode(_component_ion_label, null, {\n                          default: _withCtx(() => [\n                            _createTextVNode(\"LDL\")\n                          ]),\n                          _: 1\n                        }),\n                        _createVNode(_component_ion_checkbox, {\n                          slot: \"start\",\n                          modelValue: _ctx.ldl,\n                          \"onUpdate:modelValue\": _cache[6] || (_cache[6] = ($event: any) => ((_ctx.ldl) = $event))\n                        }, null, 8, [\"modelValue\"])\n                      ]),\n                      _: 1\n                    })\n                  ]),\n                  _: 1\n                })\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_footer, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_button, {\n              color: \"primary\",\n              onClick: _cache[7] || (_cache[7] = ($event: any) => (_ctx.modal.hide())),\n              slot: \"end\"\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\"Close\")\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_ion_button, {\n              color: \"warning\",\n              onClick: _ctx.resetResults,\n              slot: \"end\"\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\"Reset\")\n              ]),\n              _: 1\n            }, 8, [\"onClick\"]),\n            _createVNode(_component_ion_button, {\n              color: \"success\",\n              onClick: _ctx.saveResults,\n              slot: \"end\"\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\"Save\")\n              ]),\n              _: 1\n            }, 8, [\"onClick\"])\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    })\n  ], 64))\n}","\nimport { defineComponent, onMounted, PropType, reactive, ref, watch } from \"vue\";\nimport { \n  IonCol, \n  IonGrid, \n  IonRow, \n  IonContent, \n  IonFooter, \n  IonHeader, \n  IonTitle, \n  IonToolbar, \n  IonButton, \n  IonLabel, \n  IonCheckbox,\n  IonItem\n} from \"@ionic/vue\";\nimport { DTForm } from \"../../interfaces/dt_form_field\";\nimport { Patientservice } from \"@/services/patient_service\";\nimport DateInput from \"../inputs/DateInput.vue\";\nimport SelectInput from \"../inputs/SelectInput.vue\";\nimport NumberInput from \"../inputs/NumberInput.vue\";\nimport dayjs from \"dayjs\";\nimport { toOptions } from \"../../utils/DTFormElements\";\nimport { OrderService } from \"@/services/order_service\";\nimport { LabOrderService } from \"@/apps/ART/services/lab_order_service\";\nimport { Option } from \"@/components/Forms/FieldInterface\";\nimport { ConceptName } from \"@/interfaces/conceptName\";\nimport { submitForm } from \"../../utils/form\";\nimport { PatientLabResultService } from \"@/services/patient_lab_result_service\";\nimport { ConceptService } from \"@/services/concept_service\";\nimport EventBus from \"@/utils/EventBus\";\nimport { EmcEvents } from \"../../interfaces/emc_event\";\nimport { modal } from \"@/utils/modal\";\nimport { alertConfirmation } from \"@/utils/Alerts\";\nimport { STANDARD_DATE_FORMAT } from \"@/utils/Date\";\n\nexport default defineComponent({\n  components: {\n    IonContent,\n    IonFooter,\n    IonHeader,\n    IonTitle,\n    IonToolbar,\n    IonButton,\n    IonLabel,\n    IonGrid,\n    IonRow,\n    IonCol,\n    IonCheckbox,\n    IonItem,\n    DateInput,\n    SelectInput,\n    NumberInput,\n  },\n  props: {\n    patient: {\n      type: Object as PropType<Patientservice>,\n      required: true\n    },\n  },\n  setup(props) {\n    const ldl = ref(false);\n    const modifiers = toOptions(['=', '>', '<', '>=', '<=']);\n    const reasons = toOptions([\n      \"Routine\", \n      \"Targeted\", \n      \"Confirmatory\", \n      \"Stat\", \n      \"Repeat / Missing\",\n      \"Follow up after Low Level Viremia\",\n      \"Follow up after High Viral Load\"\n    ])\n    const specimens = ref<Option[]>([])\n    const today = dayjs().format(STANDARD_DATE_FORMAT)\n    const birthdate = dayjs(props.patient.getBirthdate()).format(STANDARD_DATE_FORMAT)\n\n    const form = reactive<DTForm>({\n      orderDate: {\n        value: '',\n        label: 'Order Date',\n        required: true,\n        validation: async (date) => {\n          if (!dayjs(date.value).isValid()) {\n            return ['Invalid date'];\n          }\n          if(new Date(date.value) > new Date(today)) {\n            return ['Order date cannot be in the future'];\n          }\n          if(new Date(date.value) < new Date(birthdate)) {\n            return ['Order date cannot be before patient\\'s date of birth'];\n          }\n          return null\n        }\n      },\n      resultDate: {\n        value: '',\n        label: 'Result Date',\n        required: true,\n        validation: async (date, form) => {\n          if (!dayjs(date.value).isValid()) {\n            return ['Invalid date'];\n          }\n          if(new Date(date.value) > new Date(today)) {\n            return ['Result date cannot be in the future'];\n          }\n          if(new Date(date.value) < new Date(form.orderDate.value)) {\n            return ['Result date cannot be before order date'];\n          }\n          return null\n        }\n      },\n      specimenConcept: {\n        value: '',\n        label: 'Specimen',\n        placeholder: 'Select a specimen',\n        required: true,\n      },\n      modifier: {\n        value: '',\n        label: 'Modifier',\n        placeholder: 'Select a modifier',\n        required: true,\n      },\n      reason: {\n        value: '',\n        label: 'Reason',\n        placeholder: 'Select a reason',\n        required: true,\n      },\n      result: {\n        value: '',\n        label: 'Result Value',\n        placeholder: 'Enter a result value',\n        required: true,\n      }\n    });\n\n    const saveResults = async () => submitForm(form, async (formData) => {\n      await LabOrderService.setSessionDate(formData.orderDate)\n      const orderService = new LabOrderService(props.patient.getID(), -1)\n      const vlConceptId = await ConceptService.getConceptID(\"HIV viral load\")\n      const encounter = await orderService.createEncounter();\n      if(!encounter) throw new Error('Unable to create lab order encounter');\n      const formattedOrders  = await OrderService.buildLabOrders(encounter, [{\n        'specimenConcept': formData.specimenConcept.value,\n        'reason': formData.reason.value,\n        'concept_id': vlConceptId\n      }]);\n      const orders = await  OrderService.saveOrdersArray(encounter.encounter_id, formattedOrders);\n      if(!orders) throw new Error('Unable to save lab orders');\n\n      await PatientLabResultService.setSessionDate(formData.resultDate)\n      const resultService = new PatientLabResultService(props.patient.getID())\n      resultService.setTestID(orders[0].tests[0].id)\n      resultService.setResultDate(formData.resultDate)\n      const resultEnc = await resultService.createEncounter()\n      if(!resultEnc) throw new Error(\"Unable to create lab result encounter\")\n      await resultService.createLabResult([{\n        \"indicator\": {\n          \"concept_id\": vlConceptId,\n        },\n        \"value\": ldl.value ? \"LDL\" : parseInt(formData.result),\n        \"value_modifier\": ldl.value ? \"=\" : formData.modifier.value,\n        \"value_type\": ldl.value ? \"text\" : \"numeric\"\n      }])\n\n      await PatientLabResultService.resetSessionDate()\n      await modal.hide()\n      EventBus.emit(EmcEvents.RELOAD_LATEST_VL_RESULT)\n      EventBus.emit(EmcEvents.RELOAD_PATIENT_VISIT_DATA)\n    })\n\n    const resetResults = async () => {\n      if((await alertConfirmation(\"Are you sure you want to clear all fields?\"))){\n        ldl.value = false\n        for(const key in form) {\n          form[key].value = '';\n          form[key].error = ''\n        }\n        EventBus.emit(EmcEvents.ON_CLEAR);\n      }\n    };\n\n    watch(ldl, (isLDL) => {\n      if(isLDL) {\n        form.modifier.value = \"\";\n        form.result.value = undefined;\n        form.modifier.error = ''\n        form.result.error = ''\n      }\n      form.modifier.disabled = isLDL;\n      form.modifier.required = !isLDL;\n      form.result.disabled = isLDL;\n      form.result.required = !isLDL;\n    });\n\n    onMounted(async () => {\n      specimens.value = (await OrderService.getSpecimens(\"HIV viral load\"))\n        .map((specimen: ConceptName) => ({\n          label: specimen.name,\n          value: specimen['concept_id']\n        })\n      )\n    })\n\n    return {\n      today,\n      birthdate,\n      form,\n      modifiers,\n      reasons,\n      specimens,\n      ldl,\n      modal,\n      resetResults,\n      saveResults,\n    };\n  },\n})\n","import { render } from \"./ViralLoadResult.vue?vue&type=template&id=1784043e&ts=true\"\nimport script from \"./ViralLoadResult.vue?vue&type=script&lang=ts\"\nexport * from \"./ViralLoadResult.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/projects/malawi-emr/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, normalizeStyle as _normalizeStyle, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ion_title = _resolveComponent(\"ion-title\")!\n  const _component_ion_toolbar = _resolveComponent(\"ion-toolbar\")!\n  const _component_ion_header = _resolveComponent(\"ion-header\")!\n  const _component_ion_badge = _resolveComponent(\"ion-badge\")!\n  const _component_ion_col = _resolveComponent(\"ion-col\")!\n  const _component_ion_row = _resolveComponent(\"ion-row\")!\n  const _component_enrollment_form = _resolveComponent(\"enrollment-form\")!\n  const _component_outcome_form = _resolveComponent(\"outcome-form\")!\n  const _component_outcomes_table = _resolveComponent(\"outcomes-table\")!\n  const _component_ion_grid = _resolveComponent(\"ion-grid\")!\n  const _component_ion_content = _resolveComponent(\"ion-content\")!\n  const _component_ion_button = _resolveComponent(\"ion-button\")!\n  const _component_ion_footer = _resolveComponent(\"ion-footer\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(_component_ion_header, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_title, null, {\n              default: _withCtx(() => [\n                _createTextVNode(\"Patient Outcomes\")\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_content, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_grid, { style: {\"width\":\"100%\"} }, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_row, null, {\n              default: _withCtx(() => [\n                _createVNode(_component_ion_col, null, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_ion_badge, {\n                      color: \"lightblue\",\n                      class: \"ion-padding\",\n                      style: {\"width\":\"100%\"},\n                      disabled: \"\"\n                    }, {\n                      default: _withCtx(() => [\n                        _createTextVNode(_toDisplayString(_ctx.enrollmentStatus), 1)\n                      ]),\n                      _: 1\n                    })\n                  ]),\n                  _: 1\n                })\n              ]),\n              _: 1\n            }),\n            (!_ctx.isEnrolled)\n              ? (_openBlock(), _createBlock(_component_ion_row, {\n                  key: 0,\n                  class: \"his-card\",\n                  style: {\"margin-bottom\":\".4rem\"}\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_ion_col, { size: \"12\" }, {\n                      default: _withCtx(() => [\n                        _createVNode(_component_enrollment_form, {\n                          patientProgram: _ctx.patientProgram,\n                          birthdate: _ctx.birthdate,\n                          onEnrollProgram: _ctx.enrollProgram\n                        }, null, 8, [\"patientProgram\", \"birthdate\", \"onEnrollProgram\"])\n                      ]),\n                      _: 1\n                    })\n                  ]),\n                  _: 1\n                }))\n              : (_openBlock(), _createElementBlock(_Fragment, { key: 1 }, [\n                  (_ctx.outcomes)\n                    ? (_openBlock(), _createBlock(_component_ion_row, {\n                        key: 0,\n                        class: \"his-card\",\n                        style: {\"margin-bottom\":\".4rem\"}\n                      }, {\n                        default: _withCtx(() => [\n                          _createVNode(_component_outcome_form, {\n                            \"date-enrolled\": _ctx.enrollDate,\n                            birthdate: _ctx.birthdate,\n                            outcomes: _ctx.outcomes,\n                            onSaveOutcome: _ctx.saveOutcome\n                          }, null, 8, [\"date-enrolled\", \"birthdate\", \"outcomes\", \"onSaveOutcome\"])\n                        ]),\n                        _: 1\n                      }))\n                    : _createCommentVNode(\"\", true),\n                  _createVNode(_component_ion_row, {\n                    class: \"his-card\",\n                    style: _normalizeStyle([{\"padding\":\"0 !important\"}, { minHeight: _ctx.totalStates ? '0' : '30vh'}])\n                  }, {\n                    default: _withCtx(() => [\n                      _createVNode(_component_ion_col, {\n                        size: \"12\",\n                        class: \"ion-no-padding\"\n                      }, {\n                        default: _withCtx(() => [\n                          _createVNode(_component_outcomes_table, {\n                            patientStates: _ctx.program?.patient_states,\n                            onVoidOutcome: _ctx.voidOutcome\n                          }, null, 8, [\"patientStates\", \"onVoidOutcome\"])\n                        ]),\n                        _: 1\n                      })\n                    ]),\n                    _: 1\n                  }, 8, [\"style\"])\n                ], 64))\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_footer, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_button, {\n              color: \"primary\",\n              onClick: _cache[0] || (_cache[0] = ($event: any) => (_ctx.modal.hide())),\n              slot: \"end\"\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\"Close\")\n              ]),\n              _: 1\n            }),\n            (_ctx.isEnrolled)\n              ? (_openBlock(), _createBlock(_component_ion_button, {\n                  key: 0,\n                  color: \"danger\",\n                  onClick: _ctx.voidProgram,\n                  slot: \"end\"\n                }, {\n                  default: _withCtx(() => [\n                    _createTextVNode(\"Void Program\")\n                  ]),\n                  _: 1\n                }, 8, [\"onClick\"]))\n              : _createCommentVNode(\"\", true)\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    })\n  ], 64))\n}","import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"ion-padding-horizontal ion-margin-vertical bold ion-margin-top\" }, \"Previous Outcomes\", -1)\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_data_table = _resolveComponent(\"data-table\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _hoisted_1,\n    _createVNode(_component_data_table, {\n      rows: _ctx.rows,\n      columns: _ctx.columns,\n      config: _ctx.tableConfig,\n      \"row-actions-buttons\": _ctx.TableRowActions,\n      color: \"custom\"\n    }, null, 8, [\"rows\", \"columns\", \"config\", \"row-actions-buttons\"])\n  ], 64))\n}","\nimport { computed, defineComponent, PropType } from \"vue\";\nimport { alertConfirmation } from \"@/utils/Alerts\";\nimport dayjs from \"dayjs\";\nimport { DISPLAY_DATE_FORMAT } from \"@/utils/Date\";\nimport { DataTable, RowActionButtonInterface, TableColumnInterface, TableConfigInterface } from '@uniquedj95/vtable'\n\nexport default defineComponent({\n  name: \"OutcomesTable\",\n  props: {\n    patientStates: {\n      type: Array as PropType<Array<any>>,\n      required: true\n    },\n  },\n  components: {\n    DataTable,\n  },\n  emits: [\"voidOutcome\"],\n  setup(props, { emit }) {\n    const columns: TableColumnInterface[] = [\n      { path: 'name', label: \"Outcome\"},\n      { path: 'start_date', label: \"Start Date\", formatter: (v) => dayjs(v).format(DISPLAY_DATE_FORMAT) },\n      { path: 'end_date', label: \"End Date\", formatter: (v) => dayjs(v).format(DISPLAY_DATE_FORMAT) },\n    ];\n\n    const tableConfig: TableConfigInterface = {\n      showSearchField: false,\n      showSubmitButton: false\n    }\n\n    const rows = computed<any[]>(() => props.patientStates.map((state: any, index: number) => ({\n      ...state,\n      index\n    })));\n\n    const TableRowActions: RowActionButtonInterface[] = [\n      { label: \"void\", color: 'danger', action: async (row) => {\n        if((await alertConfirmation(\"Are you sure you want to void this outcome?\"))){\n          emit(\"voidOutcome\", {stateId: row.patient_state_id, index: row.index});\n        }\n      }}\n    ]\n\n    return {\n      rows,\n      columns,\n      tableConfig,\n      TableRowActions,\n    };\n  }\n})\n","import { render } from \"./OutcomesTable.vue?vue&type=template&id=eb2cc154&ts=true\"\nimport script from \"./OutcomesTable.vue?vue&type=script&lang=ts\"\nexport * from \"./OutcomesTable.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/projects/malawi-emr/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_DateInput = _resolveComponent(\"DateInput\")!\n  const _component_ion_col = _resolveComponent(\"ion-col\")!\n  const _component_ion_button = _resolveComponent(\"ion-button\")!\n  const _component_ion_row = _resolveComponent(\"ion-row\")!\n  const _component_ion_grid = _resolveComponent(\"ion-grid\")!\n\n  return (_openBlock(), _createBlock(_component_ion_grid, null, {\n    default: _withCtx(() => [\n      _createVNode(_component_ion_row, null, {\n        default: _withCtx(() => [\n          _createVNode(_component_ion_col, { size: \"12\" }, {\n            default: _withCtx(() => [\n              _createVNode(_component_DateInput, {\n                modelValue: _ctx.form.date,\n                \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((_ctx.form.date) = $event)),\n                form: _ctx.form,\n                minDate: _ctx.birthdate,\n                \"max-date\": _ctx.today\n              }, null, 8, [\"modelValue\", \"form\", \"minDate\", \"max-date\"])\n            ]),\n            _: 1\n          }),\n          _createVNode(_component_ion_col, null, {\n            default: _withCtx(() => [\n              _createVNode(_component_ion_button, {\n                color: \"warning\",\n                onClick: _ctx.onReset\n              }, {\n                default: _withCtx(() => [\n                  _createTextVNode(\"Reset\")\n                ]),\n                _: 1\n              }, 8, [\"onClick\"]),\n              _createVNode(_component_ion_button, {\n                color: \"success\",\n                onClick: _ctx.enrollProgram\n              }, {\n                default: _withCtx(() => [\n                  _createTextVNode(\"Enroll\")\n                ]),\n                _: 1\n              }, 8, [\"onClick\"])\n            ]),\n            _: 1\n          })\n        ]),\n        _: 1\n      })\n    ]),\n    _: 1\n  }))\n}","\nimport { alertConfirmation } from \"@/utils/Alerts\";\nimport EventBus from \"@/utils/EventBus\";\nimport { IonGrid, IonRow, IonCol, IonButton } from \"@ionic/vue\";\nimport dayjs from \"dayjs\";\nimport { defineComponent, reactive } from \"vue\";\nimport { DTForm } from \"../interfaces/dt_form_field\";\nimport { EmcEvents } from \"../interfaces/emc_event\";\nimport { submitForm } from \"../utils/form\";\nimport DateInput from \"./inputs/DateInput.vue\";\n\nexport default defineComponent({\n  name: \"EnrollmentForm\",\n  components: {\n    DateInput,\n    IonGrid,\n    IonRow,\n    IonCol,\n    IonButton,\n  },\n  props: [\"birthdate\"],\n  emits: [\"enrollProgram\"],\n  setup(props, { emit }) {\n    const today = dayjs().format(\"YYYY-MM-DD\");\n    const form = reactive<DTForm>({\n      date: {\n        value: \"\",\n        label: \"Date of Enrollment\",\n        required: true,\n        validation: async (date) => {\n          if(new Date(date.value) < new Date(props.birthdate)) return [\"Date of enrollment cannot be before date of birth\"]\n          if(new Date(date.value) > new Date(today)) return [\"Date of enrollment cannot be in the future\"]\n          return null\n        }\n      },\n    })\n\n    const onReset = async () => {\n      if((await alertConfirmation(\"Are you sure you want to clear all fields\"))){\n        form.date.value = \"\";\n        form.date.error = \"\";\n        EventBus.emit(EmcEvents.ON_CLEAR)\n      }\n    }\n\n    const enrollProgram = async () => submitForm(form, ({ date }) => emit(\"enrollProgram\", date))\n\n    return {\n      form,\n      today,\n      onReset,\n      enrollProgram,\n    }\n  }\n})\n","import { render } from \"./EnrollmentForm.vue?vue&type=template&id=4068b4a6&ts=true\"\nimport script from \"./EnrollmentForm.vue?vue&type=script&lang=ts\"\nexport * from \"./EnrollmentForm.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/projects/malawi-emr/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode } from \"vue\"\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Add New Outcome\", -1)\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ion_col = _resolveComponent(\"ion-col\")!\n  const _component_DateInput = _resolveComponent(\"DateInput\")!\n  const _component_SelectInput = _resolveComponent(\"SelectInput\")!\n  const _component_text_input = _resolveComponent(\"text-input\")!\n  const _component_ion_button = _resolveComponent(\"ion-button\")!\n  const _component_ion_row = _resolveComponent(\"ion-row\")!\n  const _component_ion_grid = _resolveComponent(\"ion-grid\")!\n\n  return (_openBlock(), _createBlock(_component_ion_grid, null, {\n    default: _withCtx(() => [\n      _createVNode(_component_ion_row, null, {\n        default: _withCtx(() => [\n          _createVNode(_component_ion_col, { size: \"12\" }, {\n            default: _withCtx(() => [\n              _hoisted_1\n            ]),\n            _: 1\n          }),\n          _createVNode(_component_ion_col, {\n            size: \"6\",\n            class: \"ion-margin-top-vertical\"\n          }, {\n            default: _withCtx(() => [\n              _createVNode(_component_DateInput, {\n                modelValue: _ctx.form.date,\n                \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((_ctx.form.date) = $event)),\n                form: _ctx.form,\n                minDate: _ctx.dateEnrolled,\n                \"max-date\": _ctx.today\n              }, null, 8, [\"modelValue\", \"form\", \"minDate\", \"max-date\"])\n            ]),\n            _: 1\n          }),\n          _createVNode(_component_ion_col, {\n            size: \"6\",\n            class: \"ion-margin-top-vertical\"\n          }, {\n            default: _withCtx(() => [\n              _createVNode(_component_SelectInput, {\n                modelValue: _ctx.form.status,\n                \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((_ctx.form.status) = $event)),\n                form: _ctx.form,\n                options: _ctx.outcomes\n              }, null, 8, [\"modelValue\", \"form\", \"options\"])\n            ]),\n            _: 1\n          }),\n          (_ctx.isTransferredOut)\n            ? (_openBlock(), _createElementBlock(_Fragment, { key: 0 }, [\n                _createVNode(_component_ion_col, {\n                  size: \"6\",\n                  class: \"ion-margin-top-vertical\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_SelectInput, {\n                      modelValue: _ctx.form.nextFacility,\n                      \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((_ctx.form.nextFacility) = $event)),\n                      form: _ctx.form,\n                      asyncOptions: _ctx.getFacilities\n                    }, null, 8, [\"modelValue\", \"form\", \"asyncOptions\"])\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ion_col, {\n                  size: \"6\",\n                  class: \"ion-margin-top-vertical\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_SelectInput, {\n                      modelValue: _ctx.form.reason,\n                      \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((_ctx.form.reason) = $event)),\n                      form: _ctx.form,\n                      options: _ctx.transferOutReasons\n                    }, null, 8, [\"modelValue\", \"form\", \"options\"])\n                  ]),\n                  _: 1\n                }),\n                (_ctx.specifyOther)\n                  ? (_openBlock(), _createBlock(_component_ion_col, {\n                      key: 0,\n                      size: \"12\",\n                      class: \"ion-margin-top-vertical\"\n                    }, {\n                      default: _withCtx(() => [\n                        _createVNode(_component_text_input, {\n                          modelValue: _ctx.form.otherReason,\n                          \"onUpdate:modelValue\": _cache[4] || (_cache[4] = ($event: any) => ((_ctx.form.otherReason) = $event)),\n                          form: _ctx.form\n                        }, null, 8, [\"modelValue\", \"form\"])\n                      ]),\n                      _: 1\n                    }))\n                  : _createCommentVNode(\"\", true)\n              ], 64))\n            : _createCommentVNode(\"\", true),\n          _createVNode(_component_ion_col, {\n            size: \"12\",\n            class: \"ion-margin-top\"\n          }, {\n            default: _withCtx(() => [\n              _createVNode(_component_ion_button, {\n                color: \"warning\",\n                onClick: _ctx.onReset\n              }, {\n                default: _withCtx(() => [\n                  _createTextVNode(\"Reset\")\n                ]),\n                _: 1\n              }, 8, [\"onClick\"]),\n              _createVNode(_component_ion_button, {\n                color: \"success\",\n                onClick: _ctx.onSave\n              }, {\n                default: _withCtx(() => [\n                  _createTextVNode(\"Save\")\n                ]),\n                _: 1\n              }, 8, [\"onClick\"])\n            ]),\n            _: 1\n          })\n        ]),\n        _: 1\n      })\n    ]),\n    _: 1\n  }))\n}","\nimport { IonGrid, IonRow, IonCol, IonButton } from \"@ionic/vue\";\nimport dayjs from \"dayjs\";\nimport { computed, defineComponent, PropType, reactive } from \"vue\";\nimport { DTForm } from \"../interfaces/dt_form_field\";\nimport { submitForm } from \"../utils/form\";\nimport DateInput from \"./inputs/DateInput.vue\";\nimport SelectInput from \"./inputs/SelectInput.vue\";\nimport TextInput from \"./inputs/TextInput.vue\";\nimport StandardValidations from \"@/components/Forms/validations/StandardValidations\";\nimport { Option } from \"@/components/Forms/FieldInterface\";\nimport { getFacilities } from \"@/utils/HisFormHelpers/LocationFieldOptions\";\nimport { DISPLAY_DATE_FORMAT } from \"@/utils/Date\";\nimport EventBus from \"@/utils/EventBus\";\nimport { EmcEvents } from \"../interfaces/emc_event\";\nimport { alertConfirmation } from \"@/utils/Alerts\";\nimport { transferOutReasons } from \"../utils/DTFormElements\"\n\nexport default defineComponent({\n  name: \"OutcomeForm\",\n  props: {\n    outcomes: {\n      type: Array as PropType<Option[]>,\n      required: true,\n    },\n    dateEnrolled: {\n      type: String,\n      required: true\n    },\n    birthdate: {\n      type: String,\n      required: true\n    }\n  },\n  components: {\n    DateInput,\n    IonGrid,\n    IonRow,\n    IonCol,\n    IonButton,\n    SelectInput,\n    TextInput,\n  },\n  emits: [\"saveOutcome\"],\n  setup(props, { emit }) {\n    const today = dayjs().format(\"YYYY-MM-DD\");\n    const form = reactive<DTForm>({\n      date: {\n        value: \"\",\n        label: \"Outcome Date\",\n        required: true,\n        validation: async (date) => {\n          if(new Date(date.value) < new Date(props.birthdate)) return [`Outcome date cannot be before date of birth - ${dayjs(props.birthdate).format(DISPLAY_DATE_FORMAT)}` ]\n          if(new Date(date.value) < new Date(props.dateEnrolled)) return [`Outcome date cannot be before enrollment date- ${dayjs(props.dateEnrolled).format(DISPLAY_DATE_FORMAT)}`]\n          return null\n        }\n      },\n      status: {\n        value: \"\",\n        label: \"Outcome\",\n        required: true,\n      },\n      nextFacility: {\n        value: \"\",\n        label: \"Next Facility\",\n        validation: async (facility, form) => {\n          return form.status.value.label === \"Patient transferred out\" && \n            StandardValidations.required(facility);\n        }\n      },\n      reason: {\n        value: \"\",\n        label: \"Reason for transfer out\",\n        validation: async (reason, form) => {\n          return form.status.value.label === \"Patient transferred out\" && \n            StandardValidations.required(reason);\n        }\n      },\n      otherReason: {\n        value: \"\",\n        label: \"Other reason for transfer out\",\n        placeholder: \"Specify other reason for transfer out\",\n        validation: async (reason, form) => {\n          return form.status?.value?.label === \"Patient transferred out\" && \n            form.reason?.value?.label === \"Other\" &&\n            StandardValidations.required(reason);\n        }\n      },\n    })\n\n    const isTransferredOut = computed(() => form.status.value?.label === \"Patient transferred out\");\n    const specifyOther = computed(() => form.reason?.value?.label === \"Other\")\n\n    const onReset = async () => {\n      if((await alertConfirmation(\"are you sure you want to clear all fields\"))) {\n        for (const key in form) {\n          form[key].value = '';\n          form[key].error = '';\n        }\n        EventBus.emit(EmcEvents.ON_CLEAR)\n      }\n    }\n\n    const onSave = () => submitForm(form, data => emit(\"saveOutcome\", {\n      ...data, \n      isTransferredOut: isTransferredOut.value \n    }))\n\n    return {\n      form,\n      today,\n      isTransferredOut,\n      specifyOther,\n      onSave,\n      onReset,\n      getFacilities,\n      transferOutReasons\n    }\n  }\n})\n","import { render } from \"./OutcomeForm.vue?vue&type=template&id=ea0b263a&ts=true\"\nimport script from \"./OutcomeForm.vue?vue&type=script&lang=ts\"\nexport * from \"./OutcomeForm.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/projects/malawi-emr/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","\nimport { computed, defineComponent, onMounted, PropType, ref } from \"vue\";\nimport { \n  IonCol, \n  IonGrid, \n  IonRow, \n  IonContent, \n  IonFooter, \n  IonHeader, \n  IonTitle, \n  IonToolbar, \n  IonButton,\n  IonBadge,\n} from \"@ionic/vue\";\nimport { toastSuccess } from \"@/utils/Alerts\";\nimport { PatientProgramService } from \"@/services/patient_program_service\";\nimport { isEmpty } from \"lodash\";\nimport HisDate from \"@/utils/Date\";\nimport { Option } from \"@/components/Forms/FieldInterface\";\nimport OutcomesTable from \"../tables/OutcomesTable.vue\";\nimport EnrollmentForm from \"../EnrollmentForm.vue\";\nimport OutcomeForm from \"../OutcomeForm.vue\";\nimport { modal } from \"@/utils/modal\";\nimport EventBus from \"@/utils/EventBus\";\nimport { EmcEvents } from \"../../interfaces/emc_event\";\nimport { Patientservice } from \"@/services/patient_service\";\n\nexport default defineComponent({\n  components: {\n    IonContent,\n    IonFooter,\n    IonHeader,\n    IonTitle,\n    IonToolbar,\n    IonButton,\n    IonGrid,\n    IonRow,\n    IonCol,\n    IonBadge,\n    OutcomesTable,\n    EnrollmentForm,\n    OutcomeForm,\n  },\n  props: {\n    patient: {\n      type: Object as PropType<Patientservice>,\n      required: true\n    },\n  },\n  setup(props) {\n    const { toStandardHisDisplayFormat, toStandardHisFormat } = HisDate\n    const patientProgram = new PatientProgramService(props.patient.getID());\n    const birthdate = computed(() => toStandardHisFormat(props.patient.getBirthdate()))\n    const program = ref<Record<string, any>>();\n    const isEnrolled = computed(() => !isEmpty(program.value));\n    const enrollDate = ref('');\n    const outcomes = ref<Option[]>();\n    const totalStates = computed(() => program.value?.patient_states?.length ?? 0);\n    const enrollmentStatus = computed(() => isEnrolled.value && enrollDate.value \n      ? `Patient enrolled in this porgram on ${ toStandardHisDisplayFormat(enrollDate.value) }`\n      : 'Patient is not enrolled in this program'\n    );\n\n    const saveOutcome = async ({ date, status, nextFacility, reason, otherReason, isTransferredOut}: any) => {\n      patientProgram.setStateDate(date);\n      patientProgram.setStateId(status.value);\n      if(isTransferredOut) {\n        const finalReason = reason.value !== 'Other' ? reason.value : otherReason\n        await patientProgram.transferOutEncounter(nextFacility.other, finalReason);\n      }\n      await patientProgram.updateState();\n      await toastSuccess('Outcome saved successfully', 1000);\n      await modal.hide();\n      EventBus.emit(EmcEvents.RELOAD_PATIENT_VISIT_DATA);\n    }\n\n    const enrollProgram = async (date: string) => {\n      patientProgram.setProgramDate(date);\n      await patientProgram.enrollProgram();\n      await toastSuccess(\"Program enrolled successfully\", 1000);\n      await modal.hide();\n      EventBus.emit(EmcEvents.RELOAD_PATIENT_VISIT_DATA);\n    }\n\n    const voidProgram = async () => {\n      patientProgram.setPatientProgramId(program.value?.patient_program_id ||  -1);\n      await patientProgram.voidProgram('duplicate / system error');\n      await toastSuccess('Patient voided from program successfully', 1000);\n      await modal.hide();\n      EventBus.emit(EmcEvents.RELOAD_PATIENT_VISIT_DATA);\n    }\n\n    const voidOutcome = async ({stateId, index}: any) => {\n      patientProgram.setStateId(stateId);\n      await patientProgram.voidState('duplicate / system error');\n      toastSuccess('Outcome voided successfully');\n      program.value?.patient_states.splice(index, 1);\n      EventBus.emit(EmcEvents.RELOAD_PATIENT_VISIT_DATA);\n    }\n\n    onMounted (async () => {\n      const programs = await patientProgram.getPrograms();\n      program.value = programs.find((l: any) => l.program.name === \"HIV PROGRAM\");\n      if(program.value) {\n        enrollDate.value = program.value.date_enrolled;\n        const states= await patientProgram.getProgramOutcomes();\n        outcomes.value = states.map((state: any) => ({\n          label: state.name,\n          value: state.program_workflow_state_id,\n          other: state\n        }));\n      }\n    });\n\n    return {\n      modal,\n      patientProgram,\n      isEnrolled,\n      enrollDate,\n      birthdate,\n      enrollmentStatus,\n      outcomes,\n      program,\n      totalStates,\n      toStandardHisDisplayFormat,\n      saveOutcome,\n      enrollProgram,\n      voidProgram,\n      voidOutcome,\n    };\n  },\n})\n","import { render } from \"./OutcomeStatus.vue?vue&type=template&id=4300ba6d&ts=true\"\nimport script from \"./OutcomeStatus.vue?vue&type=script&lang=ts\"\nexport * from \"./OutcomeStatus.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/projects/malawi-emr/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, createElementBlock as _createElementBlock, renderList as _renderList, toDisplayString as _toDisplayString } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ion_title = _resolveComponent(\"ion-title\")!\n  const _component_ion_toolbar = _resolveComponent(\"ion-toolbar\")!\n  const _component_ion_header = _resolveComponent(\"ion-header\")!\n  const _component_DateInput = _resolveComponent(\"DateInput\")!\n  const _component_ion_col = _resolveComponent(\"ion-col\")!\n  const _component_NumberInput = _resolveComponent(\"NumberInput\")!\n  const _component_SelectInput = _resolveComponent(\"SelectInput\")!\n  const _component_yes_no_input = _resolveComponent(\"yes-no-input\")!\n  const _component_ion_label = _resolveComponent(\"ion-label\")!\n  const _component_ion_checkbox = _resolveComponent(\"ion-checkbox\")!\n  const _component_ion_item = _resolveComponent(\"ion-item\")!\n  const _component_multi_column_view = _resolveComponent(\"multi-column-view\")!\n  const _component_ion_row = _resolveComponent(\"ion-row\")!\n  const _component_ion_grid = _resolveComponent(\"ion-grid\")!\n  const _component_ion_content = _resolveComponent(\"ion-content\")!\n  const _component_ion_button = _resolveComponent(\"ion-button\")!\n  const _component_ion_footer = _resolveComponent(\"ion-footer\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(_component_ion_header, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_title, null, {\n              default: _withCtx(() => [\n                _createTextVNode(\"Patient Visit\")\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_content, { class: \"ion-padding\" }, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_grid, { style: {\"width\":\"100%\"} }, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_row, null, {\n              default: _withCtx(() => [\n                _createVNode(_component_ion_col, {\n                  size: \"6\",\n                  class: \"ion-margin-vertical\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_DateInput, {\n                      modelValue: _ctx.form.visitDate,\n                      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((_ctx.form.visitDate) = $event)),\n                      form: _ctx.form,\n                      minDate: _ctx.birthdate,\n                      maxDate: _ctx.today\n                    }, null, 8, [\"modelValue\", \"form\", \"minDate\", \"maxDate\"])\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ion_col, {\n                  size: \"6\",\n                  class: \"ion-margin-vertical\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_NumberInput, {\n                      modelValue: _ctx.form.weight,\n                      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((_ctx.form.weight) = $event)),\n                      form: _ctx.form,\n                      min: 1\n                    }, null, 8, [\"modelValue\", \"form\"])\n                  ]),\n                  _: 1\n                }),\n                (_ctx.showHeightField)\n                  ? (_openBlock(), _createBlock(_component_ion_col, {\n                      key: 0,\n                      size: _ctx.isOnActiveTBTreatment ? '12' : '6',\n                      class: \"ion-margin-vertical\"\n                    }, {\n                      default: _withCtx(() => [\n                        _createVNode(_component_NumberInput, {\n                          modelValue: _ctx.form.height,\n                          \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((_ctx.form.height) = $event)),\n                          form: _ctx.form,\n                          min: 1\n                        }, null, 8, [\"modelValue\", \"form\"])\n                      ]),\n                      _: 1\n                    }, 8, [\"size\"]))\n                  : _createCommentVNode(\"\", true),\n                (!_ctx.isOnActiveTBTreatment)\n                  ? (_openBlock(), _createBlock(_component_ion_col, {\n                      key: 1,\n                      class: \"ion-margin-vertical\",\n                      size: _ctx.showHeightField ? '6' : '12'\n                    }, {\n                      default: _withCtx(() => [\n                        _createVNode(_component_SelectInput, {\n                          modelValue: _ctx.form.tbStatus,\n                          \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((_ctx.form.tbStatus) = $event)),\n                          options: _ctx.tbStatuses\n                        }, null, 8, [\"modelValue\", \"options\"])\n                      ]),\n                      _: 1\n                    }, 8, [\"size\"]))\n                  : _createCommentVNode(\"\", true),\n                (_ctx.isOnTBTreatment)\n                  ? (_openBlock(), _createElementBlock(_Fragment, { key: 2 }, [\n                      _createVNode(_component_ion_col, {\n                        size: \"6\",\n                        class: \"ion-margin-vertical\"\n                      }, {\n                        default: _withCtx(() => [\n                          _createVNode(_component_DateInput, {\n                            modelValue: _ctx.form.tbTreatmentStartDate,\n                            \"onUpdate:modelValue\": _cache[4] || (_cache[4] = ($event: any) => ((_ctx.form.tbTreatmentStartDate) = $event)),\n                            form: _ctx.form,\n                            minDate: _ctx.birthdate,\n                            maxDate: _ctx.today\n                          }, null, 8, [\"modelValue\", \"form\", \"minDate\", \"maxDate\"])\n                        ]),\n                        _: 1\n                      }),\n                      _createVNode(_component_ion_col, {\n                        size: \"6\",\n                        class: \"ion-margin-vertical\"\n                      }, {\n                        default: _withCtx(() => [\n                          _createVNode(_component_NumberInput, {\n                            modelValue: _ctx.form.tbTreatmentPeriod,\n                            \"onUpdate:modelValue\": _cache[5] || (_cache[5] = ($event: any) => ((_ctx.form.tbTreatmentPeriod) = $event)),\n                            form: _ctx.form,\n                            min: 1\n                          }, null, 8, [\"modelValue\", \"form\"])\n                        ]),\n                        _: 1\n                      })\n                    ], 64))\n                  : _createCommentVNode(\"\", true),\n                (_ctx.isFemale)\n                  ? (_openBlock(), _createElementBlock(_Fragment, { key: 3 }, [\n                      _createVNode(_component_ion_col, {\n                        size: \"6\",\n                        class: \"ion-margin-vertical\"\n                      }, {\n                        default: _withCtx(() => [\n                          _createVNode(_component_yes_no_input, {\n                            modelValue: _ctx.form.isPregnant,\n                            \"onUpdate:modelValue\": _cache[6] || (_cache[6] = ($event: any) => ((_ctx.form.isPregnant) = $event)),\n                            inline: \"\"\n                          }, null, 8, [\"modelValue\"])\n                        ]),\n                        _: 1\n                      }),\n                      _createVNode(_component_ion_col, {\n                        size: \"6\",\n                        class: \"ion-margin-vertical\"\n                      }, {\n                        default: _withCtx(() => [\n                          _createVNode(_component_yes_no_input, {\n                            modelValue: _ctx.form.isBreastfeeding,\n                            \"onUpdate:modelValue\": _cache[7] || (_cache[7] = ($event: any) => ((_ctx.form.isBreastfeeding) = $event)),\n                            inline: \"\"\n                          }, null, 8, [\"modelValue\"])\n                        ]),\n                        _: 1\n                      })\n                    ], 64))\n                  : _createCommentVNode(\"\", true),\n                _createVNode(_component_ion_col, {\n                  size: \"6\",\n                  class: \"ion-margin-vertical\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_yes_no_input, {\n                      modelValue: _ctx.form.hasContraindications,\n                      \"onUpdate:modelValue\": _cache[8] || (_cache[8] = ($event: any) => ((_ctx.form.hasContraindications) = $event)),\n                      inline: \"\"\n                    }, null, 8, [\"modelValue\"]),\n                    (_ctx.hasContraindications)\n                      ? (_openBlock(), _createBlock(_component_multi_column_view, {\n                          key: 0,\n                          items: _ctx.contraIndications,\n                          numberOfColumns: 2\n                        }, {\n                          default: _withCtx(({ entries }) => [\n                            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(entries, (entry) => {\n                              return (_openBlock(), _createBlock(_component_ion_item, {\n                                lines: \"none\",\n                                key: entry.value\n                              }, {\n                                default: _withCtx(() => [\n                                  _createVNode(_component_ion_label, null, {\n                                    default: _withCtx(() => [\n                                      _createTextVNode(_toDisplayString(entry.label), 1)\n                                    ]),\n                                    _: 2\n                                  }, 1024),\n                                  _createVNode(_component_ion_checkbox, {\n                                    slot: \"start\",\n                                    modelValue: entry.isChecked,\n                                    \"onUpdate:modelValue\": ($event: any) => ((entry.isChecked) = $event)\n                                  }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"])\n                                ]),\n                                _: 2\n                              }, 1024))\n                            }), 128))\n                          ]),\n                          _: 1\n                        }, 8, [\"items\"]))\n                      : _createCommentVNode(\"\", true)\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ion_col, {\n                  class: \"ion-padding-start\",\n                  size: \"6\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_yes_no_input, {\n                      modelValue: _ctx.form.hasSideEffects,\n                      \"onUpdate:modelValue\": _cache[9] || (_cache[9] = ($event: any) => ((_ctx.form.hasSideEffects) = $event)),\n                      inline: \"\"\n                    }, null, 8, [\"modelValue\"]),\n                    (_ctx.hasSideEffects)\n                      ? (_openBlock(), _createBlock(_component_multi_column_view, {\n                          key: 0,\n                          items: _ctx.sideEffects,\n                          numberOfColumns: 2\n                        }, {\n                          default: _withCtx(({ entries }) => [\n                            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(entries, (entry) => {\n                              return (_openBlock(), _createBlock(_component_ion_item, {\n                                lines: \"none\",\n                                key: entry.value\n                              }, {\n                                default: _withCtx(() => [\n                                  _createVNode(_component_ion_label, null, {\n                                    default: _withCtx(() => [\n                                      _createTextVNode(_toDisplayString(entry.label), 1)\n                                    ]),\n                                    _: 2\n                                  }, 1024),\n                                  _createVNode(_component_ion_checkbox, {\n                                    slot: \"start\",\n                                    modelValue: entry.isChecked,\n                                    \"onUpdate:modelValue\": ($event: any) => ((entry.isChecked) = $event)\n                                  }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"])\n                                ]),\n                                _: 2\n                              }, 1024))\n                            }), 128))\n                          ]),\n                          _: 1\n                        }, 8, [\"items\"]))\n                      : _createCommentVNode(\"\", true)\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ion_col, {\n                  size: \"6\",\n                  class: \"ion-margin-vertical\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_SelectInput, {\n                      modelValue: _ctx.form.regimen,\n                      \"onUpdate:modelValue\": _cache[10] || (_cache[10] = ($event: any) => ((_ctx.form.regimen) = $event)),\n                      options: _ctx.regimens\n                    }, null, 8, [\"modelValue\", \"options\"])\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ion_col, {\n                  size: \"6\",\n                  class: \"ion-margin-vertical\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_NumberInput, {\n                      modelValue: _ctx.form.totalArvsGiven,\n                      \"onUpdate:modelValue\": _cache[11] || (_cache[11] = ($event: any) => ((_ctx.form.totalArvsGiven) = $event)),\n                      form: _ctx.form,\n                      min: 1\n                    }, null, 8, [\"modelValue\", \"form\"])\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ion_col, {\n                  size: \"6\",\n                  class: \"ion-margin-vertical\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_NumberInput, {\n                      modelValue: _ctx.form.totalCPTGiven,\n                      \"onUpdate:modelValue\": _cache[12] || (_cache[12] = ($event: any) => ((_ctx.form.totalCPTGiven) = $event)),\n                      form: _ctx.form,\n                      min: 1\n                    }, null, 8, [\"modelValue\", \"form\"])\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ion_col, {\n                  size: \"6\",\n                  class: \"ion-margin-vertical\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_SelectInput, {\n                      modelValue: _ctx.form.tbMed,\n                      \"onUpdate:modelValue\": _cache[13] || (_cache[13] = ($event: any) => ((_ctx.form.tbMed) = $event)),\n                      options: _ctx.tbMeds\n                    }, null, 8, [\"modelValue\", \"options\"])\n                  ]),\n                  _: 1\n                }),\n                (_ctx.hasGiven6H || _ctx.hasGivenRFP)\n                  ? (_openBlock(), _createBlock(_component_ion_col, {\n                      key: 4,\n                      size: \"6\"\n                    }, {\n                      default: _withCtx(() => [\n                        _createVNode(_component_NumberInput, {\n                          modelValue: _ctx.form.totalIPTGiven,\n                          \"onUpdate:modelValue\": _cache[14] || (_cache[14] = ($event: any) => ((_ctx.form.totalIPTGiven) = $event)),\n                          form: _ctx.form,\n                          min: 1\n                        }, null, 8, [\"modelValue\", \"form\"])\n                      ]),\n                      _: 1\n                    }))\n                  : _createCommentVNode(\"\", true),\n                (_ctx.hasGivenRFP)\n                  ? (_openBlock(), _createBlock(_component_ion_col, {\n                      key: 5,\n                      size: \"6\"\n                    }, {\n                      default: _withCtx(() => [\n                        _createVNode(_component_NumberInput, {\n                          modelValue: _ctx.form.totalRFPGiven,\n                          \"onUpdate:modelValue\": _cache[15] || (_cache[15] = ($event: any) => ((_ctx.form.totalRFPGiven) = $event)),\n                          form: _ctx.form,\n                          min: 1\n                        }, null, 8, [\"modelValue\", \"form\"])\n                      ]),\n                      _: 1\n                    }))\n                  : _createCommentVNode(\"\", true),\n                (_ctx.hasGiven3HP)\n                  ? (_openBlock(), _createBlock(_component_ion_col, {\n                      key: 6,\n                      size: \"6\"\n                    }, {\n                      default: _withCtx(() => [\n                        _createVNode(_component_NumberInput, {\n                          modelValue: _ctx.form.total3HPGiven,\n                          \"onUpdate:modelValue\": _cache[16] || (_cache[16] = ($event: any) => ((_ctx.form.total3HPGiven) = $event)),\n                          form: _ctx.form,\n                          min: 1\n                        }, null, 8, [\"modelValue\", \"form\"])\n                      ]),\n                      _: 1\n                    }))\n                  : _createCommentVNode(\"\", true),\n                (_ctx.hasGiven3HP || _ctx.hasGivenRFP || _ctx.hasGiven6H)\n                  ? (_openBlock(), _createBlock(_component_ion_col, {\n                      key: 7,\n                      size: \"6\"\n                    }, {\n                      default: _withCtx(() => [\n                        _createVNode(_component_NumberInput, {\n                          modelValue: _ctx.form.totalPyridoxineGiven,\n                          \"onUpdate:modelValue\": _cache[17] || (_cache[17] = ($event: any) => ((_ctx.form.totalPyridoxineGiven) = $event)),\n                          form: _ctx.form,\n                          min: 1\n                        }, null, 8, [\"modelValue\", \"form\"])\n                      ]),\n                      _: 1\n                    }))\n                  : _createCommentVNode(\"\", true),\n                _createVNode(_component_ion_col, {\n                  size: \"6\",\n                  class: \"ion-margin-vertical\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_yes_no_input, {\n                      modelValue: _ctx.form.patientPresent,\n                      \"onUpdate:modelValue\": _cache[18] || (_cache[18] = ($event: any) => ((_ctx.form.patientPresent) = $event)),\n                      inline: \"\",\n                      disabled: _ctx.form.patientPresent.disabled\n                    }, null, 8, [\"modelValue\", \"disabled\"])\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ion_col, {\n                  size: \"6\",\n                  class: \"ion-margin-vertical\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_yes_no_input, {\n                      modelValue: _ctx.form.guardianPresent,\n                      \"onUpdate:modelValue\": _cache[19] || (_cache[19] = ($event: any) => ((_ctx.form.guardianPresent) = $event)),\n                      inline: \"\"\n                    }, null, 8, [\"modelValue\"])\n                  ]),\n                  _: 1\n                }),\n                (_ctx.prevDrugs.length > 0)\n                  ? (_openBlock(), _createBlock(_component_ion_col, {\n                      key: 8,\n                      size: \"6\",\n                      class: \"ion-margin-vertical\"\n                    }, {\n                      default: _withCtx(() => [\n                        _createVNode(_component_NumberInput, {\n                          modelValue: _ctx.form.pillCount,\n                          \"onUpdate:modelValue\": _cache[20] || (_cache[20] = ($event: any) => ((_ctx.form.pillCount) = $event)),\n                          form: _ctx.form,\n                          min: 1\n                        }, null, 8, [\"modelValue\", \"form\"])\n                      ]),\n                      _: 1\n                    }))\n                  : _createCommentVNode(\"\", true),\n                _createVNode(_component_ion_col, {\n                  size: _ctx.prevDrugs.length > 0 ? '6' : '12',\n                  class: \"ion-margin-vertical\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_DateInput, {\n                      modelValue: _ctx.form.nextAppointmentDate,\n                      \"onUpdate:modelValue\": _cache[21] || (_cache[21] = ($event: any) => ((_ctx.form.nextAppointmentDate) = $event)),\n                      form: _ctx.form,\n                      minDate: _ctx.form.visitDate.value,\n                      maxDate: _ctx.drugRunOutDate\n                    }, null, 8, [\"modelValue\", \"form\", \"minDate\", \"maxDate\"])\n                  ]),\n                  _: 1\n                }, 8, [\"size\"])\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_footer, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_button, {\n              color: \"primary\",\n              onClick: _cache[22] || (_cache[22] = ($event: any) => (_ctx.modal.hide())),\n              slot: \"end\"\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\"Close\")\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_ion_button, {\n              color: \"warning\",\n              onClick: _ctx.onClear,\n              slot: \"end\"\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\"Reset\")\n              ]),\n              _: 1\n            }, 8, [\"onClick\"]),\n            _createVNode(_component_ion_button, {\n              color: \"success\",\n              onClick: _ctx.onSubmit,\n              slot: \"end\"\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\"Save\")\n              ]),\n              _: 1\n            }, 8, [\"onClick\"])\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    })\n  ], 64))\n}","import { Patient } from '@/interfaces/patient';\nimport { ObservationService } from './observation_service';\nimport { Service } from \"@/services/service\"\nimport HisDate from \"@/utils/Date\"\nimport { Observation } from \"@/interfaces/observation\"\nimport { Patientservice } from '@/services/patient_service';\nimport { DrugOrderService } from './drug_order_service';\nimport { isEmpty } from 'lodash';\n\nexport class PatientObservationService extends Patientservice {\n  constructor(patient: Patient) {\n    super(patient)\n  }\n\n  async isPregnant() {\n    const obs = await ObservationService.getFirstObs(this.getID(), 'Is patient pregnant')\n    return obs && (obs.value_coded.match(/Yes/i) ? true : false)\n      && ObservationService.obsInValidPeriod(obs)\n  }\n\n  async hasPregnancyObsToday() {\n    const date = await ObservationService.getFirstObsDatetime(this.getID(), 'Is patient pregnant')\n    return date && HisDate.toStandardHisFormat(date) === Service.getSessionDate() && this.isFemale()\n  }\n\n  async hasPregnancyAtARTInitiation() {\n    const obs = await ObservationService.getLastValueCoded(this.getID(), \"Is patient pregnant\")\n    return obs && await ObservationService.getConceptName(obs)\n  }\n\n  async breastFeedingAtARTInitiation() {\n    const obs = await ObservationService.getLastValueCoded(this.getID(), \"Is patient breast feeding\")\n    return obs && await ObservationService.getConceptName(obs)\n  }\n\n  async getInitialWeight() {\n    return ObservationService.getLastValueNumber(this.getID(), \"weight\")\n  }\n\n  async getRecentWeight() {\n    return ObservationService.getFirstValueNumber(this.getID(), \"weight\") || -1\n  }\n\n  async getInitialHeight() {\n    return ObservationService.getLastValueNumber(this.getID(), \"Height\")\n  }\n\n  async getInitialTBStatus() {\n    const obs = await ObservationService.getLastValueCoded(this.getID(), \"TB Status at Initiation\")\n    if (obs) return ObservationService.getConceptName(obs)\n  }\n\n  async getRecentHeight() {\n    return ObservationService.getFirstValueNumber(this.getID(), \"Height\") || -1\n  }\n\n  async getWeightHistory() {\n    try {\n      const weights = await ObservationService.getAll(this.getID(), 'weight')\n      return weights.map((obs: Observation) => ({\n        weight: obs.value_numeric, date: obs.obs_datetime\n      }))\n    } catch (e) {\n      console.warn(e)\n      return []\n    }\n  }\n  async getCompleteTBTherapyHistory() {\n    const data = await ObservationService.getAll(this.getID(), 'TB treatment history')\n    return data.filter((data: any) => {\n      return data.value_text.match(/Complete/i);\n    });\n  }\n\n  async getInitialBMI() {\n    return ObservationService.getLastValueNumber(this.getID(), \"BMI\")\n  }\n\n  async everReceivedART() {\n    return ObservationService.getFirstValueCoded(this.getID(), \"Ever received ART\")\n  }\n\n  async agreesToFollowUp() {\n    return ObservationService.getFirstValueCoded(this.getID(), \"Agrees to followup\")\n  }\n\n  async getHIVTestDate() {\n    const obs = await ObservationService.getFirstObs(this.getID(), \"Confirmatory HIV test date\")\n    if (obs && obs.value_datetime) return obs.value_datetime\n    if (obs && obs.value_text) return obs.value_text\n    return null\n  }\n\n  async getARTStartDate() {\n    const obs = await ObservationService.getFirstObs(this.getID(), \"Date ART started\")\n    if (obs && obs.value_datetime) return obs.value_datetime\n    if (obs && obs.value_text) return obs.value_text\n    const orders = await DrugOrderService.getAllDrugOrders(this.getID(), Number.MAX_SAFE_INTEGER);\n    if(!isEmpty(orders)){\n      return orders[0].order['start_date']\n    }\n    return null\n  }\n\n  async getHIVTestLocation() {\n    return ObservationService.getFirstValueText(\n      this.getID(),\n      \"Confirmatory HIV test location\"\n    )\n  }\n\n  async getReasonForStartingART() {\n    return ObservationService.getFirstValueCoded(this.getID(), \"Reason for ART eligibility\")\n  }\n\n  async getStagingCondition() {\n    return ObservationService.getFirstValueCoded(this.getID(), \"Who stages criteria present\")\n  }\n    \n  getWhoStage() {\n    return ObservationService.getFirstValueCoded(this.getID(), \"Who stage\")\n  }\n}","\nimport { computed, defineComponent, onMounted, PropType, reactive, ref, watch } from \"vue\";\nimport { \n  IonCol, \n  IonGrid, \n  IonRow,  \n  IonContent, \n  IonFooter, \n  IonHeader, \n  IonTitle, \n  IonToolbar, \n  IonButton, \n  IonLabel,\n  IonCheckbox,\nIonItem,\n} from \"@ionic/vue\";\nimport { alertConfirmation, toastSuccess } from \"@/utils/Alerts\";\nimport isEmpty from \"lodash/isEmpty\";\nimport { Option } from \"@/components/Forms/FieldInterface\";\nimport YesNoInput from \"../inputs/YesNoInput.vue\";\nimport SelectInput from \"../inputs/SelectInput.vue\";\nimport DateInput from \"../inputs/DateInput.vue\";\nimport NumberInput from \"../inputs/NumberInput.vue\";\nimport { ConceptService } from \"@/services/concept_service\";\nimport MultiColumnView from \"@/components/containers/MultiColumnView.vue\";\nimport { PatientObservationService } from \"@/services/patient_observation_service\";\nimport { RegimenService } from \"@/services/regimen_service\";\nimport { DrugOrderService } from \"@/services/drug_order_service\";\nimport { VitalsService } from \"@/apps/ART/services/vitals_service\";\nimport StandardValidations from \"@/components/Forms/validations/StandardValidations\";\nimport { ConsultationService } from \"@/apps/ART/services/consultation_service\";\nimport { ReceptionService } from \"@/apps/ART/services/reception_service\";\nimport { AdherenceService } from \"@/apps/ART/services/adherence_service\";\nimport { AppointmentService } from \"@/apps/ART/services/appointment_service\";\nimport { PrescriptionService } from \"@/apps/ART/services/prescription_service\";\nimport dayjs from \"dayjs\";\nimport { ObsValue } from \"@/services/observation_service\";\nimport { BMIService } from \"@/services/bmi_service\";\nimport { DispensationService } from \"@/apps/ART/services/dispensation_service\";\nimport { DTForm } from \"../../interfaces/dt_form_field\";\nimport { optionsToGroupObs, resolveObs, submitForm } from \"../../utils/form\";\nimport { toOptions } from \"../../utils/DTFormElements\";\nimport { modal } from \"@/utils/modal\";\nimport { EmcEvents } from \"../../interfaces/emc_event\";\nimport EventBus from \"@/utils/EventBus\";\nimport { uniqueBy } from \"@/utils/Arrays\";\nimport { DISPLAY_DATE_FORMAT, STANDARD_DATE_FORMAT } from \"@/utils/Date\";\nimport { ARVDrug } from \"@/interfaces/Drug\";\n\nexport default defineComponent({\n  components: {\n    IonContent,\n    IonFooter,\n    IonHeader,\n    IonTitle,\n    IonToolbar,\n    IonButton,\n    IonItem,\n    IonLabel,\n    IonGrid,\n    IonRow,\n    IonCol,\n    IonCheckbox,\n    SelectInput,\n    NumberInput,\n    DateInput,\n    YesNoInput,\n    MultiColumnView,\n  },\n  props: {\n    patient: {\n      type: Object as PropType<PatientObservationService>,\n      required: true\n    },\n  },\n  setup(props) {\n    const patientId = computed(() => props.patient.getID())\n    const vitals = new VitalsService(patientId.value, -1)\n    const consultations = new ConsultationService(patientId.value, -1)\n    const prescription = new PrescriptionService(patientId.value, -1)\n    const dispensation = new DispensationService(patientId.value, -1)\n    const reception = new ReceptionService(patientId.value, -1)\n    const adherence = new AdherenceService(patientId.value, -1)\n    const appointment = new AppointmentService(patientId.value, -1)\n    const prevHeight = ref<number>()\n    const regimens = ref<Option[]>([])\n    const contraIndications = ref<Option[]>([]);\n    const sideEffects = ref<Option[]>([]);\n    const prevDrugs = ref<any[]>([]);\n    const showHeightField = computed(() => !(prevHeight.value && props.patient.getAge() > 18))\n    const isFemale = computed(() => props.patient.isFemale())\n    const drugRunOutDate = ref<string>('');\n    const today = dayjs().format(STANDARD_DATE_FORMAT);\n    const birthdate = dayjs(props.patient.getBirthdate()).format(STANDARD_DATE_FORMAT);\n    const isOnActiveTBTreatment = ref(false)\n    \n    const form = reactive<DTForm>({\n      visitDate: {\n        value: dayjs().format('YYYY-MM-DD') as string | undefined,\n        label: \"Visit Date\",\n        required: true,\n        validation: async (date: Option) => {\n          if(new Date(date.value) > new Date(today)) {\n            return [\"Visit date cannot be after today's date\"]\n          }\n          if(new Date(date.value) < new Date(birthdate)) {\n            return [\"Visit date cannot be before patient's birth date\"]\n          }\n          return null\n        }\n      },\n      weight: {\n        value: undefined as number | undefined,\n        label: \"Weight\",\n        required: true,\n        computedValue: (weight: number) => ({\n          tag: 'vitals',\n          obs: vitals.buildValueNumber('Weight', weight)\n        }),\n        validation: (weight: Option, form: any) => {\n          if ((isEmpty(weight) || !weight.value) && form.patientPresent.value === 'No') {\n            return null\n          } \n          return vitals.validator({...weight, label: 'Weight'})\n        } \n      },\n      height: {\n        value: undefined as number | undefined,\n        label: \"Height\",\n        computedValue: (height: number) => ({\n          tag: 'vitals',\n          obs: vitals.buildValueNumber('Height', height)\n        }),\n        validation: (height: Option) => {\n          if(!showHeightField.value || ((isEmpty(height) || !height.value) && form.patientPresent.value === 'No')) {\n            return null\n          }\n          return vitals.validator({...height, label: 'Height'})\n        }\n      },\n      isPregnant: {\n        value: undefined as \"Yes\" | \"No\"  | undefined,\n        label: 'Is the patient pregnant?',\n        computedValue: (isPregnant: \"Yes\" | \"No\") => ({\n          tag: 'consultation',\n          obs: consultations.buildValueCoded('Is patient pregnant', isPregnant)\n        }),\n        validation: async (state: Option) => isFemale.value && StandardValidations.required(state)\n      },\n      isBreastfeeding: {\n        value: undefined as \"Yes\" | \"No\"  | undefined,\n        label: 'Is the patient breastfeeding?',\n        computedValue: (isBreastfeeding: \"Yes\" | \"No\") => ({\n          tag: 'consultation',\n          obs: consultations.buildValueCoded('Is patient breast feeding', isBreastfeeding)\n        }),\n        validation: async (state: Option) => isFemale.value && StandardValidations.required(state)\n      },\n      nextAppointmentDate: {\n        value: undefined as string | undefined,\n        label: \"Next Appointment Date\",\n        required: true,\n        computedValue: (nextAppointmentDate: string) => ({\n          tag: 'appointment',\n          obs: appointment.buildValueDate('Appointment date', nextAppointmentDate)\n        }),\n        validation: async (date, form) => {\n          if(new Date(date.value) < new Date(form.visitDate.value)) {\n            return [\"Appointment date cannot be before visit date\"]\n          }\n          if(new Date(date.value) > new Date(drugRunOutDate.value)) {\n            return [\"Appointment date cannot be after drug run out date\"]\n          }\n          return null\n        }\n      },\n      patientPresent: {\n        value: undefined as \"Yes\" | \"No\"  | undefined,\n        label: 'Is the patient present?',\n        required: true,\n        computedValue: (patientPresent: \"Yes\" | \"No\") => ({\n          tag: 'reception',\n          obs: reception.buildValueCoded('Patient present', patientPresent)\n        }),\n      },\n      guardianPresent: {\n        value: undefined as \"Yes\" | \"No\"  | undefined,\n        label: 'Is the guardian present?',\n        required: true,\n        computedValue: (guardianPresent: \"Yes\" | \"No\") => ({\n          tag: 'reception',\n          obs: reception.buildValueCoded('Guardian present', guardianPresent)\n        }),\n      },\n      pillCount: {\n        value: undefined as number  | undefined,\n        label: \"Pill Count\",\n        required: prevDrugs.value.length > 0,\n        validation: async (pills: Option) => prevDrugs.value.length > 0 && StandardValidations.isNumber(pills)\n      },\n      regimen: {\n        value: undefined as string | undefined,\n        label: \"Regimen\",\n        placeholder: \"Select a regimen\",\n        computedValue: () => ({\n          tag: 'consultation',\n          obs: prescription.buildValueCoded(\"Medication orders\", \"Antiretroviral drugs\")\n        }),\n      },\n      totalCPTGiven: {\n        value: undefined as number  | undefined,\n        label: \"Total CPT Given\",\n        computedValue: () => ({\n          tag: 'consultation',\n          obs: prescription.buildValueCoded(\"Medication orders\", \"CPT\")\n        }),\n      },\n      totalIPTGiven: {\n        value: undefined as number  | undefined,\n        label: \"Total IPT Given\",\n        computedValue: () => ({\n          tag: 'consultation',\n          obs: prescription.buildValueCoded(\"Medication orders\", \"INH\")\n        }),\n        validation: async (drugs: Option, form: any) => {\n          return (form.tbMed.value?.label === '6H' || form.tbMed.value?.label === '3HP (RFP + INH)') && \n            StandardValidations.isNumber(drugs)\n        }\n      },\n      totalRFPGiven: {\n        value: undefined as number  | undefined,\n        label: \"Total RFP Given\",\n        computedValue: () => ({\n          tag: 'consultation',\n          obs: prescription.buildValueCoded(\"Medication orders\", \"3HP (RFP + INH)\")\n        }),\n        validation: async (drugs: Option, form: any) => {\n          return form.tbMed.value?.label === '3HP (RFP + INH)' && \n            StandardValidations.isNumber(drugs)\n        }\n      },\n      total3HPGiven: {\n        value: undefined as number  | undefined,\n        label: \"Total 3HP Given\",\n        computedValue: () => ({\n          tag: 'consultation',\n          obs: prescription.buildValueCoded(\"Medication orders\", \"INH 300 / RFP 300 (3HP)\")\n        }),\n        validation: async (drugs: Option, form: any) => {\n          return form.tbMed.value?.label === '3HP (INH 300 / RFP 300)' && \n            StandardValidations.isNumber(drugs)\n        }\n      },\n      totalArvsGiven: {\n        value: undefined as number  | undefined,\n        label: \"Total ARVs Given\",\n        validation: async (drugs: Option, form: any) => !isEmpty(form.regimen.value) && StandardValidations.isNumber(drugs)\n      },\n      totalPyridoxineGiven: {\n        value: undefined as number  | undefined,\n        label: \"Total Pyridoxine Given\",\n        validation: async (amount: Option, form: any) => form.tbMed.value?.label && StandardValidations.isNumber(amount)\n      },\n      tbMed: {\n        value: undefined as Option | undefined,\n        label: \"TPT Medication\",\n        placeholder: \"Select a TPT medication\",\n      },\n      hasContraindications: {\n        value: \"No\",\n        label: \"Has Side Effects / Contraindications ?\",\n        validation: async (state: Option) => StandardValidations.validateSeries([\n          ()  => StandardValidations.required(state),\n          () => {\n            if(state.value === \"No\" || contraIndications.value.some(x => x.isChecked)) return null\n            return [\"Please select at least one side effect\"]\n          }\n        ])\n      },\n      hasSideEffects: {\n        value: \"No\",\n        label: \"Has Other Side Effects ?\",\n        validation: async (state: Option) => StandardValidations.validateSeries([\n          ()  => StandardValidations.required(state),\n          () => {\n            if(state.value === \"No\" || sideEffects.value.some(x => x.isChecked)) return null\n            return [\"Please select at least one side effect\"]\n          }\n        ])\n      },\n      tbStatus: {\n        value: undefined as Option | undefined,\n        label: \"TB Status\",\n        computedValue: (status: Option) => ({\n          tag: 'consultation',\n          obs: consultations.buildValueCoded('TB Status', status.value)\n        }),\n        validation: async (state) => !isOnActiveTBTreatment.value && StandardValidations.required(state)\n      },\n      tbTreatmentStartDate: {\n        value: \"\" as string | undefined,\n        label: \"TB treatment start date\",\n        validation: async (date: Option) => {\n          if(!isOnActiveTBTreatment.value) {\n            if(new Date(date.value) > new Date(today)) {\n              return [\"TB treatment start date cannot be after today's date\"]\n            }\n            if(new Date(date.value) < new Date(birthdate)) {\n              return [\"TB treatment start date cannot be before patient's birth date\"]\n            }\n          }\n          return null\n        },\n        computedValue: (date: string) => ({\n          tag: \"consultation\",\n          obs: consultations.buildValueDate(\"TB treatment start date\", date)\n        })\n      },\n      tbTreatmentPeriod: {\n        value: undefined as number  | undefined,\n        label: \"TB treatment period (months)\",\n        computedValue: (period: number) => ({\n          tag: \"consultation\",\n          obs: consultations.buildValueNumber(\"TB treatment period\", period)\n        })\n      },\n    })\n\n    const getRegimens = async (weight: number, onTB?: boolean): Promise<Option[]> => {\n      const unknownReg = {\n        label: \"Unkown\",\n        value: \"Unkown\",\n        other: [{\n          \"drug_id\": 1046,\n          \"drug_name\": \"Unknown ARV\",\n          \"am\": 1,\n          \"pm\": 0,\n          \"units\": \"\",\n          \"frequency\":\t\"Daily (QOD)\"\n        }]\n      }      \n      const regs = await RegimenService.getRegimensByWeight(weight, onTB)\n      if(isEmpty(regs)) return [unknownReg]\n      return Object.keys(regs).map(key => ({\n        label: key, \n        value: key, \n        other: regs[key] \n      })).concat([unknownReg])\n    }\n\n    watch(form.patientPresent, isPresent => {\n      if(isPresent.value === \"No\") {\n        form.weight.required = false\n        form.weight.error = \"\"\n        form.guardianPresent.value = \"Yes\"\n      } else {\n        form.weight.required = true\n      }\n    })\n\n    watch(form.guardianPresent, isPresent => {\n      if(isPresent.value === \"No\") {\n        form.patientPresent.value = \"Yes\"\n      }\n    })\n\n    watch([() => form.weight.value, () => form.tbStatus.value], async ([newWeight, tbStatus]) => {\n      form.regimen.value = ''\n      const onTB = !isEmpty(tbStatus) && !tbStatus.label.match(/TB Not Suspected/i)\n      if(newWeight) {\n        regimens.value = await getRegimens(form.weight.value, onTB)\n        form.patientPresent.value = \"Yes\"\n        form.patientPresent.disabled = true\n      } else if(!newWeight) {\n        form.patientPresent.value = undefined\n        form.patientPresent.disabled = false\n      }\n      form.tbMed.disabled = onTB || isOnActiveTBTreatment.value\n    })\n\n    const calculateMinDuration = (totalGiven: number, drugs: Array<ARVDrug>) => {\n      return Math.min(...drugs.map(drug => totalGiven / ((drug.am ?? 0) + (drug.noon ?? 0)  + (drug.pm ?? 0)) || 1))\n    }\n\n    watch([() => form.totalArvsGiven.value, () => form.pillCount.value], () => {\n      const remainingDrugs = parseInt(form.pillCount.value) || 0\n      const duration = calculateMinDuration(form.totalArvsGiven.value, form.regimen.value.other)\n      drugRunOutDate.value = dayjs(form.visitDate.value).add(duration + remainingDrugs, 'days').format(STANDARD_DATE_FORMAT)\n      form.nextAppointmentDate.label = `Next Appointment Date (Drug run out date: ${dayjs(drugRunOutDate.value).format(DISPLAY_DATE_FORMAT)})`\n      form.nextAppointmentDate.value = drugRunOutDate.value\n    })\n\n    watch(() => form.visitDate.value, () => checkForActiveTB())\n\n    const hasGiven3HP = computed(() => form.tbMed.value?.label === '3HP (INH 300 / RFP 300)')\n    const hasGivenRFP = computed(() => form.tbMed.value?.label === '3HP (RFP + INH)')\n    const hasGiven6H = computed(() => form.tbMed.value?.label === '6H')\n    const hasContraindications = computed(() => form.hasContraindications.value === 'Yes')\n    const hasSideEffects = computed(() => form.hasSideEffects.value === 'Yes')\n    const isOnTBTreatment = computed(() => /Confirmed TB on treatment/i.test(form.tbStatus.value?.label))    \n\n    const tbStatuses = toOptions([\n      'Confirmed TB Not on treatment', \n      'Confirmed TB on treatment', \n      'TB Not Suspected',\n      'TB Suspected'\n    ]);\n\n    const tbMeds = toOptions(['6H', '3HP (RFP + INH)', '3HP (INH 300 / RFP 300)'])\n\n    const checkForActiveTB = async () => {\n      await PatientObservationService.setSessionDate(form.visitDate.value);\n      consultations.setDate(form.visitDate.value);\n      isOnActiveTBTreatment.value = false;\n      const previousTBStatus = await consultations.getFirstValueCoded(\"TB status\");\n      if(/Confirmed TB on treatment/i.test(previousTBStatus)) {\n        const tbTreatmentStartDate = await consultations.getFirstValueDatetime(\"TB treatment start date\")\n        const tbTreatmentPeriod = (await consultations.getFirstValueNumber(\"TB treatment period\")) || 6\n        if(tbTreatmentStartDate) {\n          const timeElapsed = dayjs(form.visitDate.value).diff(tbTreatmentStartDate, 'months');\n          isOnActiveTBTreatment.value = timeElapsed <= tbTreatmentPeriod;\n        }\n      }\n    }\n\n    const buildBmiObs = async (formData: any): Promise<ObsValue> => {\n      const height = formData.height || prevHeight.value\n      const bmi = BMIService.calculateBMI(formData.weight, height)\n      return vitals.buildValueNumber('BMI', bmi)\n    }\n\n    const buildFpmObs = async () => {\n      const obs: ObsValue[] = [\n        await consultations.buildValueCoded('Patient using family planning', 'No')\n      ]\n      const methods = consultations.getFamilyPlanningMethods()\n      methods.forEach(async (method) => {\n        obs.push(await consultations.buildValueCoded(method, \"No\"))\n      })\n      return obs\n    }\n\n    const getTbSymptomsObs = async () => {\n      return Promise.all(ConceptService.getConceptsByCategory(\"tb_symptom\", true).map(async (concept) => {\n        return consultations.buildGroupValueCoded(concept.name, concept.name, \"No\")\n      }))\n    }\n\n    const toDrugOrder = (drug: ARVDrug, quantity: number, duration: number, startDate: string) => {\n      return {\n        \"drug_inventory_id\": drug.drug_id,\n        \"equivalent_daily_dose\": prescription.calculateEquivalentDosage(drug.am, drug.pm),\n        \"dose\": prescription.calculateDosage(drug.am, drug.pm),\n        'start_date': startDate,\n        \"auto_expire_date\": dayjs(startDate).add(duration, 'days').format('YYYY-MM-DD'), \n        \"units\": drug.units,\n        \"qty\": quantity,\n        \"frequency\": drug.frequency,\n        \"instructions\": prescription.getInstructions(drug.drug_name, drug.am, drug.pm, drug.units),\n      }\n    }\n\n    const onSubmit = async () => {\n      await PatientObservationService.setSessionDate(form.visitDate.value)\n      vitals.setDate(form.visitDate.value)\n      consultations.setDate(form.visitDate.value)\n      prescription.setDate(form.visitDate.value)\n      reception.setDate(form.visitDate.value)\n      adherence.setDate(form.visitDate.value)\n      appointment.setDate(form.visitDate.value)\n      dispensation.setDate(form.visitDate.value)\n      await submitForm (form, async (formData, computedFormData) => {\n        await vitals.createEncounter()\n        const vitalsObs = await resolveObs(computedFormData, 'vitals')\n        if (!isEmpty(vitalsObs)) {\n          const bmiObs = await buildBmiObs(formData)\n          await vitals.saveObservationList([...vitalsObs, bmiObs])\n        }\n        \n        await consultations.createEncounter()\n        let consultationObs = await resolveObs(computedFormData, 'consultation')\n        consultationObs = [...consultationObs, ...(await optionsToGroupObs(\"Malawi ART side effects\", contraIndications.value))]\n        consultationObs = [...consultationObs, ...(await getTbSymptomsObs())]\n        if(hasSideEffects.value) consultationObs = [...consultationObs, ...(await optionsToGroupObs(\"Other side effect\", sideEffects.value))  ]\n        if(isFemale.value) consultationObs = [...consultationObs, ...(await buildFpmObs())]\n        await consultations.saveObservationList(consultationObs)\n\n        await prescription.createEncounter()\n        const drugOrders: any[] = []\n        let duration = 0\n        if(!isEmpty(formData.regimen) && formData.totalArvsGiven) {\n          const arvDrugs: any[] = formData.regimen.other\n          duration = calculateMinDuration(formData.totalArvsGiven, arvDrugs);\n          arvDrugs.forEach((drug: any) => drugOrders.push(\n            toDrugOrder(drug, formData.totalArvsGiven, duration, formData.visitDate)\n          ))\n        }\n\n        if(formData.totalCPTGiven) {\n          uniqueBy((await RegimenService.getRegimenExtras('Cotrimoxazole', formData.weight)), 'concept_name')\n          .filter((drug: any) => drug.frequency === 'Daily (QOD)')\n          .forEach((drug: any) => drugOrders.push(toDrugOrder(drug, formData.totalCPTGiven, duration, formData.visitDate)))\n        }\n\n        if(formData.tbMed?.value) {\n          const iptRegimens = uniqueBy((await RegimenService.getRegimenExtras('INH', formData.weight)), ['concept_name', 'frequency'])\n          const pyridoxine = iptRegimens.find((d: any) => d['concept_name'] === 'Pyridoxine')\n\n          if(pyridoxine && formData.totalPyridoxineGiven) {\n            drugOrders.push(toDrugOrder(pyridoxine, formData.totalPyridoxineGiven, duration, formData.visitDate))\n          }\n\n          if(formData.totalIPTGiven) {\n            const INH = iptRegimens.find((drug: any) =>  drug['concept_name'] === \"Isoniazid\" && (\n              (hasGiven6H.value && drug.frequency === 'Daily (QOD)') || \n              (hasGivenRFP.value && drug.frequency === 'Weekly (QW)')\n            ))\n            drugOrders.push(toDrugOrder(INH, formData.totalIPTGiven, duration, formData.visitDate))\n          }\n\n          if(formData.totalRFPGiven && hasGivenRFP.value) {\n            const rfpRegimens = await RegimenService.getRegimenExtras('Rifapentine', formData.weight)\n            if(rfpRegimens.length) drugOrders.push(toDrugOrder(rfpRegimens[0], formData.totalRFPGiven, duration, formData.visitDate))\n          }\n\n          if(formData.total3HPGiven && hasGiven3HP.value) {\n            const threeHPRegimens = await RegimenService.getRegimenExtras('INH / RFP', formData.weight)\n            drugOrders.push(toDrugOrder(threeHPRegimens[0], formData.total3HPGiven, duration, formData.visitDate))\n          }\n        }\n\n        const orders: any[] = await prescription.createDrugOrder(drugOrders)\n        const dispensations = orders.map(order => {\n          const drug = drugOrders.find(drug => drug.drug_inventory_id === order.drug_inventory_id)\n          return dispensation.buildDispensations(order.order_id, drug.qty, 1)\n        })\n        await dispensation.saveDispensations(dispensations.flat(1))\n\n        await reception.createEncounter()\n        const receptionObs = await resolveObs(computedFormData, 'reception')\n        await reception.saveObservationList(receptionObs)\n\n        if(prevDrugs.value.length > 0) {\n          await adherence.createEncounter()\n          const adherenceObs = await Promise.all(prevDrugs.value.map(async (drug: any) => {\n            const expected = adherence.calculateExpected(drug.quantity, drug.equivalent_daily_dose, drug.order.start_date, drug.frequency)\n            const adh = adherence.calculateAdherence(drug.quantity, formData.pillCount, expected)\n            return [\n              await adherence.buildAdherenceObs(drug.order_id, drug.drug_inventory_id, adh),\n              await adherence.buildPillCountObs(drug.order_id, formData.pillCount)\n            ]\n          }))\n          await adherence.saveObservationList(adherenceObs.flat(1))\n        }\n\n        await appointment.createEncounter()\n        const appointmentObs = await resolveObs(computedFormData, 'appointment')\n        await appointment.saveObservationList(appointmentObs)\n        await toastSuccess('Patient visit saved successfully')\n\n        await PatientObservationService.resetSessionDate()\n\n        await modal.hide()\n        EventBus.emit(EmcEvents.RELOAD_PATIENT_VISIT_DATA);\n        EventBus.emit(EmcEvents.RELOAD_STAGING_INFORMATION);\n      })\n    }\n\n    const onClear = async () => {\n      if((await alertConfirmation('Are you sure you want to clear all fields?'))) {\n        for(const key in form) {\n          form[key].value = ''\n          form[key].error = ''\n          form[key].disabled = false;\n        }\n        EventBus.emit(EmcEvents.ON_CLEAR);\n      }\n    }\n\n    onMounted (async () => {\n      await checkForActiveTB();\n      prevHeight.value = await props.patient.getRecentHeight()\n      const recentWeight = await props.patient.getRecentWeight()\n      if (recentWeight) regimens.value = await getRegimens(recentWeight)\n      prevDrugs.value = await DrugOrderService.getLastDrugsReceived(props.patient.getID())\n      form.pillCount.required = prevDrugs.value.length > 0\n      contraIndications.value = ConceptService\n        .getConceptsByCategory(\"contraindication\", true)\n        .map(concept => ({\n          value: concept.concept_id,\n          label: concept.name,\n          other: concept\n        }));\n      sideEffects.value = ConceptService\n        .getConceptsByCategory(\"side_effect\", true)\n        .map(concept => ({\n          value: concept.concept_id,\n          label: concept.name,\n          other: concept\n        }));\n    });\n\n    return {\n      today,\n      form,\n      regimens,\n      contraIndications,\n      sideEffects,\n      tbStatuses,\n      tbMeds,\n      hasGiven3HP,\n      hasGivenRFP,\n      hasGiven6H,\n      showHeightField,\n      isFemale,\n      modal,\n      hasContraindications,\n      hasSideEffects,\n      prevDrugs,\n      drugRunOutDate,\n      birthdate,\n      onSubmit,\n      onClear,\n      isOnTBTreatment,\n      isOnActiveTBTreatment,\n    };\n  },\n})\n","import { render } from \"./PatientVisit.vue?vue&type=template&id=77d303f6&scoped=true&ts=true\"\nimport script from \"./PatientVisit.vue?vue&type=script&lang=ts\"\nexport * from \"./PatientVisit.vue?vue&type=script&lang=ts\"\n\nimport \"./PatientVisit.vue?vue&type=style&index=0&id=77d303f6&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/daniel/projects/malawi-emr/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-77d303f6\"]])\n\nexport default __exports__","\nimport DrillTableModalVue from '@/components/DataViews/DrillTableModal.vue';\nimport table, { ColumnInterface, RowInterface } from '@/components/DataViews/tables/ReportDataTable';\nimport ReportTable from \"@/components/DataViews/tables/ReportDataTable.vue\"\nimport { EncounterService } from '@/services/encounter_service';\nimport { ObservationService } from '@/services/observation_service';\nimport { Patientservice } from '@/services/patient_service';\nimport { ProgramService } from '@/services/program_service';\nimport popVoidReason from '@/utils/ActionSheetHelpers/VoidReason';\nimport HisDate from \"@/utils/Date\";\nimport { IonButton, IonCard, IonCardContent, IonCardHeader, IonCardTitle, modalController } from '@ionic/vue';\nimport dayjs from 'dayjs';\nimport { computed, defineComponent, onMounted, PropType, reactive, ref } from 'vue';\nimport ViralLoadResult from '@/apps/EMC/Components/modals/ViralLoadResult.vue';\nimport OutcomeStatus from '@/apps/EMC/Components/modals/OutcomeStatus.vue';\nimport PatientVisit from '@/apps/EMC/Components/modals/PatientVisit.vue';\nimport { PatientObservationService } from '@/services/patient_observation_service';\nimport EventBus from '@/utils/EventBus';\nimport { EmcEvents } from '../../interfaces/emc_event';\nimport { modal } from '@/utils/modal';\nimport { ConceptService } from '@/services/concept_service';\nimport { isEmpty } from 'lodash';\n\ninterface ActionButtonInterface {\n  label: string;\n  icon?: string;\n  action: () => any;\n  color?: string;\n}\n\nexport default defineComponent({\n  props: {\n    patient: {\n      type: Object as PropType<PatientObservationService>,\n      required: true\n    },\n    startDate:{\n      type: String,\n      required: true\n    },\n  },\n  components: {\n    ReportTable,\n    IonCard,\n    IonCardHeader,\n    IonCardTitle,\n    IonCardContent,\n    IonButton,\n  },\n  setup(props) {\n    const rows = ref<RowInterface[][]>([])\n    const patientId = computed(() => props.patient.getID());\n    const tableConfig = reactive({\n      showIndex: false,\n      tableCssTheme: \"emc-datatable-theme\"\n    })\n\n    const actionButtons = ref<ActionButtonInterface[]>([\n      {\n        label: \"Add Visit\",\n        action: async () => modal.show(PatientVisit, { \n          patient: props.patient \n        })\n      },\n      {\n        label: \"Update Outcome\",\n        action:async () => modal.show(OutcomeStatus, {\n          patient: props.patient,\n        })\n      },\n      {\n        label: \"Enter VL Results\",\n        action: async () => modal.show(ViralLoadResult, {\n          patient: props.patient,\n        })\n      }\n    ])\n\n    const columns = ref<ColumnInterface[][]>([[\n      table.thTxt('Visit Date'),\n      table.thTxt(\"Given To\"),\n      table.thTxt('Weight (Kg)'),\n      table.thTxt('Height (cm)'),\n      table.thTxt('BMI'),\n      table.thTxt('Preg'),\n      table.thTxt('B/F'),\n      table.thTxt('TB STATUS'),\n      table.thTxt('Side Effects'),\n      table.thTxt('ART Regimen'),\n      table.thTxt('Next Appointment'),\n      table.thTxt('Outcome'),\n      table.thTxt('Viral Load'),\n      table.thTxt('Void Visit')\n    ]])\n\n    const formatVisitDate = (date: string) => {\n      const monthsElapsed = props.startDate !== \"N/A\" \n          ? '(' + dayjs(date).diff(props.startDate, 'months') + 'M)' \n          : ''\n      return `${HisDate.toStandardHisDisplayFormat(date)} ${monthsElapsed}`\n    }\n\n    const drill = async (rows: string[][], title: string, columns = [] as string[]) => {\n      if(isEmpty(rows)) return \n      const modal = await modalController.create({\n        component: DrillTableModalVue,\n        cssClass: \"custom-modal\",\n        componentProps: { title, columns, onRows: () => rows },\n      });\n      await modal.present();\n    }\n\n    const showDrugsDispensed = async (drugs = [] as any[], date: string) => {\n      const columns = ['DRUG NAME', 'QUANTITY', 'UNITS' ]\n      const rows = drugs.map((drug: any) => [drug[0], drug[1], 'tab(s)' ])\n      const title = `Drugs dispensed on ${HisDate.toStandardHisDisplayFormat(date)}`\n      return drill(rows, title, columns)\n    }\n\n    const showSideEffects = async (sideEffects = [] as any[], date: string) => {\n      const title = `Side Effects Noted on ${HisDate.toStandardHisDisplayFormat(date)}`\n      const rows = sideEffects.map((e: any) => [e]);\n      return drill(rows, title)\n    }\n\n    const removeEncounters = async (date: string, index: number, activeRows: any[]) => {\n      popVoidReason(async (reason: string) => {\n        const encounters = await EncounterService.getEncounters(patientId.value, {date});\n        encounters.forEach(async (encounter: any) => {\n          await EncounterService.voidEncounter(encounter.encounter_id, reason);\n        })\n        activeRows.splice(index, 1);\n      }, 'small-modal');\n    } \n\n    const buildRows = () => {\n      Patientservice.getPatientVisits(patientId.value, true).then(async (dates) => {\n        rows.value = []\n        for (const date of dates) {\n          const data =  await ProgramService.getCurrentProgramInformation(patientId.value,  date)\n          let nextAppointment = '';\n          let pregnant = '';\n          let breastfeeding = '';\n          let vlResult = ''\n\n          if (data.outcome !== 'Defaulted') {\n            const nDate = await ObservationService.getFirstValueDatetime(patientId.value, 'appointment date', date);\n            if(nDate) nextAppointment = HisDate.toStandardHisDisplayFormat(nDate)\n            pregnant = await ObservationService.getFirstValueCoded(patientId.value, 'Is patient pregnant', date);\n            breastfeeding = await ObservationService.getFirstValueCoded(patientId.value, 'Is patient breast feeding', date);\n            if(data['viral_load'] === 'N/A') {\n              const vlObs = await ObservationService.getFirstObs(patientId.value, \"HIV viral load\", date)\n              if(vlObs && vlObs.value_text && vlObs.value_numeric) {\n                vlResult = vlObs.value_numeric === 1 ? \"LDL\" : vlObs.value_text + vlObs.value_numeric.toString()\n              }\n            } else {\n              vlResult = data['viral_load']\n            }\n          }\n          data && rows.value.push([\n            table.td(formatVisitDate(date)),\n            table.td(data['visit_by'].match(/Unk/i) ? \"\" : data['visit_by']),\n            table.td(data.outcome === 'Defaulted' ? '' : data.weight),\n            table.td(data.outcome === 'Defaulted' ? '' : data.height),\n            table.td(data.outcome === 'Defaulted' ? '' : data.bmi),\n            table.td(pregnant || ''),\n            table.td(breastfeeding ||''),\n            table.td(data['tb_status'].match(/Unknown/i) || data.outcome === 'Defaulted' ? '' : (await ConceptService.getCachedConceptName(data['tb_status'])) || ''),\n            table.tdLink(data['side_effects'].length ? 'Yes' : data.outcome !== 'Defaulted' ? 'No' : '', () => showSideEffects(data.side_effects, date)),\n            table.tdLink(data.outcome === 'Defaulted' ? '' : data.regimen, () => showDrugsDispensed(data.pills_dispensed, date)),\n            table.td(nextAppointment || ''),\n            table.td(data.outcome.match(/Unk/i) ? \"\" : data.outcome),\n            table.td(vlResult),\n            table.tdBtn('X', (index, activeRows) => removeEncounters(date, index, activeRows), {}, 'danger')\n          ])\n        }\n      });\n    }\n\n    EventBus.on(EmcEvents.RELOAD_PATIENT_VISIT_DATA, () => buildRows())\n\n    onMounted(() => {\n      buildRows()\n    })\n\n    return {\n      actionButtons,\n      tableConfig,\n      columns,\n      rows,\n    }\n  },\n})\n","import { render } from \"./VisitsSummary.vue?vue&type=template&id=4291ea78&scoped=true&ts=true\"\nimport script from \"./VisitsSummary.vue?vue&type=script&lang=ts\"\nexport * from \"./VisitsSummary.vue?vue&type=script&lang=ts\"\n\nimport \"./VisitsSummary.vue?vue&type=style&index=0&id=4291ea78&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/daniel/projects/malawi-emr/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4291ea78\"]])\n\nexport default __exports__","import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock, createVNode as _createVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-3cb2ba83\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { style: {width: '100%', display: 'flex', justifyContent: 'space-between'} }\nconst _hoisted_2 = { key: 0 }\nconst _hoisted_3 = { key: 1 }\nconst _hoisted_4 = { key: 2 }\nconst _hoisted_5 = { key: 3 }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ion_item = _resolveComponent(\"ion-item\")!\n  const _component_ion_list = _resolveComponent(\"ion-list\")!\n  const _component_multi_column_view = _resolveComponent(\"multi-column-view\")!\n\n  return (_openBlock(), _createBlock(_component_multi_column_view, {\n    items: _ctx.patientInfo,\n    numberOfColumns: 3\n  }, {\n    default: _withCtx(({entries}) => [\n      _createVNode(_component_ion_list, { class: \"his-card ion-margin-end\" }, {\n        default: _withCtx(() => [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(entries, (option, i) => {\n            return (_openBlock(), _createBlock(_component_ion_item, {\n              key: i,\n              lines: i === entries.length - 1 ? 'none': '',\n              button: _ctx.clickable(option),\n              onClick: ($event: any) => (_ctx.onClickHandler(option))\n            }, {\n              default: _withCtx(() => [\n                _createElementVNode(\"div\", _hoisted_1, [\n                  (option.label)\n                    ? (_openBlock(), _createElementBlock(\"span\", _hoisted_2, _toDisplayString(option.label) + \": \", 1))\n                    : (_openBlock(), _createElementBlock(\"span\", _hoisted_3)),\n                  (_ctx.clickable(option))\n                    ? (_openBlock(), _createElementBlock(\"span\", _hoisted_4, [\n                        _createElementVNode(\"a\", null, [\n                          _createElementVNode(\"b\", null, _toDisplayString(option.value || 'N/A'), 1)\n                        ])\n                      ]))\n                    : (_openBlock(), _createElementBlock(\"span\", _hoisted_5, [\n                        _createElementVNode(\"b\", null, _toDisplayString(option.value || 'N/A'), 1)\n                      ]))\n                ])\n              ]),\n              _: 2\n            }, 1032, [\"lines\", \"button\", \"onClick\"]))\n          }), 128))\n        ]),\n        _: 2\n      }, 1024)\n    ]),\n    _: 1\n  }, 8, [\"items\"]))\n}","import { defineComponent as _defineComponent } from 'vue'\nimport { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, unref as _unref, withCtx as _withCtx, createVNode as _createVNode, normalizeStyle as _normalizeStyle, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nimport { \n  IonCol, \n  IonGrid, \n  IonRow, \n  IonContent, \n  IonFooter, \n  IonHeader, \n  IonTitle, \n  IonToolbar, \n  IonButton,\n} from \"@ionic/vue\";\nimport { modal } from \"@/utils/modal\";\nimport EventBus from \"@/utils/EventBus\";\nimport { EmcEvents } from \"../../interfaces/emc_event\";\nimport { Patientservice } from \"@/services/patient_service\";\nimport { computed, onMounted, ref } from \"vue\";\nimport ApiStore from \"@/composables/ApiStore\";\nimport { Order } from \"@/interfaces/order\";\nimport isEmpty from \"lodash/isEmpty\";\nimport { DataTable, RowActionButtonInterface, TableColumnInterface } from \"@uniquedj95/vtable\";\nimport { Test } from \"@/interfaces/test\";\nimport HisDate from \"@/utils/Date\";\nimport popVoidReason from \"@/utils/ActionSheetHelpers/VoidReason\";\nimport { EncounterService } from \"@/services/encounter_service\";\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'VLResultTrail',\n  props: {\n    patient: {}\n  },\n  setup(__props: any) {\n\nconst props = __props;\nconst title = computed(() => `Viral Load Results for ${props.patient.getFullName()}`);\nconst rows = ref<Array<any>>([])\nconst columns: Array<TableColumnInterface> = [\n  { path: \"accession_number\", label: \"Accession\"},\n  { path: \"test\", label: \"Test Name\"},\n  { path: \"specimen.name\", label: \"Specimen\"},\n  { path: \"order_date\", label: \"Order Date\", formatter: HisDate.toStandardHisDisplayFormat },\n  { path: \"result\", label: \"Result\"},\n  { path: \"result_date\", label: \"Result Date\", formatter: HisDate.toStandardHisDisplayFormat },\n]\n\nconst voidBtn: RowActionButtonInterface = {\n  label: \"X\",\n  color: \"danger\",\n  action({ encounter_id }) {\n    popVoidReason(async (reason: string) => {\n      try {\n        await EncounterService.voidEncounter(encounter_id, reason);\n        modal.hide();\n        EventBus.emit(EmcEvents.RELOAD_LATEST_VL_RESULT);\n        EventBus.emit(EmcEvents.RELOAD_PATIENT_VISIT_DATA);\n      }catch (e) {\n        console.error(e);\n      }\n    }, 'small-modal custom-modal-backdrop')\n  },\n}\n\nconst isVLTestWithResults = (test: Test) => {\n  return /hiv/i.test(test.name) && !isEmpty(test.result);\n}\n\nconst loadOrders = async () => {\n  const orders: Array<Order> = await ApiStore.get('PATIENT_LAB_ORDERS', { patientID: props.patient.getID() });\n  orders.forEach(order => order.tests?.forEach(test => {\n    if(isVLTestWithResults(test)) {\n      test.result?.forEach(result => {\n        rows.value.push({\n          ...order,\n          test: test.name,\n          result: `${result.value_modifier} ${result.value}`,\n          result_date: result.date\n        });\n      }) \n    }\n  }))\n}\n\nonMounted(() => loadOrders());\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(_unref(IonHeader), null, {\n      default: _withCtx(() => [\n        _createVNode(_unref(IonToolbar), null, {\n          default: _withCtx(() => [\n            _createVNode(_unref(IonTitle), null, {\n              default: _withCtx(() => [\n                _createTextVNode(_toDisplayString(title.value), 1)\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_unref(IonContent), null, {\n      default: _withCtx(() => [\n        _createVNode(_unref(IonGrid), { style: {\"width\":\"100%\"} }, {\n          default: _withCtx(() => [\n            _createVNode(_unref(IonRow), {\n              style: _normalizeStyle([{\"padding\":\"0 !important\"}, { minHeight: rows.value.length ? '0' : '30vh'}])\n            }, {\n              default: _withCtx(() => [\n                _createVNode(_unref(IonCol), {\n                  size: \"12\",\n                  class: \"ion-no-padding\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_unref(DataTable), {\n                      rows: rows.value,\n                      columns: columns,\n                      \"row-actions-buttons\": [voidBtn],\n                      config: { showSearchField: false },\n                      color: \"custom\"\n                    }, null, 8, [\"rows\", \"row-actions-buttons\"])\n                  ]),\n                  _: 1\n                })\n              ]),\n              _: 1\n            }, 8, [\"style\"])\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_unref(IonFooter), null, {\n      default: _withCtx(() => [\n        _createVNode(_unref(IonToolbar), null, {\n          default: _withCtx(() => [\n            _createVNode(_unref(IonButton), {\n              color: \"primary\",\n              onClick: _cache[0] || (_cache[0] = ($event: any) => (_unref(modal).hide())),\n              slot: \"end\"\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\"Close\")\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    })\n  ], 64))\n}\n}\n\n})","import script from \"./VLResultTrail.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./VLResultTrail.vue?vue&type=script&lang=ts&setup=true\"\n\nconst __exports__ = script;\n\nexport default __exports__","\nimport { computed, defineComponent, onMounted, PropType, ref } from 'vue'\nimport MultiColumnView from \"@/components/containers/MultiColumnView.vue\";\nimport { PatientObservationService } from '@/services/patient_observation_service';\nimport HisDate from \"@/utils/Date\";\nimport dayjs from 'dayjs';\nimport { isEmpty } from 'lodash';\nimport router from '@/router';\nimport ApiStore from '@/composables/ApiStore';\nimport EventBus from '@/utils/EventBus';\nimport { EmcEvents } from '../interfaces/emc_event';\nimport { toGenderString } from '@/utils/Strs';\nimport { modal } from '@/utils/modal';\nimport VLResultTrail from './modals/VLResultTrail.vue';\nimport { GuardianDetails } from '@/interfaces/relationship';\n\ninterface InfoItem {\n  label: string;\n  value: string | number;\n  other?: {\n    onClickHandler: () => Promise<void> | void;\n  };\n}\n\nexport default defineComponent({\n  components: {\n    MultiColumnView\n  },\n  props: {\n    patient: {\n      type: Object as PropType<PatientObservationService>,\n      required: true,\n    },\n    artStartDate: {\n      type: String,\n      required: true,\n    },\n    guardians: {\n      type: Array as PropType<Array<GuardianDetails>>,\n      default: () => [],\n    }\n  },\n  emits: ['updatePatient','updateARVNumber', 'updateGuardian'],\n  setup(props, { emit }) {\n    const initWeight = ref(0)\n    const initHeight = ref(0)\n    const initBmi = ref(0)\n    const initTBStatus = ref('')\n    const breastFeedingAtInitiation = ref('')\n    const pregnantAtInitiation = ref('')\n    const receivedART = ref('')\n    const agreesToFollowUp = ref('')\n    const reasonForStartingART = ref('')\n    const hivTestDate = ref('')\n    const hivTestPlace = ref('')\n    const stagingCondition = ref('')\n    const latestVLResult = ref('')\n    const whoSTage = ref('')\n\n    const clickable = (item: InfoItem) => {\n      return item.other && typeof item.other.onClickHandler === 'function';\n    }\n\n    const hasGuardians = computed(() => !isEmpty(props.guardians));\n\n    const onClickHandler = async (item: InfoItem) => {\n      if(clickable(item)){\n        await item.other?.onClickHandler()\n      }\n    }\n\n    const getDobAndAgeAtInitiation = () => {\n      const dob = props.patient.getBirthdate()\n      const ageAtInitiation = props.artStartDate !== \"N/A\" \n        ? dayjs(props.artStartDate).diff(dob, \"years\")\n        : ''\n      \n      return `${HisDate.toStandardHisDisplayFormat(dob)} (${ageAtInitiation})`\n    }\n\n    const setLatestVLResult = (force = false) => {\n      if(force) ApiStore.invalidate('PATIENT_LAB_ORDERS')\n      ApiStore.get('PATIENT_LAB_ORDERS', { patientID: props.patient.getID() }).then(orders => {\n        const results = orders.reduce((rs: any[], order: any) => {\n        const r = order.tests\n          .filter((t: any) => t.name.match(/hiv/i) && !isEmpty(t.result))\n          .map((t: any) => t.result);\n          return rs.concat(r.reduce((a: any, c: any) => a.concat(c), []));\n        }, [])\n        .sort((a: any, b: any) => new Date(a.date) > new Date(b.date) ? -1 : 1);\n        latestVLResult.value = isEmpty(results) \n          ? '' \n          : `${results[0].value_modifier}${results[0].value} (${HisDate.toStandardHisDisplayFormat(results[0].date)})`;\n      });\n    }\n\n    const updateStagingInfo = () => {\n      router.push(`/emc/registration/${props.patient.getID()}/false`)\n    }\n\n    const formattedRelations = ()  => {\n      return hasGuardians.value\n        ? props.guardians.map(r => {\n            return `${r.name} (${r.relationshipType})`\n          })\n          .join(\",\")\n        :\"Add\";\n    }\n\n    const patientInfo = computed(() => [\n      { label: \"ARV Number\", value: props.patient.getArvNumber(), other: {\n        onClickHandler: () => emit('updateARVNumber')\n      }},\n      { label: \"National Patient ID\", value: props.patient.getNationalID() },\n      { label: \"Name\", value: props.patient.getGivenName() + \" \" + props.patient.getFamilyName(), other: {\n        onClickHandler: () =>   emit('updatePatient', 'given_name')\n      }},\n      { label: \"DOB and Age at Initiation\", value: getDobAndAgeAtInitiation(), other: {\n          onClickHandler: () => emit('updatePatient', 'birthdate')\n      }},\n      {\n        label: \"Sex\",\n        value: toGenderString(props.patient.getGender()),\n        other: {\n          onClickHandler: () => {\n            emit('updatePatient', 'gender')\n          }\n        },\n      },\n      {\n        label: \"Location\",\n        value: props.patient.getCurrentVillage(),\n        other: {\n          onClickHandler: () => {\n            emit('updatePatient', 'home_village')\n          }\n        },\n      },\n      { \n        label: \"Landmark\", \n        value: props.patient.getClosestLandmark(),\n        other: {\n          onClickHandler: () => {\n            emit('updatePatient', 'landmarks')\n          }\n        },\n      },\n      { \n        label: \"Phone Number\", \n        value: props.patient.getPhoneNumber(),\n        other: {\n          onClickHandler: () => {\n            emit('updatePatient', 'phone_number')\n          }\n        },\n      },\n      {\n        label: \"Guardian\",\n        value: formattedRelations(),\n        other: {\n          onClickHandler: () => emit(\"updateGuardian\")\n        } \n      },\n      { label: \"Agrees to follow up\", value: agreesToFollowUp.value, other: {\n        onClickHandler: updateStagingInfo\n      }},\n      { label: \"Date of starting first line ARV Regimen\", value: props.artStartDate, other: {\n        onClickHandler: updateStagingInfo\n      }},\n      { label: \"Initial Weight (KG)\", value: initWeight.value, other: {\n        onClickHandler: updateStagingInfo\n      }},\n      { label: \"Initial Height (CM)\", value: initHeight.value, other: {\n        onClickHandler: updateStagingInfo\n      }},\n      { label: \"Initial BMI\", value: initBmi.value, other: {\n        onClickHandler: updateStagingInfo\n      }},\n      { label: \"Initial TB Status\", value: initTBStatus.value, other: {\n        onClickHandler: updateStagingInfo\n      }},\n      { label: \"Pregnant at Initiation\", value: pregnantAtInitiation.value, other: {\n        onClickHandler: updateStagingInfo\n      }},\n      { label: \"Breastfeeding at Initiation\", value: breastFeedingAtInitiation.value, other: {\n        onClickHandler: updateStagingInfo\n      }},\n      { label: \"Latest VL Result and Result Date\", value:  latestVLResult.value, other: {\n        onClickHandler: () => modal.show(VLResultTrail, {\n          patient: props.patient\n        })\n      }},\n      { label: \"TI\", value: receivedART.value, other: {\n        onClickHandler: updateStagingInfo\n      }},\n      { label: \"HIV test place\", value: hivTestPlace.value, other: {\n        onClickHandler: updateStagingInfo\n      }},\n      {  label: \"HIV test date\", value: hivTestDate.value, other: {\n        onClickHandler: updateStagingInfo\n      }},\n      { label: \"WHO stage\", value: whoSTage.value, other: {\n        onClickHandler: updateStagingInfo\n      }},\n      { label: \"Reason for starting ART\", value: reasonForStartingART.value, other: {\n        onClickHandler: updateStagingInfo\n      }},\n      { label: \"Staging codition\", value: stagingCondition.value, other: {\n        onClickHandler: updateStagingInfo\n      }},\n    ])\n\n    const setHIVTestDate = async () => {\n      const date = await props.patient.getHIVTestDate()\n      if(date) hivTestDate.value = HisDate.toStandardHisDisplayFormat(date)\n    }\n\n    const setStagingInfo = () => {\n      props.patient.getInitialWeight().then(v => initWeight.value = v)\n      props.patient.getInitialHeight().then(v => initHeight.value = v)\n      props.patient.getInitialBMI().then(v => initBmi.value = v)\n      props.patient.getInitialTBStatus().then(v => initTBStatus.value = v)\n      props.patient.hasPregnancyAtARTInitiation().then(v => pregnantAtInitiation.value = v)\n      props.patient.breastFeedingAtARTInitiation().then(v => breastFeedingAtInitiation.value = v)\n      props.patient.everReceivedART().then(v => receivedART.value = v)\n      props.patient.agreesToFollowUp().then(v => agreesToFollowUp.value = v)\n      props.patient.getReasonForStartingART().then(v => reasonForStartingART.value = v)\n      props.patient.getHIVTestLocation().then(v => hivTestPlace.value = v)\n      props.patient.getStagingCondition().then(v => stagingCondition.value = v)\n      props.patient.getWhoStage().then(v => whoSTage.value = v)\n      setHIVTestDate()\n    }\n\n   onMounted(() => {\n    setStagingInfo();\n    setLatestVLResult();\n    EventBus.on(EmcEvents.RELOAD_LATEST_VL_RESULT,  () =>  setLatestVLResult(true))\n    EventBus.on(EmcEvents.RELOAD_STAGING_INFORMATION, () => setStagingInfo())\n   })\n\n    return {\n      patientInfo,\n      onClickHandler,\n      clickable,\n    }\n  },\n})\n","import { render } from \"./InformationHeader.vue?vue&type=template&id=3cb2ba83&scoped=true&ts=true\"\nimport script from \"./InformationHeader.vue?vue&type=script&lang=ts\"\nexport * from \"./InformationHeader.vue?vue&type=script&lang=ts\"\n\nimport \"./InformationHeader.vue?vue&type=style&index=0&id=3cb2ba83&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/daniel/projects/malawi-emr/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-3cb2ba83\"]])\n\nexport default __exports__","import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ion_title = _resolveComponent(\"ion-title\")!\n  const _component_ion_icon = _resolveComponent(\"ion-icon\")!\n  const _component_ion_button = _resolveComponent(\"ion-button\")!\n  const _component_ion_buttons = _resolveComponent(\"ion-buttons\")!\n  const _component_ion_toolbar = _resolveComponent(\"ion-toolbar\")!\n  const _component_ion_header = _resolveComponent(\"ion-header\")!\n  const _component_TextInput = _resolveComponent(\"TextInput\")!\n  const _component_ion_col = _resolveComponent(\"ion-col\")!\n  const _component_DateInput = _resolveComponent(\"DateInput\")!\n  const _component_SelectInput = _resolveComponent(\"SelectInput\")!\n  const _component_ion_row = _resolveComponent(\"ion-row\")!\n  const _component_ion_grid = _resolveComponent(\"ion-grid\")!\n  const _component_ion_content = _resolveComponent(\"ion-content\")!\n  const _component_ion_footer = _resolveComponent(\"ion-footer\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(_component_ion_header, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_title, null, {\n              default: _withCtx(() => [\n                _createTextVNode(\"Edit Patient Demographics\")\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_ion_buttons, { slot: \"end\" }, {\n              default: _withCtx(() => [\n                _createVNode(_component_ion_button, {\n                  onClick: _cache[0] || (_cache[0] = ($event: any) => (_ctx.modal.hide()))\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_ion_icon, {\n                      slot: \"icon-only\",\n                      name: \"close\"\n                    })\n                  ]),\n                  _: 1\n                })\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_content, { class: \"ion-padding\" }, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_grid, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_row, null, {\n              default: _withCtx(() => [\n                _createVNode(_component_ion_col, {\n                  size: \"4\",\n                  class: \"ion-margin-top ion-margin-bottom\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_TextInput, {\n                      modelValue: _ctx.patient.givenName,\n                      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((_ctx.patient.givenName) = $event))\n                    }, null, 8, [\"modelValue\"])\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ion_col, {\n                  size: \"4\",\n                  class: \"ion-margin-top ion-margin-bottom\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_TextInput, {\n                      modelValue: _ctx.patient.middleName,\n                      \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((_ctx.patient.middleName) = $event))\n                    }, null, 8, [\"modelValue\"])\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ion_col, {\n                  size: \"4\",\n                  class: \"ion-margin-top ion-margin-bottom\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_TextInput, {\n                      modelValue: _ctx.patient.familyName,\n                      \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((_ctx.patient.familyName) = $event))\n                    }, null, 8, [\"modelValue\"])\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ion_col, {\n                  size: \"12\",\n                  class: \"ion-margin-top ion-margin-bottom\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_DateInput, {\n                      modelValue: _ctx.patient.birthdate,\n                      \"onUpdate:modelValue\": _cache[4] || (_cache[4] = ($event: any) => ((_ctx.patient.birthdate) = $event)),\n                      allowEstimation: true,\n                      estimationLabel: 'Estimate Age',\n                      minDate: \"1900-01-01\",\n                      maxDate: _ctx.today,\n                      onIsEstimated: _cache[5] || (_cache[5] = (estimate) => _ctx.isBirthdateEstimated = estimate)\n                    }, null, 8, [\"modelValue\", \"maxDate\"])\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ion_col, {\n                  size: \"12\",\n                  class: \"ion-margin-top ion-margin-bottom\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_SelectInput, {\n                      modelValue: _ctx.patient.gender,\n                      \"onUpdate:modelValue\": _cache[6] || (_cache[6] = ($event: any) => ((_ctx.patient.gender) = $event)),\n                      options: _ctx.genderOptions\n                    }, null, 8, [\"modelValue\", \"options\"])\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ion_col, {\n                  size: \"12\",\n                  class: \"ion-margin-top ion-margin-bottom\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_TextInput, {\n                      modelValue: _ctx.patient.cellPhoneNumber,\n                      \"onUpdate:modelValue\": _cache[7] || (_cache[7] = ($event: any) => ((_ctx.patient.cellPhoneNumber) = $event)),\n                      allowUnknown: \"\"\n                    }, null, 8, [\"modelValue\"])\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ion_col, {\n                  size: \"12\",\n                  class: \"ion-margin-top ion-margin-bottom\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_SelectInput, {\n                      modelValue: _ctx.patient.homeVillage,\n                      \"onUpdate:modelValue\": _cache[8] || (_cache[8] = ($event: any) => ((_ctx.patient.homeVillage) = $event)),\n                      asyncOptions: _ctx.getVillagesByName,\n                      allowCustom: \"\"\n                    }, null, 8, [\"modelValue\", \"asyncOptions\"])\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ion_col, {\n                  size: \"12\",\n                  class: \"ion-margin-top ion-margin-bottom\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_SelectInput, {\n                      modelValue: _ctx.patient.landmark,\n                      \"onUpdate:modelValue\": _cache[9] || (_cache[9] = ($event: any) => ((_ctx.patient.landmark) = $event)),\n                      asyncOptions: _ctx.getLandmarks,\n                      allowCustom: \"\"\n                    }, null, 8, [\"modelValue\", \"asyncOptions\"])\n                  ]),\n                  _: 1\n                })\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_footer, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_button, {\n              color: \"primary\",\n              onClick: _cache[10] || (_cache[10] = ($event: any) => (_ctx.modal.hide())),\n              slot: \"end\"\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\"Close\")\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_ion_button, {\n              class: \"ion-margin-end\",\n              color: \"success\",\n              onClick: _ctx.onFinish,\n              slot: \"end\"\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\"Save\")\n              ]),\n              _: 1\n            }, 8, [\"onClick\"])\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    })\n  ], 64))\n}","\nimport { defineComponent, PropType, reactive, ref } from \"vue\";\nimport { IonGrid, IonRow, IonCol } from \"@ionic/vue\";\nimport Validation from \"@/components/Forms/validations/StandardValidations\"\nimport { Option } from \"@/components/Forms/FieldInterface\";\nimport { LocationService } from \"@/services/location_service\";\nimport { isEmpty } from \"lodash\";\nimport { PatientRegistrationService } from \"@/services/patient_registration_service\";\nimport { DTForm } from \"@/apps/EMC/interfaces/dt_form_field\";\nimport TextInput from \"../inputs/TextInput.vue\";\nimport DateInput from \"../inputs/DateInput.vue\";\nimport SelectInput from \"../inputs/SelectInput.vue\";\nimport { getLandmarks, getVillagesByName } from \"@/utils/HisFormHelpers/LocationFieldOptions\";\nimport { submitForm } from \"@/apps/EMC/utils/form\";\nimport { Patientservice } from \"@/services/patient_service\";\nimport EventBus from \"@/utils/EventBus\";\nimport { EmcEvents } from \"../../interfaces/emc_event\";\nimport { genderOptions } from \"../../utils/DTFormElements\";\nimport { modal } from \"@/utils/modal\";\nimport dayjs from \"dayjs\";\nimport { STANDARD_DATE_FORMAT } from \"@/utils/Date\";\nimport StandardValidations from \"@/components/Forms/validations/StandardValidations\";\n\nexport default defineComponent({\n  components: {\n    IonGrid,\n    IonRow,\n    IonCol,\n    TextInput,\n    DateInput,\n    SelectInput,\n  },\n  props: {\n    patientService: {\n      type: Object as PropType<Patientservice>,\n      required: true,\n    }\n  },\n  setup(props) {\n    const today = dayjs().format(STANDARD_DATE_FORMAT)\n    const isBirthdateEstimated = ref(false);\n    const patient = reactive<DTForm>({\n      givenName: {\n        label: \"First Name\",\n        value: props.patientService.getGivenName(),\n        placeholder: \"First Name\",\n        required: true,\n        validation: (name) => StandardValidations.isName(name)\n      },\n      familyName: {\n        label: \"last Name\",\n        value: props.patientService.getFamilyName(),\n        placeholder: \"Last Name\",\n        required: true,\n        validation: (name) => StandardValidations.isName(name)\n      },\n      middleName: {\n        label: \"middle Name\",\n        value: props.patientService.getMiddleName(),\n        placeholder: \"middle Name\",\n        validation: (name) => !!name && StandardValidations.isName(name)\n      },\n      gender: {\n        value: props.patientService.getGender(),\n        required: true,\n        label: \"Gender\",\n        placeholder: 'select gender'\n      },\n      birthdate: {\n        value:props.patientService.getBirthdate(),\n        label: 'Date of Birth',\n        placeholder: 'Date of Birth',\n        required: true,\n      },\n      cellPhoneNumber: {\n        value: props.patientService.getPhoneNumber(),\n        required: true,\n        label: \"Cellphone Number\",\n        placeholder: \"cellphone number e.g. 0991234567\",\n        validation: async (phone: Option) => !(phone.value === 'Unknown' || phone.value === 'N/A') && Validation.isMWPhoneNumber(phone)\n      },\n      homeVillage: {\n        value: props.patientService.getCurrentVillage(),\n        label: \"Home Village\",\n        placeholder: \"Home Village\",\n        required: true,\n      },\n      landmark: {\n        value: props.patientService.getClosestLandmark(),\n        label: \"Landmark\",\n        placeholder: \"Closest Landmark or Plot Number\",\n        required: true,\n      }\n    })\n\n    const resolveAddress = async (village: Option) => {\n      const address = {\n        'current_district': \"N/A\",\n        'current_traditional_authority': \"N/A\",\n        'current_village': village.label \n      }\n\n      const TA = village.other?.traditional_authority_id \n        ? await LocationService.getTraditionalAuthorityById(village.other.traditional_authority_id)\n        : null\n      if(!isEmpty(TA)) {\n        address['current_traditional_authority'] = TA[0].name\n        const district = await LocationService.getDistrictByID(TA[0].district_id)\n        if(!isEmpty(district)) {\n          address['current_district'] = district[0].name\n        }\n      }\n      return address;\n    }\n\n    const onFinish = async () => submitForm(patient, async (formData) => {\n      const updatedPatient = {} as any;\n      if(formData.givenName !== props.patientService.getGivenName()) updatedPatient[\"given_name\"] = formData.givenName;\n      if(formData.familyName !== props.patientService.getFamilyName()) updatedPatient[\"family_name\"] = formData.familyName;\n      if(formData.middleName !== props.patientService.getMiddleName()) updatedPatient[\"middle_name\"] = formData.middleName;\n      if(formData.birthdate !== props.patientService.getBirthdate()) updatedPatient[\"birthdate\"] = formData.birthdate;\n      if(formData.gender.value !== props.patientService.getGender()) updatedPatient[\"gender\"] = formData.gender.value;\n      if(formData.cellPhoneNumber !== props.patientService.getPhoneNumber()) updatedPatient[\"cell_phone_number\"] = formData.cellPhoneNumber;\n      if(formData.landmark.label !== props.patientService.getClosestLandmark()) updatedPatient[\"landmark\"] = formData.landmark.label;\n      if(formData.homeVillage !== props.patientService.getCurrentVillage()) {\n        Object.assign(updatedPatient, {\n          ...updatedPatient,\n          ...(await resolveAddress(formData.homeVillage))\n        })\n      }\n      if(!isEmpty(updatedPatient)) {\n        const person = new PatientRegistrationService();\n        person.setPersonID(props.patientService.getID());\n        await person.updatePerson(updatedPatient);\n      }\n      await modal.hide()\n      EventBus.emit(EmcEvents.RELOAD_PATIENT_DATA);\n    })\n \n    return {\n      today,\n      patient,\n      getLandmarks,\n      genderOptions,\n      isBirthdateEstimated,\n      modal,\n      onFinish, \n      getVillagesByName\n    };\n  },\n});\n","import { render } from \"./PatientDemographics.vue?vue&type=template&id=13fe3dee&ts=true\"\nimport script from \"./PatientDemographics.vue?vue&type=script&lang=ts\"\nexport * from \"./PatientDemographics.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/projects/malawi-emr/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, unref as _unref, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\"\n\nimport { reactive, watch, ref, computed, onMounted } from \"vue\";\nimport { IonGrid, IonRow, IonCol } from \"@ionic/vue\";\nimport Validation from \"@/components/Forms/validations/StandardValidations\"\nimport { Option } from \"@/components/Forms/FieldInterface\";\nimport { PatientRegistrationService } from \"@/services/patient_registration_service\";\nimport { DTForm, DTFormField } from \"@/apps/EMC/interfaces/dt_form_field\";\nimport TextInput from \"../inputs/TextInput.vue\";\nimport { submitForm } from \"@/apps/EMC/utils/form\";\nimport EventBus from \"@/utils/EventBus\";\nimport { EmcEvents } from \"../../interfaces/emc_event\";\nimport { modal } from \"@/utils/modal\";\nimport StandardValidations from \"@/components/Forms/validations/StandardValidations\";\nimport { GuardianDetails } from \"@/interfaces/relationship\";\nimport SelectInput from \"../inputs/SelectInput.vue\";\nimport { isEmpty } from \"lodash\";\nimport { RelationsService } from \"@/services/relations_service\";\n\ninterface PropInterface {\n  patientId: number;\n  guardians?: Array<GuardianDetails>;\n}\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'GuardianDemographics',\n  props: {\n    patientId: {},\n    guardians: {}\n  },\n  setup(__props: any) {\n\nconst registrationService = new PatientRegistrationService();\n\nconst props = __props;\nconst isNew = ref(isEmpty(props.guardians));\nconst title = computed(() => `${isNew.value ? 'Add' : 'Edit' } Guardian Demographics`);\nconst btnLabel = computed(() => `${isNew.value ? 'Edit' : 'Add' } Guardian`);\nconst relationTypes = ref<Array<Option>>([]);\nconst guardianOptions = props.guardians?.map(g => ({\n  label: `${g.name} (${g.relationshipType})`,\n  value: g.name,\n  other: g\n})) ?? [];\n\nconst activeGuardian = reactive<DTFormField>({\n  label: \"Select Guardian\",\n  placeholder: \"Select guardian to be edited\",\n  value: \"\"\n})\n\nconst guardian = reactive<DTForm>({\n  givenName: {\n    label: \"First Name\",\n    value: \"\",\n    placeholder: \"First Name\",\n    required: true,\n    validation: (name) => StandardValidations.isName(name)\n  },\n  familyName: {\n    label: \"Last Name\",\n    value: \"\",\n    placeholder: \"Last Name\",\n    required: true,\n    validation: (name) => StandardValidations.isName(name)\n  },\n  cellPhoneNumber: {\n    value: '',\n    required: true,\n    label: \"Cellphone Number\",\n    validation: async (phone: Option) => {\n      return phone.value !== 'Unknown' && Validation.isMWPhoneNumber(phone)\n    }\n  },\n  relation: {\n    label: \"Select Relationship\",\n    placeholder: \"Select the relationship between guardian and patient\",\n    value: \"\"\n  }\n});\n\nwatch(() => activeGuardian.value, (g: Option) => {\n  guardian.givenName.value = g?.other?.names.given_name ?? \"\";\n  guardian.familyName.value = g?.other?.names.family_name ?? \"\";\n  guardian.cellPhoneNumber.value = g?.other?.phoneNumber ?? \"\";\n  guardian.relation.value = g?.other?.relationshipType?? \"\"\n}, {\n  deep: true,\n  immediate: true\n});\n\nfunction addNewGuardian() {\n  isNew.value = !isNew.value;\n  activeGuardian.value = \"\";\n}\n\nasync function registerGuardian(data: Record<string, any>) {\n  await registrationService.registerGuardian({\n    'home_district': \"N/A\",\n    'home_traditional_authority': \"N/A\",\n    'home_village': \"N/A\",\n    'current_district': \"N/A\",\n    'current_traditional_authority': \"N/A\",\n    'current_village': \"N/A\",\n    'middle_name': \"\",\n    'gender': \"N/A\",\n    'birthdate': \"N/A\",\n    'birthdate_estimated': \"N/A\",\n    'landmark': \"N/A\",\n    'relationship': \"N/A\",\n    'patient_type': \"\",\n    'isPatient': false,\n    'patient_id': props.patientId,\n    ...data\n  });\n\n  await RelationsService.createRelation(\n    props.patientId, \n    registrationService.getPersonID(), \n    data.relation?.value ?? 13 // Default to \"Other\" relationship type\n  );\n}\n\nasync function updateGuardian(newGuardian: Record<string, any>, oldGuardian: GuardianDetails) {\n  const guardianId = oldGuardian.names.person_id;\n  const person: Record<string, any> = {};\n  if(oldGuardian.names.given_name !== newGuardian.given_name) person[\"given_name\"] = newGuardian.given_name;\n  if(oldGuardian.names.family_name !== newGuardian.family_name) person[\"family_name\"] = newGuardian.family_name;\n  if(oldGuardian.phoneNumber !== newGuardian.cell_phone_number) person[\"cell_phone_number\"] = newGuardian.cell_phone_number;\n  \n  if(!isEmpty(person)) {\n    const registrationService = new PatientRegistrationService()\n    registrationService.setPersonID(guardianId); \n    await registrationService.updatePerson(person);\n  }\n\n  if(oldGuardian.relationshipType !== newGuardian.relation.label) {\n    await RelationsService.amendRelation(\n      props.patientId, \n      guardianId, \n      oldGuardian.id, \n      newGuardian.relation?.value ?? 13 // Default to \"Other\" relationship type\n    );\n  }\n}\n\nconst onFinish = async () => submitForm(guardian, async (formData) => {\n  if(!isNew.value && !isEmpty(activeGuardian.value)) {\n    await updateGuardian(formData, activeGuardian.value.other as GuardianDetails)\n  } else {\n    await registerGuardian(formData);\n  }\n  await modal.hide()\n  EventBus.emit(EmcEvents.RELOAD_GUARDIAN_DATA)\n}, \n{\n  underscoreKeys: true,\n});\n\nonMounted(async () => {\n  const relations  = await RelationsService.getRelations();\n  relationTypes.value = relations.map((r: any) => ({\n    label: r.b_is_to_a,\n    value: r.relationship_type_id,\n    other: r\n  }))\n})\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_ion_title = _resolveComponent(\"ion-title\")!\n  const _component_ion_icon = _resolveComponent(\"ion-icon\")!\n  const _component_ion_button = _resolveComponent(\"ion-button\")!\n  const _component_ion_buttons = _resolveComponent(\"ion-buttons\")!\n  const _component_ion_toolbar = _resolveComponent(\"ion-toolbar\")!\n  const _component_ion_header = _resolveComponent(\"ion-header\")!\n  const _component_ion_content = _resolveComponent(\"ion-content\")!\n  const _component_ion_footer = _resolveComponent(\"ion-footer\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(_component_ion_header, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_title, null, {\n              default: _withCtx(() => [\n                _createTextVNode(_toDisplayString(title.value), 1)\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_ion_buttons, { slot: \"end\" }, {\n              default: _withCtx(() => [\n                _createVNode(_component_ion_button, {\n                  onClick: _cache[0] || (_cache[0] = ($event: any) => (_unref(modal).hide()))\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_ion_icon, {\n                      slot: \"icon-only\",\n                      name: \"close\"\n                    })\n                  ]),\n                  _: 1\n                })\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_content, { class: \"ion-padding\" }, {\n      default: _withCtx(() => [\n        _createVNode(_unref(IonGrid), null, {\n          default: _withCtx(() => [\n            _createVNode(_unref(IonRow), null, {\n              default: _withCtx(() => [\n                (!isNew.value)\n                  ? (_openBlock(), _createBlock(_unref(IonCol), {\n                      key: 0,\n                      size: \"12\",\n                      class: \"ion-margin-top ion-margin-bottom\"\n                    }, {\n                      default: _withCtx(() => [\n                        _createVNode(SelectInput, {\n                          modelValue: activeGuardian,\n                          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((activeGuardian) = $event)),\n                          options: _unref(guardianOptions)\n                        }, null, 8, [\"modelValue\", \"options\"])\n                      ]),\n                      _: 1\n                    }))\n                  : _createCommentVNode(\"\", true),\n                (activeGuardian.value || isNew.value)\n                  ? (_openBlock(), _createElementBlock(_Fragment, { key: 1 }, [\n                      _createVNode(_unref(IonCol), {\n                        size: \"12\",\n                        class: \"ion-margin-top ion-margin-bottom\"\n                      }, {\n                        default: _withCtx(() => [\n                          _createVNode(TextInput, {\n                            modelValue: guardian.givenName,\n                            \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((guardian.givenName) = $event))\n                          }, null, 8, [\"modelValue\"])\n                        ]),\n                        _: 1\n                      }),\n                      _createVNode(_unref(IonCol), {\n                        size: \"12\",\n                        class: \"ion-margin-top ion-margin-bottom\"\n                      }, {\n                        default: _withCtx(() => [\n                          _createVNode(TextInput, {\n                            modelValue: guardian.familyName,\n                            \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((guardian.familyName) = $event))\n                          }, null, 8, [\"modelValue\"])\n                        ]),\n                        _: 1\n                      }),\n                      _createVNode(_unref(IonCol), {\n                        size: \"12\",\n                        class: \"ion-margin-top ion-margin-bottom\"\n                      }, {\n                        default: _withCtx(() => [\n                          _createVNode(TextInput, {\n                            modelValue: guardian.cellPhoneNumber,\n                            \"onUpdate:modelValue\": _cache[4] || (_cache[4] = ($event: any) => ((guardian.cellPhoneNumber) = $event)),\n                            allowUnknown: \"\"\n                          }, null, 8, [\"modelValue\"])\n                        ]),\n                        _: 1\n                      }),\n                      _createVNode(_unref(IonCol), {\n                        size: \"12\",\n                        class: \"ion-margin-top ion-margin-bottom\"\n                      }, {\n                        default: _withCtx(() => [\n                          _createVNode(SelectInput, {\n                            modelValue: guardian.relation,\n                            \"onUpdate:modelValue\": _cache[5] || (_cache[5] = ($event: any) => ((guardian.relation) = $event)),\n                            options: relationTypes.value\n                          }, null, 8, [\"modelValue\", \"options\"])\n                        ]),\n                        _: 1\n                      })\n                    ], 64))\n                  : _createCommentVNode(\"\", true)\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_footer, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withCtx(() => [\n            (!_unref(isEmpty)(props.guardians))\n              ? (_openBlock(), _createBlock(_component_ion_button, {\n                  key: 0,\n                  color: \"primary\",\n                  onClick: addNewGuardian,\n                  slot: \"start\"\n                }, {\n                  default: _withCtx(() => [\n                    _createTextVNode(_toDisplayString(btnLabel.value), 1)\n                  ]),\n                  _: 1\n                }))\n              : _createCommentVNode(\"\", true),\n            _createVNode(_component_ion_button, {\n              color: \"primary\",\n              onClick: _cache[6] || (_cache[6] = ($event: any) => (_unref(modal).hide())),\n              slot: \"end\"\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\"Close\")\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_ion_button, {\n              class: \"ion-margin-end\",\n              color: \"success\",\n              onClick: onFinish,\n              slot: \"end\"\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\"Save\")\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    })\n  ], 64))\n}\n}\n\n})","import script from \"./GuardianDemographics.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./GuardianDemographics.vue?vue&type=script&lang=ts&setup=true\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ion_title = _resolveComponent(\"ion-title\")!\n  const _component_ion_icon = _resolveComponent(\"ion-icon\")!\n  const _component_ion_button = _resolveComponent(\"ion-button\")!\n  const _component_ion_buttons = _resolveComponent(\"ion-buttons\")!\n  const _component_ion_toolbar = _resolveComponent(\"ion-toolbar\")!\n  const _component_ion_header = _resolveComponent(\"ion-header\")!\n  const _component_text_input = _resolveComponent(\"text-input\")!\n  const _component_ion_col = _resolveComponent(\"ion-col\")!\n  const _component_ion_row = _resolveComponent(\"ion-row\")!\n  const _component_ion_grid = _resolveComponent(\"ion-grid\")!\n  const _component_ion_content = _resolveComponent(\"ion-content\")!\n  const _component_ion_footer = _resolveComponent(\"ion-footer\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(_component_ion_header, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_title, null, {\n              default: _withCtx(() => [\n                _createTextVNode(\"ARV NUMBER\")\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_ion_buttons, { slot: \"end\" }, {\n              default: _withCtx(() => [\n                _createVNode(_component_ion_button, {\n                  onClick: _cache[0] || (_cache[0] = ($event: any) => (_ctx.modal.hide()))\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_ion_icon, {\n                      slot: \"icon-only\",\n                      name: \"close\"\n                    })\n                  ]),\n                  _: 1\n                })\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_content, { class: \"ion-padding\" }, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_grid, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_row, null, {\n              default: _withCtx(() => [\n                _createVNode(_component_ion_col, null, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_text_input, {\n                      modelValue: _ctx.form.arvNumber,\n                      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((_ctx.form.arvNumber) = $event)),\n                      form: _ctx.form,\n                      prefix: `${_ctx.sitePrefix}-ARV-`\n                    }, null, 8, [\"modelValue\", \"form\", \"prefix\"])\n                  ]),\n                  _: 1\n                })\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_footer, { class: \"ion-padding-horizontal\" }, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_button, {\n              color: \"primary\",\n              onClick: _cache[2] || (_cache[2] = ($event: any) => (_ctx.modal.hide())),\n              slot: \"end\"\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\"Close\")\n              ]),\n              _: 1\n            }),\n            (_ctx.hasValidARVNumber)\n              ? (_openBlock(), _createBlock(_component_ion_button, {\n                  key: 0,\n                  color: \"danger\",\n                  onClick: _ctx.voidARV,\n                  slot: \"start\"\n                }, {\n                  default: _withCtx(() => [\n                    _createTextVNode(\"Void ARV Number\")\n                  ]),\n                  _: 1\n                }, 8, [\"onClick\"]))\n              : _createCommentVNode(\"\", true),\n            _createVNode(_component_ion_button, {\n              color: \"success\",\n              onClick: _ctx.onFinish,\n              slot: \"end\"\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\"Save\")\n              ]),\n              _: 1\n            }, 8, [\"onClick\"])\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    })\n  ], 64))\n}","\nimport { computed, defineComponent, onMounted, PropType, reactive, ref } from \"vue\";\nimport { IonGrid, IonRow, IonCol } from \"@ionic/vue\";\nimport { Option } from \"@/components/Forms/FieldInterface\";\nimport { DTForm } from \"@/apps/EMC/interfaces/dt_form_field\";\nimport TextInput from \"../inputs/TextInput.vue\";\nimport { submitForm } from \"@/apps/EMC/utils/form\";\nimport { loader } from \"@/utils/loader\";\nimport EventBus from \"@/utils/EventBus\";\nimport { EmcEvents } from \"../../interfaces/emc_event\";\nimport { Patientservice } from \"@/services/patient_service\";\nimport { isEmpty } from \"lodash\";\nimport { ProgramService } from \"@/services/program_service\";\nimport GLOBAL_PROP from \"@/apps/GLOBAL_APP/global_prop\";\nimport { modal } from \"@/utils/modal\";\nimport { alertConfirmation } from \"@/utils/Alerts\";\nimport StandardValidations from \"@/components/Forms/validations/StandardValidations\";\n\nexport default defineComponent({\n  components: {\n    IonGrid,\n    IonRow,\n    IonCol,\n    TextInput,\n  },\n  props: {\n    patient: {\n      type: Object as PropType<Patientservice>,\n      required: true,\n    }\n  },\n  setup(props) { \n    const sitePrefix = ref(\"\");\n    const arvNumber = computed(() => props.patient.getArvNumber());\n    const hasValidARVNumber = computed(() => {\n      return !isEmpty(arvNumber.value) && arvNumber.value !== \"Unknown\";\n    });\n\n    const form = reactive<DTForm>({\n      arvNumber: {\n        value: hasValidARVNumber.value ? arvNumber.value.split(\"-\")[2] : \"\",\n        label: `${hasValidARVNumber.value ? \"Edit\" : \"Add New\"} ARV Number`,\n        placeholder: \"Enter ARV Number\",\n        required: true,\n        validation: async (arv: Option) => {\n          const isNumberErr = StandardValidations.isNumber(arv, \"POSITIVE_INTEGERS\")\n          if(isNumberErr !== null) return isNumberErr\n          if(arv.value === arvNumber.value.split(\"-\")[2]) return null\n          const patients = await Patientservice.findByOtherID(4, `${sitePrefix.value}-ARV-${arv.value}`);\n          return isEmpty(patients) ?  null : ['ARV Number already exists'];\n        },\n      },\n    })\n\n    const onFinish = async () => submitForm(form, async (formData) => {\n      if(formData.arvNumber !== arvNumber.value.split(\"-\")[2]){\n        if(hasValidARVNumber.value) {\n          await props.patient.updateARVNumber(`${sitePrefix.value}-ARV-${formData.arvNumber}`);\n        } else {\n          await props.patient.createArvNumber(`${sitePrefix.value}-ARV-${formData.arvNumber}`);\n        }\n        EventBus.emit(EmcEvents.RELOAD_PATIENT_DATA)\n      }\n      await modal.hide();\n    }) \n\n    const voidARV = async () => {\n      const confirm = await alertConfirmation(`Are you sure you want to void this ARV Number ${arvNumber.value}?`);\n      if(!confirm) return;\n      await loader.show(\"Voiding ARV Number...\");\n      try {\n        await ProgramService.voidARVNumber(arvNumber.value);\n        await loader.hide();\n        await modal.hide();\n        EventBus.emit(EmcEvents.RELOAD_PATIENT_DATA)\n      } catch (error) {\n        await loader.hide();\n        console.log(error)\n      } \n    }\n\n    onMounted(async () => {\n      sitePrefix.value = await GLOBAL_PROP.sitePrefix();\n    }) \n \n    return {\n      form,\n      modal,\n      sitePrefix,\n      arvNumber,\n      hasValidARVNumber,\n      onFinish,\n      voidARV,\n    };\n  },\n});\n","import { render } from \"./ArvNumber.vue?vue&type=template&id=31dbec53&ts=true\"\nimport script from \"./ArvNumber.vue?vue&type=script&lang=ts\"\nexport * from \"./ArvNumber.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/projects/malawi-emr/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","\nimport { computed, defineComponent, onMounted, ref } from \"vue\";\nimport HisDate from \"@/utils/Date\";\nimport { Patient } from \"@/interfaces/patient\";\nimport { RelationshipService } from \"@/services/relationship_service\";\nimport VisitsSummary from \"../Components/tables/VisitsSummary.vue\";\nimport InformationHeader from \"@/apps/EMC/Components/InformationHeader.vue\";\nimport { PatientObservationService } from \"@/services/patient_observation_service\";\nimport PatientDemographics from \"../Components/modals/PatientDemographics.vue\";\nimport GuardianDemographicsVue from \"../Components/modals/GuardianDemographics.vue\";\nimport ARVNumberVue from \"../Components/modals/ArvNumber.vue\";\nimport { useRoute } from \"vue-router\";\nimport EventBus from \"@/utils/EventBus\";\nimport { EmcEvents } from \"../interfaces/emc_event\";\nimport { modal } from \"@/utils/modal\";\nimport { isEmpty } from \"lodash\";\nimport { GuardianDetails } from \"@/interfaces/relationship\"\n\nexport default defineComponent({\n  components: {\n    VisitsSummary,\n    InformationHeader,\n  },\n  setup () {\n    const route = useRoute();\n    const patientId = parseInt(route.params.patientId.toString()) || 0;\n    const patient = ref<PatientObservationService>();\n    const artStartDate = ref<string>(\"\");\n    const guardians = ref<Array<GuardianDetails>>([]);\n    const isReady = computed(() => !isEmpty(patient.value))\n\n    const setPatient = async () => {\n      if (patientId) {\n        const patientData: Patient = await PatientObservationService.findByID(patientId);\n        if(patientData) {\n          patient.value = new PatientObservationService(patientData);\n        }\n      }\n    };\n\n    const setPatientGuardian = async () => {\n      guardians.value = await RelationshipService.getGuardianDetails(patientId);\n    }\n\n    const updateDemographics = async (attribute: string) => {\n      await modal.show(PatientDemographics, {\n        patientService: patient.value,\n        attribute,\n      });\n    }\n\n    const updateGuardian = async () => {\n      await modal.show(GuardianDemographicsVue, {\n        patientId,\n        guardians: guardians.value,\n      });\n    }\n\n    const updateARVNumber = async () => {\n      await modal.show(ARVNumberVue, {\n        patient: patient.value,\n      });\n    }\n\n    EventBus.on(EmcEvents.RELOAD_PATIENT_DATA,async () => {\n      await setPatient();\n    });\n    EventBus.on(EmcEvents.RELOAD_GUARDIAN_DATA, async () => {\n      await setPatientGuardian();\n    });\n\n    onMounted(async () => {\n      await setPatient();\n      const date = await patient.value?.getARTStartDate();\n      artStartDate.value = date ? HisDate.toStandardHisDisplayFormat(date) : \"N/A\";\n      await setPatientGuardian();\n    });\n\n    return {\n      patient,\n      artStartDate,\n      guardians,\n      isReady,\n      updateDemographics,\n      updateGuardian,\n      updateARVNumber,\n    };\n  },\n});\n","import { render } from \"./Mastercard.vue?vue&type=template&id=0c42af2a&ts=true\"\nimport script from \"./Mastercard.vue?vue&type=script&lang=ts\"\nexport * from \"./Mastercard.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/projects/malawi-emr/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { AppEncounterService } from \"@/services/app_encounter_service\";\nimport { isArray } from \"lodash\";\nimport { Option } from '@/components/Forms/FieldInterface';\nexport class VitalsService extends AppEncounterService{\n  constructor(patientID: number, providerID: number) {\n    super(patientID, 6, providerID);\n  }\n  isNotEmptyandNumber(vital: Option) {\n    return `${vital.value}`.match(/^-?\\d+\\.?\\d*$/) ? null : [`Invalid entry for ${vital.label}`]\n  }\n  isNotEmptyandFloat(vital: Option) {\n    return `${vital.value}`.match(/^\\d{1,3}\\.\\d{1,5}$/) \n      ? null \n      : [`Invalid entry for ${vital.label}. Don't forget to add a decimal. e.g. 56.2 ${vital.other?.modifier || ''}`]\n  }\n  checkMinMax(val: Option, min: number, max: number) {\n    const p = [];\n    if (parseFloat(`${val.value}`) < min) {\n      p.push([`${val.label} entered is less than minimum ${min} ${val?.other?.modifier || ''}`])\n    }\n    if (parseFloat(`${val.value}`) > max) {\n      p.push([`${val.label} entered is greater than maximum ${max} ${val?.other?.modifier || ''}`])\n    }\n    return p.length > 0 ? p : null;\n  }\n  validateAll(vitals: Option[]) {\n    const p: any = [];\n    vitals.map((vital: any) => {\n      const j = this.validator(vital);\n      return isArray(j) ? p.push(j) : null\n    })\n    return p.length > 0 ? p : null;\n  }\n\n  mergeErrors(errors: any[]) {\n    const holder: any = [];\n    errors.forEach(element => {\n      if (isArray(element)) {\n        holder.push(element)\n      }\n    });\n    return holder.length > 0 ? holder : null\n  }\n  isValidBPReading(vital: any) {\n    const p = [];\n    const isValidBP =  `${vital.value}`.match(/^\\d{1,3}\\/\\d{1,3}$/g) ? null : ['Invalid BP reading']\n    p.push(isValidBP);\n    if(isValidBP == null) {\n      const value = `${vital.value}`.split('/');\n      \n      const bpSystolic = {\n        label: 'Systolic',\n        value: value[0]\n      };\n      const bpDiastolic = {\n        label: 'Diastolic',\n        value: value[1]\n      };\n      p.push(this.checkMinMax(bpDiastolic, 30, 200))\n      p.push(this.checkMinMax(bpSystolic, 40, 250))\n    }\n    return this.mergeErrors(p)\n  }\n  validator(vital: Option) {\n    const values = [\n      {\n        name: \"Weight\",\n        validator: (val: Option) => {\n          const emptyErrors = this.isNotEmptyandFloat(val);\n          const minErrors = this.checkMinMax(val, 2.0, 250.0);\n          return this.mergeErrors([emptyErrors, minErrors]); \n        },\n      },\n      {\n        name: \"Height\",\n        validator: (val: Option) => {\n          const errors = []\n          errors.push(this.isNotEmptyandNumber(val))\n          errors.push(this.checkMinMax(val, 40, 220))\n          return this.mergeErrors(errors); \n        },\n      }, {\n        name: \"BP\",\n        validator: (val: any) => {\n          return this.isValidBPReading(val)\n        },\n      }, {\n        name: \"Temp\",\n        validator: (val: any) => {\n          const emptyErrors = this.isNotEmptyandNumber(val);\n          const minErrors = this.checkMinMax(val, 30, 42);\n          return this.mergeErrors([emptyErrors, minErrors]); \n        },\n      }, {\n        name: \"SP02\",\n        validator: (val: any) => {\n          const minErrors = this.checkMinMax(val, 40, 100);\n          return this.mergeErrors([minErrors]); \n        },\n      }, {\n        name: \"Pulse\",\n        validator: (val: any) => {\n          const minErrors = this.checkMinMax(val, 50, 120);\n          return this.mergeErrors([minErrors]); \n        },\n      }\n    ]\n    const v = values.filter(element => {\n      return element.name === vital.label;\n    });\n    if (v.length > 0) {\n      return v[0].validator(vital);\n    }\n    return null\n  }\n}","export enum EmcEvents {\n  RELOAD_PATIENT_DATA = 'reload_patient_data',\n  RELOAD_PATIENT_VISIT_DATA = 'reload_patient_visit_data',\n  RELOAD_GUARDIAN_DATA = 'reload_guardian_data',\n  RELOAD_LATEST_VL_RESULT = 'reload_latest_vl_result',\n  RELOAD_STAGING_INFORMATION = 'reload_staging_info',\n  ON_CLEAR = \"on_clear\",\n  ON_INITIAL_VISIT_DATE = \"on_initital_visit_date\",\n  ON_ART_START_DATE = \"on_art_start_date\"\n}","import { Person } from \"@/interfaces/person\"\nimport { Service } from \"./service\"\n\nexport interface NewPerson {\n    person_id?: number;\n    given_name: string;\n    family_name: string;\n    gender: string;\n    birthdate: string;\n    birthdate_estimated: boolean;\n    home_district: string;\n    home_traditional_authority: string;\n    home_village: string;\n    current_district: string;\n    current_traditional_authority: string;\n    current_village: string;\n    landmark: string;\n    cell_phone_number: string;\n    occupation: string;\n    facility_name: string;\n    patient_type?: string;\n    relationship?: string;\n}\n\nexport class PersonService extends Service{\n    person: Person | NewPerson\n    constructor(person: NewPerson | Person){\n        super()\n        this.person = person\n    }\n\n    create() { return Service.postJson('/people', this.person) }\n\n    update(id: number) { return Service.putJson(`people/${id}`, {\n        ...this.person, 'program_id': Service.getProgramID()\n    })}\n\n    static searchFamilyName(name: string) {\n        return super.getJson('/search/family_name', {'search_string': name})\n    }\n\n    static searchGivenName(name: string) {\n        return super.getJson('/search/given_name', {'search_string': name})\n    }\n\n    static async getPersonFullName(personId: string | number) {\n        const names = await super.getJson(`/people/${personId}/names`)\n        return names && names.length ? names[0].given_name + ' ' + names[0].family_name : ''\n    }\n}\n","import { modalController } from \"@ionic/vue\";\n\nexport const modal = {\n  async show(component: any, componentProps?: Record<string, any>, cssClass = 'custom-modal', backdropDismiss = true) {\n    const m = await modalController.create({\n      component,\n      cssClass,\n      backdropDismiss,\n      componentProps,\n    });\n    m.present();\n    const { data } = await m.onWillDismiss();\n    if(data) return data;\n  },\n  async hide(data?: Record<string, any>) {\n    await modalController.dismiss(data);\n  }\n}","import { DrugInterface } from \"@/interfaces/Drug\";\nimport { DrugOrderService } from \"@/services/drug_order_service\";\nimport { Observation } from \"@/interfaces/observation\";\nimport HisDate from \"@/utils/Date\"\nimport { RegimenService } from \"@/services/regimen_service\";\nimport { isEmpty } from \"lodash\"\nimport { AppEncounterService } from \"@/services/app_encounter_service\"\nimport { toDate } from \"@/utils/Strs\";\n\nexport enum AdverseEffectsCategories {\n    CONTRAINDICATION = \"contraindication\",\n    SIDE_EFFECT = \"side_effect\"\n}\n\nexport class PrescriptionService extends AppEncounterService {\n    nextVisitInterval: number;\n    fastTrack: boolean;\n    regimenExtras: Array<Record<string, any>>;\n    hangingPills: Array<Record<string, any>>;\n    fastTrackMedications: Array<Record<string, any>>;\n    medicationOrders: Array<number>;\n    treatmentState: string;\n    contraindications: Record<string, any>;\n    sideEffects: Record<string, any>;\n    tptPrescriptionCount: number;\n    lastSideEffectDate: string;\n\n    constructor(patientID: number, providerID: number) {\n        super(patientID, 25, providerID) //TODO: Use encounter type reference name\n        this.nextVisitInterval = 0\n        this.fastTrack = false\n        this.regimenExtras = []\n        this.fastTrackMedications = []\n        this.hangingPills = []\n        this.medicationOrders = []\n        this.treatmentState = ''\n        this.contraindications = {}\n        this.sideEffects = {}\n        this.tptPrescriptionCount = 0\n        this.lastSideEffectDate = ''\n    }\n\n    setNextVisitInterval(nextVisitInterval: number) {\n        this.nextVisitInterval = nextVisitInterval\n    }\n\n    getHangingPills() {\n        return this.hangingPills\n    }\n\n    getMedicationOrders() {\n        return this.medicationOrders.map((i: number) => {\n            return AppEncounterService.getCachedConceptName(i)\n        })\n    }\n\n    getTptPrescriptionCount() {\n        return this.tptPrescriptionCount\n    }\n\n    getLastSideEffectDate() {\n        return this.lastSideEffectDate\n    }\n\n    getContraindications() { return this.contraindications }\n\n    getSideEffects() { return this.sideEffects }\n\n    getRegimenExtras() { return this.regimenExtras }\n\n    getPatientRegimens() { return RegimenService.getRegimens(this.patientID) }\n\n    getARVs() {\n        return RegimenService.getJson('arv_drugs')\n    }\n\n    getCustomIngridients() { return RegimenService.getCustomIngridients() }\n\n    getFastTrackMedications() { return this.fastTrackMedications }\n\n    getTreatmentState() { return this.treatmentState }\n\n    isFastTrack() { return this.fastTrack }\n\n    medicationOrdersAvailable() { return !isEmpty(this.medicationOrders) }\n\n    shouldPrescribeArvs() { \n        const arvs = AppEncounterService.getCachedConceptID(\"Antiretroviral drugs\")\n        return this.medicationOrders.includes(arvs)\n    }\n\n    shouldPrescribeExtras() {\n        const extras = AppEncounterService.getConceptsByCategory('art_extra_medication_order')\n        const extrasAvailable = extras.map((i: any) => this.medicationOrders.includes(i.concept_id))\n        return extrasAvailable.some(Boolean)\n    }\n\n    getRegimenStarterpack(regimenCode: number, patientWeight: number) {\n        const params = { weight: patientWeight, regimen: regimenCode }\n\n        return AppEncounterService.getJson(\n            `programs/${AppEncounterService.getProgramID()}/regimen_starter_packs`,\n            params\n        )\n    }\n\n    async getLvpDrugsByType(type: string, regimen: number) {\n        return AppEncounterService.getJson(\n            `programs/${AppEncounterService.getProgramID()}/regimens/${regimen}`,\n            {\n                'patient_id': this.patientID,\n                'lpv_drug_type': type\n            }\n        )\n    }\n\n    async loadContraindications() {\n        const contraindication = await AppEncounterService.getConceptID('Contraindications')\n        const obs = await AppEncounterService.getObs({\n            'concept_id': contraindication, 'person_id': this.patientID \n        })\n\n        obs.forEach((o: any) => {\n            const date = HisDate.toStandardHisFormat(o.obs_datetime)\n\n            if (!this.contraindications[date]) this.contraindications[date] = []\n\n            const concept = AppEncounterService.getCachedConceptName(o.value_coded)\n\n            this.contraindications[date].push(concept)\n        })\n    }\n\n    async loadDrugInduced() {\n        const drugInduced = await AppEncounterService.getConceptID('Drug induced')\n        const obs = await AppEncounterService.getObs({\n            'concept_id': drugInduced, 'person_id': this.patientID \n        })\n\n        if (!obs) return\n\n        obs.forEach((o: any) => {\n            const date = HisDate.toStandardHisFormat(o.obs_datetime)\n\n            if (!this.lastSideEffectDate) this.lastSideEffectDate = date\n\n            if (!o.value_drug || !o.value_coded) return\n\n            if (!this.sideEffects[date]) this.sideEffects[date] = {}\n\n            if (!this.sideEffects[date][o.value_drug]) this.sideEffects[date][o.value_drug] = []\n\n            const concept = AppEncounterService.getCachedConceptName(o.value_coded)\n\n            this.sideEffects[date][o.value_drug].push(concept)\n        })\n    }\n\n    async loadTptPrescriptionCount() {\n        const res = await AppEncounterService.getJson(\n            `tpt_prescription_count`, {\n                'patient_id': this.patientID,\n                'date': this.date\n            }\n        )\n\n        if (res) {\n            const count = res.count + 1\n            this.tptPrescriptionCount = count > 3 ? 3 : count\n        } \n    }\n\n    async loadFastTrackStatus() {\n        const isFastTrack = await AppEncounterService.getFirstValueCoded(this.patientID, 'Fast track')\n        const yes = await AppEncounterService.getConceptID('yes')\n\n        if (isFastTrack) this.fastTrack = isFastTrack === yes\n    }\n    \n    async loadRegimenExtras(date=this.date) {\n        const meds = await RegimenService.getJson(\n            `programs/${RegimenService.getProgramID()}/patients/${this.patientID}/dosages`,\n            {date}\n        )\n        if (meds) this.regimenExtras = Object.values(meds)\n    }\n\n    async loadMedicationOrders() {\n        const medicationOrders = await AppEncounterService.getConceptID(\"Medication orders\")\n        const orders = await AppEncounterService.getObs({\n            'concept_id': medicationOrders,\n            'date': this.date,\n            'person_id': this.patientID,\n            'page_size': 5\n        })\n        this.medicationOrders = orders.map((i: Observation) => i.value_coded)\n    }\n\n    async loadHangingPills() {\n        const pills = (await AppEncounterService.getAll(this.patientID, 'Pills brought'))||[]\n        this.hangingPills = pills.filter((o: any) => {\n            if (o.value_numeric >= 1) {\n                // Condition for detecting pills brought during transfer in.. This is a bit hack-ish\n                if (o.value_drug && toDate(o.obs_datetime) === toDate(this.date)) {\n                    return true\n                }\n                // This is for normal workflow adherence pills\n                return o.order||false\n            }\n            return false\n        }).map((o: any) => o?.order?.drug_order?.drug_inventory_id||o.value_drug)        \n    }\n\n    async loadFastTrackMedications() {\n        const drugs = await DrugOrderService.getLastDrugsReceived(this.patientID)\n        const withDosages = drugs.map(async(data: any) => {\n            const { drug } = data\n            const dosage = await DrugOrderService.getDrugDosages(this.patientID, drug.drug_id)\n            return {\n                'drug_id': drug.drug_id,\n                'drug_name': drug.name,\n                'units': drug.units,\n                'am': dosage.am,\n                'noon': dosage.noon,\n                'pm': dosage.pm,\n                'frequency': data.frequency\n            }\n        })\n        this.fastTrackMedications = await Promise.all(withDosages)\n    }\n\n    async loadTreatmentState() {\n        const params = { date: this.date }\n\n        const req = await AppEncounterService.getJson(\n            `programs/${AppEncounterService.getProgramID()}/patients/${this.patientID}/status`,\n            params\n        )\n\n        if (req) this.treatmentState = req['status']\n    }\n\n    findAndGroupDrugSideEffects(drugs: Array<number>) {\n        const allSideEffects: any = {}\n\n        for (const date in this.sideEffects) {\n            const drugInduced = this.sideEffects[date]\n\n            for(const drug in drugInduced) {\n                if (!drugs.includes(parseInt(drug))) continue\n\n                if (!allSideEffects[date]) allSideEffects[date] = []\n\n                allSideEffects[date] = [\n                    ...allSideEffects[date], ...drugInduced[drug]\n                ]\n            }\n        }\n        return allSideEffects\n    }\n\n    calculatePillsPerDay(am: number, noon: number, pm: number) {\n        return parseFloat(am.toString()) + noon + pm\n    }\n\n    estimatePackSize(pillsPerDay: number, packSize=0) {\n        const packs = (pillsPerDay * this.nextVisitInterval) / (packSize || 1)\n        \n        let roundedPacks = Math.round(packs)\n\n        if (roundedPacks <= 0) roundedPacks += 1\n\n        return roundedPacks\n    }\n\n    calculateDosage(morningTabs: number, eveningTabs: number): number {\n        let dose = 0\n        if (eveningTabs === 0) dose = morningTabs\n\n        if (morningTabs == 0) dose = eveningTabs\n\n        if (morningTabs > 0 && eveningTabs  > 0) {\n            dose = (morningTabs + eveningTabs) / 2\n        }\n        return dose\n    }\n    \n    calculateEquivalentDosage(morningTabs: number, eveningTabs: number): number {\n        return morningTabs + eveningTabs\n    }\n\n    calculateDateFromInterval() {\n        const dateObj = new Date(this.date)\n        dateObj.setDate(dateObj.getDate() + this.nextVisitInterval)\n        return HisDate.toStandardHisFormat(dateObj)\n    }\n\n    getDrugPackSize(drug: any) {\n        if (drug.pack_size) return drug.pack_size\n        try{\n            return drug.barcodes[0].tabs\n        }catch(e) {\n            return 30\n        }\n    }\n\n    getInstructions(drugName: string, morningTabs: number, eveningTabs: number, units: string): string {\n        return `${drugName} :- Morning: ${morningTabs} ${units}, Evening: ${eveningTabs} ${units}`\n    }\n\n    toOrderObj(id: number, name: string, units: string, am=0, pm=0, frequency=''): DrugInterface {\n        return {\n            'drug_inventory_id': id,\n            'equivalent_daily_dose': this.calculateEquivalentDosage(am, pm),\n            'start_date': this.date,\n            'auto_expire_date': this.calculateDateFromInterval(), \n            'units': units,\n            'instructions': this.getInstructions(name, am, pm, units),\n            'dose': this.calculateDosage(am, pm),\n            'frequency': frequency\n        }\n    }\n\n    async getReasonForRegimenSwitch() {\n        const reason = await AppEncounterService.getFirstValueText(this.patientID, 'Reason for ARV switch')\n        return reason ? reason : 'N/A'\n    }\n\n    async createDrugOrder(drugOrders: Array<DrugInterface>) {\n        return DrugOrderService.create({\n            'encounter_id': this.encounterID,\n            'drug_orders': drugOrders\n        })\n    }\n\n    async createHangingPillsObs(response: string) {\n        return this.saveValueTextObs('appointment type', response)\n    }\n\n    async createRegimenSwitchObs(reasonForSwitch: string): Promise<Observation> {\n        return this.saveValueTextObs('Reason for ARV switch', reasonForSwitch)\n    }\n}\n"],"sourceRoot":""}