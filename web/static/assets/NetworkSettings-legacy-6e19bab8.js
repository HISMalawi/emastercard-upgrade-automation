System.register(["./index-legacy-6369682a.js","./loader-legacy-93598dc3.js","./SelectInput-legacy-aaafa44c.js","./TextInput-legacy-d0bc9be3.js","./form-legacy-b63a73f5.js","./validations-legacy-aa6bc9a6.js","./toasts-legacy-409ce6b5.js","./common-legacy-e8d6ba88.js","./Strs-legacy-b5721578.js","./his_date-legacy-1e77166a.js"],function(e,l){"use strict";var a,t,o,s,i,n,r,u,d,c,f,g,_,m,p,y,v,b,h,w,k,S,j,P,V,A,I,$;return{setters:[e=>{a=e.d,t=e.aj,o=e.o,s=e.j,i=e.w,n=e.e,r=e.u,u=e.n,d=e.I,c=e.b,f=e.m,g=e.f,_=e.K,m=e.a,p=e.a2,y=e.l,v=e.v,b=e.U,h=e.G,w=e.H,k=e.k},e=>{S=e.l},e=>{j=e.S},e=>{P=e.T},e=>{V=e.i,A=e.r},e=>{I=e.i},e=>{$=e.t},null,null,null],execute:function(){const l=a({__name:"NetworkForm",emits:["submit"],setup(e,{emit:l}){const a=l,g=[{label:"HTTP",value:"http"},{label:"HTTPS",value:"https"}],_=t({protocol:{value:"",label:"Select Protocol",required:!0},ipAddress:{value:"",label:"IP Address",placeholder:"Enter IP Address e.g. 127.0.0.1",required:!0,validation:async e=>I(e)},port:{value:"",label:"Port",placeholder:"Enter Port e.g. 3000",required:!0}}),m=async()=>{await V(_)&&a("submit",A(_).formData)};return(e,l)=>(o(),s(r(f),null,{default:i(()=>[n(r(u),{size:"12",class:"ion-margin-vertical"},{default:i(()=>[n(j,{modelValue:_.protocol,"onUpdate:modelValue":l[0]||(l[0]=e=>_.protocol=e),options:g},null,8,["modelValue"])]),_:1}),n(r(u),{size:"12",class:"ion-margin-vertical"},{default:i(()=>[n(P,{modelValue:_.ipAddress,"onUpdate:modelValue":l[1]||(l[1]=e=>_.ipAddress=e)},null,8,["modelValue"])]),_:1}),n(r(u),{size:"12",class:"ion-margin-vertical"},{default:i(()=>[n(P,{modelValue:_.port,"onUpdate:modelValue":l[2]||(l[2]=e=>_.port=e)},null,8,["modelValue"])]),_:1}),n(r(u),{size:"12",class:"ion-margin-vertical"},{default:i(()=>[n(r(d),{class:"ion-margin-top ion-float-right",color:"success",onClick:m},{default:i(()=>l[4]||(l[4]=[c("Submit")])),_:1,__:[4]}),n(r(d),{class:"ion-margin-top ion-float-right",onClick:l[3]||(l[3]=l=>e.$router.back())},{default:i(()=>l[5]||(l[5]=[c("Back")])),_:1,__:[5]})]),_:1})]),_:1}))}}),z={class:"his-card"},H={class:"his-card"};e("default",a({__name:"NetworkSettings",setup(e){const a=g(),t=_.isLoggedIn(),d=async({protocol:e,ipAddress:l,port:t})=>{try{if(S.show(),_.setHost(`${e.value}://${l}:${t}`),!(await _.apiOk()))throw new Error(`Unable to connect to: ${e.value}://${l}:${t}`);const o=k();await o.loadCurrentFacility(!0),await o.loadFacilityCode(),await S.hide(),a.back()}catch(o){await S.hide(),console.error(o),$(`${o}`),localStorage.clear()}};return(e,a)=>r(t)?(o(),s(r(y),{key:0},{default:i(()=>[n(r(f),null,{default:i(()=>[n(r(u),{size:"10",offset:"1",class:"ion-padding"},{default:i(()=>[m("div",z,[n(r(p),{style:{"padding-left":"0"}},{default:i(()=>a[0]||(a[0]=[c("Network Settings / API Host configuration")])),_:1,__:[0]}),n(l,{onSubmit:d})])]),_:1})]),_:1})]),_:1})):(o(),s(r(w),{key:1},{default:i(()=>[n(r(b),null,{default:i(()=>[n(r(v),null,{default:i(()=>[n(r(p),null,{default:i(()=>a[1]||(a[1]=[c("Network Settings / API Host configuration")])),_:1,__:[1]})]),_:1})]),_:1}),n(r(h),null,{default:i(()=>[n(r(y),null,{default:i(()=>[n(r(f),null,{default:i(()=>[n(r(u),{size:"10",offset:"1",class:"ion-padding"},{default:i(()=>[m("div",H,[n(l,{onSubmit:d})])]),_:1})]),_:1})]),_:1})]),_:1})]),_:1}))}}))}}});
