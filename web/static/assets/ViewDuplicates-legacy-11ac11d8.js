System.register(["./loader-legacy-ddb5a771.js","./ReportTable.vue_vue_type_style_index_0_lang-legacy-82d53abb.js","./toasts-legacy-70b925e2.js","./patient_identifier_service-legacy-d8f58d8f.js","./index-legacy-79e582e4.js","./DrilldownTable-legacy-0e03deb6.js","./patient_service-legacy-18995020.js","./Strs-legacy-b5721578.js","./his_date-legacy-95d4aa02.js","./dde-legacy-51a06bfd.js","./exports-legacy-ad0472b8.js","./index-legacy-0f93fd1f.js","./vue-datepicker-legacy-bf73976b.js","./common-legacy-e8d6ba88.js","./arrays-legacy-86abe4a8.js","./Date-legacy-1a6c6afa.js"],function(e,t){"use strict";var a,l,i,n,s,r,o,c,u,d,p,v,y,f,g,h,m,_,w;return{setters:[e=>{a=e.l},e=>{l=e._},e=>{i=e.t,n=e.a},e=>{s=e.P},e=>{r=e.d,o=e.r,c=e.f,u=e.h,d=e.i,p=e.j,v=e.al,y=e.am,f=e.o},e=>{g=e.D},e=>{h=e.P},e=>{m=e.t},e=>{_=e.t},e=>{w=e.d},null,null,null,null,null,null],execute:function(){e("default",r({__name:"ViewDuplicates",setup(e){const t=o([]),r=c(),j=o(),b=new s,D=o([]),I=[{path:"identifier",label:"Identifier"},{path:"count",label:"Count"}],x=u(()=>[{id:"identifier",label:"Select Identifier type",type:"select",gridSize:5,options:D.value}]),F=[{label:"View Patients",action:e=>{var t,l,s,c;const u=o([]),d=`Patients with ${null===(t=j.value)||void 0===t?void 0:t.label}: ${e.identifier}`,p=[{path:"person.names[0].given_name",label:"First Name"},{path:"person.names[0].family_name",label:"Last Name"},{path:"person.gender",label:"Gender",formatter:m},{path:"person.birthdate",label:"Date of Birth",formatter:_}],f=[{label:"View",action:e=>r.push(`/patients/${e.patient_id}`)}];return(null===(l=j.value)||void 0===l?void 0:l.value)===v&&w.value&&f.push({label:"Re-assign",action:async e=>{try{return await b.reassignNPID(e.patient_id),n("Identifier re-assigned successfully"),r.push(`/patients/${e.patient_id}`)}catch(t){console.error(t),i("Failed to re-assign identifier")}}}),a.show(),h.findByOtherID(null!==(s=null===(c=j.value)||void 0===c?void 0:c.value)&&void 0!==s?s:-1,e.identifier).then(e=>{var t;a.hide(),u.value.push(...null!==(t=e.data)&&void 0!==t?t:[])}).catch(e=>{i("Failed to load patients"),console.error(e)}),y.show(g,{title:d,columns:p,rows:u.value,rowActionButtons:f})}}];async function P({identifier:e}){try{var l;a.show(),j.value=e,t.value=null!==(l=await b.getDuplicateIndentifiers(e.value))&&void 0!==l?l:[]}catch(n){i("Failed to load report data"),console.error(n)}finally{a.hide()}}return d(async()=>{try{const e=await b.getIdentifierTypes();D.value=e.map(e=>({label:e.name,value:e.patient_identifier_type_id,other:e}))}catch(e){console.error(e),i("Failed to load identifier types")}}),(e,a)=>(f(),p(l,{title:"Duplicates Identifiers",columns:I,rows:t.value,"custom-filters":x.value,"row-action-buttons":F,onGenerate:P},null,8,["rows","custom-filters"]))}}))}}});
