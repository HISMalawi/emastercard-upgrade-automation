var Mt=Object.defineProperty;var Lt=(t,a,e)=>a in t?Mt(t,a,{enumerable:!0,configurable:!0,writable:!0,value:e}):t[a]=e;var W=(t,a,e)=>(Lt(t,typeof a!="symbol"?a+"":a,e),e);import{S as Ue,D as Ge,H as de}from"./Date-ea5dfce1.js";import{G as $,d as ae,C as rt,n as ut,S as dt,$ as ct,q as je,I as be,J as it,i as me,j as pe,k as O,ap as ot,s as Qe,r as E,ae as re,a6 as ve,a2 as Re,ai as Ae,L as f,c as J,a as n,w as o,K,o as V,b as F,H as q,f as _e,h as H,y as G,ar as Gt,t as ce,as as zt,N as ke,at as Jt,u as y,a5 as Wt,au as Yt,l as jt,a4 as Qt,av as Kt,p as xt,e as Xt,U as Zt,af as ea,aq as ht,F as ta,aw as aa}from"./index-9d5e84a5.js";import{g as na,P as mt}from"./patient_service-5e9f10c6.js";import{g as et,i as M}from"./common-8a0477e8.js";import{A as L,O as Ye,P as ia,V as oa,C as la,E as Dt,S as yt}from"./ApiStore-71fb0bde.js";import{s as Ne,C as qe,O as B,i as sa,r as ra,a as We,o as wt}from"./form-42211d1f.js";import{P as Nt}from"./program_service-72175222.js";import{p as ua}from"./VoidReason-22182f61.js";import{d as Q,a as Ee,e as Be,t as It}from"./his_date-68cf9d33.js";import{D as Ve}from"./DateInput-deedffd1.js";import{S as he}from"./SelectInput-c163deec.js";import{N as le,R as we}from"./regimen_service-96c9d76f.js";import{t as Ke,a as da,g as ca}from"./DTFormElements-a1199b88.js";import{E as Y,a as j}from"./emc_event-4721851b.js";import{m as z,D as ma}from"./DrilldownTable-696672fe.js";import{_ as oe}from"./_plugin-vue_export-helper-c27b6911.js";import{a as He,t as Pt}from"./toasts-a30647ed.js";import{D as Tt}from"./index-fca9b4d0.js";import{T as $e}from"./TextInput-196eb5a4.js";import{g as pa,a as ga,b as fa}from"./location_options-4bffeec6.js";import{d as Ie,e as ye,v as Vt,a as Me,b as va,c as Ct}from"./validations-674ed7bf.js";import{Y as fe}from"./YesNoInput-c0354fb0.js";import{c as _a,u as St}from"./arrays-d6bc15b2.js";import{P as ie}from"./index-95d3a767.js";import{e as ba}from"./encounter_types-55fa45e3.js";import{t as ha}from"./Strs-7ee8a435.js";import{P as lt,R as tt}from"./relations_service-0e8740b5.js";import{l as at}from"./loader-161c88b9.js";import"./patient_identifier_service-38d617de.js";import"./user_service-6bb4c9c3.js";import"./services-f7c3fb9d.js";import"./image-cb93bc3e.js";import"./vue-datepicker-7955ae14.js";const Da=t=>{const a=t.given_name,e=t.family_name,i=t.middle_name?t.middle_name:"";return"".concat(a," ").concat(i," ").concat(e)};class ya{static getRelationships(a){return $.getJson("/people/".concat(a,"/relationships")).then(e=>e.data)}static async getGuardianDetails(a){return await this.getRelationships(a).then(e=>e.map(i=>{const r=et(i,"relation.names[0]");return{id:i.relationship_id,name:r?Da(r):"",relationshipType:et(i,"type.b_is_to_a",""),phoneNumber:na(et(i,"relation.person_attributes",[]),12),names:r}}))}}class At extends L{static async setSessionDate(a){const e=await this.getApiDate();if(e){sessionStorage.setItem("apiDate",e),sessionStorage.setItem("sessionDate",a);return}throw"Unable to set api date"}static async getApiDate(){const a=(await $.getJson("current_time")).data;if(a)return a.date}constructor(a,e){super(a,57,e)}}class nt extends L{constructor(e){super(e,57);W(this,"patientID");W(this,"testTypeID");W(this,"resultDate");W(this,"testID");this.patientID=e,this.testTypeID=-1,this.resultDate="",this.testID=-1}static setSessionDate(e){return sessionStorage.getItem("sessionDate")||""}static async resetSessionDate(){const e=await this.getApiDate();if(e){sessionStorage.removeItem("apiDate"),sessionStorage.setItem("sessionDate",e);return}throw"Unable to reset session date"}static async getApiDate(){const e=(await $.getJson("current_time")).data;if(e)return e.date}createLabResult(e){return $.postJson("lab/tests/".concat(this.testID,"/results"),{encounter_id:this.encounterID,date:this.resultDate,measures:e})}getTestID(){return this.testID}getTestTypeID(){return this.testTypeID}setTestTypeID(e){this.testTypeID=e}setResultDate(e){this.resultDate=e}setTestID(e){this.testID=e}getTestsWithoutResults(){return Ye.getOrders(this.patientID,{status:"drawn"})}getTestIndicators(){return $.getJson("lab/test_result_indicators",{test_type_id:this.testTypeID})}}const wa=ae({components:{IonContent:rt,IonFooter:ut,IonHeader:dt,IonTitle:ct,IonToolbar:je,IonButton:be,IonLabel:it,IonGrid:me,IonRow:pe,IonCol:O,IonCheckbox:ot,IonItem:Qe,DateInput:Ve,SelectInput:he,NumberInput:le},props:{patient:{type:Object,required:!0}},setup(t){const a=E(!1),e=Ke(["=",">","<",">=","<="]),i=Ke(["Routine","Targeted","Confirmatory","Stat","Repeat / Missing","Follow up after Low Level Viremia","Follow up after High Viral Load"]),r=E([]),c=Q().format(Ue),s=Q(t.patient.getBirthdate()).format(Ue),d=re({orderDate:{value:"",label:"Order Date",required:!0,validation:async _=>Q(_.value).isValid()?new Date(_.value)>new Date(c)?["Order date cannot be in the future"]:new Date(_.value)<new Date(s)?["Order date cannot be before patient's date of birth"]:null:["Invalid date"]},resultDate:{value:"",label:"Result Date",required:!0,validation:async(_,I)=>Q(_.value).isValid()?new Date(_.value)>new Date(c)?["Result date cannot be in the future"]:new Date(_.value)<new Date(I.orderDate.value)?["Result date cannot be before order date"]:null:["Invalid date"]},specimenConcept:{value:"",label:"Specimen",placeholder:"Select a specimen",required:!0},modifier:{value:"",label:"Modifier",placeholder:"Select a modifier",required:!0},reason:{value:"",label:"Reason",placeholder:"Select a reason",required:!0},result:{value:"",label:"Result Value",placeholder:"Enter a result value",required:!0}}),m=async()=>Ne(d,async _=>{await At.setSessionDate(_.orderDate);const I=new At(t.patient.getID(),-1),P=await qe.getConceptID("HIV viral load"),w=await I.createEncounter();if(!w)throw new Error("Unable to create lab order encounter");const S=await Ye.buildLabOrders(w,[{specimenConcept:_.specimenConcept.value,reason:_.reason.value,concept_id:P}]),D=(await Ye.saveOrdersArray(w.encounter_id,S)).data;if(!D)throw new Error("Unable to save lab orders");await nt.setSessionDate(_.resultDate);const g=new nt(t.patient.getID());if(g.setTestID(D[0].tests[0].id),g.setResultDate(_.resultDate),!await g.createEncounter())throw new Error("Unable to create lab result encounter");await g.createLabResult([{indicator:{concept_id:P},value:a.value?"LDL":parseInt(_.result),value_modifier:a.value?"=":_.modifier.value,value_type:a.value?"text":"numeric"}]),await nt.resetSessionDate(),await z.hide(),Y.emit(j.RELOAD_LATEST_VL_RESULT),Y.emit(j.RELOAD_PATIENT_VISIT_DATA)}),b=async()=>{if(await Ae("Are you sure you want to clear all fields?")){a.value=!1;for(const _ in d)d[_].value="",d[_].error="";Y.emit(j.ON_CLEAR)}};return ve(a,_=>{_&&(d.modifier.value="",d.result.value=void 0,d.modifier.error="",d.result.error=""),d.modifier.disabled=_,d.modifier.required=!_,d.result.disabled=_,d.result.required=!_}),Re(async()=>{r.value=(await Ye.getSpecimens("HIV viral load")).data.map(_=>({label:_.name,value:_.concept_id}))}),{today:c,birthdate:s,form:d,modifiers:e,reasons:i,specimens:r,ldl:a,modal:z,resetResults:b,saveResults:m}}});function Ia(t,a,e,i,r,c){const s=f("ion-title"),d=f("ion-toolbar"),m=f("ion-header"),b=f("DateInput"),_=f("ion-col"),I=f("SelectInput"),P=f("NumberInput"),w=f("ion-row"),S=f("ion-label"),D=f("ion-checkbox"),g=f("ion-item"),h=f("ion-grid"),T=f("ion-content"),k=f("ion-button"),R=f("ion-footer");return V(),J(K,null,[n(m,null,{default:o(()=>[n(d,null,{default:o(()=>[n(s,null,{default:o(()=>[F("Viral Load Results")]),_:1})]),_:1})]),_:1}),n(T,{class:"ion-padding"},{default:o(()=>[n(h,{style:{width:"100%"}},{default:o(()=>[n(w,null,{default:o(()=>[n(_,{size:"12",class:"ion-margin-vertical"},{default:o(()=>[n(b,{modelValue:t.form.orderDate,"onUpdate:modelValue":a[0]||(a[0]=A=>t.form.orderDate=A),form:t.form,minDate:t.birthdate,maxDate:t.today},null,8,["modelValue","form","minDate","maxDate"])]),_:1}),n(_,{size:"6",class:"ion-margin-vertical"},{default:o(()=>[n(I,{modelValue:t.form.reason,"onUpdate:modelValue":a[1]||(a[1]=A=>t.form.reason=A),options:t.reasons},null,8,["modelValue","options"])]),_:1}),n(_,{size:"6",class:"ion-margin-vertical"},{default:o(()=>[n(I,{modelValue:t.form.specimenConcept,"onUpdate:modelValue":a[2]||(a[2]=A=>t.form.specimenConcept=A),options:t.specimens},null,8,["modelValue","options"])]),_:1}),n(_,{size:"12",class:"ion-margin-vertical"},{default:o(()=>[n(b,{modelValue:t.form.resultDate,"onUpdate:modelValue":a[3]||(a[3]=A=>t.form.resultDate=A),form:t.form,minDate:t.form.orderDate.value,"max-date":t.today},null,8,["modelValue","form","minDate","max-date"])]),_:1}),n(_,{size:"6",class:"ion-margin-vertical"},{default:o(()=>[n(I,{modelValue:t.form.modifier,"onUpdate:modelValue":a[4]||(a[4]=A=>t.form.modifier=A),options:t.modifiers},null,8,["modelValue","options"])]),_:1}),n(_,{size:"6",class:"ion-margin-vertical"},{default:o(()=>[n(P,{modelValue:t.form.result,"onUpdate:modelValue":a[5]||(a[5]=A=>t.form.result=A),form:t.form,min:1},null,8,["modelValue","form"])]),_:1})]),_:1}),n(w,{class:"ion-margin-top"},{default:o(()=>[n(_,{size:"12"},{default:o(()=>[n(S,{class:"ion-padding-vertical bold"},{default:o(()=>[F("Other Results Options: ")]),_:1}),n(g,null,{default:o(()=>[n(S,null,{default:o(()=>[F("LDL")]),_:1}),n(D,{slot:"start",modelValue:t.ldl,"onUpdate:modelValue":a[6]||(a[6]=A=>t.ldl=A)},null,8,["modelValue"])]),_:1})]),_:1})]),_:1})]),_:1})]),_:1}),n(R,null,{default:o(()=>[n(d,null,{default:o(()=>[n(k,{color:"primary",onClick:a[7]||(a[7]=A=>t.modal.hide()),slot:"end"},{default:o(()=>[F("Close")]),_:1}),n(k,{color:"warning",onClick:t.resetResults,slot:"end"},{default:o(()=>[F("Reset")]),_:1},8,["onClick"]),n(k,{color:"success",onClick:t.saveResults,slot:"end"},{default:o(()=>[F("Save")]),_:1},8,["onClick"])]),_:1})]),_:1})],64)}const Ot=oe(wa,[["render",Ia]]),Va=ae({name:"OutcomesTable",props:{patientStates:{type:Array,required:!0}},components:{DataTable:Tt},emits:["voidOutcome"],setup(t,{emit:a}){const e=[{path:"name",label:"Outcome"},{path:"start_date",label:"Start Date",formatter:s=>Q(s).format(Ge)},{path:"end_date",label:"End Date",formatter:s=>Q(s).format(Ge)}],i={showSearchField:!1,showSubmitButton:!1};return{rows:q(()=>t.patientStates.map((s,d)=>({...s,index:d}))),columns:e,tableConfig:i,TableRowActions:[{label:"void",color:"danger",action:async s=>{await Ae("Are you sure you want to void this outcome?")&&a("voidOutcome",{stateId:s.patient_state_id,index:s.index})}}]}}}),Sa=_e("p",{class:"ion-padding-horizontal ion-margin-vertical bold ion-margin-top"},"Previous Outcomes",-1);function Aa(t,a,e,i,r,c){const s=f("data-table");return V(),J(K,null,[Sa,n(s,{rows:t.rows,columns:t.columns,config:t.tableConfig,"row-actions-buttons":t.TableRowActions,color:"light"},null,8,["rows","columns","config","row-actions-buttons"])],64)}const Ra=oe(Va,[["render",Aa]]),Na=ae({name:"EnrollmentForm",components:{DateInput:Ve,IonGrid:me,IonRow:pe,IonCol:O,IonButton:be},props:["birthdate"],emits:["enrollProgram"],setup(t,{emit:a}){const e=Q().format("YYYY-MM-DD"),i=re({date:{value:"",label:"Date of Enrollment",required:!0,validation:async s=>new Date(s.value)<new Date(t.birthdate)?["Date of enrollment cannot be before date of birth"]:new Date(s.value)>new Date(e)?["Date of enrollment cannot be in the future"]:null}});return{form:i,today:e,onReset:async()=>{await Ae("Are you sure you want to clear all fields")&&(i.date.value="",i.date.error="",Y.emit(j.ON_CLEAR))},enrollProgram:async()=>Ne(i,({date:s})=>a("enrollProgram",s))}}});function Pa(t,a,e,i,r,c){const s=f("DateInput"),d=f("ion-col"),m=f("ion-button"),b=f("ion-row"),_=f("ion-grid");return V(),H(_,null,{default:o(()=>[n(b,null,{default:o(()=>[n(d,{size:"12"},{default:o(()=>[n(s,{modelValue:t.form.date,"onUpdate:modelValue":a[0]||(a[0]=I=>t.form.date=I),form:t.form,minDate:t.birthdate,"max-date":t.today},null,8,["modelValue","form","minDate","max-date"])]),_:1}),n(d,null,{default:o(()=>[n(m,{color:"warning",onClick:t.onReset},{default:o(()=>[F("Reset")]),_:1},8,["onClick"]),n(m,{color:"success",onClick:t.enrollProgram},{default:o(()=>[F("Enroll")]),_:1},8,["onClick"])]),_:1})]),_:1})]),_:1})}const Ta=oe(Na,[["render",Pa]]),Ca=ae({name:"OutcomeForm",props:{outcomes:{type:Array,required:!0},dateEnrolled:{type:String,required:!0},birthdate:{type:String,required:!0}},components:{DateInput:Ve,IonGrid:me,IonRow:pe,IonCol:O,IonButton:be,SelectInput:he,TextInput:$e},emits:["saveOutcome"],setup(t,{emit:a}){const e=Q().format("YYYY-MM-DD"),i=re({date:{value:"",label:"Outcome Date",required:!0,validation:async m=>new Date(m.value)<new Date(t.birthdate)?["Outcome date cannot be before date of birth - ".concat(Q(t.birthdate).format(Ge))]:new Date(m.value)<new Date(t.dateEnrolled)?["Outcome date cannot be before enrollment date- ".concat(Q(t.dateEnrolled).format(Ge))]:null},status:{value:"",label:"Outcome",required:!0},nextFacility:{value:"",label:"Next Facility",validation:async(m,b)=>b.status.value.label==="Patient transferred out"&&Ie(m)},reason:{value:"",label:"Reason for transfer out",validation:async(m,b)=>b.status.value.label==="Patient transferred out"&&Ie(m)},otherReason:{value:"",label:"Other reason for transfer out",placeholder:"Specify other reason for transfer out",validation:async(m,b)=>{var _,I,P,w;return((I=(_=b.status)==null?void 0:_.value)==null?void 0:I.label)==="Patient transferred out"&&((w=(P=b.reason)==null?void 0:P.value)==null?void 0:w.label)==="Other"&&Ie(m)}}}),r=q(()=>{var m;return((m=i.status.value)==null?void 0:m.label)==="Patient transferred out"}),c=q(()=>{var m,b;return((b=(m=i.reason)==null?void 0:m.value)==null?void 0:b.label)==="Other"});return{form:i,today:e,isTransferredOut:r,specifyOther:c,onSave:()=>Ne(i,m=>a("saveOutcome",{...m,isTransferredOut:r.value})),onReset:async()=>{if(await Ae("are you sure you want to clear all fields")){for(const m in i)i[m].value="",i[m].error="";Y.emit(j.ON_CLEAR)}},getFacilities:pa,transferOutReasons:da}}}),Oa=_e("p",null,"Add New Outcome",-1);function Ea(t,a,e,i,r,c){const s=f("ion-col"),d=f("DateInput"),m=f("SelectInput"),b=f("text-input"),_=f("ion-button"),I=f("ion-row"),P=f("ion-grid");return V(),H(P,null,{default:o(()=>[n(I,null,{default:o(()=>[n(s,{size:"12"},{default:o(()=>[Oa]),_:1}),n(s,{size:"6",class:"ion-margin-top-vertical"},{default:o(()=>[n(d,{modelValue:t.form.date,"onUpdate:modelValue":a[0]||(a[0]=w=>t.form.date=w),form:t.form,minDate:t.dateEnrolled,"max-date":t.today},null,8,["modelValue","form","minDate","max-date"])]),_:1}),n(s,{size:"6",class:"ion-margin-top-vertical"},{default:o(()=>[n(m,{modelValue:t.form.status,"onUpdate:modelValue":a[1]||(a[1]=w=>t.form.status=w),form:t.form,options:t.outcomes},null,8,["modelValue","form","options"])]),_:1}),t.isTransferredOut?(V(),J(K,{key:0},[n(s,{size:"6",class:"ion-margin-top-vertical"},{default:o(()=>[n(m,{modelValue:t.form.nextFacility,"onUpdate:modelValue":a[2]||(a[2]=w=>t.form.nextFacility=w),form:t.form,asyncOptions:t.getFacilities},null,8,["modelValue","form","asyncOptions"])]),_:1}),n(s,{size:"6",class:"ion-margin-top-vertical"},{default:o(()=>[n(m,{modelValue:t.form.reason,"onUpdate:modelValue":a[3]||(a[3]=w=>t.form.reason=w),form:t.form,options:t.transferOutReasons},null,8,["modelValue","form","options"])]),_:1}),t.specifyOther?(V(),H(s,{key:0,size:"12",class:"ion-margin-top-vertical"},{default:o(()=>[n(b,{modelValue:t.form.otherReason,"onUpdate:modelValue":a[4]||(a[4]=w=>t.form.otherReason=w),form:t.form},null,8,["modelValue","form"])]),_:1})):G("",!0)],64)):G("",!0),n(s,{size:"12",class:"ion-margin-top"},{default:o(()=>[n(_,{color:"warning",onClick:t.onReset},{default:o(()=>[F("Reset")]),_:1},8,["onClick"]),n(_,{color:"success",onClick:t.onSave},{default:o(()=>[F("Save")]),_:1},8,["onClick"])]),_:1})]),_:1})]),_:1})}const ka=oe(Ca,[["render",Ea]]),$a=ae({components:{IonContent:rt,IonFooter:ut,IonHeader:dt,IonTitle:ct,IonToolbar:je,IonButton:be,IonGrid:me,IonRow:pe,IonCol:O,IonBadge:Gt,OutcomesTable:Ra,EnrollmentForm:Ta,OutcomeForm:ka},props:{patient:{type:Object,required:!0}},setup(t){const{toStandardHisDisplayFormat:a,toStandardHisFormat:e}=de,i=new ia(t.patient.getID()),r=q(()=>e(t.patient.getBirthdate())),c=E(),s=q(()=>!M(c.value)),d=E(""),m=E(),b=q(()=>{var D,g,h;return(h=(g=(D=c.value)==null?void 0:D.patient_states)==null?void 0:g.length)!=null?h:0}),_=q(()=>s.value&&d.value?"Patient enrolled in this porgram on ".concat(a(d.value)):"Patient is not enrolled in this program"),I=async({date:D,status:g,nextFacility:h,reason:T,otherReason:k,isTransferredOut:R})=>{if(i.setStateDate(D),i.setStateId(g.value),R){const A=T.value!=="Other"?T.value:k;await i.transferOutEncounter(h.other,A)}await i.updateState(),await He("Outcome saved successfully",1e3),await z.hide(),Y.emit(j.RELOAD_PATIENT_VISIT_DATA)},P=async D=>{i.setProgramDate(D),await i.enrollProgram(),await He("Program enrolled successfully",1e3),await z.hide(),Y.emit(j.RELOAD_PATIENT_VISIT_DATA)},w=async()=>{var D;i.setPatientProgramId(((D=c.value)==null?void 0:D.patient_program_id)||-1),await i.voidProgram("duplicate / system error"),await He("Patient voided from program successfully",1e3),await z.hide(),Y.emit(j.RELOAD_PATIENT_VISIT_DATA)},S=async({stateId:D,index:g})=>{var h;i.setStateId(D),await i.voidState("duplicate / system error"),He("Outcome voided successfully"),(h=c.value)==null||h.patient_states.splice(g,1),Y.emit(j.RELOAD_PATIENT_VISIT_DATA)};return Re(async()=>{const D=(await i.getPrograms()).data;if(c.value=D.find(g=>g.program.name==="HIV PROGRAM"),c.value){d.value=c.value.date_enrolled;const g=await i.getProgramOutcomes(),h=new Set(i.removedStates);m.value=g.map(T=>({label:T.name,value:T.program_workflow_state_id,other:T})).filter(T=>!h.has(T.label))}}),{modal:z,patientProgram:i,isEnrolled:s,enrollDate:d,birthdate:r,enrollmentStatus:_,outcomes:m,program:c,totalStates:b,toStandardHisDisplayFormat:a,saveOutcome:I,enrollProgram:P,voidProgram:w,voidOutcome:S}}});function Fa(t,a,e,i,r,c){const s=f("ion-title"),d=f("ion-toolbar"),m=f("ion-header"),b=f("ion-badge"),_=f("ion-col"),I=f("ion-row"),P=f("enrollment-form"),w=f("outcome-form"),S=f("outcomes-table"),D=f("ion-grid"),g=f("ion-content"),h=f("ion-button"),T=f("ion-footer");return V(),J(K,null,[n(m,null,{default:o(()=>[n(d,null,{default:o(()=>[n(s,null,{default:o(()=>[F("Patient Outcomes")]),_:1})]),_:1})]),_:1}),n(g,null,{default:o(()=>[n(D,{style:{width:"100%"}},{default:o(()=>[n(I,null,{default:o(()=>[n(_,null,{default:o(()=>[n(b,{color:"lightblue",class:"ion-padding",style:{width:"100%"},disabled:""},{default:o(()=>[F(ce(t.enrollmentStatus),1)]),_:1})]),_:1})]),_:1}),t.isEnrolled?(V(),J(K,{key:1},[t.outcomes?(V(),H(I,{key:0,class:"his-card",style:{"margin-bottom":".4rem"}},{default:o(()=>[n(w,{"date-enrolled":t.enrollDate,birthdate:t.birthdate,outcomes:t.outcomes,onSaveOutcome:t.saveOutcome},null,8,["date-enrolled","birthdate","outcomes","onSaveOutcome"])]),_:1})):G("",!0),n(I,{class:"his-card",style:zt({minHeight:t.totalStates?"0":"30vh"})},{default:o(()=>[n(_,{size:"12",class:"ion-no-padding"},{default:o(()=>{var k;return[n(S,{patientStates:(k=t.program)==null?void 0:k.patient_states,onVoidOutcome:t.voidOutcome},null,8,["patientStates","onVoidOutcome"])]}),_:1})]),_:1},8,["style"])],64)):(V(),H(I,{key:0,class:"his-card",style:{"margin-bottom":".4rem"}},{default:o(()=>[n(_,{size:"12"},{default:o(()=>[n(P,{patientProgram:t.patientProgram,birthdate:t.birthdate,onEnrollProgram:t.enrollProgram},null,8,["patientProgram","birthdate","onEnrollProgram"])]),_:1})]),_:1}))]),_:1})]),_:1}),n(T,null,{default:o(()=>[n(d,null,{default:o(()=>[n(h,{color:"primary",onClick:a[0]||(a[0]=k=>t.modal.hide()),slot:"end"},{default:o(()=>[F("Close")]),_:1}),t.isEnrolled?(V(),H(h,{key:0,color:"danger",onClick:t.voidProgram,slot:"end"},{default:o(()=>[F("Void Program")]),_:1},8,["onClick"])):G("",!0)]),_:1})]),_:1})],64)}const Ba=oe($a,[["render",Fa]]),Ha=ae({name:"MultiColumnView",components:{IonGrid:me,IonRow:pe,IonCol:O},props:{items:{type:Object,required:!0},numberOfColumns:{type:Number,default:1}},setup(t){const a={1:"12",2:"6",3:"4",4:"3",6:"2"};return{computedItems:q(()=>_a(t.items,Math.ceil(t.items.length/t.numberOfColumns))),grid:a}}});function Ua(t,a,e,i,r,c){const s=f("ion-col"),d=f("ion-row"),m=f("ion-grid");return V(),H(m,null,{default:o(()=>[n(d,null,{default:o(()=>[(V(!0),J(K,null,ke(t.computedItems,(b,_)=>(V(),H(s,{key:_,size:t.grid[t.numberOfColumns]},{default:o(()=>[Jt(t.$slots,"default",{entries:b})]),_:2},1032,["size"]))),128))]),_:3})]),_:3})}const st=oe(Ha,[["render",Ua]]);class Se{static create(a){return $.postJson("drug_orders",a)}static updateDispensationOrders(a){return $.postJson("dispensations",{program_id:ie,dispensations:a.map(e=>({date:Ee(),drug_order_id:e.order_id,quantity:e.quantity}))})}static getDrugOrderHistory(a){return $.getJson("drug_orders",{patient_id:a})}static getDrugOrders(a){return $.getJson("drug_orders",{patient_id:a,date:Ee(),program_id:ie})}static getAllDrugOrders(a,e=1e3){return $.getJson("drug_orders",{patient_id:a,program_id:ie,page_size:e})}static getLastDrugsReceived(a){return $.getJson("patients/".concat(a,"/last_drugs_received"),{date:Ee(),program_id:ie})}static getDrugDosages(a,e,i=Ee()){const r={drug_id:e,date:i};return $.getJson("programs/".concat(ie,"/patients/").concat(a,"/drug_doses"),r)}static getOrderByPatient(a,e){return $.getJson("/drug_orders",{patient_id:a,program_id:ie,...e})}}class Le extends mt{constructor(a){super(a)}async isPregnant(){const a=await B.getFirstObs(this.getID(),"Is patient pregnant");return a&&!!a.value_coded.match(/Yes/i)&&B.obsInValidPeriod(a)}async hasPregnancyObsToday(){const a=await B.getFirstObsDatetime(this.getID(),"Is patient pregnant");return a&&de.toStandardHisFormat(a)===Ee()&&this.isFemale()}async hasPregnancyAtARTInitiation(){const a=await B.getLastValueCoded(this.getID(),"Is patient pregnant");return a&&await B.getConceptName(a)}async breastFeedingAtARTInitiation(){const a=await B.getLastValueCoded(this.getID(),"Is patient breast feeding");return a&&await B.getConceptName(a)}async getInitialWeight(){return B.getLastValueNumber(this.getID(),"weight")}async getRecentWeight(){return B.getFirstValueNumber(this.getID(),"weight")||-1}async getInitialHeight(){return B.getLastValueNumber(this.getID(),"Height")}async getInitialTBStatus(){const a=await B.getLastValueCoded(this.getID(),"TB Status at Initiation");if(a)return B.getConceptName(a)}async getRecentHeight(){return B.getFirstValueNumber(this.getID(),"Height")||-1}async getWeightHistory(){try{const a=await B.getAll(this.getID(),"weight");return a==null?void 0:a.data.map(e=>({weight:e.value_numeric,date:e.obs_datetime}))}catch(a){return console.warn(a),[]}}async getCompleteTBTherapyHistory(){const a=await B.getAll(this.getID(),"TB treatment history");return a==null?void 0:a.data.filter(e=>e.value_text.match(/Complete/i))}async getInitialBMI(){return B.getLastValueNumber(this.getID(),"BMI")}async everReceivedART(){return B.getFirstValueCoded(this.getID(),"Ever received ART")}async agreesToFollowUp(){return B.getFirstValueCoded(this.getID(),"Agrees to followup")}async getHIVTestDate(){const a=await B.getFirstObs(this.getID(),"Confirmatory HIV test date");return a&&a.value_datetime?a.value_datetime:a&&a.value_text?a.value_text:null}async getARTStartDate(){const a=await B.getFirstObs(this.getID(),"Date ART started");if(a&&a.value_datetime)return a.value_datetime;if(a&&a.value_text)return a.value_text;const e=(await Se.getAllDrugOrders(this.getID(),Number.MAX_SAFE_INTEGER)).data;return M(e)?null:e[0].order.start_date}async getHIVTestLocation(){return B.getFirstValueText(this.getID(),"Confirmatory HIV test location")}async getReasonForStartingART(){return B.getFirstValueCoded(this.getID(),"Reason for ART eligibility")}async getStagingCondition(){return B.getFirstValueCoded(this.getID(),"Who stages criteria present")}static async setSessionDate(a){const e=await this.getApiDate();if(e){sessionStorage.setItem("apiDate",e),sessionStorage.setItem("sessionDate",a);return}throw"Unable to set api date"}static async getApiDate(){const a=(await $.getJson("current_time")).data;if(a)return a.date}getWhoStage(){return B.getFirstValueCoded(this.getID(),"Who stage")}static async resetSessionDate(){const a=await this.getApiDate();if(a){sessionStorage.removeItem("apiDate"),sessionStorage.setItem("sessionDate",a);return}throw"Unable to reset session date"}}class qa extends L{constructor(a,e){super(a,ba.HIV_RECEPTION,e)}}class Ma extends L{constructor(a,e){super(a,48,e)}static getBpGrade(a,e){return a<140&&e<90?"normal":a>=140&&a<160||e>=100&&e<110?"grade 1":a>=180&&e>110||a>=180?"grade 3":a>=160&&a<180||e>=110?"grade 2":"N/A"}static isBpNormotensive(a){const[e,i]=Object.values(a).sort((r,c)=>r.date<c.date?1:0).map(r=>this.getBpGrade(r.sbp,r.dbp));return e==="normal"&&i==="normal"}getSystolicBp(){return B.getFirstValueNumber(this.patientID,"Systolic blood pressure")}getDiastolicBp(){return B.getFirstValueNumber(this.patientID,"Diastolic blood pressure")}async onBpDrugs(){const a=await B.getFirstValueCoded(this.patientID,"Treatment status");return a?a==="Yes":!1}async getBPTrail(){return await $.getJson("/patients/".concat(this.patientID,"/bp_trail"))}async getCurrentDrugs(){return await $.getJson("/patients/".concat(this.patientID,"/current_bp_drugs"))}async getLastDrugs(){return await $.getJson("/patients/".concat(this.patientID,"/last_bp_drugs_dispensation"))}async getAdherence(a,e){return await $.postJson("/patients/".concat(this.patientID,"/remaining_bp_drugs"),{drug_id:a,pills:e})}async enrollPatient(a){return await $.postJson("/patients/".concat(this.patientID,"/update_or_create_htn_state"),a)}static htnDrugReferences(){return[{drug_id:275,drug_name:"HCZ (25mg tablet)",units:"tab(s)",am:0,noon:0,pm:1,frequency:"Daily (QOD)"},{drug_id:942,drug_name:"Enalapril (5mg tablet)",units:"tab(s)",am:0,noon:0,pm:1,frequency:"Daily (QOD)"},{drug_id:943,drug_name:"Enalapril (10mg tablet)",units:"tab(s)",am:0,noon:0,pm:1,frequency:"Daily (QOD)"},{drug_id:558,drug_name:"Amlodipine (5mg tablet)",units:"tab(s)",am:0,noon:0,pm:1,frequency:"Daily (QOD)"},{drug_id:559,drug_name:"Amlodipine (10mg tablet)",units:"tab(s)",am:0,noon:0,pm:1,frequency:"Daily (QOD)"},{drug_id:117,drug_name:"Atenolol (50mg tablet)",units:"tab(s)",am:0,noon:0,pm:1,frequency:"Daily (QOD)"},{drug_id:11,drug_name:"Atenolol(100mg tablet)",units:"tab(s)",am:0,noon:0,pm:1,frequency:"Daily (QOD)"}]}getDrugs(){return{HCZ:{drugs:[{drugName:"HCZ (25mg tablet)",drugID:275,amount:"25mg",current:!1,selected:!1,isChecked:!1,dispensed:null,expectedRemaining:null,adherence:null}],selected:null,notes:[]},Enalapril:{drugs:[{drugName:"Enalapril (5mg tablet)",drugID:942,amount:"5mg",current:!1,selected:!1,isChecked:!1,dispensed:null,expectedRemaining:null,adherence:null,remaining:null},{drugName:"Enalapril (10mg tablet)",drugID:943,amount:"10mg",current:!1,selected:!1,isChecked:!1,dispensed:null,expectedRemaining:null,adherence:null,remaining:null}],selected:null,notes:[]},Amlodipine:{drugs:[{drugName:"Amlodipine (5mg tablet)",drugID:558,amount:"5mg",current:!1,selected:!1,isChecked:!1,dispensed:null,expectedRemaining:null,adherence:null,remaining:null},{drugName:"Amlodipine (10mg tablet)",drugID:559,amount:"10mg",current:!1,selected:!1,isChecked:!1,dispensed:null,expectedRemaining:null,adherence:null,remaining:null}],selected:null,notes:[]},Atenolol:{drugs:[{drugName:"Atenolol (50mg tablet)",drugID:117,amount:"50mg",current:!1,selected:!1,isChecked:!1,dispensed:null,expectedRemaining:null,adherence:null,remaining:null},{drugName:"Atenolol(100mg tablet)",drugID:11,amount:"100mg",current:!1,selected:!1,isChecked:!1,dispensed:null,expectedRemaining:null,adherence:null,remaining:null}],selected:null,notes:[]}}}}class La extends L{constructor(e,i){super(e,68,i);W(this,"lastDrugs");W(this,"lastReceiptDate");this.lastDrugs=[],this.lastReceiptDate=""}async loadPreviousDrugs(e=!1){const i=new Date(this.date);i.setDate(i.getDate()-1);const r=s=>de.toStandardHisFormat(s),c=(await $.getJson("patients/".concat(this.patientID,"/drugs_received"),{date:r(i)})).data;if(!M(c)){this.lastReceiptDate=c.reduce((d,m)=>!d||new Date(r(m.order.start_date))>new Date(d)?r(m.order.start_date):d,null);const s=Ma.htnDrugReferences().map(d=>d.drug_id);if(this.lastDrugs=c.filter(d=>!s.includes(d.drug.drug_id)&&r(d.order.start_date)===this.lastReceiptDate),e){const d=(await this.getPreviousDrugPillCount()).data||{};this.lastDrugs=this.lastDrugs.map(m=>(d[m.drug.drug_id]&&m.quantity&&(m.quantity+=d[m.drug.drug_id]),m))}}}getReceiptDate(){return this.lastReceiptDate}getLastDrugs(){return this.lastDrugs}receivedDrugsBefore(){return!M(this.lastDrugs)}buildPillCountObs(e,i){return this.buildValueNumber("Number of tablets brought to clinic",i,null,e)}getPreviousDrugPillCount(){return $.getJson("last_drugs_pill_count",{patient_id:this.patientID,program_id:this.programID,date:this.lastReceiptDate})}async buildAdherenceObs(e,i,r){return{concept_id:await L.getConceptID("Drug adherence",!0),value_numeric:r,value_drug:i,value_modifier:"%",order_id:e,person_id:this.patientID,obs_datetime:L.getSessionDate()}}isAdherenceGood(e){return e>=95&&e<=105}calculateAdherence(e,i,r){return Math.round(100*(e-i)/(e-r))}calculateExpected(e,i,r,c){const s=c==="QW"?"week":"day",d=this.calcTimeElapsed(r,s);return e-d*parseFloat(i.toString())}calcTimeElapsed(e,i){return Q(de.toStandardHisFormat(this.date)).diff(de.toStandardHisFormat(e),i)+1}calculateUnaccountedOrMissed(e,i){const r=parseFloat(e)-parseFloat(i);return r<0?r*-1+" missed":r+" unacc"}}class Ga extends L{constructor(a,e){super(a,7,e)}async getNextAppointment(){return $.getJson("/programs/".concat(this.programID,"/patients/").concat(this.patientID,"/next_appointment_date"),{date:this.date})}static async getDailiyAppointments(a){const e=ie;return $.getJson("/programs/".concat(e,"/booked_appointments"),{date:a,paginate:!1})}}class za extends L{constructor(e,i){super(e,25,i);W(this,"nextVisitInterval");W(this,"fastTrack");W(this,"regimenExtras");W(this,"hangingPills");W(this,"fastTrackMedications");W(this,"medicationOrders");W(this,"treatmentState");W(this,"contraindications");W(this,"sideEffects");W(this,"tptPrescriptionCount");W(this,"lastSideEffectDate");this.nextVisitInterval=0,this.fastTrack=!1,this.regimenExtras=[],this.fastTrackMedications=[],this.hangingPills=[],this.medicationOrders=[],this.treatmentState="",this.contraindications={},this.sideEffects={},this.tptPrescriptionCount=0,this.lastSideEffectDate=""}setNextVisitInterval(e){this.nextVisitInterval=e}getHangingPills(){return this.hangingPills}getMedicationOrders(){return this.medicationOrders.map(e=>L.getCachedConceptName(e))}getTptPrescriptionCount(){return this.tptPrescriptionCount}getLastSideEffectDate(){return this.lastSideEffectDate}getContraindications(){return this.contraindications}getSideEffects(){return this.sideEffects}getRegimenExtras(){return this.regimenExtras}getPatientRegimens(){return we.getRegimens(this.patientID)}getARVs(){return $.getJson("arv_drugs")}getCustomIngridients(){return we.getCustomIngridients()}getFastTrackMedications(){return this.fastTrackMedications}getTreatmentState(){return this.treatmentState}isFastTrack(){return this.fastTrack}medicationOrdersAvailable(){return!M(this.medicationOrders)}shouldPrescribeArvs(){const e=L.getCachedConceptID("Antiretroviral drugs");return this.medicationOrders.includes(e)}shouldPrescribeExtras(){return L.getConceptsByCategory("art_extra_medication_order").map(r=>this.medicationOrders.includes(r.concept_id)).some(Boolean)}getRegimenStarterpack(e,i){const r={weight:i,regimen:e};return $.getJson("programs/".concat(ie,"/regimen_starter_packs"),r)}async getLvpDrugsByType(e,i){return $.getJson("programs/".concat(ie,"/regimens/").concat(i),{patient_id:this.patientID,lpv_drug_type:e})}async loadContraindications(){const e=await L.getConceptID("Contraindications");(await L.getObs({concept_id:e,person_id:this.patientID})).data.forEach(r=>{const c=Be(r.obs_datetime);this.contraindications[c]||(this.contraindications[c]=[]);const s=L.getCachedConceptName(r.value_coded);this.contraindications[c].push(s)})}async loadDrugInduced(){const e=await L.getConceptID("Drug induced"),i=(await L.getObs({concept_id:e,person_id:this.patientID})).data;i&&i.forEach(r=>{const c=Be(r.obs_datetime);if(this.lastSideEffectDate||(this.lastSideEffectDate=c),!r.value_drug||!r.value_coded)return;this.sideEffects[c]||(this.sideEffects[c]={}),this.sideEffects[c][r.value_drug]||(this.sideEffects[c][r.value_drug]=[]);const s=L.getCachedConceptName(r.value_coded);this.sideEffects[c][r.value_drug].push(s)})}async loadTptPrescriptionCount(){const e=(await $.getJson("tpt_prescription_count",{patient_id:this.patientID,date:this.date})).data;if(e){const i=e.count+1;this.tptPrescriptionCount=i>3?3:i}}async loadFastTrackStatus(){const e=await L.getFirstValueCoded(this.patientID,"Fast track"),i=await L.getConceptID("yes");e&&(this.fastTrack=e===i)}async loadRegimenExtras(e=this.date){const i=await $.getJson("programs/".concat(ie,"/patients/").concat(this.patientID,"/dosages"),{date:e});i&&(this.regimenExtras=Object.values(i))}async loadMedicationOrders(){const e=await L.getConceptID("Medication orders"),i=(await L.getObs({concept_id:e,date:this.date,person_id:this.patientID,page_size:5})).data;this.medicationOrders=i.map(r=>r.value_coded)}async loadHangingPills(){var i;const e=((i=await L.getAll(this.patientID,"Pills brought"))==null?void 0:i.data)||[];this.hangingPills=e.filter(r=>r.value_numeric>=1?r.value_drug&&Be(r.obs_datetime)===Be(this.date)?!0:r.order||!1:!1).map(r=>{var c,s;return((s=(c=r==null?void 0:r.order)==null?void 0:c.drug_order)==null?void 0:s.drug_inventory_id)||r.value_drug})}async loadFastTrackMedications(){const i=(await Se.getLastDrugsReceived(this.patientID)).data.map(async r=>{const{drug:c}=r,s=(await Se.getDrugDosages(this.patientID,c.drug_id)).data;return{drug_id:c.drug_id,drug_name:c.name,units:c.units,am:s.am,noon:s.noon,pm:s.pm,frequency:r.frequency}});this.fastTrackMedications=await Promise.all(i)}async loadTreatmentState(){const e={date:this.date},i=await $.getJson("programs/".concat(ie,"/patients/").concat(this.patientID,"/status"),e);i&&(this.treatmentState=i.data.status)}findAndGroupDrugSideEffects(e){const i={};for(const r in this.sideEffects){const c=this.sideEffects[r];for(const s in c)e.includes(parseInt(s))&&(i[r]||(i[r]=[]),i[r]=[...i[r],...c[s]])}return i}calculatePillsPerDay(e,i,r){return parseFloat(e.toString())+i+r}estimatePackSize(e,i=0){const r=e*this.nextVisitInterval/(i||1);let c=Math.round(r);return c<=0&&(c+=1),c}calculateDosage(e,i){let r=0;return i===0&&(r=e),e==0&&(r=i),e>0&&i>0&&(r=(e+i)/2),r}calculateEquivalentDosage(e,i){return e+i}calculateDateFromInterval(){const e=new Date(this.date);return e.setDate(e.getDate()+this.nextVisitInterval),Be(e)}getDrugPackSize(e){if(e.pack_size)return e.pack_size;try{return e.barcodes[0].tabs}catch(i){return 30}}getInstructions(e,i,r,c){return"".concat(e," :- Morning: ").concat(i," ").concat(c,", Evening: ").concat(r," ").concat(c)}toOrderObj(e,i,r,c=0,s=0,d=""){return{drug_inventory_id:e,equivalent_daily_dose:this.calculateEquivalentDosage(c,s),start_date:this.date,auto_expire_date:this.calculateDateFromInterval(),units:r,instructions:this.getInstructions(i,c,s,r),dose:this.calculateDosage(c,s),frequency:d}}async getReasonForRegimenSwitch(){const e=await L.getFirstValueText(this.patientID,"Reason for ARV switch");return e||"N/A"}async createDrugOrder(e){return Se.create({encounter_id:this.encounterID,drug_orders:e})}async createHangingPillsObs(e){return this.saveValueTextObs("appointment type",e)}async createRegimenSwitchObs(e){return(await this.saveValueTextObs("Reason for ARV switch",e)).data}}class Ja{static async getBMIData(){return(await fetch("/bmi.json")).json()}static async getBMIResult(a,e,i){let r={result:"",color:"",index:i};if(i<=0)return r.index=0,r;if(e<5&&e>0)r.result="Use MUAC to calculate nutrition status",r.color="red";else{e>18&&(e=19);const c=await this.getBMIData(),s=c[a][e];s&&(r=this.buildBounds(Object.keys(s),s,i,c.colors))}return r}static buildBounds(a,e,i,r){const c={result:"",color:"",index:i};return a.forEach(s=>{if(s.indexOf("-")>=0){const d=s.split("-");i>=parseFloat(d[0])&&i<=parseFloat(d[1])&&(c.result=e[s],c.color=r[e[s]])}else if(s.indexOf("<")>=0){const d=s.replace("<","");i<parseFloat(d)&&(c.result=e[s],c.color=r[e[s]])}else if(s.indexOf(">=")>=0){const d=s.replace(">=","");i>=parseFloat(d)&&(c.result=e[s],c.color=r[e[s]])}}),c}static getBMI(a,e,i,r){const c=this.calculateBMI(a,e);return this.getBMIResult(i,r,c)}static calculateBMI(a,e){if(e==0||a==0)return 0;let i=a/e/e*1e4;return i=Math.round(i*10)/10}}class Wa{static async fetchAvailableDrugStock(a){const e=(await $.getJson("pharmacy/items",{drug_id:a})).data;if(!M(e))return e.map(i=>({quantity:i.current_quantity,packSize:i.pack_size}))}}const Rt={11:[30],21:[25],22:[60],24:[30,60,90,100],30:[90],39:[60],73:[120],74:[60],76:[1e3],297:[30,60,90],576:[30,60,90],613:[60],731:[60],732:[60],733:[60],734:[30],735:[30],736:[60],738:[60],931:[12,30,60],932:[30],954:[60],963:[30,60,90],968:[60],969:[30],971:[30,60,90],976:[60],977:[30],982:[30],983:[30,90],1039:[30,60,90],1043:[60],1044:[30],1056:[24],1216:[3,6,8,12]};class Ya extends L{constructor(e,i){super(e,54,i);W(this,"drugHistory");W(this,"currentDrugOrder");W(this,"useDrugManagement");this.drugHistory=[],this.currentDrugOrder=[],this.useDrugManagement=!1}setIsDrugManagementEnabled(e){this.useDrugManagement=e}getDrugHistory(){return this.drugHistory}getCurrentOrder(){return this.currentDrugOrder}buildDispensations(e,i,r){const c=[];for(let s=0;s<r;s++)c.push({drug_order_id:e,date:this.date,quantity:i/r});return c}saveDispensations(e){return $.postJson("/dispensations",{dispensations:e,program_id:ie})}async voidOrder(e){return $.void("/dispensations/".concat(e),{})}async loadDrugHistory(){try{this.drugHistory=(await Se.getDrugOrderHistory(this.patientID)).data||[]}catch(e){console.warn(e)}}async loadCurrentDrugOrder(){if(this.currentDrugOrder=(await Se.getDrugOrders(this.patientID)).data||[],!!this.useDrugManagement)for(const e of this.currentDrugOrder)e.stocks=await Wa.fetchAvailableDrugStock(e.drug.drug_id)}getDrugPackSizes(e){return e in Rt?Rt[e]:[30,60,90]}calcCompletePack(e,i){const r=e.barcodes.sort((s,d)=>s.tabs-d.tabs);if(r.length==0||i==0)return i;for(const s in r){const{tabs:d}=r[s];if(parseInt(d)>=i)return d}return parseInt(r[r.length-1].tabs)}}const ja=ae({__name:"PatientVisit",props:{patient:{type:Object,required:!0}},setup(t){const a=t,e=q(()=>a.patient.getID()),i=new oa(e.value,-1),r=new la(e.value,-1),c=new za(e.value,-1),s=new Ya(e.value,-1),d=new qa(e.value,-1),m=new La(e.value,-1),b=new Ga(e.value,-1),_=E(),I=E(),P=E([]),w=E([]),S=E([]),D=E([]),g=q(()=>!(_.value&&a.patient.getAge()>18)),h=q(()=>a.patient.isFemale()),T=E(""),k=Q().format(Ue),R=Q(a.patient.getBirthdate()).format(Ue),A=E(!1),U=re({}),u=re({visitDate:{value:Q().format("YYYY-MM-DD"),label:"Visit Date",required:!0,validation:async l=>new Date(l.value)>new Date(k)?["Visit date cannot be after today's date"]:new Date(l.value)<new Date(R)?["Visit date cannot be before patient's birth date"]:null},weight:{value:void 0,label:"Weight",required:!0,computedValue:l=>({tag:"vitals",obs:i.buildValueNumber("Weight",l)}),validation:(l,v)=>(M(l)||!l.value)&&v.patientPresent.value==="No"?null:i.validator({...l,label:"Weight"})},height:{value:void 0,label:"Height",computedValue:l=>({tag:"vitals",obs:i.buildValueNumber("Height",l)}),validation:l=>!g.value||(M(l)||!l.value)&&u.patientPresent.value==="No"?null:i.validator({...l,label:"Height"})},isPregnant:{value:void 0,label:"Is the patient pregnant?",required:h.value,computedValue:l=>({tag:"consultation",obs:r.buildValueCoded("Is patient pregnant",l)}),validation:async l=>h.value&&Ie(l)},isBreastfeeding:{value:void 0,label:"Is the patient breastfeeding?",required:h.value,computedValue:l=>({tag:"consultation",obs:r.buildValueCoded("Is patient breast feeding",l)}),validation:async l=>h.value&&Ie(l)},nextAppointmentDate:{value:void 0,label:"Next Appointment Date",required:!0,computedValue:l=>({tag:"appointment",obs:b.buildValueDate("Appointment date",l)}),validation:async(l,v)=>new Date(l.value)<new Date(v.visitDate.value)?["Appointment date cannot be before visit date"]:new Date(l.value)>new Date(T.value)?["Appointment date cannot be after drug run out date"]:null},patientPresent:{value:void 0,label:"Is the patient present?",required:!0,computedValue:l=>({tag:"reception",obs:d.buildValueCoded("Patient present",l)})},guardianPresent:{value:void 0,label:"Is the guardian present?",required:!0,computedValue:l=>({tag:"reception",obs:d.buildValueCoded("Guardian present",l)})},pillCount:{value:void 0,label:"Pill Count",required:D.value.length>0,validation:async l=>D.value.length>0&&ye(l)},regimen:{value:void 0,label:"Regimen",placeholder:"Select a regimen",computedValue:()=>({tag:"consultation",obs:c.buildValueCoded("Medication orders","Antiretroviral drugs")})},totalCPTGiven:{value:void 0,label:"Total CPT Given",computedValue:()=>({tag:"consultation",obs:c.buildValueCoded("Medication orders","CPT")})},totalIPTGiven:{value:void 0,label:"Total IPT Given",computedValue:()=>({tag:"consultation",obs:c.buildValueCoded("Medication orders","INH")}),validation:async(l,v)=>{var p,C;return(((p=v.tbMed.value)==null?void 0:p.label)==="6H"||((C=v.tbMed.value)==null?void 0:C.label)==="3HP (RFP + INH)")&&ye(l)}},totalRFPGiven:{value:void 0,label:"Total RFP Given",computedValue:()=>({tag:"consultation",obs:c.buildValueCoded("Medication orders","3HP (RFP + INH)")}),validation:async(l,v)=>{var p;return((p=v.tbMed.value)==null?void 0:p.label)==="3HP (RFP + INH)"&&ye(l)}},total3HPGiven:{value:void 0,label:"Total 3HP Given",computedValue:()=>({tag:"consultation",obs:c.buildValueCoded("Medication orders","INH 300 / RFP 300 (3HP)")}),validation:async(l,v)=>{var p;return((p=v.tbMed.value)==null?void 0:p.label)==="3HP (INH 300 / RFP 300)"&&ye(l)}},totalPyridoxineGiven:{value:void 0,label:"Total Pyridoxine Given",validation:async(l,v)=>{var p;return((p=v.tbMed.value)==null?void 0:p.label)&&ye(l)}},tbMed:{value:void 0,label:"TPT Medication",placeholder:"Select a TPT medication"},hasContraindications:{value:"No",label:"Has Side Effects / Contraindications ?",validation:async l=>Vt([()=>Ie(l),()=>l.value==="No"||w.value.some(v=>v.isChecked)?null:["Please select at least one side effect"]])},hasSideEffects:{value:"No",label:"Has Other Side Effects ?",validation:async l=>Vt([()=>Ie(l),()=>l.value==="No"||S.value.some(v=>v.isChecked)?null:["Please select at least one side effect"]])},tbStatus:{value:void 0,label:"TB Status",required:!0,computedValue:l=>({tag:"consultation",obs:r.buildValueCoded("TB Status",l.value)})},tbTreatmentStartDate:{value:"",label:"TB treatment start date",validation:async l=>{if(!A.value){if(new Date(l.value)>new Date(k))return["TB treatment start date cannot be after today's date"];if(new Date(l.value)<new Date(R))return["TB treatment start date cannot be before patient's birth date"]}return null},computedValue:l=>({tag:"consultation",obs:r.buildValueDate("TB treatment start date",l)})},tbTreatmentPeriod:{value:void 0,label:"TB treatment period (months)",computedValue:l=>({tag:"consultation",obs:r.buildValueNumber("TB treatment period",l)})},cxrResult:{value:"",label:"CXR (Chest X-ray) Screening method Result",computedValue:l=>({tag:"consultation",obs:r.buildGroupValueCoded("TB screening method used","chest xray",l)})},mwrdResult:{value:"",label:"mWRD (Molecular WHO Recommended Rapid Diagnostic test) Screening method Result",computedValue:l=>({tag:"consultation",obs:r.buildGroupValueCoded("TB screening method used","Molecular WHO Recommended Rapid Diagnostic test",l)})}}),ue=async(l,v)=>{const p={label:"Unkown",value:"Unkown",other:[{drug_id:1046,drug_name:"Unknown ARV",am:1,pm:0,units:"",frequency:"Daily (QOD)"}]},C=(await we.getRegimensByWeight(l,v)).data;return M(C)?[p]:Object.keys(C).map(Z=>({label:Z,value:Z,other:C[Z]})).concat([p])};ve(()=>u.regimen.value,l=>{var v;Ze(),l&&((v=l==null?void 0:l.other)==null||v.forEach(p=>{var C;U[p.drug_name]={label:"".concat((C=p.alternative_drug_name)!=null?C:p.drug_name," given"),value:0,required:!0,validation:Z=>ye(Z,"POSITIVE_INTEGERS")}}))}),ve(u.patientPresent,l=>{l.value==="No"?(u.weight.required=!1,u.weight.error="",u.guardianPresent.value="Yes"):u.weight.required=!0}),ve(u.guardianPresent,l=>{l.value==="No"&&(u.patientPresent.value="Yes")}),ve([()=>u.weight.value,()=>u.tbStatus.value],async([l,v])=>{u.regimen.value=void 0,Ze();const p=!M(v)&&!v.label.match(/TB Not Suspected/i);l?(P.value=await ue(u.weight.value,p),u.patientPresent.value="Yes",u.patientPresent.disabled=!0):!l&&u.weight.required&&(u.patientPresent.value=void 0,u.patientPresent.disabled=!1),u.tbMed.disabled=p||A.value});const Pe=()=>{var l,v;return M(U)?1/0:Math.min(...(v=(l=u.regimen.value)==null?void 0:l.other)==null?void 0:v.map(p=>{var C,Z,ne,ze,Je;return((Z=(C=U[p.drug_name])==null?void 0:C.value)!=null?Z:0)/(((ne=p.am)!=null?ne:0)+((ze=p.noon)!=null?ze:0)+((Je=p.pm)!=null?Je:0))||1}))};ve([()=>U,()=>u.pillCount.value,()=>u.visitDate.value],()=>{const l=parseInt(u.pillCount.value)||0,v=Pe();v!==1/0&&(T.value=Q(u.visitDate.value).add(v+l,"days").format(Ue),u.nextAppointmentDate.label="Next Appointment Date (Drug run out date: ".concat(Q(T.value).format(Ge),")"),u.nextAppointmentDate.value=T.value)},{deep:!0}),ve(()=>u.visitDate.value,()=>pt());const x=q(()=>{var l;return((l=u.tbMed.value)==null?void 0:l.label)==="3HP (INH 300 / RFP 300)"}),N=q(()=>{var l;return((l=u.tbMed.value)==null?void 0:l.label)==="3HP (RFP + INH)"}),se=q(()=>{var l;return((l=u.tbMed.value)==null?void 0:l.label)==="6H"}),Te=q(()=>u.hasContraindications.value==="Yes"),Ce=q(()=>u.hasSideEffects.value==="Yes"),Fe=q(()=>{var l;return/Confirmed TB on treatment/i.test((l=u.tbStatus.value)==null?void 0:l.label)}),xe=q(()=>{var l;return/Suspected/i.test((l=u.tbStatus.value)==null?void 0:l.label)}),ge=[{label:"Normal",value:"Negative"},{label:"Abnormal",value:"Positive"},{label:"Unknown/Not done",value:"Unknown"}],Xe=[{label:"Negative",value:"Negative"},{label:"Positive",value:"Positive"},{label:"Unknown/Not done",value:"Unknown"}],Et=Ke(["6H","3HP (RFP + INH)","3HP (INH 300 / RFP 300)"]),kt=Ke(["Confirmed TB Not on treatment","Confirmed TB on treatment","TB Not Suspected","TB Suspected"]),pt=async()=>{await Le.setSessionDate(u.visitDate.value),r.setDate(u.visitDate.value),A.value=!1;const l=await r.getFirstValueCoded("TB status");if(/Confirmed TB on treatment/i.test(l)){const v=await r.getFirstValueDatetime("TB treatment start date"),p=await r.getFirstValueNumber("TB treatment period")||6;if(v){const C=Q(u.visitDate.value).diff(v,"months");A.value=C<=p}}u.tbStatus.required=!A.value},$t=async l=>{const v=l.height||_.value,p=Ja.calculateBMI(l.weight,v);return i.buildValueNumber("BMI",p)},Ft=async()=>{const l=[await r.buildValueCoded("Patient using family planning","No")];return r.getFamilyPlanningMethods().forEach(async p=>{l.push(await r.buildValueCoded(p,"No"))}),l},Bt=async()=>Promise.all(qe.getConceptsByCategory("tb_symptom",!0).map(async l=>r.buildGroupValueCoded(l.name,l.name,"No"))),Oe=(l,v,p,C)=>({drug_inventory_id:l.drug_id,equivalent_daily_dose:c.calculateEquivalentDosage(l.am,l.pm),dose:c.calculateDosage(l.am,l.pm),start_date:C,auto_expire_date:Q(C).add(p,"days").format("YYYY-MM-DD"),units:l.units,qty:v,frequency:l.frequency,instructions:c.getInstructions(l.drug_name,l.am,l.pm,l.units)}),Ht=async()=>{await Le.setSessionDate(u.visitDate.value),i.setDate(u.visitDate.value),r.setDate(u.visitDate.value),c.setDate(u.visitDate.value),d.setDate(u.visitDate.value),m.setDate(u.visitDate.value),b.setDate(u.visitDate.value),s.setDate(u.visitDate.value),await Ne(u,async(l,v)=>{var gt,ft,vt,_t,bt;const p=[];let C=0;if(!M(l.regimen)&&await sa(U)){const te=l.regimen.other,ee=ra(U).formData;C=Pe(),te.forEach(X=>p.push(Oe(X,ee[X.drug_name],C,l.visitDate)))}else if(!await Ae("Are you sure you want to continue without dispensing ART drugs?"))return;if(l.totalCPTGiven&&St((await we.getRegimenExtras("Cotrimoxazole",(gt=l.weight)!=null?gt:I.value)).data,"concept_name").filter(te=>te.frequency==="Daily (QOD)").forEach(te=>p.push(Oe(te,l.totalCPTGiven,C,l.visitDate))),(ft=l.tbMed)!=null&&ft.value){const te=St((await we.getRegimenExtras("INH",(vt=l.weight)!=null?vt:I.value)).data,["concept_name","frequency"]),ee=te.find(X=>X.concept_name==="Pyridoxine");if(ee&&l.totalPyridoxineGiven&&p.push(Oe(ee,l.totalPyridoxineGiven,C,l.visitDate)),l.totalIPTGiven){const X=te.find(De=>De.concept_name==="Isoniazid"&&(se.value&&De.frequency==="Daily (QOD)"||N.value&&De.frequency==="Weekly (QW)"));p.push(Oe(X,l.totalIPTGiven,C,l.visitDate))}if(l.totalRFPGiven&&N.value){const X=(await we.getRegimenExtras("Rifapentine",(_t=l.weight)!=null?_t:I.value)).data;X.length&&p.push(Oe(X[0],l.totalRFPGiven,C,l.visitDate))}if(l.total3HPGiven&&x.value){const X=(await we.getRegimenExtras("INH / RFP",(bt=l.weight)!=null?bt:I.value)).data;p.push(Oe(X[0],l.total3HPGiven,C,l.visitDate))}}if(!M(p)){await c.createEncounter();const ee=(await c.createDrugOrder(p)).data.map(X=>{const De=p.find(qt=>qt.drug_inventory_id===X.drug_inventory_id);return s.buildDispensations(X.order_id,De.qty,1)});await s.saveDispensations(ee.flat(1))}const Z=await We(v,"vitals");if(!M(Z)){await i.createEncounter();const te=await $t(l);await i.saveObservationList([...Z,te])}await r.createEncounter();let ne=await We(v,"consultation");ne=[...ne,...await wt("Malawi ART side effects",w.value)],ne=[...ne,...await Bt()],Ce.value&&(ne=[...ne,...await wt("Other side effect",S.value)]),h.value&&(ne=[...ne,...await Ft()]),await r.saveObservationList(ne),await d.createEncounter();const ze=await We(v,"reception");if(await d.saveObservationList(ze),D.value.length>0){await m.createEncounter();const te=await Promise.all(D.value.map(async ee=>{const X=m.calculateExpected(ee.quantity,ee.equivalent_daily_dose,ee.order.start_date,ee.frequency),De=m.calculateAdherence(ee.quantity,l.pillCount,X);return[await m.buildAdherenceObs(ee.order_id,ee.drug_inventory_id,De),await m.buildPillCountObs(ee.order_id,l.pillCount)]}));await m.saveObservationList(te.flat(1))}await b.createEncounter();const Je=await We(v,"appointment");await b.saveObservationList(Je),await He("Patient visit saved successfully"),await Le.resetSessionDate(),await z.hide(),Y.emit(j.RELOAD_PATIENT_VISIT_DATA),Y.emit(j.RELOAD_STAGING_INFORMATION)})},Ut=async()=>{if(await Ae("Are you sure you want to clear all fields?")){for(const l in u)u[l].value="",u[l].error="",u[l].disabled=!1;Ze(),Y.emit(j.ON_CLEAR)}},Ze=()=>{for(const l in U)delete U[l]};return Re(async()=>{try{await pt(),_.value=await a.patient.getRecentHeight(),I.value=await a.patient.getRecentWeight(),I.value&&(P.value=await ue(I.value)),D.value=(await Se.getLastDrugsReceived(a.patient.getID())).data,u.pillCount.required=D.value.length>0,w.value=qe.getConceptsByCategory("contraindication",!0).map(l=>({value:l.concept_id,label:l.name,other:l})),S.value=qe.getConceptsByCategory("side_effect",!0).map(l=>({value:l.concept_id,label:l.name,other:l}))}catch(l){Pt("Form initialization failed. Try to refresh the page"),console.error(l)}}),(l,v)=>(V(),J(K,null,[n(y(dt),null,{default:o(()=>[n(y(je),null,{default:o(()=>[n(y(ct),null,{default:o(()=>[F("Patient Visit")]),_:1})]),_:1})]),_:1}),n(y(rt),{class:"ion-padding"},{default:o(()=>[n(y(me),{style:{width:"100%"}},{default:o(()=>[n(y(pe),null,{default:o(()=>[n(y(O),{size:"12",class:"ion-margin-vertical"},{default:o(()=>[n(Ve,{modelValue:u.visitDate,"onUpdate:modelValue":v[0]||(v[0]=p=>u.visitDate=p),form:u,minDate:y(R),maxDate:y(k)},null,8,["modelValue","form","minDate","maxDate"])]),_:1}),n(y(O),{size:"6",class:"ion-margin-vertical"},{default:o(()=>[n(fe,{modelValue:u.patientPresent,"onUpdate:modelValue":v[1]||(v[1]=p=>u.patientPresent=p),inline:"",disabled:u.patientPresent.disabled},null,8,["modelValue","disabled"])]),_:1}),n(y(O),{size:"6",class:"ion-margin-vertical"},{default:o(()=>[n(fe,{modelValue:u.guardianPresent,"onUpdate:modelValue":v[2]||(v[2]=p=>u.guardianPresent=p),inline:""},null,8,["modelValue"])]),_:1}),h.value?(V(),J(K,{key:0},[n(y(O),{size:"6",class:"ion-margin-vertical"},{default:o(()=>[n(fe,{modelValue:u.isPregnant,"onUpdate:modelValue":v[3]||(v[3]=p=>u.isPregnant=p),inline:""},null,8,["modelValue"])]),_:1}),n(y(O),{size:"6",class:"ion-margin-vertical"},{default:o(()=>[n(fe,{modelValue:u.isBreastfeeding,"onUpdate:modelValue":v[4]||(v[4]=p=>u.isBreastfeeding=p),inline:""},null,8,["modelValue"])]),_:1})],64)):G("",!0),n(y(O),{size:"6",class:"ion-margin-vertical"},{default:o(()=>[n(fe,{modelValue:u.hasContraindications,"onUpdate:modelValue":v[5]||(v[5]=p=>u.hasContraindications=p),inline:""},null,8,["modelValue"]),Te.value?(V(),H(st,{key:0,items:w.value,numberOfColumns:2},{default:o(({entries:p})=>[(V(!0),J(K,null,ke(p,C=>(V(),H(y(Qe),{lines:"none",key:C.value},{default:o(()=>[n(y(it),null,{default:o(()=>[F(ce(C.label),1)]),_:2},1024),n(y(ot),{slot:"start",modelValue:C.isChecked,"onUpdate:modelValue":Z=>C.isChecked=Z},null,8,["modelValue","onUpdate:modelValue"])]),_:2},1024))),128))]),_:1},8,["items"])):G("",!0)]),_:1}),n(y(O),{class:"ion-margin-vertical",size:"6"},{default:o(()=>[n(fe,{modelValue:u.hasSideEffects,"onUpdate:modelValue":v[6]||(v[6]=p=>u.hasSideEffects=p),inline:""},null,8,["modelValue"]),Ce.value?(V(),H(st,{key:0,items:S.value,numberOfColumns:2},{default:o(({entries:p})=>[(V(!0),J(K,null,ke(p,C=>(V(),H(y(Qe),{lines:"none",key:C.value},{default:o(()=>[n(y(it),null,{default:o(()=>[F(ce(C.label),1)]),_:2},1024),n(y(ot),{slot:"start",modelValue:C.isChecked,"onUpdate:modelValue":Z=>C.isChecked=Z},null,8,["modelValue","onUpdate:modelValue"])]),_:2},1024))),128))]),_:1},8,["items"])):G("",!0)]),_:1}),n(y(O),{size:"6",class:"ion-margin-vertical"},{default:o(()=>[n(le,{modelValue:u.weight,"onUpdate:modelValue":v[7]||(v[7]=p=>u.weight=p),form:u,min:1},null,8,["modelValue","form"])]),_:1}),g.value?(V(),H(y(O),{key:1,size:"6",class:"ion-margin-vertical"},{default:o(()=>[n(le,{modelValue:u.height,"onUpdate:modelValue":v[8]||(v[8]=p=>u.height=p),form:u,min:1},null,8,["modelValue","form"])]),_:1})):G("",!0),A.value?G("",!0):(V(),H(y(O),{key:2,class:"ion-margin-vertical",size:g.value?"12":"6"},{default:o(()=>[n(he,{modelValue:u.tbStatus,"onUpdate:modelValue":v[9]||(v[9]=p=>u.tbStatus=p),options:y(kt)},null,8,["modelValue","options"])]),_:1},8,["size"])),Fe.value?(V(),J(K,{key:3},[n(y(O),{size:"6",class:"ion-margin-vertical"},{default:o(()=>[n(Ve,{modelValue:u.tbTreatmentStartDate,"onUpdate:modelValue":v[10]||(v[10]=p=>u.tbTreatmentStartDate=p),form:u,minDate:y(R),maxDate:y(k)},null,8,["modelValue","form","minDate","maxDate"])]),_:1}),n(y(O),{size:"6",class:"ion-margin-vertical"},{default:o(()=>[n(le,{modelValue:u.tbTreatmentPeriod,"onUpdate:modelValue":v[11]||(v[11]=p=>u.tbTreatmentPeriod=p),form:u,min:1},null,8,["modelValue","form"])]),_:1})],64)):xe.value?(V(),J(K,{key:4},[n(y(O),{size:"6",class:"ion-margin-vertical"},{default:o(()=>[n(fe,{modelValue:u.cxrResult,"onUpdate:modelValue":v[12]||(v[12]=p=>u.cxrResult=p),"custom-options":ge},null,8,["modelValue"])]),_:1}),n(y(O),{size:"6",class:"ion-margin-vertical"},{default:o(()=>[n(fe,{modelValue:u.mwrdResult,"onUpdate:modelValue":v[13]||(v[13]=p=>u.mwrdResult=p),"custom-options":Xe},null,8,["modelValue"])]),_:1})],64)):G("",!0),n(y(O),{size:"6",class:"ion-margin-vertical"},{default:o(()=>[n(he,{modelValue:u.regimen,"onUpdate:modelValue":v[14]||(v[14]=p=>u.regimen=p),options:P.value},null,8,["modelValue","options"])]),_:1}),y(M)(U)?G("",!0):(V(!0),J(K,{key:5},ke(Object.values(U),(p,C)=>(V(),H(y(O),{size:"6",class:"ion-margin-vertical"},{default:o(()=>[n(le,{"model-value":p,form:U,min:1},null,8,["model-value","form"])]),_:2},1024))),256)),n(y(O),{size:"6",class:"ion-margin-vertical"},{default:o(()=>[n(le,{modelValue:u.totalCPTGiven,"onUpdate:modelValue":v[15]||(v[15]=p=>u.totalCPTGiven=p),form:u,min:1},null,8,["modelValue","form"])]),_:1}),n(y(O),{size:"6",class:"ion-margin-vertical"},{default:o(()=>[n(he,{modelValue:u.tbMed,"onUpdate:modelValue":v[16]||(v[16]=p=>u.tbMed=p),options:y(Et)},null,8,["modelValue","options"])]),_:1}),se.value||N.value?(V(),H(y(O),{key:6,size:"6"},{default:o(()=>[n(le,{modelValue:u.totalIPTGiven,"onUpdate:modelValue":v[17]||(v[17]=p=>u.totalIPTGiven=p),form:u,min:1},null,8,["modelValue","form"])]),_:1})):G("",!0),N.value?(V(),H(y(O),{key:7,size:"6"},{default:o(()=>[n(le,{modelValue:u.totalRFPGiven,"onUpdate:modelValue":v[18]||(v[18]=p=>u.totalRFPGiven=p),form:u,min:1},null,8,["modelValue","form"])]),_:1})):G("",!0),x.value?(V(),H(y(O),{key:8,size:"6"},{default:o(()=>[n(le,{modelValue:u.total3HPGiven,"onUpdate:modelValue":v[19]||(v[19]=p=>u.total3HPGiven=p),form:u,min:1},null,8,["modelValue","form"])]),_:1})):G("",!0),x.value||N.value||se.value?(V(),H(y(O),{key:9,size:"6"},{default:o(()=>[n(le,{modelValue:u.totalPyridoxineGiven,"onUpdate:modelValue":v[20]||(v[20]=p=>u.totalPyridoxineGiven=p),form:u,min:1},null,8,["modelValue","form"])]),_:1})):G("",!0),D.value.length>0?(V(),H(y(O),{key:10,size:"6",class:"ion-margin-vertical"},{default:o(()=>[n(le,{modelValue:u.pillCount,"onUpdate:modelValue":v[21]||(v[21]=p=>u.pillCount=p),form:u,min:1},null,8,["modelValue","form"])]),_:1})):G("",!0),n(y(O),{size:D.value.length>0?"6":"12",class:"ion-margin-vertical"},{default:o(()=>[n(Ve,{modelValue:u.nextAppointmentDate,"onUpdate:modelValue":v[22]||(v[22]=p=>u.nextAppointmentDate=p),form:u,minDate:u.visitDate.value,maxDate:T.value},null,8,["modelValue","form","minDate","maxDate"])]),_:1},8,["size"])]),_:1})]),_:1})]),_:1}),n(y(ut),null,{default:o(()=>[n(y(je),null,{default:o(()=>[n(y(be),{color:"primary",onClick:v[23]||(v[23]=p=>y(z).hide()),slot:"end"},{default:o(()=>[F("Close")]),_:1}),n(y(be),{color:"warning",onClick:Ut,slot:"end"},{default:o(()=>[F("Reset")]),_:1}),n(y(be),{color:"success",onClick:Ht,slot:"end"},{default:o(()=>[F("Save")]),_:1})]),_:1})]),_:1})],64))}});const Qa=oe(ja,[["__scopeId","data-v-4c147193"]]),Ka=ae({props:{patient:{type:Object,required:!0},startDate:{type:String,required:!0}},components:{DataTable:Tt,IonCard:Wt,IonCardHeader:Yt,IonCardTitle:jt,IonCardContent:Qt,IonButton:be},setup(t){const a=E([]),e=q(()=>t.patient.getID()),i=re({showIndex:!1,tableCssTheme:"emc-datatable-theme"}),r=E([{label:"Add Visit",action:async()=>{await z.show(Qa,{patient:t.patient})}},{label:"Update Outcome",action:async()=>z.show(Ba,{patient:t.patient})},{label:"Enter VL Results",action:async()=>z.show(Ot,{patient:t.patient})}]),c=S=>{const D=t.startDate!=="N/A"?"("+Q(S).diff(t.startDate,"months")+"M)":"";return"".concat(It(S)," ").concat(D)},s=E([{path:"visitDate",label:"Visit Date"},{path:"visitBy",label:"Given To"},{path:"weight",label:"Weight (Kg)"},{path:"height",label:"Height (cm)"},{path:"bmi",label:"BMI"},...t.patient.isFemale()?[{path:"pregnant",label:"Preg"},{path:"breastfeeding",label:"B/F"}]:[],{path:"tbStatus",label:"TB Status"},{path:"sideEffects",label:"Side Effects",drillable:!0,formatter:S=>S>0?"Yes":"No"},{path:"regimen",label:"ART Regimen",drillable:!0},{path:"nextAppointment",label:"Next Appointment"},{path:"outcome",label:"Outcome"},{path:"vlResult",label:"Viral Load"}]),d=S=>({title:"Side effects noted on ".concat(S.row.visitDate),rows:S.row.sideEffects.map(D=>({sideEffect:D})),columns:[{path:"sideEffect",label:"Name of Side Effect"}]}),m=S=>({title:"Drugs dispensed on ".concat(S.row.visitDate),columns:[{path:"name",label:"Drug Name"},{path:"quantity",label:"Quantity"},{path:"units",label:"Units"}],rows:S.row.drugs.map(D=>({name:D[0],quantity:D[1],units:"tab (s)"}))}),b=async S=>{const D=/regimen/i.test(S.column.path)?m(S):d(S);M(D.rows)||await z.show(ma,D)},_=[{label:"void",icon:Kt,color:"danger",action:(S,D)=>I(S.visitDate,D,a.value)}],I=async(S,D,g)=>{ua(async h=>{(await Dt.getEncounters(e.value,{date:S})).data.forEach(async k=>{await Dt.voidEncounter(k.encounter_id,h)}),g.splice(D,1)},"small-modal")},P=async S=>S.tb_status.match(/Unknown/i)||S.outcome==="Defaulted"?"":qe.getCachedConceptName(S.tb_status),w=()=>{mt.getPatientVisits(e.value,!0).then(async S=>{a.value=[];for(const D of S){const g=(await Nt.getCurrentProgramInformation(e.value,D)).data;let h="",T="",k="",R="";if(g.outcome!=="Defaulted"){const A=await B.getFirstValueDatetime(e.value,"appointment date",D);if(A&&(h=It(A)),T=await B.getFirstValueCoded(e.value,"Is patient pregnant",D),k=await B.getFirstValueCoded(e.value,"Is patient breast feeding",D),g.viral_load==="N/A"){const U=await B.getFirstObs(e.value,"HIV viral load",D);U&&U.value_text&&U.value_numeric&&(R=U.value_numeric===1?"LDL":U.value_text+U.value_numeric.toString())}else R=g.viral_load}g&&a.value.push({visitDate:c(D),visitBy:g.visit_by.match(/Unk/i)?"":g.visit_by,weight:g.outcome==="Defaulted"?"":g.weight,height:g.outcome==="Defaulted"?"":g.height,bmi:g.outcome==="Defaulted"?"":g.bmi,pregnant:T,breastfeeding:k,tbStatus:await P(g),sideEffects:g.outcome==="Defaulted"?"":g.side_effects,regimen:g.outcome==="Defaulted"?"":g.regimen,nextAppointment:h,outcome:g.outcome.match(/Unk/i)?"":g.outcome,vlResult:R,drugs:g.pills_dispensed})}})};return Y.on(j.RELOAD_PATIENT_VISIT_DATA,()=>w()),Re(()=>{w()}),{actionButtons:r,tableConfig:i,rowButtons:_,columns:s,rows:a,onDrilldownHandler:b}}});const xa=t=>(xt("data-v-e925dcea"),t=t(),Xt(),t),Xa=xa(()=>_e("span",{class:"title"},"Summary of Visits",-1)),Za={class:"ion-float-right ion-margin-end ion-margin-bottom"};function en(t,a,e,i,r,c){const s=f("ion-icon"),d=f("ion-button"),m=f("ion-card-title"),b=f("ion-card-header"),_=f("data-table"),I=f("ion-card-content"),P=f("ion-card");return V(),H(P,{class:"his-card",style:{padding:"0 !important"}},{default:o(()=>[n(b,null,{default:o(()=>[n(m,null,{default:o(()=>[Xa,_e("span",Za,[(V(!0),J(K,null,ke(t.actionButtons,w=>(V(),H(d,{key:w.label,onClick:w.action,color:w.color||"primary"},{default:o(()=>[w.icon?(V(),H(s,{key:0,icon:w.icon,class:"ion-margin-right"},null,8,["icon"])):G("",!0),F(" "+ce(w.label),1)]),_:2},1032,["onClick","color"]))),128))])]),_:1})]),_:1}),n(I,{class:"ion-no-padding",style:{"min-height":"45vh"}},{default:o(()=>[n(_,{rows:t.rows,columns:t.columns,"row-actions-buttons":t.rowButtons,config:{showSearchField:!1},color:"light",onDrilldown:t.onDrilldownHandler},null,8,["rows","columns","row-actions-buttons","onDrilldown"])]),_:1})]),_:1})}const tn=oe(Ka,[["render",en],["__scopeId","data-v-e925dcea"]]),an=ae({components:{MultiColumnView:st,IonList:Zt,IonItem:Qe},props:{patient:{type:Object,required:!0},artStartDate:{type:String,required:!0},guardians:{type:Array,default:()=>[]}},emits:["updatePatient","updateARVNumber","updateGuardian"],setup(t,{emit:a}){const e=E(0),i=E(0),r=E(0),c=E(""),s=E(""),d=E(""),m=E(""),b=E(""),_=E(""),I=E(""),P=E(""),w=E(""),S=E(""),D=E(""),g=N=>N.other&&typeof N.other.onClickHandler=="function",h=q(()=>!M(t.guardians)),T=async N=>{var se;g(N)&&await((se=N.other)==null?void 0:se.onClickHandler())},k=()=>{const N=t.patient.getBirthdate(),se=t.artStartDate!=="N/A"?Q(t.artStartDate).diff(N,"years"):"";return"".concat(de.toStandardHisDisplayFormat(N)," (").concat(se,")")},R=(N=!1)=>{N&&yt.invalidate("PATIENT_LAB_ORDERS"),yt.get("PATIENT_LAB_ORDERS",{patientID:t.patient.getID()}).then(se=>{const Te=se.data.reduce((Ce,Fe)=>{const xe=Fe.tests.filter(ge=>ge.name.match(/hiv/i)&&!M(ge.result)).map(ge=>ge.result);return Ce.concat(xe.reduce((ge,Xe)=>ge.concat(Xe),[]))},[]).sort((Ce,Fe)=>new Date(Ce.date)>new Date(Fe.date)?-1:1);S.value=M(Te)?"":"".concat(Te[0].value_modifier).concat(Te[0].value," (").concat(de.toStandardHisDisplayFormat(Te[0].date),")")})},A=()=>({onClickHandler(){ea.push("/patient/reception/".concat(t.patient.getID(),"/false"))}}),U=()=>h.value?t.guardians.map(N=>"".concat(N.name," (").concat(N.relationshipType,")")).join(","):"Add",u=()=>({onClickHandler:()=>a("updatePatient")}),ue=q(()=>[{label:"ARV Number",value:t.patient.getArvNumber(),other:{onClickHandler:()=>a("updateARVNumber")}},{label:"MW National ID",value:t.patient.getMWNationalID(),other:u()},{label:"Name",value:t.patient.getGivenName()+" "+t.patient.getFamilyName(),other:u()},{label:"DOB and Age at Initiation",value:k(),other:u()},{label:"Sex",value:ha(t.patient.getGender()),other:u()},{label:"Location",value:t.patient.getCurrentVillage(),other:u()},{label:"Landmark",value:t.patient.getClosestLandmark(),other:u()},{label:"Phone Number",value:t.patient.getPhoneNumber(),other:u()},{label:"Guardian",value:U(),other:{onClickHandler:()=>a("updateGuardian")}},{label:"Agrees to follow up",value:b.value,other:A()},{label:"Date of starting first line ARV Regimen",value:t.artStartDate,other:A()},{label:"Initial Weight (KG)",value:e.value,other:A()},{label:"Initial Height (CM)",value:i.value,other:A()},{label:"Initial BMI",value:r.value,other:A()},{label:"Initial TB Status",value:c.value,other:A()},{label:"Pregnant at Initiation",value:d.value,other:A()},{label:"Breastfeeding at Initiation",value:s.value,other:A()},{label:"Latest VL Result and Result Date",value:S.value,other:{onClickHandler:()=>z.show(Ot,{patient:t.patient})}},{label:"TI",value:m.value,other:A()},{label:"HIV test place",value:P.value,other:A()},{label:"HIV test date",value:I.value,other:A()},{label:"WHO stage",value:D.value,other:A()},{label:"Reason for starting ART",value:_.value,other:A()},{label:"Staging codition",value:w.value,other:A()}]),Pe=async()=>{const N=await t.patient.getHIVTestDate();N&&(I.value=de.toStandardHisDisplayFormat(N))},x=()=>{t.patient.getInitialWeight().then(N=>e.value=N),t.patient.getInitialHeight().then(N=>i.value=N),t.patient.getInitialBMI().then(N=>r.value=N),t.patient.getInitialTBStatus().then(N=>c.value=N),t.patient.hasPregnancyAtARTInitiation().then(N=>d.value=N),t.patient.breastFeedingAtARTInitiation().then(N=>s.value=N),t.patient.everReceivedART().then(N=>m.value=N),t.patient.agreesToFollowUp().then(N=>b.value=N),t.patient.getReasonForStartingART().then(N=>_.value=N),t.patient.getHIVTestLocation().then(N=>P.value=N),t.patient.getStagingCondition().then(N=>w.value=N),t.patient.getWhoStage().then(N=>D.value=N),Pe()};return Re(()=>{x(),R(),Y.on(j.RELOAD_LATEST_VL_RESULT,()=>R(!0)),Y.on(j.RELOAD_STAGING_INFORMATION,()=>x())}),{patientInfo:ue,onClickHandler:T,clickable:g}}});const nn={style:{width:"100%",display:"flex",justifyContent:"space-between"}},on={key:0},ln={key:1},sn={key:2},rn={key:3};function un(t,a,e,i,r,c){const s=f("ion-item"),d=f("ion-list"),m=f("multi-column-view");return V(),H(m,{items:t.patientInfo,numberOfColumns:3},{default:o(({entries:b})=>[n(d,{class:"his-card ion-margin-end"},{default:o(()=>[(V(!0),J(K,null,ke(b,(_,I)=>(V(),H(s,{key:I,lines:I===b.length-1?"none":void 0,button:t.clickable(_),onClick:P=>t.onClickHandler(_)},{default:o(()=>[_e("div",nn,[_.label?(V(),J("span",on,ce(_.label)+": ",1)):(V(),J("span",ln)),t.clickable(_)?(V(),J("span",sn,[_e("a",null,[_e("b",null,ce(_.value||"N/A"),1)])])):(V(),J("span",rn,[_e("b",null,ce(_.value||"N/A"),1)]))])]),_:2},1032,["lines","button","onClick"]))),128))]),_:2},1024)]),_:1},8,["items"])}const dn=oe(an,[["render",un],["__scopeId","data-v-c301d4d5"]]),cn=ae({components:{IonGrid:me,IonRow:pe,IonCol:O,TextInput:$e,DateInput:Ve,SelectInput:he},props:{patientService:{type:Object,required:!0}},setup(t){const a=E(!1),e=q(()=>/Unknown/i.test(t.patientService.getMWNationalID())?"":t.patientService.getMWNationalID()),i=re({givenName:{label:"First Name",value:t.patientService.getGivenName(),placeholder:"First Name",required:!0,validation:s=>Me(s)},familyName:{label:"last Name",value:t.patientService.getFamilyName(),placeholder:"Last Name",required:!0,validation:s=>Me(s)},middleName:{label:"middle Name",value:t.patientService.getMiddleName(),placeholder:"middle Name",validation:s=>!!s&&Me(s)},nationalId:{label:"Malawi National ID Number",value:e.value,placeholder:"Enter Malawi National ID Number",validation:s=>s&&s.label?va(s):null},gender:{value:t.patientService.getGender(),required:!0,label:"Gender",placeholder:"select gender"},birthdate:{value:t.patientService.getBirthdate(),label:"Date of Birth",placeholder:"Date of Birth",required:!0},cellPhoneNumber:{value:t.patientService.getPhoneNumber(),required:!0,label:"Cellphone Number",placeholder:"cellphone number e.g. 0991234567",validation:async s=>!(s.value==="Unknown"||s.value==="N/A")&&Ct(s)},homeVillage:{value:t.patientService.getCurrentVillage(),label:"Home Village",placeholder:"Home Village",required:!0},landmark:{value:t.patientService.getClosestLandmark(),label:"Landmark",placeholder:"Closest Landmark or Plot Number",required:!0}}),r=async s=>{var b,_,I,P,w;let d,m;try{(b=s==null?void 0:s.other)!=null&&b.traditional_authority_id&&(d=await ht.getTraditionalAuthorityById(s.other.traditional_authority_id)),d&&(m=await ht.getDistrictByID(d.district_id))}catch(S){Pt("Unable to resolve patient address. Saving using default address"),console.error(S)}return{home_district:(_=m==null?void 0:m.name)!=null?_:"N/A",home_traditional_authority:(I=d==null?void 0:d.name)!=null?I:"N/A",home_village:(s==null?void 0:s.label)||"N/A",current_district:(P=m==null?void 0:m.name)!=null?P:"N/A",current_traditional_authority:(w=d==null?void 0:d.name)!=null?w:"N/A",current_village:(s==null?void 0:s.label)||"N/A"}};return{today:Ee,patient:i,getLandmarks:ga,genderOptions:ca,isBirthdateEstimated:a,modal:z,onFinish:async()=>Ne(i,async s=>{const d={};if(s.givenName!==t.patientService.getGivenName()&&(d.given_name=s.givenName),s.familyName!==t.patientService.getFamilyName()&&(d.family_name=s.familyName),s.middleName!==t.patientService.getMiddleName()&&(d.middle_name=s.middleName),s.birthdate!==t.patientService.getBirthdate()&&(d.birthdate=s.birthdate),s.gender.value!==t.patientService.getGender()&&(d.gender=s.gender.value),s.cellPhoneNumber!==t.patientService.getPhoneNumber()&&(d.cell_phone_number=s.cellPhoneNumber),s.landmark.label!==t.patientService.getClosestLandmark()&&(d.landmark=s.landmark.label),s.homeVillage!==t.patientService.getCurrentVillage()&&Object.assign(d,{...d,...await r(s.homeVillage)}),!M(d)){const m=new lt;m.setPersonID(t.patientService.getID()),await m.updatePerson(d)}s.nationalId!==e.value&&await t.patientService.updateMWNationalId(s.nationalId),await z.hide(),Y.emit(j.RELOAD_PATIENT_DATA)}),getVillagesByName:fa}}});function mn(t,a,e,i,r,c){const s=f("ion-title"),d=f("ion-icon"),m=f("ion-button"),b=f("ion-buttons"),_=f("ion-toolbar"),I=f("ion-header"),P=f("TextInput"),w=f("ion-col"),S=f("SelectInput"),D=f("DateInput"),g=f("ion-row"),h=f("ion-grid"),T=f("ion-content"),k=f("ion-footer");return V(),J(K,null,[n(I,null,{default:o(()=>[n(_,null,{default:o(()=>[n(s,null,{default:o(()=>[F("Edit Patient Demographics")]),_:1}),n(b,{slot:"end"},{default:o(()=>[n(m,{onClick:a[0]||(a[0]=R=>t.modal.hide())},{default:o(()=>[n(d,{slot:"icon-only",name:"close"})]),_:1})]),_:1})]),_:1})]),_:1}),n(T,{class:"ion-padding"},{default:o(()=>[n(h,null,{default:o(()=>[n(g,null,{default:o(()=>[n(w,{size:"4",class:"ion-margin-top ion-margin-bottom"},{default:o(()=>[n(P,{modelValue:t.patient.givenName,"onUpdate:modelValue":a[1]||(a[1]=R=>t.patient.givenName=R)},null,8,["modelValue"])]),_:1}),n(w,{size:"4",class:"ion-margin-top ion-margin-bottom"},{default:o(()=>[n(P,{modelValue:t.patient.middleName,"onUpdate:modelValue":a[2]||(a[2]=R=>t.patient.middleName=R)},null,8,["modelValue"])]),_:1}),n(w,{size:"4",class:"ion-margin-top ion-margin-bottom"},{default:o(()=>[n(P,{modelValue:t.patient.familyName,"onUpdate:modelValue":a[3]||(a[3]=R=>t.patient.familyName=R)},null,8,["modelValue"])]),_:1}),n(w,{size:"6",class:"ion-margin-top ion-margin-bottom"},{default:o(()=>[n(P,{modelValue:t.patient.nationalId,"onUpdate:modelValue":a[4]||(a[4]=R=>t.patient.nationalId=R)},null,8,["modelValue"])]),_:1}),n(w,{size:"6",class:"ion-margin-top ion-margin-bottom"},{default:o(()=>[n(S,{modelValue:t.patient.gender,"onUpdate:modelValue":a[5]||(a[5]=R=>t.patient.gender=R),options:t.genderOptions},null,8,["modelValue","options"])]),_:1}),n(w,{size:"12",class:"ion-margin-top ion-margin-bottom"},{default:o(()=>[n(D,{modelValue:t.patient.birthdate,"onUpdate:modelValue":a[6]||(a[6]=R=>t.patient.birthdate=R),allowEstimation:!0,estimationLabel:"Estimate Age",minDate:"1900-01-01",maxDate:t.today,onIsEstimated:a[7]||(a[7]=R=>t.isBirthdateEstimated=R)},null,8,["modelValue","maxDate"])]),_:1}),n(w,{size:"12",class:"ion-margin-top ion-margin-bottom"},{default:o(()=>[n(P,{modelValue:t.patient.cellPhoneNumber,"onUpdate:modelValue":a[8]||(a[8]=R=>t.patient.cellPhoneNumber=R),allowUnknown:""},null,8,["modelValue"])]),_:1}),n(w,{size:"12",class:"ion-margin-top ion-margin-bottom"},{default:o(()=>[n(S,{modelValue:t.patient.homeVillage,"onUpdate:modelValue":a[9]||(a[9]=R=>t.patient.homeVillage=R),asyncOptions:t.getVillagesByName,allowCustom:""},null,8,["modelValue","asyncOptions"])]),_:1}),n(w,{size:"12",class:"ion-margin-top ion-margin-bottom"},{default:o(()=>[n(S,{modelValue:t.patient.landmark,"onUpdate:modelValue":a[10]||(a[10]=R=>t.patient.landmark=R),asyncOptions:t.getLandmarks,allowCustom:""},null,8,["modelValue","asyncOptions"])]),_:1})]),_:1})]),_:1})]),_:1}),n(k,null,{default:o(()=>[n(_,null,{default:o(()=>[n(m,{color:"primary",onClick:a[11]||(a[11]=R=>t.modal.hide()),slot:"end"},{default:o(()=>[F("Close")]),_:1}),n(m,{class:"ion-margin-end",color:"success",onClick:t.onFinish,slot:"end"},{default:o(()=>[F("Save")]),_:1},8,["onClick"])]),_:1})]),_:1})],64)}const pn=oe(cn,[["render",mn]]),gn=ae({__name:"GuardianDemographics",props:{patientId:{},guardians:{}},setup(t){var S,D;const a=new lt,e=t,i=E(M(e.guardians)),r=q(()=>"".concat(i.value?"Add":"Edit"," Guardian Demographics")),c=q(()=>"".concat(i.value?"Edit":"Add"," Guardian")),s=E([]),d=(D=(S=e.guardians)==null?void 0:S.map(g=>({label:"".concat(g.name," (").concat(g.relationshipType,")"),value:g.name,other:g})))!=null?D:[],m=re({label:"Select Guardian",placeholder:"Select guardian to be edited",value:""}),b=re({givenName:{label:"First Name",value:"",placeholder:"First Name",required:!0,validation:g=>Me(g)},familyName:{label:"Last Name",value:"",placeholder:"Last Name",required:!0,validation:g=>Me(g)},cellPhoneNumber:{value:"",required:!0,label:"Cellphone Number",validation:async g=>g.value!=="Unknown"&&Ct(g)},relation:{label:"Select Relationship",placeholder:"Select the relationship between guardian and patient",value:""}});ve(()=>m.value,g=>{var h,T,k,R,A,U,u,ue;b.givenName.value=(T=(h=g==null?void 0:g.other)==null?void 0:h.names.given_name)!=null?T:"",b.familyName.value=(R=(k=g==null?void 0:g.other)==null?void 0:k.names.family_name)!=null?R:"",b.cellPhoneNumber.value=(U=(A=g==null?void 0:g.other)==null?void 0:A.phoneNumber)!=null?U:"",b.relation.value=(ue=(u=g==null?void 0:g.other)==null?void 0:u.relationshipType)!=null?ue:""},{deep:!0,immediate:!0});function _(){i.value=!i.value,m.value=""}async function I(g){var h,T;await a.registerGuardian({home_district:"N/A",home_traditional_authority:"N/A",home_village:"N/A",current_district:"N/A",current_traditional_authority:"N/A",current_village:"N/A",middle_name:"",gender:"N/A",birthdate:"N/A",birthdate_estimated:"N/A",landmark:"N/A",relationship:"N/A",patient_type:"",isPatient:!1,patient_id:e.patientId,...g}),await tt.createRelation(e.patientId,a.getPersonID(),(T=(h=g.relation)==null?void 0:h.value)!=null?T:13)}async function P(g,h){var R,A;const T=h.names.person_id,k={};if(h.names.given_name!==g.given_name&&(k.given_name=g.given_name),h.names.family_name!==g.family_name&&(k.family_name=g.family_name),h.phoneNumber!==g.cell_phone_number&&(k.cell_phone_number=g.cell_phone_number),!M(k)){const U=new lt;U.setPersonID(T),await U.updatePerson(k)}h.relationshipType!==g.relation.label&&await tt.amendRelation(e.patientId,T,h.id,(A=(R=g.relation)==null?void 0:R.value)!=null?A:13)}const w=async()=>Ne(b,async g=>{!i.value&&!M(m.value)?await P(g,m.value.other):await I(g),await z.hide(),Y.emit(j.RELOAD_GUARDIAN_DATA)},{underscoreKeys:!0});return Re(async()=>{const g=(await tt.getRelations()).data;s.value=g.map(h=>({label:h.b_is_to_a,value:h.relationship_type_id,other:h}))}),(g,h)=>{const T=f("ion-title"),k=f("ion-icon"),R=f("ion-button"),A=f("ion-buttons"),U=f("ion-toolbar"),u=f("ion-header"),ue=f("ion-content"),Pe=f("ion-footer");return V(),J(K,null,[n(u,null,{default:o(()=>[n(U,null,{default:o(()=>[n(T,null,{default:o(()=>[F(ce(r.value),1)]),_:1}),n(A,{slot:"end"},{default:o(()=>[n(R,{onClick:h[0]||(h[0]=x=>y(z).hide())},{default:o(()=>[n(k,{slot:"icon-only",name:"close"})]),_:1})]),_:1})]),_:1})]),_:1}),n(ue,{class:"ion-padding"},{default:o(()=>[n(y(me),null,{default:o(()=>[n(y(pe),null,{default:o(()=>[i.value?G("",!0):(V(),H(y(O),{key:0,size:"12",class:"ion-margin-top ion-margin-bottom"},{default:o(()=>[n(he,{modelValue:m,"onUpdate:modelValue":h[1]||(h[1]=x=>m=x),options:y(d)},null,8,["modelValue","options"])]),_:1})),m.value||i.value?(V(),J(K,{key:1},[n(y(O),{size:"12",class:"ion-margin-top ion-margin-bottom"},{default:o(()=>[n($e,{modelValue:b.givenName,"onUpdate:modelValue":h[2]||(h[2]=x=>b.givenName=x)},null,8,["modelValue"])]),_:1}),n(y(O),{size:"12",class:"ion-margin-top ion-margin-bottom"},{default:o(()=>[n($e,{modelValue:b.familyName,"onUpdate:modelValue":h[3]||(h[3]=x=>b.familyName=x)},null,8,["modelValue"])]),_:1}),n(y(O),{size:"12",class:"ion-margin-top ion-margin-bottom"},{default:o(()=>[n($e,{modelValue:b.cellPhoneNumber,"onUpdate:modelValue":h[4]||(h[4]=x=>b.cellPhoneNumber=x),allowUnknown:""},null,8,["modelValue"])]),_:1}),n(y(O),{size:"12",class:"ion-margin-top ion-margin-bottom"},{default:o(()=>[n(he,{modelValue:b.relation,"onUpdate:modelValue":h[5]||(h[5]=x=>b.relation=x),options:s.value},null,8,["modelValue","options"])]),_:1})],64)):G("",!0)]),_:1})]),_:1})]),_:1}),n(Pe,null,{default:o(()=>[n(U,null,{default:o(()=>[y(M)(e.guardians)?G("",!0):(V(),H(R,{key:0,color:"primary",onClick:_,slot:"start"},{default:o(()=>[F(ce(c.value),1)]),_:1})),n(R,{color:"primary",onClick:h[6]||(h[6]=x=>y(z).hide()),slot:"end"},{default:o(()=>[F("Close")]),_:1}),n(R,{class:"ion-margin-end",color:"success",onClick:w,slot:"end"},{default:o(()=>[F("Save")]),_:1})]),_:1})]),_:1})],64)}}}),fn=ae({components:{IonGrid:me,IonRow:pe,IonCol:O,TextInput:$e},props:{patient:{type:Object,required:!0}},setup(t){const{facility:a}=ta(),e=q(()=>t.patient.getArvNumber()),i=q(()=>!M(e.value)&&e.value!=="Unknown"),r=re({arvNumber:{value:i.value?e.value.split("-")[2]:"",label:"".concat(i.value?"Edit":"Add New"," ARV Number"),placeholder:"Enter ARV Number",required:!0,validation:async d=>{const m=ye(d,"POSITIVE_INTEGERS");if(m!==null)return m;if(d.value===e.value.split("-")[2])return null;const b=await mt.findByOtherID(4,"".concat(a.code,"-ARV-").concat(d.value));return M(b)?null:["ARV Number already exists"]}}});return{form:r,modal:z,arvNumber:e,facility:a,hasValidARVNumber:i,onFinish:async()=>Ne(r,async d=>{d.arvNumber!==e.value.split("-")[2]&&(i.value?await t.patient.updateARVNumber("".concat(a.code,"-ARV-").concat(d.arvNumber)):await t.patient.createArvNumber("".concat(a.code,"-ARV-").concat(d.arvNumber)),Y.emit(j.RELOAD_PATIENT_DATA)),await z.hide()}),voidARV:async()=>{if(await Ae("Are you sure you want to void this ARV Number ".concat(e.value,"?"))){await at.show("Voiding ARV Number...");try{await Nt.voidARVNumber(e.value),await at.hide(),await z.hide(),Y.emit(j.RELOAD_PATIENT_DATA)}catch(m){await at.hide(),console.log(m)}}}}}});function vn(t,a,e,i,r,c){const s=f("ion-title"),d=f("ion-icon"),m=f("ion-button"),b=f("ion-buttons"),_=f("ion-toolbar"),I=f("ion-header"),P=f("text-input"),w=f("ion-col"),S=f("ion-row"),D=f("ion-grid"),g=f("ion-content"),h=f("ion-footer");return V(),J(K,null,[n(I,null,{default:o(()=>[n(_,null,{default:o(()=>[n(s,null,{default:o(()=>[F("ARV NUMBER")]),_:1}),n(b,{slot:"end"},{default:o(()=>[n(m,{onClick:a[0]||(a[0]=T=>t.modal.hide())},{default:o(()=>[n(d,{slot:"icon-only",name:"close"})]),_:1})]),_:1})]),_:1})]),_:1}),n(g,{class:"ion-padding"},{default:o(()=>[n(D,null,{default:o(()=>[n(S,null,{default:o(()=>[n(w,null,{default:o(()=>[n(P,{modelValue:t.form.arvNumber,"onUpdate:modelValue":a[1]||(a[1]=T=>t.form.arvNumber=T),form:t.form,prefix:"".concat(t.facility.code,"-ARV-")},null,8,["modelValue","form","prefix"])]),_:1})]),_:1})]),_:1})]),_:1}),n(h,{class:"ion-padding-horizontal"},{default:o(()=>[n(_,null,{default:o(()=>[n(m,{color:"primary",onClick:a[2]||(a[2]=T=>t.modal.hide()),slot:"end"},{default:o(()=>[F("Close")]),_:1}),t.hasValidARVNumber?(V(),H(m,{key:0,color:"danger",onClick:t.voidARV,slot:"start"},{default:o(()=>[F("Void ARV Number")]),_:1},8,["onClick"])):G("",!0),n(m,{color:"success",onClick:t.onFinish,slot:"end"},{default:o(()=>[F("Save")]),_:1},8,["onClick"])]),_:1})]),_:1})],64)}const _n=oe(fn,[["render",vn]]),bn=ae({components:{VisitsSummary:tn,InformationHeader:dn},setup(){const t=aa(),a=parseInt(t.params.patientId.toString())||0,e=E(),i=E(""),r=E([]),c=q(()=>!M(e.value)),s=async()=>{if(a){const I=(await Le.findByID(a)).data;I&&(e.value=new Le(I))}},d=async()=>{r.value=await ya.getGuardianDetails(a)},m=async I=>{await z.show(pn,{patientService:e.value,attribute:I})},b=async()=>{await z.show(gn,{patientId:a,guardians:r.value})},_=async()=>{await z.show(_n,{patient:e.value})};return Y.on(j.RELOAD_PATIENT_DATA,async()=>{await s()}),Y.on(j.RELOAD_GUARDIAN_DATA,async()=>{await d()}),Re(async()=>{var P;await s();const I=await((P=e.value)==null?void 0:P.getARTStartDate());i.value=I?de.toStandardHisDisplayFormat(I):"N/A",await d()}),{patient:e,artStartDate:i,guardians:r,isReady:c,updateDemographics:m,updateGuardian:b,updateARVNumber:_}}});function hn(t,a,e,i,r,c){const s=f("information-header"),d=f("ion-col"),m=f("ion-row"),b=f("visits-summary"),_=f("ion-grid");return t.isReady?(V(),H(_,{key:0,class:"ion-no-margin ion-no-padding"},{default:o(()=>[n(m,null,{default:o(()=>[n(d,{size:"12"},{default:o(()=>[t.patient?(V(),H(s,{key:0,patient:t.patient,guardians:t.guardians,artStartDate:t.artStartDate,onUpdateARVNumber:t.updateARVNumber,onUpdateGuardian:t.updateGuardian,onUpdatePatient:t.updateDemographics},null,8,["patient","guardians","artStartDate","onUpdateARVNumber","onUpdateGuardian","onUpdatePatient"])):G("",!0)]),_:1})]),_:1}),n(m,null,{default:o(()=>[n(d,null,{default:o(()=>[t.patient?(V(),H(b,{key:0,patient:t.patient,startDate:t.artStartDate},null,8,["patient","startDate"])):G("",!0)]),_:1})]),_:1})]),_:1})):G("",!0)}const ei=oe(bn,[["render",hn]]);export{ei as default};
