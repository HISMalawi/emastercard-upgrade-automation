System.register(["./loader-legacy-41f05d42.js","./ReportTable.vue_vue_type_style_index_0_lang-legacy-a1e25436.js","./toasts-legacy-9b206dea.js","./patient_identifier_service-legacy-4eca5930.js","./Strs-legacy-b5721578.js","./his_date-legacy-88679395.js","./DrilldownTable-legacy-11cfc702.js","./index-legacy-27718e38.js","./VoidReason-legacy-c88ca737.js","./exports-legacy-a86bd3b6.js","./index-legacy-d17d54e7.js","./vue-datepicker-legacy-b4d8c74f.js","./common-legacy-e8d6ba88.js","./arrays-legacy-86abe4a8.js"],function(e,t){"use strict";var a,i,l,r,n,o,s,d,c,u,f,y,p,m,v,g;return{setters:[e=>{a=e.l},e=>{i=e._},e=>{l=e.t},e=>{r=e.P},e=>{n=e.t},e=>{o=e.t},e=>{s=e.D},e=>{d=e.d,c=e.r,u=e.h,f=e.i,y=e.j,p=e.am,m=e.an,v=e.o},e=>{g=e.p},null,null,null,null,null],execute:function(){e("default",d({__name:"MultipleIdentifiers",setup(e){const t=c([]),d=c(),h=new r,_=c([]),b=[{path:"given_name",label:"First Name"},{path:"family_name",label:"Last Name"},{path:"gender",label:"Gender",formatter:n},{path:"birthdate",label:"Date of Birth",formatter:o},{path:"latest_identifier",label:"Latest Identifier"},{path:"identifiers",label:"Number of Identifiers",drillable:!0}],j=[{path:"identifier",label:"Identifier"},{path:"date_created",label:"Date created",formatter:o}],w=u(()=>[{id:"identifier",label:"Select Identifier type",type:"select",gridSize:5,options:_.value}]);async function I(e){return p.show(s,{title:`Identifiers belonging to client: ${e.row.given_name} ${e.row.family_name}`,columns:j,rows:e.row.identifiers,rowActionButtons:[{label:"void",color:"danger",icon:m,action:e=>g(async t=>{try{var a;await h.voidMultipleIdentifiers([e.identifier],t,Number(null===(a=d.value)||void 0===a?void 0:a.value)),p.hide()}catch(i){l("Failed to void identifier"),console.error(i)}},"void-modal custom-modal-backdrop")}]})}async function x({identifier:e}){try{var i;a.show(),d.value=e,t.value=null!==(i=await h.getMultipleIdentifiers(e.value))&&void 0!==i?i:[]}catch(r){l("Failed to load report data"),console.error(r)}finally{a.hide()}}return f(async()=>{try{const e=await h.getIdentifierTypes();_.value=e.map(e=>({label:e.name,value:e.patient_identifier_type_id,other:e}))}catch(e){console.error(e),l("Failed to load identifier types")}}),(e,a)=>(v(),y(i,{title:"Multiple Identifiers",columns:b,rows:t.value,"custom-filters":w.value,"custom-drill-handler":I,onGenerate:x},null,8,["rows","custom-filters"]))}}))}}});
