System.register(["./loader-legacy-805839f7.js","./ReportTable.vue_vue_type_style_index_0_lang-legacy-4bb553ac.js","./toasts-legacy-14f1e720.js","./patient_identifier_service-legacy-e8ba9992.js","./index-legacy-a3ed4133.js","./DrilldownTable-legacy-640fced2.js","./patient_service-legacy-2479eb91.js","./Strs-legacy-eacc8505.js","./his_date-legacy-0bc670a8.js","./dde-legacy-525bb543.js","./exports-legacy-260ef973.js","./index-legacy-d4a0fad1.js","./vue-datepicker-legacy-fdf7a164.js","./common-legacy-0d7df615.js","./arrays-legacy-4be31994.js","./Date-legacy-809f13ef.js"],(function(e,t){"use strict";var a,i,l,n,s,r,o,u,c,d,p,v,y,f,h,g,_,m,j;return{setters:[e=>{a=e.l},e=>{i=e._},e=>{l=e.t,n=e.a},e=>{s=e.P},e=>{r=e.d,o=e.r,u=e.f,c=e.h,d=e.i,p=e.j,v=e.aj,y=e.ak,f=e.o},e=>{h=e.D},e=>{g=e.P},e=>{_=e.t},e=>{m=e.t},e=>{j=e.d},null,null,null,null,null,null],execute:function(){e("default",r({__name:"ViewDuplicates",setup(e){const t=o([]),r=u(),b=o(),w=new s,D=o([]),I=[{path:"identifier",label:"Identifier"},{path:"count",label:"Count"}],x=c((()=>[{id:"identifier",label:"Select Identifier type",type:"select",gridSize:5,options:D.value}])),F=[{label:"View Patients",action:e=>{var t,i,s,u;const c=o([]),d=`Patients with ${null===(t=b.value)||void 0===t?void 0:t.label}: ${e.identifier}`,p=[{path:"person.names[0].given_name",label:"First Name"},{path:"person.names[0].family_name",label:"Last Name"},{path:"person.gender",label:"Gender",formatter:_},{path:"person.birthdate",label:"Date of Birth",formatter:m}],f=[{label:"View",action:e=>r.push(`/patients/${e.patient_id}`)}];return(null===(i=b.value)||void 0===i?void 0:i.value)===v&&j.value&&f.push({label:"Re-assign",action:async e=>{try{return await w.reassignNPID(e.patient_id),n("Identifier re-assigned successfully"),r.push(`/patients/${e.patient_id}`)}catch(t){console.error(t),l("Failed to re-assign identifier")}}}),a.show(),g.findByOtherID(null!==(s=null===(u=b.value)||void 0===u?void 0:u.value)&&void 0!==s?s:-1,e.identifier).then((e=>{var t;a.hide(),c.value.push(...null!==(t=e.data)&&void 0!==t?t:[])})).catch((e=>{l("Failed to load patients"),console.error(e)})),y.show(h,{title:d,columns:p,rows:c.value,rowActionButtons:f})}}];async function P({identifier:e}){try{var i;a.show(),b.value=e,t.value=null!==(i=await w.getDuplicateIndentifiers(e.value))&&void 0!==i?i:[]}catch(n){l("Failed to load report data"),console.error(n)}finally{a.hide()}}return d((async()=>{try{const e=await w.getIdentifierTypes();D.value=e.map((e=>({label:e.name,value:e.patient_identifier_type_id,other:e})))}catch(e){console.error(e),l("Failed to load identifier types")}})),(e,a)=>(f(),p(i,{title:"Duplicates Identifiers",columns:I,rows:t.value,"custom-filters":x.value,"row-action-buttons":F,onGenerate:P},null,8,["rows","custom-filters"]))}}))}}}));
