!function(){function e(e,t,r){return(t=function(e){var t=function(e,t){if("object"!=typeof e||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,t||"default");if("object"!=typeof o)return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"==typeof t?t:t+""}(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}System.register(["./common-legacy-0d7df615.js","./report_service-legacy-360e4812.js","./age_groups-legacy-5143fd58.js"],(function(t,r){"use strict";var o,n,i;return{setters:[e=>{o=e.g},e=>{n=e.R},e=>{i=e.A}],execute:function(){const r=t("b",["Died","IIT <3 mo","IIT 3-5 mo","IIT 6+ mo","Transferred out","Refused (Stopped)"]);t("c",{tx_curr:"TX_CURR",symptom_screen_alone:"Symptom Screen (alone)",cxr_screen:"CXR Screen",mwrd_screen:"mWRD Screen",sceen_pos_new:"New on ART/Screen Positive",sceen_neg_new:"New on ART/Screen Negative",sceen_pos_prev:"Already on ART/Screen Positive",sceen_neg_prev:"Already on ART/Screen Negative",started_tb_new:"Started TB RX_New on ART",started_tb_prev:"Started TB RX_Prev on ART"}),t("T",{less_than_three_months:"# of clients on <3 months of ARVs",three_to_five_months:"# of clients on 3 - 5 months of ARVs",greater_than_six_months:"# of clients on >= 6 months of ARVs"});t("a",class extends n{constructor(){super(),e(this,"reportType",void 0),e(this,"initialize",void 0),this.reportType="pepfar",this.initialize=!0}setReportType(e){this.reportType=e}setInitialize(e){this.initialize=e}async getTxCurrMMDReport(e=!1){const t=await this.getReport(`programs/${this.programId}/reports/tx_curr_mmd`,{definition:this.reportType,rebuild:e});if(!t)return[];const r=this.txMmdReportBuilder(t),o=await this.buildMaternityAgreggateRows(r.F.aggregate);return[...r.F.rows,...r.M.rows,{ageGroup:"All",gender:"M",...r.M.aggregate},...o]}async getTxMlReport(e){const t=await this.getReport("tx_ml",{rebuild:e});if(!t)return[];const r=this.txMlReportBuilder(t),o=await this.buildMaternityAgreggateRows(r.F.aggregate);return[...r.F.rows,...r.M.rows,{ageGroup:"All",gender:"M",...r.M.aggregate},...o]}getTxRttReport(e){return this.getReport("tx_rtt",{rebuild:e})}getClinicTxRtt(e){return this.getReport(`programs/${this.programId}/reports/clinic_tx_rtt`,{rebuild:e})}async getTxTbReport(e){return this.getReport(`programs/${this.programId}/reports/tx_tb`,{rebuild_outcome:e})}getTxNewReport(e){return this.getReport(`programs/${this.programId}/reports/tx_new`,{rebuild:e})}mapTxMlIndcators(e){return r.reduce(((t,r,o)=>{var n;return t[r]=null!==(n=e[o])&&void 0!==n?n:[],t}),{})}txMlReportBuilder(e){const t={M:{rows:[],aggregate:{}},F:{rows:[],aggregate:{}}};return i.forEach((r=>{["F","M"].forEach((n=>{const i=this.mapTxMlIndcators(o(e,`${r}.${n}`,[]));t[n].rows.push({ageGroup:r,gender:n,...i}),this.aggregateIndicatorData(t,i,n)}))})),t}aggregateIndicatorData(e,t,r){Object.entries(t).forEach((([t,o])=>{var n;e[r].aggregate[t]=[...o,...null!==(n=e[r].aggregate[t])&&void 0!==n?n:[]]}))}txMmdReportBuilder(e){return Object.keys(e).reduce(((t,r)=>{if(!/Unknown/i.test(r)){const n=o(e,`${r}.Female`);t.F.rows.push({ageGroup:r,gender:"F",...n}),this.aggregateIndicatorData(t,n,"F");const i=o(e,`${r}.Male`);t.M.rows.push({ageGroup:r,gender:"M",...i}),this.aggregateIndicatorData(t,i,"M")}return t}),{M:{rows:[],aggregate:{}},F:{rows:[],aggregate:{}}})}})}}}))}();
