import{l as u}from"./loader-42cc2cd6.js";import{g as f,_ as v}from"./ReportTable.vue_vue_type_style_index_0_lang-2ea97032.js";import{i as h,c as d,p as R,t as _}from"./toasts-ccd51a02.js";import{t as i}from"./his_date-cc036890.js";import{dz as D,d as L,r as n,G as p,o as w,h as y}from"./index-2728292d.js";import{R as S}from"./report_service-5b6fbe66.js";import{A}from"./age_groups-8203d13f.js";import"./exports-74542764.js";import"./index-e0977e87.js";import"./vue-datepicker-76fa95ea.js";import"./DrilldownTable-6dd3364e.js";import"./arrays-67275874.js";import"./url-ffe761c9.js";class G extends S{constructor(){super(),this.programId=D}buildLabPatientLevelData(a){return a.flatMap(e=>e.measures.map(t=>({...e,test_name:t.name,result:"".concat(t.modifier," ").concat(t.value)})))}buildLabResultRowData(a,e,t){const r=a.filter(l=>l.gender===t&&l.age_group===e).map(({patient_id:l})=>l);return{ageGroup:e,gender:t,viral_load:r}}buildLabDisaggregatedData(a){const e=[],t=[];return A.forEach(r=>{e.push(this.buildLabResultRowData(a,r,"M")),t.push(this.buildLabResultRowData(a,r,"F"))}),[...t,...e]}async getLabResultReport(){const a=await this.getReport("lab_test_results");if(!a)return{};const e=this.buildLabPatientLevelData(a),t=this.buildLabDisaggregatedData(e);return{patientLevelData:e,disaggregatedData:t}}}const N=L({__name:"LabResultsReport",setup(c){const a=n("-"),e=n(""),t=[f("patient_id")],r=n({}),l=p(()=>h(r.value)?[]:e.value==="disaggregated"?r.value.disaggregatedData:r.value.patientLevelData),m=p(()=>e.value==="disaggregated"?[{path:"ageGroup",label:"Age Group"},{path:"gender",label:"Gender",formatter:d},{path:"viral_load",label:"HIV viral load",drillable:!0}]:[{path:"arv_number",label:"ARV Number",preSort:R,initialSort:!0},{path:"gender",label:"Gender",formatter:d},{path:"birthdate",label:"Birthdate",formatter:i},{path:"order_date",label:"Ordered",formatter:i},{path:"test",label:"Specimen"},{path:"test_name",label:"Test"},{path:"result",label:"Result"},{path:"result_date",label:"Released",formatter:i}]),b=p(()=>[{id:"type",label:"Select report type",required:!1,type:"select",options:[{label:"Disaggregated",value:"disaggregated"},{label:"Patient level",value:"patient_level"}],onUpdate:o=>{e.value=o.value}}]);async function g(o){await u.show();try{const s=new G;s.setStartDate(o.dateRange.startDate),s.setEndDate(o.dateRange.endDate),a.value=s.getDateIntervalPeriod(),r.value=await s.getLabResultReport()}catch(s){_("Unable to load report data"),console.error(s)}await u.hide()}return(o,s)=>(w(),y(v,{"report-type":"Clinic",title:"Lab Test Result(s) Report",columns:m.value,rows:l.value,period:a.value,"row-action-buttons":t,"custom-filters":b.value,"use-date-range-filter":"","use-secure-export":"",onGenerate:g},null,8,["columns","rows","period","custom-filters"]))}});export{N as default};
