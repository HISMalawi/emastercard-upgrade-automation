import{d as y,aj as $,o as g,j as _,w as o,e as t,u as e,n,I as v,b as d,m as I,f as T,K as c,a as b,a2 as w,l as V,v as C,U as A,G as H,H as N,k as z}from"./index-6ba03bc9.js";import{l as p}from"./loader-850d1075.js";import{S as F}from"./SelectInput-6bf2a7c5.js";import{T as k}from"./TextInput-73812606.js";import{i as x,r as B}from"./form-0396961a.js";import{i as U}from"./validations-6d7f3b88.js";import{t as q}from"./toasts-50e973ce.js";import"./common-abc2f84d.js";import"./Strs-0c962638.js";import"./his_date-53781c44.js";const S=y({__name:"NetworkForm",emits:["submit"],setup(P,{emit:m}){const f=m,u=[{label:"HTTP",value:"http"},{label:"HTTPS",value:"https"}],l=$({protocol:{value:"",label:"Select Protocol",required:!0},ipAddress:{value:"",label:"IP Address",placeholder:"Enter IP Address e.g. 127.0.0.1",required:!0,validation:async r=>U(r)},port:{value:"",label:"Port",placeholder:"Enter Port e.g. 3000",required:!0}}),s=async()=>{await x(l)&&f("submit",B(l).formData)};return(r,a)=>(g(),_(e(I),null,{default:o(()=>[t(e(n),{size:"12",class:"ion-margin-vertical"},{default:o(()=>[t(F,{modelValue:l.protocol,"onUpdate:modelValue":a[0]||(a[0]=i=>l.protocol=i),options:u},null,8,["modelValue"])]),_:1}),t(e(n),{size:"12",class:"ion-margin-vertical"},{default:o(()=>[t(k,{modelValue:l.ipAddress,"onUpdate:modelValue":a[1]||(a[1]=i=>l.ipAddress=i)},null,8,["modelValue"])]),_:1}),t(e(n),{size:"12",class:"ion-margin-vertical"},{default:o(()=>[t(k,{modelValue:l.port,"onUpdate:modelValue":a[2]||(a[2]=i=>l.port=i)},null,8,["modelValue"])]),_:1}),t(e(n),{size:"12",class:"ion-margin-vertical"},{default:o(()=>[t(e(v),{class:"ion-margin-top ion-float-right",color:"success",onClick:s},{default:o(()=>[...a[4]||(a[4]=[d("Submit",-1)])]),_:1}),t(e(v),{class:"ion-margin-top ion-float-right",onClick:a[3]||(a[3]=i=>r.$router.back())},{default:o(()=>[...a[5]||(a[5]=[d("Back",-1)])]),_:1})]),_:1})]),_:1}))}}),E={class:"his-card"},h={class:"his-card"},Q=y({__name:"NetworkSettings",setup(P){const m=T(),f=c.isLoggedIn(),u=async({protocol:l,ipAddress:s,port:r})=>{try{if(p.show(),c.setHost("".concat(l.value,"://").concat(s,":").concat(r)),!await c.apiOk())throw new Error("Unable to connect to: ".concat(l.value,"://").concat(s,":").concat(r));const i=z();await i.loadCurrentFacility(!0),await i.loadFacilityCode(),await p.hide(),m.back()}catch(a){await p.hide(),console.error(a),q("".concat(a)),localStorage.clear()}};return(l,s)=>e(f)?(g(),_(e(V),{key:0},{default:o(()=>[t(e(I),null,{default:o(()=>[t(e(n),{size:"10",offset:"1",class:"ion-padding"},{default:o(()=>[b("div",E,[t(e(w),{style:{"padding-left":"0"}},{default:o(()=>[...s[0]||(s[0]=[d("Network Settings / API Host configuration",-1)])]),_:1}),t(S,{onSubmit:u})])]),_:1})]),_:1})]),_:1})):(g(),_(e(N),{key:1},{default:o(()=>[t(e(A),null,{default:o(()=>[t(e(C),null,{default:o(()=>[t(e(w),null,{default:o(()=>[...s[1]||(s[1]=[d("Network Settings / API Host configuration",-1)])]),_:1})]),_:1})]),_:1}),t(e(H),null,{default:o(()=>[t(e(V),null,{default:o(()=>[t(e(I),null,{default:o(()=>[t(e(n),{size:"10",offset:"1",class:"ion-padding"},{default:o(()=>[b("div",h,[t(S,{onSubmit:u})])]),_:1})]),_:1})]),_:1})]),_:1})]),_:1}))}});export{Q as default};
