!function(){function t(t,e,a){return(e=function(t){var e=function(t,e){if("object"!=typeof t||!t)return t;var a=t[Symbol.toPrimitive];if(void 0!==a){var i=a.call(t,e||"default");if("object"!=typeof i)return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===e?String:Number)(t)}(t,"string");return"symbol"==typeof e?e:e+""}(e))in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}System.register(["./index-legacy-5705a9b7.js","./ApiStore-legacy-e3183ff9.js","./toasts-legacy-ac0a9e63.js","./loader-legacy-5e05219c.js","./index-legacy-aa705205.js","./form-legacy-8b805202.js","./encounter_types-legacy-566983b4.js","./common-legacy-2d845b1c.js","./emc_event-legacy-58754a45.js","./_plugin-vue_export-helper-legacy-762b7923.js"],(function(e,a){"use strict";var i,n,s,o,r,u,l,c,d,g,p,v,y,h,_,m,b,w,I,T,f,D,C,S,A,N,V,O,P,R,E,x,j,L,G,F,H,B,W,z,$,U;return{setters:[t=>{i=t.ax,n=t.G,s=t.d,o=t.ay,r=t.i,u=t.j,l=t.k,c=t.I,d=t.aw,g=t.g,p=t.r,v=t.ae,y=t.H,h=t.a2,_=t.az,m=t.L,b=t.h,w=t.w,I=t.o,T=t.a,f=t.T,D=t.aA,C=t.y},t=>{S=t.A,A=t.S,N=t.P,V=t.V,O=t.C},t=>{P=t.a,R=t.t},t=>{E=t.l},t=>{x=t.P,j=t.C},t=>{L=t.O,G=t.C,F=t.a},t=>{H=t.e},t=>{B=t.i,W=t.g},t=>{z=t.E,$=t.a},t=>{U=t._}],execute:function(){class k{constructor(e,a){t(this,"encounterTypeID",void 0),t(this,"programID",void 0),t(this,"encounterID",void 0),t(this,"providerID",void 0),t(this,"patientID",void 0),t(this,"date",void 0),this.encounterTypeID=9,this.patientID=e,this.encounterID=0,this.date=this.getSessionDate(),this.providerID=a,this.programID=x}getSessionDate(){return sessionStorage.getItem("sessionDate")||""}async createEncounter(){const t={encounter_type_id:this.encounterTypeID,patient_id:this.patientID,encounter_datetime:this.date,program_id:this.programID},e=(await i.create(t)).data;var a;if(e)return this.encounterID=null!==(a=e.encounter_id)&&void 0!==a?a:0,e}static async resetSessionDate(){const t=await this.getApiDate();if(console.log("HERE IS THE API DATE",t),t)return sessionStorage.removeItem("apiDate"),void sessionStorage.setItem("sessionDate",t);throw"Unable to reset session date"}static async getApiDate(){const t=await n.getDate();if(t)return t.date}saveObservationList(t){return L.saveObsArray(this.encounterID,t)}async saveValueTextObs(t,e){const a=await L.buildValueText(t,e);return this.saveObs(a)}saveObs(t){return S.saveObs(this.encounterID,t)}buildValueText(t,e){return S.buildValueText(t,e,this.date)}buildGroupValueCoded(t,e,a){return S.buildGroupValueCoded(t,e,a,this.date)}buildValueDate(t,e){return S.buildValueDate(t,e,this.date)}buildValueNumber(t,e,a=null,i=null){return S.buildValueNumber(t,e,a,i,this.date)}buildValueCoded(t,e){return S.buildValueCoded(t,e,this.date)}setDate(t){this.date=t}}e("C",k);class M extends S{constructor(e,a){super(e,5,a),t(this,"patientType",void 0),t(this,"locationName",void 0),this.patientType="N/A",this.locationName=""}setLocationName(t){this.locationName=t}setPatientType(t){this.patientType=t}getType(){return this.patientType}static getPatientTypes(){return G.getConceptsByCategory("art_patient_type").map((({name:t})=>({label:t,value:t})))}static async isDrugRefillPatient(t){const e=await S.getFirstValueCoded(t,"Type of patient");return e&&"Emergency supply"===e}async loadPatientType(){const t=await this.getFirstValueCoded("Type of patient");t&&(this.patientType=t)}async save(){await this.savePatientType(this.patientType),this.locationName&&["External consultation","Emergency supply"].includes(this.patientType)&&await this.saveLocationClinic(this.locationName)}saveLocationClinic(t){return this.saveValueTextObs("Art clinic location",t)}savePatientType(t){return this.saveValueCodedObs("Type of patient",t)}}e("P",M);class X extends S{constructor(e,a,i){super(e,H.HIV_STAGING,i),t(this,"age",void 0),t(this,"confirmatoryTest",void 0),this.age=a,this.confirmatoryTest=null}isAdult(){return this.age>=15}cd4CountIsValid(t){try{return!!t.match(/^(=|<|>)([0-9]*)$/m)}catch(e){return!1}}getStagingConditions(t){const e=this.getStagingCategoryByNum(t);return S.getConceptsByCategory(e)}getAllWhoStages(){return S.getConceptsByCategory("whole_staging_numbers")}getAllReasonsForART(t=this.date,e=!1){return S.getConceptsByCategory("reason_for_art").filter((a=>!(new Date(t)>new Date(j)&&a.name.match(/cd4/i))&&(!e||!a.name.match(/breastfeeding|pregnant/i))))}buildWhoStageObs(t){return this.buildValueCoded("Who stage",t)}buildWhoCriteriaObs(t){return this.buildValueCoded("Who stages criteria present",t)}buildReasonForArtObs(t){return this.buildValueCoded("Reason for ART eligibility",t)}getStagingCategoryByNum(t){switch(t){case 1:return this.isAdult()?"stage_1_conditions_adults":"stage_1_conditions_pedaids";case 2:return this.isAdult()?"stage_2_conditions_adults":"stage_2_conditions_pedaids";case 3:return this.isAdult()?"stage_3_conditions_adults":"stage_3_conditions_pedaids";case 4:return this.isAdult()?"stage_4_conditions_adults":"stage_4_conditions_pedaids";default:return""}}}e("S",X);const Y=s({components:{ClinicRegistration:o((()=>_((()=>a.import("./ClinicRegistration-legacy-f1ddcf53.js")),void 0))),Staging:o((()=>_((()=>a.import("./Staging-legacy-0ea2adc2.js")),void 0))),IonGrid:r,IonRow:u,IonCol:l,IonButton:c},setup(){const t=d(),e=g(),a=p(!1),n=v({}),s=p("ClinicRegistration"),o=parseInt(t.params.patientId.toString()||""),r=!!t.params.new.toString().match(/true/i),u=y((()=>"Staging"===s.value)),l=y((()=>"Staging"===s.value)),c=p({}),_=p(""),m=p(""),b=p([]),w=v({}),I=p(!1),T=async t=>{for(const e of t){b.value.includes(e.encounter_id)||b.value.push(e.encounter_id);const t=await G.getConceptName(e.concept_id);let a="";e.value_datetime||e.value_drug?a=e.value_datetime:e.value_text?a=e.value_text:e.value_numeric?a=e.value_numeric:e.value_coded&&(a=await G.getConceptName(e.value_coded)),e.value_modifier&&(a=e.value_modifier+a),w[t]=a}};return h((async()=>{new N(o).getPrograms().then((t=>{const e=t.data;I.value=e.some((t=>"HIV PROGRAM"===t.program.name))})),c.value=await A.get("ACTIVE_PATIENT",{patientID:o}),r||await(async()=>{const{HIV_CLINIC_CONSULTATION:t,HIV_CLINIC_REGISTRATION:e,REGISTRATION:a,HIV_STAGING:n,VITALS:s}=H;try{const r=(await i.all({encounter_type_id:e,patient_id:o})).data;if(B(r))return;if(_.value=W(r,"[0].encounter_datetime",""),_.value){await T(r[0].observations);const e=(await i.all({program_id:x,patient_id:o,date:_.value})).data||[];for(const i of e){let e=[a,n];/yes/i.test(`${w["Ever registered at ART clinic"]}`)&&(e=[...e,t,s]),e.includes(i.encounter_type)&&await T(i.observations)}}}catch(r){R("Unable to load previous observations")}})(),a.value=!0,z.on($.ON_INITIAL_VISIT_DATE,(t=>{_.value=t})),z.on($.ON_ART_START_DATE,(t=>{m.value=t}))})),{activeForm:s,patient:c,isNewPatient:r,isStaging:u,isRegistration:l,isReady:a,initialVisitDate:_,observations:w,artStartDate:m,onValue:t=>n[t.type]=t.data,onFinish:async()=>{const{arvNumberEditable:t,formData:a,computedData:s}=n.registration,{computedData:u}=n.staging;try{if(E.show(),!r&&!B(b.value))for(const t of b.value)await i.void(t,"Duplicate");t&&a.arvNumber&&await c.value.createArvNumber(a.arvNumber);const n=new M(o,-1);await n.createEncounter();const l=await F(s,"patient type");await n.saveObservationList(l);const d=new k(o,-1);await d.createEncounter();const g=await F(s,"registration");if(await d.saveObservationList(g),"Yes"===a.everRegisteredAtClinic){const t=new V(o,-1);await t.createEncounter();const e=await F(s,"vitals");await t.saveObservationList(e);const a=new O(o,-1);await a.createEncounter();const i=await F(s,"consultation");await a.saveObservationList(i)}const p=new X(o,c.value.getAge(),-1);await p.createEncounter();const v=await F(u);if(await p.saveObservationList(v),r||!I.value){const t=new N(o);t.setProgramDate(a.initialVisitDate),await t.enrollProgram()}await E.hide(),await k.resetSessionDate(),await P("Saved successfully"),e.push(`/patient/${o}`)}catch(l){await E.hide(),console.log(l),R(`${l}`)}},onNext:()=>s.value="Staging",onPrevious:()=>s.value="ClinicRegistration"}}});const Z=U(Y,[["render",function(t,e,a,i,n,s){const o=m("ion-col"),r=m("ion-row"),u=m("ion-grid");return I(),b(u,null,{default:w((()=>[T(r,{class:"his-card"},{default:w((()=>[t.isReady?(I(),b(o,{key:0,size:"12"},{default:w((()=>[(I(),b(f,null,[(I(),b(D(t.activeForm),{patient:t.patient,isNewPatient:t.isNewPatient,initialVisitDate:t.initialVisitDate,artStartDate:t.artStartDate,observations:t.observations,onOnValue:t.onValue,onOnNext:t.onNext,onOnPrevious:t.onPrevious,onOnFinish:t.onFinish},null,40,["patient","isNewPatient","initialVisitDate","artStartDate","observations","onOnValue","onOnNext","onOnPrevious","onOnFinish"]))],1024))])),_:1})):C("",!0)])),_:1})])),_:1})}]]),q=Object.freeze(Object.defineProperty({__proto__:null,default:Z},Symbol.toStringTag,{value:"Module"}));e("H",q)}}}))}();
