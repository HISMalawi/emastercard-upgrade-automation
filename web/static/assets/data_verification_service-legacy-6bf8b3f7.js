System.register(["./report_service-legacy-a6a2ab1a.js"],function(e,t){"use strict";var r;return{setters:[e=>{r=e.R}],execute:function(){e("D",class extends r{constructor(){super()}async getEncounterPerProvider(){const e=await this.getReport("/data_verification",{name:"ENCOUNTERS DONE PER PROVIDER"});if(!e)return[];const t=Object.values(e).reduce((e,t)=>e+Object.values(t).reduce((e,t)=>e+t,0),0);return Object.entries(e).map(([e,r])=>{const n=Object.values(r).reduce((e,t)=>e+t,0);return{username:e,count:n,encounters:r,percentage:(n/t*100).toFixed(2)+"%"}})}async getEncountersDoneInOddHours(){const e=await this.getReport("/data_verification",{name:"ENCOUNTERS DONE IN ODD HOURS"});return e?Object.entries(e).map(([e,t])=>({username:e,...t})):[]}async getPasswordChanges(){const e=await this.getReport("/data_verification",{name:"PASSWORD CHANGES"});return e?Object.entries(e).map(([e,t])=>({username:e,changes:t})):[]}})}}});
