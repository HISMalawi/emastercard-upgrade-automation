import{l as u}from"./loader-4d6883e8.js";import{_ as f}from"./ReportTable.vue_vue_type_script_setup_true_lang-bc4b89df.js";import{t as v}from"./toasts-c6607b61.js";import{i as h,t as d,p as R}from"./common-abc2f84d.js";import{t as i}from"./his_date-ed090df2.js";import{g as _}from"./datatable-e65cefb2.js";import{L as D}from"./index-95d3a767.js";import{R as L}from"./report_service-e2e0778b.js";import{A as w}from"./age_groups-8203d13f.js";import{d as y,r as n,H as p,o as S,h as A}from"./index-2cf16bdb.js";import"./exports-0505b5ca.js";import"./index-3ac00770.js";import"./vue-datepicker-b5cf8b92.js";import"./DrilldownTable-d77041f8.js";import"./_plugin-vue_export-helper-c27b6911.js";import"./arrays-31d2d38b.js";import"./url-ffe761c9.js";class G extends L{constructor(){super(),this.programId=D}buildLabPatientLevelData(a){return a.flatMap(t=>t.measures.map(e=>({...t,test_name:e.name,result:"".concat(e.modifier," ").concat(e.value)})))}buildLabResultRowData(a,t,e){const r=a.filter(s=>s.gender===e&&s.age_group===t).map(({patient_id:s})=>s);return{ageGroup:t,gender:e,viral_load:r}}buildLabDisaggregatedData(a){const t=[],e=[];return w.forEach(r=>{t.push(this.buildLabResultRowData(a,r,"M")),e.push(this.buildLabResultRowData(a,r,"F"))}),[...e,...t]}async getLabResultReport(){const a=await this.getReport("lab_test_results");if(!a)return{};const t=this.buildLabPatientLevelData(a),e=this.buildLabDisaggregatedData(t);return{patientLevelData:t,disaggregatedData:e}}}const W=y({__name:"LabResultsReport",setup(m){const a=n("-"),t=n(""),e=[_("patient_id")],r=n({}),s=p(()=>h(r.value)?[]:t.value==="disaggregated"?r.value.disaggregatedData:r.value.patientLevelData),c=p(()=>t.value==="disaggregated"?[{path:"ageGroup",label:"Age Group"},{path:"gender",label:"Gender",formatter:d},{path:"viral_load",label:"HIV viral load",drillable:!0}]:[{path:"arv_number",label:"ARV Number",preSort:R,initialSort:!0},{path:"gender",label:"Gender",formatter:d},{path:"birthdate",label:"Birthdate",formatter:i},{path:"order_date",label:"Ordered",formatter:i},{path:"test",label:"Specimen"},{path:"test_name",label:"Test"},{path:"result",label:"Result"},{path:"result_date",label:"Released",formatter:i}]),b=p(()=>[{id:"type",label:"Select report type",required:!1,type:"select",options:[{label:"Disaggregated",value:"disaggregated"},{label:"Patient level",value:"patient_level"}],onUpdate:l=>{t.value=l.value}}]);async function g(l){await u.show();try{const o=new G;o.setStartDate(l.dateRange.startDate),o.setEndDate(l.dateRange.endDate),a.value=o.getDateIntervalPeriod(),r.value=await o.getLabResultReport()}catch(o){v("Unable to load report data"),console.error(o)}await u.hide()}return(l,o)=>(S(),A(f,{"report-type":"Clinic",title:"Lab Test Result(s) Report",columns:c.value,rows:s.value,period:a.value,"row-action-buttons":e,"custom-filters":b.value,"use-date-range-filter":"","use-secure-export":"",onGenerate:g},null,8,["columns","rows","period","custom-filters"]))}});export{W as default};
