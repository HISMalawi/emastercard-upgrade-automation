!function(){function e(e,t,r){return(t=function(e){var t=function(e,t){if("object"!=typeof e||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||"default");if("object"!=typeof n)return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"==typeof t?t:t+""}(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}System.register(["./program_service-legacy-ae3700cf.js","./index-legacy-aa705205.js","./index-legacy-0b57fc07.js"],(function(t,r){"use strict";var n,s,a;return{setters:[e=>{n=e.P},e=>{s=e.P},e=>{a=e.G}],execute:function(){class r{constructor(t){e(this,"person",void 0),this.person=t}create(){return a.postJson("/people",this.person)}update(e){return a.putJson(`people/${e}`,{...this.person,program_id:s})}static searchFamilyName(e){return a.getJson("/search/family_name",{search_string:e})}static searchGivenName(e){return a.getJson("/search/given_name",{search_string:e})}static async getPersonFullName(e){var t,r,n;const s=await a.getJson(`/people/${e}/names`);return null!==(t=s.data)&&void 0!==t&&t.names.length?(null===(r=s.data)||void 0===r?void 0:r.names[0].given_name)+" "+(null===(n=s.data)||void 0===n?void 0:n.names[0].family_name):""}}class i{static create(e){return a.postJson("/person_attributes",e)}}t("P",class{constructor(){e(this,"personId",void 0),this.personId=0}getPersonID(){return this.personId}setPersonID(e){this.personId=e}async registerPatient(e,t){await this.createPerson(e),await this.createPersonAttributes(t);return await this.createPatient()}async registerGuardian(e){return this.createPerson(e)}updatePerson(e){return new r(e).update(this.personId)}async createPerson(e){const t=await(await new r(e).create()).data;return this.personId=t.person_id,t}createPatient(){return n.createPatient(this.personId)}async createPersonAttributes(e){for(const t in e)await i.create({...e[t],person_id:this.personId})}});class o{constructor(){}static voidRelation(e,t,r){return a.void(`people/${e}/relationships/${t}`,{reason:r})}static async amendRelation(e,t,r,n){return await o.voidRelation(e,r,"Updating guardian relationship"),o.createRelation(e,t,n)}static getRelations(){return a.getJson("types/relationships")}static createRelation(e,t,r){return a.postJson(`people/${e}/relationships`,{relationship_type_id:r,relation_id:t})}}t("R",o)}}}))}();
