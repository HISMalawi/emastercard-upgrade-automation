!function(){function e(e,t,a){return(t=function(e){var t=function(e,t){if("object"!=typeof e||!e)return e;var a=e[Symbol.toPrimitive];if(void 0!==a){var n=a.call(e,t||"default");if("object"!=typeof n)return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"==typeof t?t:t+""}(t))in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}System.register(["./Date-legacy-61e414e0.js","./index-legacy-5705a9b7.js","./patient_service-legacy-226542d1.js","./common-legacy-2d845b1c.js","./ApiStore-legacy-e3183ff9.js","./form-legacy-8b805202.js","./program_service-legacy-8d3e046d.js","./VoidReason-legacy-e4128a9b.js","./his_date-legacy-df0799d6.js","./DateInput-legacy-0a381e03.js","./SelectInput-legacy-145559fd.js","./regimen_service-legacy-d7cc9eef.js","./DTFormElements-legacy-8934eb68.js","./emc_event-legacy-58754a45.js","./DrilldownTable-legacy-4f1ea4f5.js","./_plugin-vue_export-helper-legacy-762b7923.js","./toasts-legacy-ac0a9e63.js","./index-legacy-668a84bd.js","./TextInput-legacy-e955883b.js","./location_options-legacy-78bf77b0.js","./validations-legacy-9351084c.js","./YesNoInput-legacy-9da83b47.js","./arrays-legacy-ea080c1a.js","./index-legacy-aa705205.js","./encounter_types-legacy-566983b4.js","./Strs-legacy-09248991.js","./relations_service-legacy-acf24118.js","./loader-legacy-5e05219c.js","./patient_identifier_service-legacy-5997f069.js","./user_service-legacy-65d523f2.js","./services-legacy-c0d50b76.js","./image-legacy-0b5f9ca9.js","./vue-datepicker-legacy-008eb8d3.js"],(function(t,a){"use strict";var n,i,l,o,r,s,u,d,c,m,p,g,v,h,f,b,_,D,y,w,I,V,N,C,A,R,S,T,P,O,k,E,x,F,H,U,B,q,M,L,G,z,$,j,J,W,Y,Q,K,X,Z,ee,te,ae,ne,ie,le,oe,re,se,ue,de,ce,me,pe,ge,ve,he,fe,be,_e,De,ye,we,Ie,Ve,Ne,Ce,Ae,Re,Se,Te,Pe,Oe,ke,Ee,xe,Fe,He,Ue,Be,qe,Me,Le,Ge,ze,$e,je,Je,We,Ye,Qe,Ke,Xe,Ze,et,tt,at,nt;return{setters:[e=>{n=e.S,i=e.D,l=e.H},e=>{o=e.G,r=e.d,s=e.C,u=e.n,d=e.S,c=e.$,m=e.q,p=e.I,g=e.J,v=e.i,h=e.j,f=e.k,b=e.ap,_=e.s,D=e.r,y=e.ae,w=e.a6,I=e.a2,V=e.ai,N=e.L,C=e.c,A=e.a,R=e.w,S=e.K,T=e.o,P=e.b,O=e.H,k=e.f,E=e.h,x=e.y,F=e.ar,H=e.t,U=e.as,B=e.N,q=e.at,M=e.u,L=e.a5,G=e.au,z=e.l,$=e.a4,j=e.av,J=e.p,W=e.e,Y=e.U,Q=e.af,K=e.aq,X=e.F,Z=e.aw},e=>{ee=e.g,te=e.P},e=>{ae=e.g,ne=e.i},e=>{ie=e.A,le=e.O,oe=e.P,re=e.V,se=e.C,ue=e.E,de=e.S},e=>{ce=e.s,me=e.C,pe=e.O,ge=e.i,ve=e.r,he=e.a,fe=e.o},e=>{be=e.P},e=>{_e=e.p},e=>{De=e.d,ye=e.a,we=e.e,Ie=e.t},e=>{Ve=e.D},e=>{Ne=e.S},e=>{Ce=e.N,Ae=e.R},e=>{Re=e.t,Se=e.a,Te=e.g},e=>{Pe=e.E,Oe=e.a},e=>{ke=e.m,Ee=e.D},e=>{xe=e._},e=>{Fe=e.a,He=e.t},e=>{Ue=e.D},e=>{Be=e.T},e=>{qe=e.g,Me=e.a,Le=e.b},e=>{Ge=e.d,ze=e.e,$e=e.v,je=e.a,Je=e.b,We=e.c},e=>{Ye=e.Y},e=>{Qe=e.c,Ke=e.u},e=>{Xe=e.P},e=>{Ze=e.e},e=>{et=e.t},e=>{tt=e.P,at=e.R},e=>{nt=e.l},null,null,null,null,null],execute:function(){var a=document.createElement("style");a.textContent="ion-label[data-v-4c147193]{font-weight:700}ion-checkbox[data-v-4c147193]{--size: 20px!important}.title[data-v-e925dcea]{font-weight:700}ion-list[data-v-c301d4d5]{height:100%}\n",document.head.appendChild(a);const it=e=>{const t=e.given_name,a=e.family_name;return`${t} ${e.middle_name?e.middle_name:""} ${a}`};class lt{static getRelationships(e){return o.getJson(`/people/${e}/relationships`).then((e=>e.data))}static async getGuardianDetails(e){return await this.getRelationships(e).then((e=>e.map((e=>{const t=ae(e,"relation.names[0]");return{id:e.relationship_id,name:t?it(t):"",relationshipType:ae(e,"type.b_is_to_a",""),phoneNumber:ee(ae(e,"relation.person_attributes",[]),12),names:t}}))))}}class ot extends ie{static async setSessionDate(e){const t=await this.getApiDate();if(t)return sessionStorage.setItem("apiDate",t),void sessionStorage.setItem("sessionDate",e);throw"Unable to set api date"}static async getApiDate(){const e=(await o.getJson("current_time")).data;if(e)return e.date}constructor(e,t){super(e,57,t)}}class rt extends ie{static setSessionDate(e){return sessionStorage.getItem("sessionDate")||""}static async resetSessionDate(){const e=await this.getApiDate();if(e)return sessionStorage.removeItem("apiDate"),void sessionStorage.setItem("sessionDate",e);throw"Unable to reset session date"}static async getApiDate(){const e=(await o.getJson("current_time")).data;if(e)return e.date}constructor(t){super(t,57),e(this,"patientID",void 0),e(this,"testTypeID",void 0),e(this,"resultDate",void 0),e(this,"testID",void 0),this.patientID=t,this.testTypeID=-1,this.resultDate="",this.testID=-1}createLabResult(e){return o.postJson(`lab/tests/${this.testID}/results`,{encounter_id:this.encounterID,date:this.resultDate,measures:e})}getTestID(){return this.testID}getTestTypeID(){return this.testTypeID}setTestTypeID(e){this.testTypeID=e}setResultDate(e){this.resultDate=e}setTestID(e){this.testID=e}getTestsWithoutResults(){return le.getOrders(this.patientID,{status:"drawn"})}getTestIndicators(){return o.getJson("lab/test_result_indicators",{test_type_id:this.testTypeID})}}const st=r({components:{IonContent:s,IonFooter:u,IonHeader:d,IonTitle:c,IonToolbar:m,IonButton:p,IonLabel:g,IonGrid:v,IonRow:h,IonCol:f,IonCheckbox:b,IonItem:_,DateInput:Ve,SelectInput:Ne,NumberInput:Ce},props:{patient:{type:Object,required:!0}},setup(e){const t=D(!1),a=Re(["=",">","<",">=","<="]),i=Re(["Routine","Targeted","Confirmatory","Stat","Repeat / Missing","Follow up after Low Level Viremia","Follow up after High Viral Load"]),l=D([]),o=De().format(n),r=De(e.patient.getBirthdate()).format(n),s=y({orderDate:{value:"",label:"Order Date",required:!0,validation:async e=>De(e.value).isValid()?new Date(e.value)>new Date(o)?["Order date cannot be in the future"]:new Date(e.value)<new Date(r)?["Order date cannot be before patient's date of birth"]:null:["Invalid date"]},resultDate:{value:"",label:"Result Date",required:!0,validation:async(e,t)=>De(e.value).isValid()?new Date(e.value)>new Date(o)?["Result date cannot be in the future"]:new Date(e.value)<new Date(t.orderDate.value)?["Result date cannot be before order date"]:null:["Invalid date"]},specimenConcept:{value:"",label:"Specimen",placeholder:"Select a specimen",required:!0},modifier:{value:"",label:"Modifier",placeholder:"Select a modifier",required:!0},reason:{value:"",label:"Reason",placeholder:"Select a reason",required:!0},result:{value:"",label:"Result Value",placeholder:"Enter a result value",required:!0}});return w(t,(e=>{e&&(s.modifier.value="",s.result.value=void 0,s.modifier.error="",s.result.error=""),s.modifier.disabled=e,s.modifier.required=!e,s.result.disabled=e,s.result.required=!e})),I((async()=>{l.value=(await le.getSpecimens("HIV viral load")).data.map((e=>({label:e.name,value:e.concept_id})))})),{today:o,birthdate:r,form:s,modifiers:a,reasons:i,specimens:l,ldl:t,modal:ke,resetResults:async()=>{if(await V("Are you sure you want to clear all fields?")){t.value=!1;for(const e in s)s[e].value="",s[e].error="";Pe.emit(Oe.ON_CLEAR)}},saveResults:async()=>ce(s,(async a=>{await ot.setSessionDate(a.orderDate);const n=new ot(e.patient.getID(),-1),i=await me.getConceptID("HIV viral load"),l=await n.createEncounter();if(!l)throw new Error("Unable to create lab order encounter");const o=await le.buildLabOrders(l,[{specimenConcept:a.specimenConcept.value,reason:a.reason.value,concept_id:i}]),r=(await le.saveOrdersArray(l.encounter_id,o)).data;if(!r)throw new Error("Unable to save lab orders");await rt.setSessionDate(a.resultDate);const s=new rt(e.patient.getID());s.setTestID(r[0].tests[0].id),s.setResultDate(a.resultDate);if(!(await s.createEncounter()))throw new Error("Unable to create lab result encounter");await s.createLabResult([{indicator:{concept_id:i},value:t.value?"LDL":parseInt(a.result),value_modifier:t.value?"=":a.modifier.value,value_type:t.value?"text":"numeric"}]),await rt.resetSessionDate(),await ke.hide(),Pe.emit(Oe.RELOAD_LATEST_VL_RESULT),Pe.emit(Oe.RELOAD_PATIENT_VISIT_DATA)}))}}});const ut=xe(st,[["render",function(e,t,a,n,i,l){const o=N("ion-title"),r=N("ion-toolbar"),s=N("ion-header"),u=N("DateInput"),d=N("ion-col"),c=N("SelectInput"),m=N("NumberInput"),p=N("ion-row"),g=N("ion-label"),v=N("ion-checkbox"),h=N("ion-item"),f=N("ion-grid"),b=N("ion-content"),_=N("ion-button"),D=N("ion-footer");return T(),C(S,null,[A(s,null,{default:R((()=>[A(r,null,{default:R((()=>[A(o,null,{default:R((()=>[P("Viral Load Results")])),_:1})])),_:1})])),_:1}),A(b,{class:"ion-padding"},{default:R((()=>[A(f,{style:{width:"100%"}},{default:R((()=>[A(p,null,{default:R((()=>[A(d,{size:"12",class:"ion-margin-vertical"},{default:R((()=>[A(u,{modelValue:e.form.orderDate,"onUpdate:modelValue":t[0]||(t[0]=t=>e.form.orderDate=t),form:e.form,minDate:e.birthdate,maxDate:e.today},null,8,["modelValue","form","minDate","maxDate"])])),_:1}),A(d,{size:"6",class:"ion-margin-vertical"},{default:R((()=>[A(c,{modelValue:e.form.reason,"onUpdate:modelValue":t[1]||(t[1]=t=>e.form.reason=t),options:e.reasons},null,8,["modelValue","options"])])),_:1}),A(d,{size:"6",class:"ion-margin-vertical"},{default:R((()=>[A(c,{modelValue:e.form.specimenConcept,"onUpdate:modelValue":t[2]||(t[2]=t=>e.form.specimenConcept=t),options:e.specimens},null,8,["modelValue","options"])])),_:1}),A(d,{size:"12",class:"ion-margin-vertical"},{default:R((()=>[A(u,{modelValue:e.form.resultDate,"onUpdate:modelValue":t[3]||(t[3]=t=>e.form.resultDate=t),form:e.form,minDate:e.form.orderDate.value,"max-date":e.today},null,8,["modelValue","form","minDate","max-date"])])),_:1}),A(d,{size:"6",class:"ion-margin-vertical"},{default:R((()=>[A(c,{modelValue:e.form.modifier,"onUpdate:modelValue":t[4]||(t[4]=t=>e.form.modifier=t),options:e.modifiers},null,8,["modelValue","options"])])),_:1}),A(d,{size:"6",class:"ion-margin-vertical"},{default:R((()=>[A(m,{modelValue:e.form.result,"onUpdate:modelValue":t[5]||(t[5]=t=>e.form.result=t),form:e.form,min:1},null,8,["modelValue","form"])])),_:1})])),_:1}),A(p,{class:"ion-margin-top"},{default:R((()=>[A(d,{size:"12"},{default:R((()=>[A(g,{class:"ion-padding-vertical bold"},{default:R((()=>[P("Other Results Options: ")])),_:1}),A(h,null,{default:R((()=>[A(g,null,{default:R((()=>[P("LDL")])),_:1}),A(v,{slot:"start",modelValue:e.ldl,"onUpdate:modelValue":t[6]||(t[6]=t=>e.ldl=t)},null,8,["modelValue"])])),_:1})])),_:1})])),_:1})])),_:1})])),_:1}),A(D,null,{default:R((()=>[A(r,null,{default:R((()=>[A(_,{color:"primary",onClick:t[7]||(t[7]=t=>e.modal.hide()),slot:"end"},{default:R((()=>[P("Close")])),_:1}),A(_,{color:"warning",onClick:e.resetResults,slot:"end"},{default:R((()=>[P("Reset")])),_:1},8,["onClick"]),A(_,{color:"success",onClick:e.saveResults,slot:"end"},{default:R((()=>[P("Save")])),_:1},8,["onClick"])])),_:1})])),_:1})],64)}]]),dt=r({name:"OutcomesTable",props:{patientStates:{type:Array,required:!0}},components:{DataTable:Ue},emits:["voidOutcome"],setup(e,{emit:t}){const a=[{path:"name",label:"Outcome"},{path:"start_date",label:"Start Date",formatter:e=>De(e).format(i)},{path:"end_date",label:"End Date",formatter:e=>De(e).format(i)}];return{rows:O((()=>e.patientStates.map(((e,t)=>({...e,index:t}))))),columns:a,tableConfig:{showSearchField:!1,showSubmitButton:!1},TableRowActions:[{label:"void",color:"danger",action:async e=>{await V("Are you sure you want to void this outcome?")&&t("voidOutcome",{stateId:e.patient_state_id,index:e.index})}}]}}}),ct=k("p",{class:"ion-padding-horizontal ion-margin-vertical bold ion-margin-top"},"Previous Outcomes",-1);const mt=xe(dt,[["render",function(e,t,a,n,i,l){const o=N("data-table");return T(),C(S,null,[ct,A(o,{rows:e.rows,columns:e.columns,config:e.tableConfig,"row-actions-buttons":e.TableRowActions,color:"light"},null,8,["rows","columns","config","row-actions-buttons"])],64)}]]),pt=r({name:"EnrollmentForm",components:{DateInput:Ve,IonGrid:v,IonRow:h,IonCol:f,IonButton:p},props:["birthdate"],emits:["enrollProgram"],setup(e,{emit:t}){const a=De().format("YYYY-MM-DD"),n=y({date:{value:"",label:"Date of Enrollment",required:!0,validation:async t=>new Date(t.value)<new Date(e.birthdate)?["Date of enrollment cannot be before date of birth"]:new Date(t.value)>new Date(a)?["Date of enrollment cannot be in the future"]:null}});return{form:n,today:a,onReset:async()=>{await V("Are you sure you want to clear all fields")&&(n.date.value="",n.date.error="",Pe.emit(Oe.ON_CLEAR))},enrollProgram:async()=>ce(n,(({date:e})=>t("enrollProgram",e)))}}});const gt=xe(pt,[["render",function(e,t,a,n,i,l){const o=N("DateInput"),r=N("ion-col"),s=N("ion-button"),u=N("ion-row"),d=N("ion-grid");return T(),E(d,null,{default:R((()=>[A(u,null,{default:R((()=>[A(r,{size:"12"},{default:R((()=>[A(o,{modelValue:e.form.date,"onUpdate:modelValue":t[0]||(t[0]=t=>e.form.date=t),form:e.form,minDate:e.birthdate,"max-date":e.today},null,8,["modelValue","form","minDate","max-date"])])),_:1}),A(r,null,{default:R((()=>[A(s,{color:"warning",onClick:e.onReset},{default:R((()=>[P("Reset")])),_:1},8,["onClick"]),A(s,{color:"success",onClick:e.enrollProgram},{default:R((()=>[P("Enroll")])),_:1},8,["onClick"])])),_:1})])),_:1})])),_:1})}]]),vt=r({name:"OutcomeForm",props:{outcomes:{type:Array,required:!0},dateEnrolled:{type:String,required:!0},birthdate:{type:String,required:!0}},components:{DateInput:Ve,IonGrid:v,IonRow:h,IonCol:f,IonButton:p,SelectInput:Ne,TextInput:Be},emits:["saveOutcome"],setup(e,{emit:t}){const a=De().format("YYYY-MM-DD"),n=y({date:{value:"",label:"Outcome Date",required:!0,validation:async t=>new Date(t.value)<new Date(e.birthdate)?[`Outcome date cannot be before date of birth - ${De(e.birthdate).format(i)}`]:new Date(t.value)<new Date(e.dateEnrolled)?[`Outcome date cannot be before enrollment date- ${De(e.dateEnrolled).format(i)}`]:null},status:{value:"",label:"Outcome",required:!0},nextFacility:{value:"",label:"Next Facility",validation:async(e,t)=>"Patient transferred out"===t.status.value.label&&Ge(e)},reason:{value:"",label:"Reason for transfer out",validation:async(e,t)=>"Patient transferred out"===t.status.value.label&&Ge(e)},otherReason:{value:"",label:"Other reason for transfer out",placeholder:"Specify other reason for transfer out",validation:async(e,t)=>{var a,n;return"Patient transferred out"===(null===(a=t.status)||void 0===a||null===(a=a.value)||void 0===a?void 0:a.label)&&"Other"===(null===(n=t.reason)||void 0===n||null===(n=n.value)||void 0===n?void 0:n.label)&&Ge(e)}}}),l=O((()=>{var e;return"Patient transferred out"===(null===(e=n.status.value)||void 0===e?void 0:e.label)})),o=O((()=>{var e;return"Other"===(null===(e=n.reason)||void 0===e||null===(e=e.value)||void 0===e?void 0:e.label)}));return{form:n,today:a,isTransferredOut:l,specifyOther:o,onSave:()=>ce(n,(e=>t("saveOutcome",{...e,isTransferredOut:l.value}))),onReset:async()=>{if(await V("are you sure you want to clear all fields")){for(const e in n)n[e].value="",n[e].error="";Pe.emit(Oe.ON_CLEAR)}},getFacilities:qe,transferOutReasons:Se}}}),ht=k("p",null,"Add New Outcome",-1);const ft=r({components:{IonContent:s,IonFooter:u,IonHeader:d,IonTitle:c,IonToolbar:m,IonButton:p,IonGrid:v,IonRow:h,IonCol:f,IonBadge:F,OutcomesTable:mt,EnrollmentForm:gt,OutcomeForm:xe(vt,[["render",function(e,t,a,n,i,l){const o=N("ion-col"),r=N("DateInput"),s=N("SelectInput"),u=N("text-input"),d=N("ion-button"),c=N("ion-row"),m=N("ion-grid");return T(),E(m,null,{default:R((()=>[A(c,null,{default:R((()=>[A(o,{size:"12"},{default:R((()=>[ht])),_:1}),A(o,{size:"6",class:"ion-margin-top-vertical"},{default:R((()=>[A(r,{modelValue:e.form.date,"onUpdate:modelValue":t[0]||(t[0]=t=>e.form.date=t),form:e.form,minDate:e.dateEnrolled,"max-date":e.today},null,8,["modelValue","form","minDate","max-date"])])),_:1}),A(o,{size:"6",class:"ion-margin-top-vertical"},{default:R((()=>[A(s,{modelValue:e.form.status,"onUpdate:modelValue":t[1]||(t[1]=t=>e.form.status=t),form:e.form,options:e.outcomes},null,8,["modelValue","form","options"])])),_:1}),e.isTransferredOut?(T(),C(S,{key:0},[A(o,{size:"6",class:"ion-margin-top-vertical"},{default:R((()=>[A(s,{modelValue:e.form.nextFacility,"onUpdate:modelValue":t[2]||(t[2]=t=>e.form.nextFacility=t),form:e.form,asyncOptions:e.getFacilities},null,8,["modelValue","form","asyncOptions"])])),_:1}),A(o,{size:"6",class:"ion-margin-top-vertical"},{default:R((()=>[A(s,{modelValue:e.form.reason,"onUpdate:modelValue":t[3]||(t[3]=t=>e.form.reason=t),form:e.form,options:e.transferOutReasons},null,8,["modelValue","form","options"])])),_:1}),e.specifyOther?(T(),E(o,{key:0,size:"12",class:"ion-margin-top-vertical"},{default:R((()=>[A(u,{modelValue:e.form.otherReason,"onUpdate:modelValue":t[4]||(t[4]=t=>e.form.otherReason=t),form:e.form},null,8,["modelValue","form"])])),_:1})):x("",!0)],64)):x("",!0),A(o,{size:"12",class:"ion-margin-top"},{default:R((()=>[A(d,{color:"warning",onClick:e.onReset},{default:R((()=>[P("Reset")])),_:1},8,["onClick"]),A(d,{color:"success",onClick:e.onSave},{default:R((()=>[P("Save")])),_:1},8,["onClick"])])),_:1})])),_:1})])),_:1})}]])},props:{patient:{type:Object,required:!0}},setup(e){const{toStandardHisDisplayFormat:t,toStandardHisFormat:a}=l,n=new oe(e.patient.getID()),i=O((()=>a(e.patient.getBirthdate()))),o=D(),r=O((()=>!ne(o.value))),s=D(""),u=D(),d=O((()=>{var e,t;return null!==(e=null===(t=o.value)||void 0===t||null===(t=t.patient_states)||void 0===t?void 0:t.length)&&void 0!==e?e:0})),c=O((()=>r.value&&s.value?`Patient enrolled in this porgram on ${t(s.value)}`:"Patient is not enrolled in this program"));return I((async()=>{const e=(await n.getPrograms()).data;if(o.value=e.find((e=>"HIV PROGRAM"===e.program.name)),o.value){s.value=o.value.date_enrolled;const e=await n.getProgramOutcomes(),t=new Set(n.removedStates);u.value=e.map((e=>({label:e.name,value:e.program_workflow_state_id,other:e}))).filter((e=>!t.has(e.label)))}})),{modal:ke,patientProgram:n,isEnrolled:r,enrollDate:s,birthdate:i,enrollmentStatus:c,outcomes:u,program:o,totalStates:d,toStandardHisDisplayFormat:t,saveOutcome:async({date:e,status:t,nextFacility:a,reason:i,otherReason:l,isTransferredOut:o})=>{if(n.setStateDate(e),n.setStateId(t.value),o){const e="Other"!==i.value?i.value:l;await n.transferOutEncounter(a.other,e)}await n.updateState(),await Fe("Outcome saved successfully",1e3),await ke.hide(),Pe.emit(Oe.RELOAD_PATIENT_VISIT_DATA)},enrollProgram:async e=>{n.setProgramDate(e),await n.enrollProgram(),await Fe("Program enrolled successfully",1e3),await ke.hide(),Pe.emit(Oe.RELOAD_PATIENT_VISIT_DATA)},voidProgram:async()=>{var e;n.setPatientProgramId((null===(e=o.value)||void 0===e?void 0:e.patient_program_id)||-1),await n.voidProgram("duplicate / system error"),await Fe("Patient voided from program successfully",1e3),await ke.hide(),Pe.emit(Oe.RELOAD_PATIENT_VISIT_DATA)},voidOutcome:async({stateId:e,index:t})=>{var a;n.setStateId(e),await n.voidState("duplicate / system error"),Fe("Outcome voided successfully"),null===(a=o.value)||void 0===a||a.patient_states.splice(t,1),Pe.emit(Oe.RELOAD_PATIENT_VISIT_DATA)}}}});const bt=xe(ft,[["render",function(e,t,a,n,i,l){const o=N("ion-title"),r=N("ion-toolbar"),s=N("ion-header"),u=N("ion-badge"),d=N("ion-col"),c=N("ion-row"),m=N("enrollment-form"),p=N("outcome-form"),g=N("outcomes-table"),v=N("ion-grid"),h=N("ion-content"),f=N("ion-button"),b=N("ion-footer");return T(),C(S,null,[A(s,null,{default:R((()=>[A(r,null,{default:R((()=>[A(o,null,{default:R((()=>[P("Patient Outcomes")])),_:1})])),_:1})])),_:1}),A(h,null,{default:R((()=>[A(v,{style:{width:"100%"}},{default:R((()=>[A(c,null,{default:R((()=>[A(d,null,{default:R((()=>[A(u,{color:"lightblue",class:"ion-padding",style:{width:"100%"},disabled:""},{default:R((()=>[P(H(e.enrollmentStatus),1)])),_:1})])),_:1})])),_:1}),e.isEnrolled?(T(),C(S,{key:1},[e.outcomes?(T(),E(c,{key:0,class:"his-card",style:{"margin-bottom":".4rem"}},{default:R((()=>[A(p,{"date-enrolled":e.enrollDate,birthdate:e.birthdate,outcomes:e.outcomes,onSaveOutcome:e.saveOutcome},null,8,["date-enrolled","birthdate","outcomes","onSaveOutcome"])])),_:1})):x("",!0),A(c,{class:"his-card",style:U({minHeight:e.totalStates?"0":"30vh"})},{default:R((()=>[A(d,{size:"12",class:"ion-no-padding"},{default:R((()=>{var t;return[A(g,{patientStates:null===(t=e.program)||void 0===t?void 0:t.patient_states,onVoidOutcome:e.voidOutcome},null,8,["patientStates","onVoidOutcome"])]})),_:1})])),_:1},8,["style"])],64)):(T(),E(c,{key:0,class:"his-card",style:{"margin-bottom":".4rem"}},{default:R((()=>[A(d,{size:"12"},{default:R((()=>[A(m,{patientProgram:e.patientProgram,birthdate:e.birthdate,onEnrollProgram:e.enrollProgram},null,8,["patientProgram","birthdate","onEnrollProgram"])])),_:1})])),_:1}))])),_:1})])),_:1}),A(b,null,{default:R((()=>[A(r,null,{default:R((()=>[A(f,{color:"primary",onClick:t[0]||(t[0]=t=>e.modal.hide()),slot:"end"},{default:R((()=>[P("Close")])),_:1}),e.isEnrolled?(T(),E(f,{key:0,color:"danger",onClick:e.voidProgram,slot:"end"},{default:R((()=>[P("Void Program")])),_:1},8,["onClick"])):x("",!0)])),_:1})])),_:1})],64)}]]),_t=r({name:"MultiColumnView",components:{IonGrid:v,IonRow:h,IonCol:f},props:{items:{type:Object,required:!0},numberOfColumns:{type:Number,default:1}},setup:e=>({computedItems:O((()=>Qe(e.items,Math.ceil(e.items.length/e.numberOfColumns)))),grid:{1:"12",2:"6",3:"4",4:"3",6:"2"}})});const Dt=xe(_t,[["render",function(e,t,a,n,i,l){const o=N("ion-col"),r=N("ion-row"),s=N("ion-grid");return T(),E(s,null,{default:R((()=>[A(r,null,{default:R((()=>[(T(!0),C(S,null,B(e.computedItems,((t,a)=>(T(),E(o,{key:a,size:e.grid[e.numberOfColumns]},{default:R((()=>[q(e.$slots,"default",{entries:t})])),_:2},1032,["size"])))),128))])),_:3})])),_:3})}]]);class yt{static create(e){return o.postJson("drug_orders",e)}static updateDispensationOrders(e){return o.postJson("dispensations",{program_id:Xe,dispensations:e.map((e=>({date:ye(),drug_order_id:e.order_id,quantity:e.quantity})))})}static getDrugOrderHistory(e){return o.getJson("drug_orders",{patient_id:e})}static getDrugOrders(e){return o.getJson("drug_orders",{patient_id:e,date:ye(),program_id:Xe})}static getAllDrugOrders(e,t=1e3){return o.getJson("drug_orders",{patient_id:e,program_id:Xe,page_size:t})}static getLastDrugsReceived(e){return o.getJson(`patients/${e}/last_drugs_received`,{date:ye(),program_id:Xe})}static getDrugDosages(e,t,a=ye()){const n={drug_id:t,date:a};return o.getJson(`programs/${Xe}/patients/${e}/drug_doses`,n)}static getOrderByPatient(e,t){return o.getJson("/drug_orders",{patient_id:e,program_id:Xe,...t})}}class wt extends te{constructor(e){super(e)}async isPregnant(){const e=await pe.getFirstObs(this.getID(),"Is patient pregnant");return e&&!!e.value_coded.match(/Yes/i)&&pe.obsInValidPeriod(e)}async hasPregnancyObsToday(){const e=await pe.getFirstObsDatetime(this.getID(),"Is patient pregnant");return e&&l.toStandardHisFormat(e)===ye()&&this.isFemale()}async hasPregnancyAtARTInitiation(){const e=await pe.getLastValueCoded(this.getID(),"Is patient pregnant");return e&&await pe.getConceptName(e)}async breastFeedingAtARTInitiation(){const e=await pe.getLastValueCoded(this.getID(),"Is patient breast feeding");return e&&await pe.getConceptName(e)}async getInitialWeight(){return pe.getLastValueNumber(this.getID(),"weight")}async getRecentWeight(){return pe.getFirstValueNumber(this.getID(),"weight")||-1}async getInitialHeight(){return pe.getLastValueNumber(this.getID(),"Height")}async getInitialTBStatus(){const e=await pe.getLastValueCoded(this.getID(),"TB Status at Initiation");if(e)return pe.getConceptName(e)}async getRecentHeight(){return pe.getFirstValueNumber(this.getID(),"Height")||-1}async getWeightHistory(){try{const e=await pe.getAll(this.getID(),"weight");return null==e?void 0:e.data.map((e=>({weight:e.value_numeric,date:e.obs_datetime})))}catch(e){return console.warn(e),[]}}async getCompleteTBTherapyHistory(){const e=await pe.getAll(this.getID(),"TB treatment history");return null==e?void 0:e.data.filter((e=>e.value_text.match(/Complete/i)))}async getInitialBMI(){return pe.getLastValueNumber(this.getID(),"BMI")}async everReceivedART(){return pe.getFirstValueCoded(this.getID(),"Ever received ART")}async agreesToFollowUp(){return pe.getFirstValueCoded(this.getID(),"Agrees to followup")}async getHIVTestDate(){const e=await pe.getFirstObs(this.getID(),"Confirmatory HIV test date");return e&&e.value_datetime?e.value_datetime:e&&e.value_text?e.value_text:null}async getARTStartDate(){const e=await pe.getFirstObs(this.getID(),"Date ART started");if(e&&e.value_datetime)return e.value_datetime;if(e&&e.value_text)return e.value_text;const t=(await yt.getAllDrugOrders(this.getID(),Number.MAX_SAFE_INTEGER)).data;return ne(t)?null:t[0].order.start_date}async getHIVTestLocation(){return pe.getFirstValueText(this.getID(),"Confirmatory HIV test location")}async getReasonForStartingART(){return pe.getFirstValueCoded(this.getID(),"Reason for ART eligibility")}async getStagingCondition(){return pe.getFirstValueCoded(this.getID(),"Who stages criteria present")}static async setSessionDate(e){const t=await this.getApiDate();if(t)return sessionStorage.setItem("apiDate",t),void sessionStorage.setItem("sessionDate",e);throw"Unable to set api date"}static async getApiDate(){const e=(await o.getJson("current_time")).data;if(e)return e.date}getWhoStage(){return pe.getFirstValueCoded(this.getID(),"Who stage")}static async resetSessionDate(){const e=await this.getApiDate();if(e)return sessionStorage.removeItem("apiDate"),void sessionStorage.setItem("sessionDate",e);throw"Unable to reset session date"}}class It extends ie{constructor(e,t){super(e,Ze.HIV_RECEPTION,t)}}class Vt extends ie{constructor(e,t){super(e,48,t)}static getBpGrade(e,t){return e<140&&t<90?"normal":e>=140&&e<160||t>=100&&t<110?"grade 1":e>=180&&t>110||e>=180?"grade 3":e>=160&&e<180||t>=110?"grade 2":"N/A"}static isBpNormotensive(e){const[t,a]=Object.values(e).sort(((e,t)=>e.date<t.date?1:0)).map((e=>this.getBpGrade(e.sbp,e.dbp)));return"normal"===t&&"normal"===a}getSystolicBp(){return pe.getFirstValueNumber(this.patientID,"Systolic blood pressure")}getDiastolicBp(){return pe.getFirstValueNumber(this.patientID,"Diastolic blood pressure")}async onBpDrugs(){const e=await pe.getFirstValueCoded(this.patientID,"Treatment status");return!!e&&"Yes"===e}async getBPTrail(){return await o.getJson(`/patients/${this.patientID}/bp_trail`)}async getCurrentDrugs(){return await o.getJson(`/patients/${this.patientID}/current_bp_drugs`)}async getLastDrugs(){return await o.getJson(`/patients/${this.patientID}/last_bp_drugs_dispensation`)}async getAdherence(e,t){return await o.postJson(`/patients/${this.patientID}/remaining_bp_drugs`,{drug_id:e,pills:t})}async enrollPatient(e){return await o.postJson(`/patients/${this.patientID}/update_or_create_htn_state`,e)}static htnDrugReferences(){return[{drug_id:275,drug_name:"HCZ (25mg tablet)",units:"tab(s)",am:0,noon:0,pm:1,frequency:"Daily (QOD)"},{drug_id:942,drug_name:"Enalapril (5mg tablet)",units:"tab(s)",am:0,noon:0,pm:1,frequency:"Daily (QOD)"},{drug_id:943,drug_name:"Enalapril (10mg tablet)",units:"tab(s)",am:0,noon:0,pm:1,frequency:"Daily (QOD)"},{drug_id:558,drug_name:"Amlodipine (5mg tablet)",units:"tab(s)",am:0,noon:0,pm:1,frequency:"Daily (QOD)"},{drug_id:559,drug_name:"Amlodipine (10mg tablet)",units:"tab(s)",am:0,noon:0,pm:1,frequency:"Daily (QOD)"},{drug_id:117,drug_name:"Atenolol (50mg tablet)",units:"tab(s)",am:0,noon:0,pm:1,frequency:"Daily (QOD)"},{drug_id:11,drug_name:"Atenolol(100mg tablet)",units:"tab(s)",am:0,noon:0,pm:1,frequency:"Daily (QOD)"}]}getDrugs(){return{HCZ:{drugs:[{drugName:"HCZ (25mg tablet)",drugID:275,amount:"25mg",current:!1,selected:!1,isChecked:!1,dispensed:null,expectedRemaining:null,adherence:null}],selected:null,notes:[]},Enalapril:{drugs:[{drugName:"Enalapril (5mg tablet)",drugID:942,amount:"5mg",current:!1,selected:!1,isChecked:!1,dispensed:null,expectedRemaining:null,adherence:null,remaining:null},{drugName:"Enalapril (10mg tablet)",drugID:943,amount:"10mg",current:!1,selected:!1,isChecked:!1,dispensed:null,expectedRemaining:null,adherence:null,remaining:null}],selected:null,notes:[]},Amlodipine:{drugs:[{drugName:"Amlodipine (5mg tablet)",drugID:558,amount:"5mg",current:!1,selected:!1,isChecked:!1,dispensed:null,expectedRemaining:null,adherence:null,remaining:null},{drugName:"Amlodipine (10mg tablet)",drugID:559,amount:"10mg",current:!1,selected:!1,isChecked:!1,dispensed:null,expectedRemaining:null,adherence:null,remaining:null}],selected:null,notes:[]},Atenolol:{drugs:[{drugName:"Atenolol (50mg tablet)",drugID:117,amount:"50mg",current:!1,selected:!1,isChecked:!1,dispensed:null,expectedRemaining:null,adherence:null,remaining:null},{drugName:"Atenolol(100mg tablet)",drugID:11,amount:"100mg",current:!1,selected:!1,isChecked:!1,dispensed:null,expectedRemaining:null,adherence:null,remaining:null}],selected:null,notes:[]}}}}class Nt extends ie{constructor(t,a){super(t,68,a),e(this,"lastDrugs",void 0),e(this,"lastReceiptDate",void 0),this.lastDrugs=[],this.lastReceiptDate=""}async loadPreviousDrugs(e=!1){const t=new Date(this.date);t.setDate(t.getDate()-1);const a=e=>l.toStandardHisFormat(e),n=(await o.getJson(`patients/${this.patientID}/drugs_received`,{date:a(t)})).data;if(!ne(n)){this.lastReceiptDate=n.reduce(((e,t)=>!e||new Date(a(t.order.start_date))>new Date(e)?a(t.order.start_date):e),null);const t=Vt.htnDrugReferences().map((e=>e.drug_id));if(this.lastDrugs=n.filter((e=>!t.includes(e.drug.drug_id)&&a(e.order.start_date)===this.lastReceiptDate)),e){const e=(await this.getPreviousDrugPillCount()).data||{};this.lastDrugs=this.lastDrugs.map((t=>(e[t.drug.drug_id]&&t.quantity&&(t.quantity+=e[t.drug.drug_id]),t)))}}}getReceiptDate(){return this.lastReceiptDate}getLastDrugs(){return this.lastDrugs}receivedDrugsBefore(){return!ne(this.lastDrugs)}buildPillCountObs(e,t){return this.buildValueNumber("Number of tablets brought to clinic",t,null,e)}getPreviousDrugPillCount(){return o.getJson("last_drugs_pill_count",{patient_id:this.patientID,program_id:this.programID,date:this.lastReceiptDate})}async buildAdherenceObs(e,t,a){return{concept_id:await ie.getConceptID("Drug adherence",!0),value_numeric:a,value_drug:t,value_modifier:"%",order_id:e,person_id:this.patientID,obs_datetime:ie.getSessionDate()}}isAdherenceGood(e){return e>=95&&e<=105}calculateAdherence(e,t,a){return Math.round(100*(e-t)/(e-a))}calculateExpected(e,t,a,n){const i="QW"===n?"week":"day";return e-this.calcTimeElapsed(a,i)*parseFloat(t.toString())}calcTimeElapsed(e,t){return De(l.toStandardHisFormat(this.date)).diff(l.toStandardHisFormat(e),t)+1}calculateUnaccountedOrMissed(e,t){const a=parseFloat(e)-parseFloat(t);return a<0?-1*a+" missed":a+" unacc"}}class Ct extends ie{constructor(e,t){super(e,7,t)}async getNextAppointment(){return o.getJson(`/programs/${this.programID}/patients/${this.patientID}/next_appointment_date`,{date:this.date})}static async getDailiyAppointments(e){const t=Xe;return o.getJson(`/programs/${t}/booked_appointments`,{date:e,paginate:!1})}}class At extends ie{constructor(t,a){super(t,25,a),e(this,"nextVisitInterval",void 0),e(this,"fastTrack",void 0),e(this,"regimenExtras",void 0),e(this,"hangingPills",void 0),e(this,"fastTrackMedications",void 0),e(this,"medicationOrders",void 0),e(this,"treatmentState",void 0),e(this,"contraindications",void 0),e(this,"sideEffects",void 0),e(this,"tptPrescriptionCount",void 0),e(this,"lastSideEffectDate",void 0),this.nextVisitInterval=0,this.fastTrack=!1,this.regimenExtras=[],this.fastTrackMedications=[],this.hangingPills=[],this.medicationOrders=[],this.treatmentState="",this.contraindications={},this.sideEffects={},this.tptPrescriptionCount=0,this.lastSideEffectDate=""}setNextVisitInterval(e){this.nextVisitInterval=e}getHangingPills(){return this.hangingPills}getMedicationOrders(){return this.medicationOrders.map((e=>ie.getCachedConceptName(e)))}getTptPrescriptionCount(){return this.tptPrescriptionCount}getLastSideEffectDate(){return this.lastSideEffectDate}getContraindications(){return this.contraindications}getSideEffects(){return this.sideEffects}getRegimenExtras(){return this.regimenExtras}getPatientRegimens(){return Ae.getRegimens(this.patientID)}getARVs(){return o.getJson("arv_drugs")}getCustomIngridients(){return Ae.getCustomIngridients()}getFastTrackMedications(){return this.fastTrackMedications}getTreatmentState(){return this.treatmentState}isFastTrack(){return this.fastTrack}medicationOrdersAvailable(){return!ne(this.medicationOrders)}shouldPrescribeArvs(){const e=ie.getCachedConceptID("Antiretroviral drugs");return this.medicationOrders.includes(e)}shouldPrescribeExtras(){return ie.getConceptsByCategory("art_extra_medication_order").map((e=>this.medicationOrders.includes(e.concept_id))).some(Boolean)}getRegimenStarterpack(e,t){const a={weight:t,regimen:e};return o.getJson(`programs/${Xe}/regimen_starter_packs`,a)}async getLvpDrugsByType(e,t){return o.getJson(`programs/${Xe}/regimens/${t}`,{patient_id:this.patientID,lpv_drug_type:e})}async loadContraindications(){const e=await ie.getConceptID("Contraindications");(await ie.getObs({concept_id:e,person_id:this.patientID})).data.forEach((e=>{const t=we(e.obs_datetime);this.contraindications[t]||(this.contraindications[t]=[]);const a=ie.getCachedConceptName(e.value_coded);this.contraindications[t].push(a)}))}async loadDrugInduced(){const e=await ie.getConceptID("Drug induced"),t=(await ie.getObs({concept_id:e,person_id:this.patientID})).data;t&&t.forEach((e=>{const t=we(e.obs_datetime);if(this.lastSideEffectDate||(this.lastSideEffectDate=t),!e.value_drug||!e.value_coded)return;this.sideEffects[t]||(this.sideEffects[t]={}),this.sideEffects[t][e.value_drug]||(this.sideEffects[t][e.value_drug]=[]);const a=ie.getCachedConceptName(e.value_coded);this.sideEffects[t][e.value_drug].push(a)}))}async loadTptPrescriptionCount(){const e=(await o.getJson("tpt_prescription_count",{patient_id:this.patientID,date:this.date})).data;if(e){const t=e.count+1;this.tptPrescriptionCount=t>3?3:t}}async loadFastTrackStatus(){const e=await ie.getFirstValueCoded(this.patientID,"Fast track"),t=await ie.getConceptID("yes");e&&(this.fastTrack=e===t)}async loadRegimenExtras(e=this.date){const t=await o.getJson(`programs/${Xe}/patients/${this.patientID}/dosages`,{date:e});t&&(this.regimenExtras=Object.values(t))}async loadMedicationOrders(){const e=await ie.getConceptID("Medication orders"),t=(await ie.getObs({concept_id:e,date:this.date,person_id:this.patientID,page_size:5})).data;this.medicationOrders=t.map((e=>e.value_coded))}async loadHangingPills(){var e;const t=(null===(e=await ie.getAll(this.patientID,"Pills brought"))||void 0===e?void 0:e.data)||[];this.hangingPills=t.filter((e=>e.value_numeric>=1&&(!(!e.value_drug||we(e.obs_datetime)!==we(this.date))||(e.order||!1)))).map((e=>{var t;return(null==e||null===(t=e.order)||void 0===t||null===(t=t.drug_order)||void 0===t?void 0:t.drug_inventory_id)||e.value_drug}))}async loadFastTrackMedications(){const e=(await yt.getLastDrugsReceived(this.patientID)).data.map((async e=>{const{drug:t}=e,a=(await yt.getDrugDosages(this.patientID,t.drug_id)).data;return{drug_id:t.drug_id,drug_name:t.name,units:t.units,am:a.am,noon:a.noon,pm:a.pm,frequency:e.frequency}}));this.fastTrackMedications=await Promise.all(e)}async loadTreatmentState(){const e={date:this.date},t=await o.getJson(`programs/${Xe}/patients/${this.patientID}/status`,e);t&&(this.treatmentState=t.data.status)}findAndGroupDrugSideEffects(e){const t={};for(const a in this.sideEffects){const n=this.sideEffects[a];for(const i in n)e.includes(parseInt(i))&&(t[a]||(t[a]=[]),t[a]=[...t[a],...n[i]])}return t}calculatePillsPerDay(e,t,a){return parseFloat(e.toString())+t+a}estimatePackSize(e,t=0){const a=e*this.nextVisitInterval/(t||1);let n=Math.round(a);return n<=0&&(n+=1),n}calculateDosage(e,t){let a=0;return 0===t&&(a=e),0==e&&(a=t),e>0&&t>0&&(a=(e+t)/2),a}calculateEquivalentDosage(e,t){return e+t}calculateDateFromInterval(){const e=new Date(this.date);return e.setDate(e.getDate()+this.nextVisitInterval),we(e)}getDrugPackSize(e){if(e.pack_size)return e.pack_size;try{return e.barcodes[0].tabs}catch(t){return 30}}getInstructions(e,t,a,n){return`${e} :- Morning: ${t} ${n}, Evening: ${a} ${n}`}toOrderObj(e,t,a,n=0,i=0,l=""){return{drug_inventory_id:e,equivalent_daily_dose:this.calculateEquivalentDosage(n,i),start_date:this.date,auto_expire_date:this.calculateDateFromInterval(),units:a,instructions:this.getInstructions(t,n,i,a),dose:this.calculateDosage(n,i),frequency:l}}async getReasonForRegimenSwitch(){const e=await ie.getFirstValueText(this.patientID,"Reason for ARV switch");return e||"N/A"}async createDrugOrder(e){return yt.create({encounter_id:this.encounterID,drug_orders:e})}async createHangingPillsObs(e){return this.saveValueTextObs("appointment type",e)}async createRegimenSwitchObs(e){return(await this.saveValueTextObs("Reason for ARV switch",e)).data}}class Rt{static async getBMIData(){return(await fetch("/bmi.json")).json()}static async getBMIResult(e,t,a){let n={result:"",color:"",index:a};if(a<=0)return n.index=0,n;if(t<5&&t>0)n.result="Use MUAC to calculate nutrition status",n.color="red";else{t>18&&(t=19);const i=await this.getBMIData(),l=i[e][t];l&&(n=this.buildBounds(Object.keys(l),l,a,i.colors))}return n}static buildBounds(e,t,a,n){const i={result:"",color:"",index:a};return e.forEach((e=>{if(e.indexOf("-")>=0){const l=e.split("-");a>=parseFloat(l[0])&&a<=parseFloat(l[1])&&(i.result=t[e],i.color=n[t[e]])}else if(e.indexOf("<")>=0){const l=e.replace("<","");a<parseFloat(l)&&(i.result=t[e],i.color=n[t[e]])}else if(e.indexOf(">=")>=0){const l=e.replace(">=","");a>=parseFloat(l)&&(i.result=t[e],i.color=n[t[e]])}})),i}static getBMI(e,t,a,n){const i=this.calculateBMI(e,t);return this.getBMIResult(a,n,i)}static calculateBMI(e,t){if(0==t||0==e)return 0;let a=e/t/t*1e4;return Math.round(10*a)/10}}class St{static async fetchAvailableDrugStock(e){const t=(await o.getJson("pharmacy/items",{drug_id:e})).data;if(!ne(t))return t.map((e=>({quantity:e.current_quantity,packSize:e.pack_size})))}}const Tt={11:[30],21:[25],22:[60],24:[30,60,90,100],30:[90],39:[60],73:[120],74:[60],76:[1e3],297:[30,60,90],576:[30,60,90],613:[60],731:[60],732:[60],733:[60],734:[30],735:[30],736:[60],738:[60],931:[12,30,60],932:[30],954:[60],963:[30,60,90],968:[60],969:[30],971:[30,60,90],976:[60],977:[30],982:[30],983:[30,90],1039:[30,60,90],1043:[60],1044:[30],1056:[24],1216:[3,6,8,12]};class Pt extends ie{constructor(t,a){super(t,54,a),e(this,"drugHistory",void 0),e(this,"currentDrugOrder",void 0),e(this,"useDrugManagement",void 0),this.drugHistory=[],this.currentDrugOrder=[],this.useDrugManagement=!1}setIsDrugManagementEnabled(e){this.useDrugManagement=e}getDrugHistory(){return this.drugHistory}getCurrentOrder(){return this.currentDrugOrder}buildDispensations(e,t,a){const n=[];for(let i=0;i<a;i++)n.push({drug_order_id:e,date:this.date,quantity:t/a});return n}saveDispensations(e){return o.postJson("/dispensations",{dispensations:e,program_id:Xe})}async voidOrder(e){return o.void(`/dispensations/${e}`,{})}async loadDrugHistory(){try{this.drugHistory=(await yt.getDrugOrderHistory(this.patientID)).data||[]}catch(e){console.warn(e)}}async loadCurrentDrugOrder(){if(this.currentDrugOrder=(await yt.getDrugOrders(this.patientID)).data||[],this.useDrugManagement)for(const e of this.currentDrugOrder)e.stocks=await St.fetchAvailableDrugStock(e.drug.drug_id)}getDrugPackSizes(e){return e in Tt?Tt[e]:[30,60,90]}calcCompletePack(e,t){const a=e.barcodes.sort(((e,t)=>e.tabs-t.tabs));if(0==a.length||0==t)return t;for(const n in a){const{tabs:e}=a[n];if(parseInt(e)>=t)return e}return parseInt(a[a.length-1].tabs)}}const Ot=r({__name:"PatientVisit",props:{patient:{type:Object,required:!0}},setup(e){const t=e,a=O((()=>t.patient.getID())),l=new re(a.value,-1),o=new se(a.value,-1),r=new At(a.value,-1),N=new Pt(a.value,-1),k=new It(a.value,-1),F=new Nt(a.value,-1),U=new Ct(a.value,-1),q=D(),L=D(),G=D([]),z=D([]),$=D([]),j=D([]),J=O((()=>!(q.value&&t.patient.getAge()>18))),W=O((()=>t.patient.isFemale())),Y=D(""),Q=De().format(n),K=De(t.patient.getBirthdate()).format(n),X=D(!1),Z=y({}),ee=y({visitDate:{value:De().format("YYYY-MM-DD"),label:"Visit Date",required:!0,validation:async e=>new Date(e.value)>new Date(Q)?["Visit date cannot be after today's date"]:new Date(e.value)<new Date(K)?["Visit date cannot be before patient's birth date"]:null},weight:{value:void 0,label:"Weight",required:!0,computedValue:e=>({tag:"vitals",obs:l.buildValueNumber("Weight",e)}),validation:(e,t)=>!ne(e)&&e.value||"No"!==t.patientPresent.value?l.validator({...e,label:"Weight"}):null},height:{value:void 0,label:"Height",computedValue:e=>({tag:"vitals",obs:l.buildValueNumber("Height",e)}),validation:e=>J.value&&(!ne(e)&&e.value||"No"!==ee.patientPresent.value)?l.validator({...e,label:"Height"}):null},isPregnant:{value:void 0,label:"Is the patient pregnant?",required:W.value,computedValue:e=>({tag:"consultation",obs:o.buildValueCoded("Is patient pregnant",e)}),validation:async e=>W.value&&Ge(e)},isBreastfeeding:{value:void 0,label:"Is the patient breastfeeding?",required:W.value,computedValue:e=>({tag:"consultation",obs:o.buildValueCoded("Is patient breast feeding",e)}),validation:async e=>W.value&&Ge(e)},nextAppointmentDate:{value:void 0,label:"Next Appointment Date",required:!0,computedValue:e=>({tag:"appointment",obs:U.buildValueDate("Appointment date",e)}),validation:async(e,t)=>new Date(e.value)<new Date(t.visitDate.value)?["Appointment date cannot be before visit date"]:new Date(e.value)>new Date(Y.value)?["Appointment date cannot be after drug run out date"]:null},patientPresent:{value:void 0,label:"Is the patient present?",required:!0,computedValue:e=>({tag:"reception",obs:k.buildValueCoded("Patient present",e)})},guardianPresent:{value:void 0,label:"Is the guardian present?",required:!0,computedValue:e=>({tag:"reception",obs:k.buildValueCoded("Guardian present",e)})},pillCount:{value:void 0,label:"Pill Count",required:j.value.length>0,validation:async e=>j.value.length>0&&ze(e)},regimen:{value:void 0,label:"Regimen",placeholder:"Select a regimen",computedValue:()=>({tag:"consultation",obs:r.buildValueCoded("Medication orders","Antiretroviral drugs")})},totalCPTGiven:{value:void 0,label:"Total CPT Given",computedValue:()=>({tag:"consultation",obs:r.buildValueCoded("Medication orders","CPT")})},totalIPTGiven:{value:void 0,label:"Total IPT Given",computedValue:()=>({tag:"consultation",obs:r.buildValueCoded("Medication orders","INH")}),validation:async(e,t)=>{var a,n;return("6H"===(null===(a=t.tbMed.value)||void 0===a?void 0:a.label)||"3HP (RFP + INH)"===(null===(n=t.tbMed.value)||void 0===n?void 0:n.label))&&ze(e)}},totalRFPGiven:{value:void 0,label:"Total RFP Given",computedValue:()=>({tag:"consultation",obs:r.buildValueCoded("Medication orders","3HP (RFP + INH)")}),validation:async(e,t)=>{var a;return"3HP (RFP + INH)"===(null===(a=t.tbMed.value)||void 0===a?void 0:a.label)&&ze(e)}},total3HPGiven:{value:void 0,label:"Total 3HP Given",computedValue:()=>({tag:"consultation",obs:r.buildValueCoded("Medication orders","INH 300 / RFP 300 (3HP)")}),validation:async(e,t)=>{var a;return"3HP (INH 300 / RFP 300)"===(null===(a=t.tbMed.value)||void 0===a?void 0:a.label)&&ze(e)}},totalPyridoxineGiven:{value:void 0,label:"Total Pyridoxine Given",validation:async(e,t)=>{var a;return(null===(a=t.tbMed.value)||void 0===a?void 0:a.label)&&ze(e)}},tbMed:{value:void 0,label:"TPT Medication",placeholder:"Select a TPT medication"},hasContraindications:{value:"No",label:"Has Side Effects / Contraindications ?",validation:async e=>$e([()=>Ge(e),()=>"No"===e.value||z.value.some((e=>e.isChecked))?null:["Please select at least one side effect"]])},hasSideEffects:{value:"No",label:"Has Other Side Effects ?",validation:async e=>$e([()=>Ge(e),()=>"No"===e.value||$.value.some((e=>e.isChecked))?null:["Please select at least one side effect"]])},tbStatus:{value:void 0,label:"TB Status",required:!0,computedValue:e=>({tag:"consultation",obs:o.buildValueCoded("TB Status",e.value)})},tbTreatmentStartDate:{value:"",label:"TB treatment start date",validation:async e=>{if(!X.value){if(new Date(e.value)>new Date(Q))return["TB treatment start date cannot be after today's date"];if(new Date(e.value)<new Date(K))return["TB treatment start date cannot be before patient's birth date"]}return null},computedValue:e=>({tag:"consultation",obs:o.buildValueDate("TB treatment start date",e)})},tbTreatmentPeriod:{value:void 0,label:"TB treatment period (months)",computedValue:e=>({tag:"consultation",obs:o.buildValueNumber("TB treatment period",e)})},cxrResult:{value:"",label:"CXR (Chest X-ray) Screening method Result",computedValue:e=>({tag:"consultation",obs:o.buildGroupValueCoded("TB screening method used","chest xray",e)})},mwrdResult:{value:"",label:"mWRD (Molecular WHO Recommended Rapid Diagnostic test) Screening method Result",computedValue:e=>({tag:"consultation",obs:o.buildGroupValueCoded("TB screening method used","Molecular WHO Recommended Rapid Diagnostic test",e)})}}),te=async(e,t)=>{const a={label:"Unkown",value:"Unkown",other:[{drug_id:1046,drug_name:"Unknown ARV",am:1,pm:0,units:"",frequency:"Daily (QOD)"}]},n=(await Ae.getRegimensByWeight(e,t)).data;return ne(n)?[a]:Object.keys(n).map((e=>({label:e,value:e,other:n[e]}))).concat([a])};w((()=>ee.regimen.value),(e=>{var t;(qe(),e)&&(null==e||null===(t=e.other)||void 0===t||t.forEach((e=>{var t;Z[e.drug_name]={label:`${null!==(t=e.alternative_drug_name)&&void 0!==t?t:e.drug_name} given`,value:0,required:!0,validation:e=>ze(e,"POSITIVE_INTEGERS")}})))})),w(ee.patientPresent,(e=>{"No"===e.value?(ee.weight.required=!1,ee.weight.error="",ee.guardianPresent.value="Yes"):ee.weight.required=!0})),w(ee.guardianPresent,(e=>{"No"===e.value&&(ee.patientPresent.value="Yes")})),w([()=>ee.weight.value,()=>ee.tbStatus.value],(async([e,t])=>{ee.regimen.value=void 0,qe();const a=!ne(t)&&!t.label.match(/TB Not Suspected/i);e?(G.value=await te(ee.weight.value,a),ee.patientPresent.value="Yes",ee.patientPresent.disabled=!0):!e&&ee.weight.required&&(ee.patientPresent.value=void 0,ee.patientPresent.disabled=!1),ee.tbMed.disabled=a||X.value}));const ae=()=>{var e;return ne(Z)?1/0:Math.min(...null===(e=ee.regimen.value)||void 0===e||null===(e=e.other)||void 0===e?void 0:e.map((e=>{var t,a,n,i,l;return(null!==(t=null===(a=Z[e.drug_name])||void 0===a?void 0:a.value)&&void 0!==t?t:0)/((null!==(n=e.am)&&void 0!==n?n:0)+(null!==(i=e.noon)&&void 0!==i?i:0)+(null!==(l=e.pm)&&void 0!==l?l:0))||1})))};w([()=>Z,()=>ee.pillCount.value,()=>ee.visitDate.value],(()=>{const e=parseInt(ee.pillCount.value)||0,t=ae();t!==1/0&&(Y.value=De(ee.visitDate.value).add(t+e,"days").format(n),ee.nextAppointmentDate.label=`Next Appointment Date (Drug run out date: ${De(Y.value).format(i)})`,ee.nextAppointmentDate.value=Y.value)}),{deep:!0}),w((()=>ee.visitDate.value),(()=>Se()));const ie=O((()=>{var e;return"3HP (INH 300 / RFP 300)"===(null===(e=ee.tbMed.value)||void 0===e?void 0:e.label)})),le=O((()=>{var e;return"3HP (RFP + INH)"===(null===(e=ee.tbMed.value)||void 0===e?void 0:e.label)})),oe=O((()=>{var e;return"6H"===(null===(e=ee.tbMed.value)||void 0===e?void 0:e.label)})),ue=O((()=>"Yes"===ee.hasContraindications.value)),de=O((()=>"Yes"===ee.hasSideEffects.value)),pe=O((()=>{var e;return/Confirmed TB on treatment/i.test(null===(e=ee.tbStatus.value)||void 0===e?void 0:e.label)})),be=O((()=>{var e;return/Suspected/i.test(null===(e=ee.tbStatus.value)||void 0===e?void 0:e.label)})),_e=[{label:"Normal",value:"Negative"},{label:"Abnormal",value:"Positive"},{label:"Unknown/Not done",value:"Unknown"}],ye=[{label:"Negative",value:"Negative"},{label:"Positive",value:"Positive"},{label:"Unknown/Not done",value:"Unknown"}],we=Re(["6H","3HP (RFP + INH)","3HP (INH 300 / RFP 300)"]),Ie=Re(["Confirmed TB Not on treatment","Confirmed TB on treatment","TB Not Suspected","TB Suspected"]),Se=async()=>{await wt.setSessionDate(ee.visitDate.value),o.setDate(ee.visitDate.value),X.value=!1;const e=await o.getFirstValueCoded("TB status");if(/Confirmed TB on treatment/i.test(e)){const e=await o.getFirstValueDatetime("TB treatment start date"),t=await o.getFirstValueNumber("TB treatment period")||6;if(e){const a=De(ee.visitDate.value).diff(e,"months");X.value=a<=t}}ee.tbStatus.required=!X.value},Te=async()=>{const e=[await o.buildValueCoded("Patient using family planning","No")];return o.getFamilyPlanningMethods().forEach((async t=>{e.push(await o.buildValueCoded(t,"No"))})),e},Ee=async()=>Promise.all(me.getConceptsByCategory("tb_symptom",!0).map((async e=>o.buildGroupValueCoded(e.name,e.name,"No")))),xe=(e,t,a,n)=>({drug_inventory_id:e.drug_id,equivalent_daily_dose:r.calculateEquivalentDosage(e.am,e.pm),dose:r.calculateDosage(e.am,e.pm),start_date:n,auto_expire_date:De(n).add(a,"days").format("YYYY-MM-DD"),units:e.units,qty:t,frequency:e.frequency,instructions:r.getInstructions(e.drug_name,e.am,e.pm,e.units)}),Ue=async()=>{await wt.setSessionDate(ee.visitDate.value),l.setDate(ee.visitDate.value),o.setDate(ee.visitDate.value),r.setDate(ee.visitDate.value),k.setDate(ee.visitDate.value),F.setDate(ee.visitDate.value),U.setDate(ee.visitDate.value),N.setDate(ee.visitDate.value),await ce(ee,(async(e,t)=>{var a;const n=[];let i=0;if(!ne(e.regimen)&&await ge(Z)){const t=e.regimen.other,a=ve(Z).formData;i=ae(),t.forEach((t=>n.push(xe(t,a[t.drug_name],i,e.visitDate))))}else{if(!(await V("Are you sure you want to continue without dispensing ART drugs?")))return}var s;e.totalCPTGiven&&Ke((await Ae.getRegimenExtras("Cotrimoxazole",null!==(s=e.weight)&&void 0!==s?s:L.value)).data,"concept_name").filter((e=>"Daily (QOD)"===e.frequency)).forEach((t=>n.push(xe(t,e.totalCPTGiven,i,e.visitDate))));if(null!==(a=e.tbMed)&&void 0!==a&&a.value){var u;const t=Ke((await Ae.getRegimenExtras("INH",null!==(u=e.weight)&&void 0!==u?u:L.value)).data,["concept_name","frequency"]),a=t.find((e=>"Pyridoxine"===e.concept_name));if(a&&e.totalPyridoxineGiven&&n.push(xe(a,e.totalPyridoxineGiven,i,e.visitDate)),e.totalIPTGiven){const a=t.find((e=>"Isoniazid"===e.concept_name&&(oe.value&&"Daily (QOD)"===e.frequency||le.value&&"Weekly (QW)"===e.frequency)));n.push(xe(a,e.totalIPTGiven,i,e.visitDate))}if(e.totalRFPGiven&&le.value){var d;const t=(await Ae.getRegimenExtras("Rifapentine",null!==(d=e.weight)&&void 0!==d?d:L.value)).data;t.length&&n.push(xe(t[0],e.totalRFPGiven,i,e.visitDate))}if(e.total3HPGiven&&ie.value){var c;const t=(await Ae.getRegimenExtras("INH / RFP",null!==(c=e.weight)&&void 0!==c?c:L.value)).data;n.push(xe(t[0],e.total3HPGiven,i,e.visitDate))}}if(!ne(n)){await r.createEncounter();const e=(await r.createDrugOrder(n)).data.map((e=>{const t=n.find((t=>t.drug_inventory_id===e.drug_inventory_id));return N.buildDispensations(e.order_id,t.qty,1)}));await N.saveDispensations(e.flat(1))}const m=await he(t,"vitals");if(!ne(m)){await l.createEncounter();const t=await(async e=>{const t=e.height||q.value,a=Rt.calculateBMI(e.weight,t);return l.buildValueNumber("BMI",a)})(e);await l.saveObservationList([...m,t])}await o.createEncounter();let p=await he(t,"consultation");p=[...p,...await fe("Malawi ART side effects",z.value)],p=[...p,...await Ee()],de.value&&(p=[...p,...await fe("Other side effect",$.value)]),W.value&&(p=[...p,...await Te()]),await o.saveObservationList(p),await k.createEncounter();const g=await he(t,"reception");if(await k.saveObservationList(g),j.value.length>0){await F.createEncounter();const t=await Promise.all(j.value.map((async t=>{const a=F.calculateExpected(t.quantity,t.equivalent_daily_dose,t.order.start_date,t.frequency),n=F.calculateAdherence(t.quantity,e.pillCount,a);return[await F.buildAdherenceObs(t.order_id,t.drug_inventory_id,n),await F.buildPillCountObs(t.order_id,e.pillCount)]})));await F.saveObservationList(t.flat(1))}await U.createEncounter();const v=await he(t,"appointment");await U.saveObservationList(v),await Fe("Patient visit saved successfully"),await wt.resetSessionDate(),await ke.hide(),Pe.emit(Oe.RELOAD_PATIENT_VISIT_DATA),Pe.emit(Oe.RELOAD_STAGING_INFORMATION)}))},Be=async()=>{if(await V("Are you sure you want to clear all fields?")){for(const e in ee)ee[e].value="",ee[e].error="",ee[e].disabled=!1;qe(),Pe.emit(Oe.ON_CLEAR)}},qe=()=>{for(const e in Z)delete Z[e]};return I((async()=>{try{await Se(),q.value=await t.patient.getRecentHeight(),L.value=await t.patient.getRecentWeight(),L.value&&(G.value=await te(L.value)),j.value=(await yt.getLastDrugsReceived(t.patient.getID())).data,ee.pillCount.required=j.value.length>0,z.value=me.getConceptsByCategory("contraindication",!0).map((e=>({value:e.concept_id,label:e.name,other:e}))),$.value=me.getConceptsByCategory("side_effect",!0).map((e=>({value:e.concept_id,label:e.name,other:e})))}catch(e){He("Form initialization failed. Try to refresh the page"),console.error(e)}})),(e,t)=>(T(),C(S,null,[A(M(d),null,{default:R((()=>[A(M(m),null,{default:R((()=>[A(M(c),null,{default:R((()=>[P("Patient Visit")])),_:1})])),_:1})])),_:1}),A(M(s),{class:"ion-padding"},{default:R((()=>[A(M(v),{style:{width:"100%"}},{default:R((()=>[A(M(h),null,{default:R((()=>[A(M(f),{size:"12",class:"ion-margin-vertical"},{default:R((()=>[A(Ve,{modelValue:ee.visitDate,"onUpdate:modelValue":t[0]||(t[0]=e=>ee.visitDate=e),form:ee,minDate:M(K),maxDate:M(Q)},null,8,["modelValue","form","minDate","maxDate"])])),_:1}),A(M(f),{size:"6",class:"ion-margin-vertical"},{default:R((()=>[A(Ye,{modelValue:ee.patientPresent,"onUpdate:modelValue":t[1]||(t[1]=e=>ee.patientPresent=e),inline:"",disabled:ee.patientPresent.disabled},null,8,["modelValue","disabled"])])),_:1}),A(M(f),{size:"6",class:"ion-margin-vertical"},{default:R((()=>[A(Ye,{modelValue:ee.guardianPresent,"onUpdate:modelValue":t[2]||(t[2]=e=>ee.guardianPresent=e),inline:""},null,8,["modelValue"])])),_:1}),W.value?(T(),C(S,{key:0},[A(M(f),{size:"6",class:"ion-margin-vertical"},{default:R((()=>[A(Ye,{modelValue:ee.isPregnant,"onUpdate:modelValue":t[3]||(t[3]=e=>ee.isPregnant=e),inline:""},null,8,["modelValue"])])),_:1}),A(M(f),{size:"6",class:"ion-margin-vertical"},{default:R((()=>[A(Ye,{modelValue:ee.isBreastfeeding,"onUpdate:modelValue":t[4]||(t[4]=e=>ee.isBreastfeeding=e),inline:""},null,8,["modelValue"])])),_:1})],64)):x("",!0),A(M(f),{size:"6",class:"ion-margin-vertical"},{default:R((()=>[A(Ye,{modelValue:ee.hasContraindications,"onUpdate:modelValue":t[5]||(t[5]=e=>ee.hasContraindications=e),inline:""},null,8,["modelValue"]),ue.value?(T(),E(Dt,{key:0,items:z.value,numberOfColumns:2},{default:R((({entries:e})=>[(T(!0),C(S,null,B(e,(e=>(T(),E(M(_),{lines:"none",key:e.value},{default:R((()=>[A(M(g),null,{default:R((()=>[P(H(e.label),1)])),_:2},1024),A(M(b),{slot:"start",modelValue:e.isChecked,"onUpdate:modelValue":t=>e.isChecked=t},null,8,["modelValue","onUpdate:modelValue"])])),_:2},1024)))),128))])),_:1},8,["items"])):x("",!0)])),_:1}),A(M(f),{class:"ion-margin-vertical",size:"6"},{default:R((()=>[A(Ye,{modelValue:ee.hasSideEffects,"onUpdate:modelValue":t[6]||(t[6]=e=>ee.hasSideEffects=e),inline:""},null,8,["modelValue"]),de.value?(T(),E(Dt,{key:0,items:$.value,numberOfColumns:2},{default:R((({entries:e})=>[(T(!0),C(S,null,B(e,(e=>(T(),E(M(_),{lines:"none",key:e.value},{default:R((()=>[A(M(g),null,{default:R((()=>[P(H(e.label),1)])),_:2},1024),A(M(b),{slot:"start",modelValue:e.isChecked,"onUpdate:modelValue":t=>e.isChecked=t},null,8,["modelValue","onUpdate:modelValue"])])),_:2},1024)))),128))])),_:1},8,["items"])):x("",!0)])),_:1}),A(M(f),{size:"6",class:"ion-margin-vertical"},{default:R((()=>[A(Ce,{modelValue:ee.weight,"onUpdate:modelValue":t[7]||(t[7]=e=>ee.weight=e),form:ee,min:1},null,8,["modelValue","form"])])),_:1}),J.value?(T(),E(M(f),{key:1,size:"6",class:"ion-margin-vertical"},{default:R((()=>[A(Ce,{modelValue:ee.height,"onUpdate:modelValue":t[8]||(t[8]=e=>ee.height=e),form:ee,min:1},null,8,["modelValue","form"])])),_:1})):x("",!0),X.value?x("",!0):(T(),E(M(f),{key:2,class:"ion-margin-vertical",size:J.value?"12":"6"},{default:R((()=>[A(Ne,{modelValue:ee.tbStatus,"onUpdate:modelValue":t[9]||(t[9]=e=>ee.tbStatus=e),options:M(Ie)},null,8,["modelValue","options"])])),_:1},8,["size"])),pe.value?(T(),C(S,{key:3},[A(M(f),{size:"6",class:"ion-margin-vertical"},{default:R((()=>[A(Ve,{modelValue:ee.tbTreatmentStartDate,"onUpdate:modelValue":t[10]||(t[10]=e=>ee.tbTreatmentStartDate=e),form:ee,minDate:M(K),maxDate:M(Q)},null,8,["modelValue","form","minDate","maxDate"])])),_:1}),A(M(f),{size:"6",class:"ion-margin-vertical"},{default:R((()=>[A(Ce,{modelValue:ee.tbTreatmentPeriod,"onUpdate:modelValue":t[11]||(t[11]=e=>ee.tbTreatmentPeriod=e),form:ee,min:1},null,8,["modelValue","form"])])),_:1})],64)):be.value?(T(),C(S,{key:4},[A(M(f),{size:"6",class:"ion-margin-vertical"},{default:R((()=>[A(Ye,{modelValue:ee.cxrResult,"onUpdate:modelValue":t[12]||(t[12]=e=>ee.cxrResult=e),"custom-options":_e},null,8,["modelValue"])])),_:1}),A(M(f),{size:"6",class:"ion-margin-vertical"},{default:R((()=>[A(Ye,{modelValue:ee.mwrdResult,"onUpdate:modelValue":t[13]||(t[13]=e=>ee.mwrdResult=e),"custom-options":ye},null,8,["modelValue"])])),_:1})],64)):x("",!0),A(M(f),{size:"6",class:"ion-margin-vertical"},{default:R((()=>[A(Ne,{modelValue:ee.regimen,"onUpdate:modelValue":t[14]||(t[14]=e=>ee.regimen=e),options:G.value},null,8,["modelValue","options"])])),_:1}),M(ne)(Z)?x("",!0):(T(!0),C(S,{key:5},B(Object.values(Z),((e,t)=>(T(),E(M(f),{size:"6",class:"ion-margin-vertical"},{default:R((()=>[A(Ce,{"model-value":e,form:Z,min:1},null,8,["model-value","form"])])),_:2},1024)))),256)),A(M(f),{size:"6",class:"ion-margin-vertical"},{default:R((()=>[A(Ce,{modelValue:ee.totalCPTGiven,"onUpdate:modelValue":t[15]||(t[15]=e=>ee.totalCPTGiven=e),form:ee,min:1},null,8,["modelValue","form"])])),_:1}),A(M(f),{size:"6",class:"ion-margin-vertical"},{default:R((()=>[A(Ne,{modelValue:ee.tbMed,"onUpdate:modelValue":t[16]||(t[16]=e=>ee.tbMed=e),options:M(we)},null,8,["modelValue","options"])])),_:1}),oe.value||le.value?(T(),E(M(f),{key:6,size:"6"},{default:R((()=>[A(Ce,{modelValue:ee.totalIPTGiven,"onUpdate:modelValue":t[17]||(t[17]=e=>ee.totalIPTGiven=e),form:ee,min:1},null,8,["modelValue","form"])])),_:1})):x("",!0),le.value?(T(),E(M(f),{key:7,size:"6"},{default:R((()=>[A(Ce,{modelValue:ee.totalRFPGiven,"onUpdate:modelValue":t[18]||(t[18]=e=>ee.totalRFPGiven=e),form:ee,min:1},null,8,["modelValue","form"])])),_:1})):x("",!0),ie.value?(T(),E(M(f),{key:8,size:"6"},{default:R((()=>[A(Ce,{modelValue:ee.total3HPGiven,"onUpdate:modelValue":t[19]||(t[19]=e=>ee.total3HPGiven=e),form:ee,min:1},null,8,["modelValue","form"])])),_:1})):x("",!0),ie.value||le.value||oe.value?(T(),E(M(f),{key:9,size:"6"},{default:R((()=>[A(Ce,{modelValue:ee.totalPyridoxineGiven,"onUpdate:modelValue":t[20]||(t[20]=e=>ee.totalPyridoxineGiven=e),form:ee,min:1},null,8,["modelValue","form"])])),_:1})):x("",!0),j.value.length>0?(T(),E(M(f),{key:10,size:"6",class:"ion-margin-vertical"},{default:R((()=>[A(Ce,{modelValue:ee.pillCount,"onUpdate:modelValue":t[21]||(t[21]=e=>ee.pillCount=e),form:ee,min:1},null,8,["modelValue","form"])])),_:1})):x("",!0),A(M(f),{size:j.value.length>0?"6":"12",class:"ion-margin-vertical"},{default:R((()=>[A(Ve,{modelValue:ee.nextAppointmentDate,"onUpdate:modelValue":t[22]||(t[22]=e=>ee.nextAppointmentDate=e),form:ee,minDate:ee.visitDate.value,maxDate:Y.value},null,8,["modelValue","form","minDate","maxDate"])])),_:1},8,["size"])])),_:1})])),_:1})])),_:1}),A(M(u),null,{default:R((()=>[A(M(m),null,{default:R((()=>[A(M(p),{color:"primary",onClick:t[23]||(t[23]=e=>M(ke).hide()),slot:"end"},{default:R((()=>[P("Close")])),_:1}),A(M(p),{color:"warning",onClick:Be,slot:"end"},{default:R((()=>[P("Reset")])),_:1}),A(M(p),{color:"success",onClick:Ue,slot:"end"},{default:R((()=>[P("Save")])),_:1})])),_:1})])),_:1})],64))}}),kt=xe(Ot,[["__scopeId","data-v-4c147193"]]),Et=r({props:{patient:{type:Object,required:!0},startDate:{type:String,required:!0}},components:{DataTable:Ue,IonCard:L,IonCardHeader:G,IonCardTitle:z,IonCardContent:$,IonButton:p},setup(e){const t=D([]),a=O((()=>e.patient.getID())),n=y({showIndex:!1,tableCssTheme:"emc-datatable-theme"}),i=D([{label:"Add Visit",action:async()=>{await ke.show(kt,{patient:e.patient})}},{label:"Update Outcome",action:async()=>ke.show(bt,{patient:e.patient})},{label:"Enter VL Results",action:async()=>ke.show(ut,{patient:e.patient})}]),l=t=>{const a="N/A"!==e.startDate?"("+De(t).diff(e.startDate,"months")+"M)":"";return`${Ie(t)} ${a}`},o=D([{path:"visitDate",label:"Visit Date"},{path:"visitBy",label:"Given To"},{path:"weight",label:"Weight (Kg)"},{path:"height",label:"Height (cm)"},{path:"bmi",label:"BMI"},...e.patient.isFemale()?[{path:"pregnant",label:"Preg"},{path:"breastfeeding",label:"B/F"}]:[],{path:"tbStatus",label:"TB Status"},{path:"sideEffects",label:"Side Effects",drillable:!0,formatter:e=>e>0?"Yes":"No"},{path:"regimen",label:"ART Regimen",drillable:!0},{path:"nextAppointment",label:"Next Appointment"},{path:"outcome",label:"Outcome"},{path:"vlResult",label:"Viral Load"}]),r=[{label:"void",icon:j,color:"danger",action:(e,a)=>s(e.visitDate,a,t.value)}],s=async(e,t,n)=>{_e((async i=>{(await ue.getEncounters(a.value,{date:e})).data.forEach((async e=>{await ue.voidEncounter(e.encounter_id,i)})),n.splice(t,1)}),"small-modal")},u=async e=>e.tb_status.match(/Unknown/i)||"Defaulted"===e.outcome?"":me.getCachedConceptName(e.tb_status),d=()=>{te.getPatientVisits(a.value,!0).then((async e=>{t.value=[];for(const n of e){const e=(await be.getCurrentProgramInformation(a.value,n)).data;let i="",o="",r="",s="";if("Defaulted"!==e.outcome){const t=await pe.getFirstValueDatetime(a.value,"appointment date",n);if(t&&(i=Ie(t)),o=await pe.getFirstValueCoded(a.value,"Is patient pregnant",n),r=await pe.getFirstValueCoded(a.value,"Is patient breast feeding",n),"N/A"===e.viral_load){const e=await pe.getFirstObs(a.value,"HIV viral load",n);e&&e.value_text&&e.value_numeric&&(s=1===e.value_numeric?"LDL":e.value_text+e.value_numeric.toString())}else s=e.viral_load}e&&t.value.push({visitDate:l(n),visitBy:e.visit_by.match(/Unk/i)?"":e.visit_by,weight:"Defaulted"===e.outcome?"":e.weight,height:"Defaulted"===e.outcome?"":e.height,bmi:"Defaulted"===e.outcome?"":e.bmi,pregnant:o,breastfeeding:r,tbStatus:await u(e),sideEffects:"Defaulted"===e.outcome?"":e.side_effects,regimen:"Defaulted"===e.outcome?"":e.regimen,nextAppointment:i,outcome:e.outcome.match(/Unk/i)?"":e.outcome,vlResult:s,drugs:e.pills_dispensed})}}))};return Pe.on(Oe.RELOAD_PATIENT_VISIT_DATA,(()=>d())),I((()=>{d()})),{actionButtons:i,tableConfig:n,rowButtons:r,columns:o,rows:t,onDrilldownHandler:async e=>{const t=/regimen/i.test(e.column.path)?(e=>({title:`Drugs dispensed on ${e.row.visitDate}`,columns:[{path:"name",label:"Drug Name"},{path:"quantity",label:"Quantity"},{path:"units",label:"Units"}],rows:e.row.drugs.map((e=>({name:e[0],quantity:e[1],units:"tab (s)"})))}))(e):(e=>({title:`Side effects noted on ${e.row.visitDate}`,rows:e.row.sideEffects.map((e=>({sideEffect:e}))),columns:[{path:"sideEffect",label:"Name of Side Effect"}]}))(e);ne(t.rows)||await ke.show(Ee,t)}}}}),xt=(e=>(J("data-v-e925dcea"),e=e(),W(),e))((()=>k("span",{class:"title"},"Summary of Visits",-1))),Ft={class:"ion-float-right ion-margin-end ion-margin-bottom"};const Ht=xe(Et,[["render",function(e,t,a,n,i,l){const o=N("ion-icon"),r=N("ion-button"),s=N("ion-card-title"),u=N("ion-card-header"),d=N("data-table"),c=N("ion-card-content"),m=N("ion-card");return T(),E(m,{class:"his-card",style:{padding:"0 !important"}},{default:R((()=>[A(u,null,{default:R((()=>[A(s,null,{default:R((()=>[xt,k("span",Ft,[(T(!0),C(S,null,B(e.actionButtons,(e=>(T(),E(r,{key:e.label,onClick:e.action,color:e.color||"primary"},{default:R((()=>[e.icon?(T(),E(o,{key:0,icon:e.icon,class:"ion-margin-right"},null,8,["icon"])):x("",!0),P(" "+H(e.label),1)])),_:2},1032,["onClick","color"])))),128))])])),_:1})])),_:1}),A(c,{class:"ion-no-padding",style:{"min-height":"45vh"}},{default:R((()=>[A(d,{rows:e.rows,columns:e.columns,"row-actions-buttons":e.rowButtons,config:{showSearchField:!1},color:"light",onDrilldown:e.onDrilldownHandler},null,8,["rows","columns","row-actions-buttons","onDrilldown"])])),_:1})])),_:1})}],["__scopeId","data-v-e925dcea"]]),Ut=r({components:{MultiColumnView:Dt,IonList:Y,IonItem:_},props:{patient:{type:Object,required:!0},artStartDate:{type:String,required:!0},guardians:{type:Array,default:()=>[]}},emits:["updatePatient","updateARVNumber","updateGuardian"],setup(e,{emit:t}){const a=D(0),n=D(0),i=D(0),o=D(""),r=D(""),s=D(""),u=D(""),d=D(""),c=D(""),m=D(""),p=D(""),g=D(""),v=D(""),h=D(""),f=e=>e.other&&"function"==typeof e.other.onClickHandler,b=O((()=>!ne(e.guardians))),_=()=>{const t=e.patient.getBirthdate(),a="N/A"!==e.artStartDate?De(e.artStartDate).diff(t,"years"):"";return`${l.toStandardHisDisplayFormat(t)} (${a})`},y=(t=!1)=>{t&&de.invalidate("PATIENT_LAB_ORDERS"),de.get("PATIENT_LAB_ORDERS",{patientID:e.patient.getID()}).then((e=>{const t=e.data.reduce(((e,t)=>{const a=t.tests.filter((e=>e.name.match(/hiv/i)&&!ne(e.result))).map((e=>e.result));return e.concat(a.reduce(((e,t)=>e.concat(t)),[]))}),[]).sort(((e,t)=>new Date(e.date)>new Date(t.date)?-1:1));v.value=ne(t)?"":`${t[0].value_modifier}${t[0].value} (${l.toStandardHisDisplayFormat(t[0].date)})`}))},w=()=>({onClickHandler(){Q.push(`/patient/reception/${e.patient.getID()}/false`)}}),V=()=>({onClickHandler:()=>t("updatePatient")}),N=O((()=>[{label:"ARV Number",value:e.patient.getArvNumber(),other:{onClickHandler:()=>t("updateARVNumber")}},{label:"MW National ID",value:e.patient.getMWNationalID(),other:V()},{label:"Name",value:e.patient.getGivenName()+" "+e.patient.getFamilyName(),other:V()},{label:"DOB and Age at Initiation",value:_(),other:V()},{label:"Sex",value:et(e.patient.getGender()),other:V()},{label:"Location",value:e.patient.getCurrentVillage(),other:V()},{label:"Landmark",value:e.patient.getClosestLandmark(),other:V()},{label:"Phone Number",value:e.patient.getPhoneNumber(),other:V()},{label:"Guardian",value:b.value?e.guardians.map((e=>`${e.name} (${e.relationshipType})`)).join(","):"Add",other:{onClickHandler:()=>t("updateGuardian")}},{label:"Agrees to follow up",value:d.value,other:w()},{label:"Date of starting first line ARV Regimen",value:e.artStartDate,other:w()},{label:"Initial Weight (KG)",value:a.value,other:w()},{label:"Initial Height (CM)",value:n.value,other:w()},{label:"Initial BMI",value:i.value,other:w()},{label:"Initial TB Status",value:o.value,other:w()},{label:"Pregnant at Initiation",value:s.value,other:w()},{label:"Breastfeeding at Initiation",value:r.value,other:w()},{label:"Latest VL Result and Result Date",value:v.value,other:{onClickHandler:()=>ke.show(ut,{patient:e.patient})}},{label:"TI",value:u.value,other:w()},{label:"HIV test place",value:p.value,other:w()},{label:"HIV test date",value:m.value,other:w()},{label:"WHO stage",value:h.value,other:w()},{label:"Reason for starting ART",value:c.value,other:w()},{label:"Staging codition",value:g.value,other:w()}])),C=()=>{e.patient.getInitialWeight().then((e=>a.value=e)),e.patient.getInitialHeight().then((e=>n.value=e)),e.patient.getInitialBMI().then((e=>i.value=e)),e.patient.getInitialTBStatus().then((e=>o.value=e)),e.patient.hasPregnancyAtARTInitiation().then((e=>s.value=e)),e.patient.breastFeedingAtARTInitiation().then((e=>r.value=e)),e.patient.everReceivedART().then((e=>u.value=e)),e.patient.agreesToFollowUp().then((e=>d.value=e)),e.patient.getReasonForStartingART().then((e=>c.value=e)),e.patient.getHIVTestLocation().then((e=>p.value=e)),e.patient.getStagingCondition().then((e=>g.value=e)),e.patient.getWhoStage().then((e=>h.value=e)),(async()=>{const t=await e.patient.getHIVTestDate();t&&(m.value=l.toStandardHisDisplayFormat(t))})()};return I((()=>{C(),y(),Pe.on(Oe.RELOAD_LATEST_VL_RESULT,(()=>y(!0))),Pe.on(Oe.RELOAD_STAGING_INFORMATION,(()=>C()))})),{patientInfo:N,onClickHandler:async e=>{var t;f(e)&&await(null===(t=e.other)||void 0===t?void 0:t.onClickHandler())},clickable:f}}}),Bt={style:{width:"100%",display:"flex",justifyContent:"space-between"}},qt={key:0},Mt={key:1},Lt={key:2},Gt={key:3};const zt=xe(Ut,[["render",function(e,t,a,n,i,l){const o=N("ion-item"),r=N("ion-list"),s=N("multi-column-view");return T(),E(s,{items:e.patientInfo,numberOfColumns:3},{default:R((({entries:t})=>[A(r,{class:"his-card ion-margin-end"},{default:R((()=>[(T(!0),C(S,null,B(t,((a,n)=>(T(),E(o,{key:n,lines:n===t.length-1?"none":void 0,button:e.clickable(a),onClick:t=>e.onClickHandler(a)},{default:R((()=>[k("div",Bt,[a.label?(T(),C("span",qt,H(a.label)+": ",1)):(T(),C("span",Mt)),e.clickable(a)?(T(),C("span",Lt,[k("a",null,[k("b",null,H(a.value||"N/A"),1)])])):(T(),C("span",Gt,[k("b",null,H(a.value||"N/A"),1)]))])])),_:2},1032,["lines","button","onClick"])))),128))])),_:2},1024)])),_:1},8,["items"])}],["__scopeId","data-v-c301d4d5"]]),$t=r({components:{IonGrid:v,IonRow:h,IonCol:f,TextInput:Be,DateInput:Ve,SelectInput:Ne},props:{patientService:{type:Object,required:!0}},setup(e){const t=D(!1),a=O((()=>/Unknown/i.test(e.patientService.getMWNationalID())?"":e.patientService.getMWNationalID())),n=y({givenName:{label:"First Name",value:e.patientService.getGivenName(),placeholder:"First Name",required:!0,validation:e=>je(e)},familyName:{label:"last Name",value:e.patientService.getFamilyName(),placeholder:"Last Name",required:!0,validation:e=>je(e)},middleName:{label:"middle Name",value:e.patientService.getMiddleName(),placeholder:"middle Name",validation:e=>!!e&&je(e)},nationalId:{label:"Malawi National ID Number",value:a.value,placeholder:"Enter Malawi National ID Number",validation:e=>e&&e.label?Je(e):null},gender:{value:e.patientService.getGender(),required:!0,label:"Gender",placeholder:"select gender"},birthdate:{value:e.patientService.getBirthdate(),label:"Date of Birth",placeholder:"Date of Birth",required:!0},cellPhoneNumber:{value:e.patientService.getPhoneNumber(),required:!0,label:"Cellphone Number",placeholder:"cellphone number e.g. 0991234567",validation:async e=>!("Unknown"===e.value||"N/A"===e.value)&&We(e)},homeVillage:{value:e.patientService.getCurrentVillage(),label:"Home Village",placeholder:"Home Village",required:!0},landmark:{value:e.patientService.getClosestLandmark(),label:"Landmark",placeholder:"Closest Landmark or Plot Number",required:!0}}),i=async e=>{var t,a,n,i,l,o,r,s;let u,d;try{var c;null!=e&&null!==(c=e.other)&&void 0!==c&&c.traditional_authority_id&&(u=await K.getTraditionalAuthorityById(e.other.traditional_authority_id)),u&&(d=await K.getDistrictByID(u.district_id))}catch(m){He("Unable to resolve patient address. Saving using default address"),console.error(m)}return{home_district:null!==(t=null===(a=d)||void 0===a?void 0:a.name)&&void 0!==t?t:"N/A",home_traditional_authority:null!==(n=null===(i=u)||void 0===i?void 0:i.name)&&void 0!==n?n:"N/A",home_village:(null==e?void 0:e.label)||"N/A",current_district:null!==(l=null===(o=d)||void 0===o?void 0:o.name)&&void 0!==l?l:"N/A",current_traditional_authority:null!==(r=null===(s=u)||void 0===s?void 0:s.name)&&void 0!==r?r:"N/A",current_village:(null==e?void 0:e.label)||"N/A"}};return{today:ye,patient:n,getLandmarks:Me,genderOptions:Te,isBirthdateEstimated:t,modal:ke,onFinish:async()=>ce(n,(async t=>{const n={};if(t.givenName!==e.patientService.getGivenName()&&(n.given_name=t.givenName),t.familyName!==e.patientService.getFamilyName()&&(n.family_name=t.familyName),t.middleName!==e.patientService.getMiddleName()&&(n.middle_name=t.middleName),t.birthdate!==e.patientService.getBirthdate()&&(n.birthdate=t.birthdate),t.gender.value!==e.patientService.getGender()&&(n.gender=t.gender.value),t.cellPhoneNumber!==e.patientService.getPhoneNumber()&&(n.cell_phone_number=t.cellPhoneNumber),t.landmark.label!==e.patientService.getClosestLandmark()&&(n.landmark=t.landmark.label),t.homeVillage!==e.patientService.getCurrentVillage()&&Object.assign(n,{...n,...await i(t.homeVillage)}),!ne(n)){const t=new tt;t.setPersonID(e.patientService.getID()),await t.updatePerson(n)}t.nationalId!==a.value&&await e.patientService.updateMWNationalId(t.nationalId),await ke.hide(),Pe.emit(Oe.RELOAD_PATIENT_DATA)})),getVillagesByName:Le}}});const jt=xe($t,[["render",function(e,t,a,n,i,l){const o=N("ion-title"),r=N("ion-icon"),s=N("ion-button"),u=N("ion-buttons"),d=N("ion-toolbar"),c=N("ion-header"),m=N("TextInput"),p=N("ion-col"),g=N("SelectInput"),v=N("DateInput"),h=N("ion-row"),f=N("ion-grid"),b=N("ion-content"),_=N("ion-footer");return T(),C(S,null,[A(c,null,{default:R((()=>[A(d,null,{default:R((()=>[A(o,null,{default:R((()=>[P("Edit Patient Demographics")])),_:1}),A(u,{slot:"end"},{default:R((()=>[A(s,{onClick:t[0]||(t[0]=t=>e.modal.hide())},{default:R((()=>[A(r,{slot:"icon-only",name:"close"})])),_:1})])),_:1})])),_:1})])),_:1}),A(b,{class:"ion-padding"},{default:R((()=>[A(f,null,{default:R((()=>[A(h,null,{default:R((()=>[A(p,{size:"4",class:"ion-margin-top ion-margin-bottom"},{default:R((()=>[A(m,{modelValue:e.patient.givenName,"onUpdate:modelValue":t[1]||(t[1]=t=>e.patient.givenName=t)},null,8,["modelValue"])])),_:1}),A(p,{size:"4",class:"ion-margin-top ion-margin-bottom"},{default:R((()=>[A(m,{modelValue:e.patient.middleName,"onUpdate:modelValue":t[2]||(t[2]=t=>e.patient.middleName=t)},null,8,["modelValue"])])),_:1}),A(p,{size:"4",class:"ion-margin-top ion-margin-bottom"},{default:R((()=>[A(m,{modelValue:e.patient.familyName,"onUpdate:modelValue":t[3]||(t[3]=t=>e.patient.familyName=t)},null,8,["modelValue"])])),_:1}),A(p,{size:"6",class:"ion-margin-top ion-margin-bottom"},{default:R((()=>[A(m,{modelValue:e.patient.nationalId,"onUpdate:modelValue":t[4]||(t[4]=t=>e.patient.nationalId=t)},null,8,["modelValue"])])),_:1}),A(p,{size:"6",class:"ion-margin-top ion-margin-bottom"},{default:R((()=>[A(g,{modelValue:e.patient.gender,"onUpdate:modelValue":t[5]||(t[5]=t=>e.patient.gender=t),options:e.genderOptions},null,8,["modelValue","options"])])),_:1}),A(p,{size:"12",class:"ion-margin-top ion-margin-bottom"},{default:R((()=>[A(v,{modelValue:e.patient.birthdate,"onUpdate:modelValue":t[6]||(t[6]=t=>e.patient.birthdate=t),allowEstimation:!0,estimationLabel:"Estimate Age",minDate:"1900-01-01",maxDate:e.today,onIsEstimated:t[7]||(t[7]=t=>e.isBirthdateEstimated=t)},null,8,["modelValue","maxDate"])])),_:1}),A(p,{size:"12",class:"ion-margin-top ion-margin-bottom"},{default:R((()=>[A(m,{modelValue:e.patient.cellPhoneNumber,"onUpdate:modelValue":t[8]||(t[8]=t=>e.patient.cellPhoneNumber=t),allowUnknown:""},null,8,["modelValue"])])),_:1}),A(p,{size:"12",class:"ion-margin-top ion-margin-bottom"},{default:R((()=>[A(g,{modelValue:e.patient.homeVillage,"onUpdate:modelValue":t[9]||(t[9]=t=>e.patient.homeVillage=t),asyncOptions:e.getVillagesByName,allowCustom:""},null,8,["modelValue","asyncOptions"])])),_:1}),A(p,{size:"12",class:"ion-margin-top ion-margin-bottom"},{default:R((()=>[A(g,{modelValue:e.patient.landmark,"onUpdate:modelValue":t[10]||(t[10]=t=>e.patient.landmark=t),asyncOptions:e.getLandmarks,allowCustom:""},null,8,["modelValue","asyncOptions"])])),_:1})])),_:1})])),_:1})])),_:1}),A(_,null,{default:R((()=>[A(d,null,{default:R((()=>[A(s,{color:"primary",onClick:t[11]||(t[11]=t=>e.modal.hide()),slot:"end"},{default:R((()=>[P("Close")])),_:1}),A(s,{class:"ion-margin-end",color:"success",onClick:e.onFinish,slot:"end"},{default:R((()=>[P("Save")])),_:1},8,["onClick"])])),_:1})])),_:1})],64)}]]),Jt=r({__name:"GuardianDemographics",props:{patientId:{},guardians:{}},setup(e){var t,a;const n=new tt,i=e,l=D(ne(i.guardians)),o=O((()=>(l.value?"Add":"Edit")+" Guardian Demographics")),r=O((()=>(l.value?"Edit":"Add")+" Guardian")),s=D([]),u=null!==(t=null===(a=i.guardians)||void 0===a?void 0:a.map((e=>({label:`${e.name} (${e.relationshipType})`,value:e.name,other:e}))))&&void 0!==t?t:[],d=y({label:"Select Guardian",placeholder:"Select guardian to be edited",value:""}),c=y({givenName:{label:"First Name",value:"",placeholder:"First Name",required:!0,validation:e=>je(e)},familyName:{label:"Last Name",value:"",placeholder:"Last Name",required:!0,validation:e=>je(e)},cellPhoneNumber:{value:"",required:!0,label:"Cellphone Number",validation:async e=>"Unknown"!==e.value&&We(e)},relation:{label:"Select Relationship",placeholder:"Select the relationship between guardian and patient",value:""}});function m(){l.value=!l.value,d.value=""}w((()=>d.value),(e=>{var t,a,n,i,l,o,r,s;c.givenName.value=null!==(t=null==e||null===(a=e.other)||void 0===a?void 0:a.names.given_name)&&void 0!==t?t:"",c.familyName.value=null!==(n=null==e||null===(i=e.other)||void 0===i?void 0:i.names.family_name)&&void 0!==n?n:"",c.cellPhoneNumber.value=null!==(l=null==e||null===(o=e.other)||void 0===o?void 0:o.phoneNumber)&&void 0!==l?l:"",c.relation.value=null!==(r=null==e||null===(s=e.other)||void 0===s?void 0:s.relationshipType)&&void 0!==r?r:""}),{deep:!0,immediate:!0});const p=async()=>ce(c,(async e=>{l.value||ne(d.value)?await async function(e){var t,a;await n.registerGuardian({home_district:"N/A",home_traditional_authority:"N/A",home_village:"N/A",current_district:"N/A",current_traditional_authority:"N/A",current_village:"N/A",middle_name:"",gender:"N/A",birthdate:"N/A",birthdate_estimated:"N/A",landmark:"N/A",relationship:"N/A",patient_type:"",isPatient:!1,patient_id:i.patientId,...e}),await at.createRelation(i.patientId,n.getPersonID(),null!==(t=null===(a=e.relation)||void 0===a?void 0:a.value)&&void 0!==t?t:13)}(e):await async function(e,t){const a=t.names.person_id,n={};if(t.names.given_name!==e.given_name&&(n.given_name=e.given_name),t.names.family_name!==e.family_name&&(n.family_name=e.family_name),t.phoneNumber!==e.cell_phone_number&&(n.cell_phone_number=e.cell_phone_number),!ne(n)){const e=new tt;e.setPersonID(a),await e.updatePerson(n)}var l,o;t.relationshipType!==e.relation.label&&await at.amendRelation(i.patientId,a,t.id,null!==(l=null===(o=e.relation)||void 0===o?void 0:o.value)&&void 0!==l?l:13)}(e,d.value.other),await ke.hide(),Pe.emit(Oe.RELOAD_GUARDIAN_DATA)}),{underscoreKeys:!0});return I((async()=>{const e=(await at.getRelations()).data;s.value=e.map((e=>({label:e.b_is_to_a,value:e.relationship_type_id,other:e})))})),(e,t)=>{const a=N("ion-title"),n=N("ion-icon"),g=N("ion-button"),b=N("ion-buttons"),_=N("ion-toolbar"),D=N("ion-header"),y=N("ion-content"),w=N("ion-footer");return T(),C(S,null,[A(D,null,{default:R((()=>[A(_,null,{default:R((()=>[A(a,null,{default:R((()=>[P(H(o.value),1)])),_:1}),A(b,{slot:"end"},{default:R((()=>[A(g,{onClick:t[0]||(t[0]=e=>M(ke).hide())},{default:R((()=>[A(n,{slot:"icon-only",name:"close"})])),_:1})])),_:1})])),_:1})])),_:1}),A(y,{class:"ion-padding"},{default:R((()=>[A(M(v),null,{default:R((()=>[A(M(h),null,{default:R((()=>[l.value?x("",!0):(T(),E(M(f),{key:0,size:"12",class:"ion-margin-top ion-margin-bottom"},{default:R((()=>[A(Ne,{modelValue:d,"onUpdate:modelValue":t[1]||(t[1]=e=>d=e),options:M(u)},null,8,["modelValue","options"])])),_:1})),d.value||l.value?(T(),C(S,{key:1},[A(M(f),{size:"12",class:"ion-margin-top ion-margin-bottom"},{default:R((()=>[A(Be,{modelValue:c.givenName,"onUpdate:modelValue":t[2]||(t[2]=e=>c.givenName=e)},null,8,["modelValue"])])),_:1}),A(M(f),{size:"12",class:"ion-margin-top ion-margin-bottom"},{default:R((()=>[A(Be,{modelValue:c.familyName,"onUpdate:modelValue":t[3]||(t[3]=e=>c.familyName=e)},null,8,["modelValue"])])),_:1}),A(M(f),{size:"12",class:"ion-margin-top ion-margin-bottom"},{default:R((()=>[A(Be,{modelValue:c.cellPhoneNumber,"onUpdate:modelValue":t[4]||(t[4]=e=>c.cellPhoneNumber=e),allowUnknown:""},null,8,["modelValue"])])),_:1}),A(M(f),{size:"12",class:"ion-margin-top ion-margin-bottom"},{default:R((()=>[A(Ne,{modelValue:c.relation,"onUpdate:modelValue":t[5]||(t[5]=e=>c.relation=e),options:s.value},null,8,["modelValue","options"])])),_:1})],64)):x("",!0)])),_:1})])),_:1})])),_:1}),A(w,null,{default:R((()=>[A(_,null,{default:R((()=>[M(ne)(i.guardians)?x("",!0):(T(),E(g,{key:0,color:"primary",onClick:m,slot:"start"},{default:R((()=>[P(H(r.value),1)])),_:1})),A(g,{color:"primary",onClick:t[6]||(t[6]=e=>M(ke).hide()),slot:"end"},{default:R((()=>[P("Close")])),_:1}),A(g,{class:"ion-margin-end",color:"success",onClick:p,slot:"end"},{default:R((()=>[P("Save")])),_:1})])),_:1})])),_:1})],64)}}}),Wt=r({components:{IonGrid:v,IonRow:h,IonCol:f,TextInput:Be},props:{patient:{type:Object,required:!0}},setup(e){const{facility:t}=X(),a=O((()=>e.patient.getArvNumber())),n=O((()=>!ne(a.value)&&"Unknown"!==a.value)),i=y({arvNumber:{value:n.value?a.value.split("-")[2]:"",label:(n.value?"Edit":"Add New")+" ARV Number",placeholder:"Enter ARV Number",required:!0,validation:async e=>{const n=ze(e,"POSITIVE_INTEGERS");if(null!==n)return n;if(e.value===a.value.split("-")[2])return null;const i=await te.findByOtherID(4,`${t.code}-ARV-${e.value}`);return ne(i)?null:["ARV Number already exists"]}}});return{form:i,modal:ke,arvNumber:a,facility:t,hasValidARVNumber:n,onFinish:async()=>ce(i,(async i=>{i.arvNumber!==a.value.split("-")[2]&&(n.value?await e.patient.updateARVNumber(`${t.code}-ARV-${i.arvNumber}`):await e.patient.createArvNumber(`${t.code}-ARV-${i.arvNumber}`),Pe.emit(Oe.RELOAD_PATIENT_DATA)),await ke.hide()})),voidARV:async()=>{if(await V(`Are you sure you want to void this ARV Number ${a.value}?`)){await nt.show("Voiding ARV Number...");try{await be.voidARVNumber(a.value),await nt.hide(),await ke.hide(),Pe.emit(Oe.RELOAD_PATIENT_DATA)}catch(e){await nt.hide(),console.log(e)}}}}}});const Yt=xe(Wt,[["render",function(e,t,a,n,i,l){const o=N("ion-title"),r=N("ion-icon"),s=N("ion-button"),u=N("ion-buttons"),d=N("ion-toolbar"),c=N("ion-header"),m=N("text-input"),p=N("ion-col"),g=N("ion-row"),v=N("ion-grid"),h=N("ion-content"),f=N("ion-footer");return T(),C(S,null,[A(c,null,{default:R((()=>[A(d,null,{default:R((()=>[A(o,null,{default:R((()=>[P("ARV NUMBER")])),_:1}),A(u,{slot:"end"},{default:R((()=>[A(s,{onClick:t[0]||(t[0]=t=>e.modal.hide())},{default:R((()=>[A(r,{slot:"icon-only",name:"close"})])),_:1})])),_:1})])),_:1})])),_:1}),A(h,{class:"ion-padding"},{default:R((()=>[A(v,null,{default:R((()=>[A(g,null,{default:R((()=>[A(p,null,{default:R((()=>[A(m,{modelValue:e.form.arvNumber,"onUpdate:modelValue":t[1]||(t[1]=t=>e.form.arvNumber=t),form:e.form,prefix:`${e.facility.code}-ARV-`},null,8,["modelValue","form","prefix"])])),_:1})])),_:1})])),_:1})])),_:1}),A(f,{class:"ion-padding-horizontal"},{default:R((()=>[A(d,null,{default:R((()=>[A(s,{color:"primary",onClick:t[2]||(t[2]=t=>e.modal.hide()),slot:"end"},{default:R((()=>[P("Close")])),_:1}),e.hasValidARVNumber?(T(),E(s,{key:0,color:"danger",onClick:e.voidARV,slot:"start"},{default:R((()=>[P("Void ARV Number")])),_:1},8,["onClick"])):x("",!0),A(s,{color:"success",onClick:e.onFinish,slot:"end"},{default:R((()=>[P("Save")])),_:1},8,["onClick"])])),_:1})])),_:1})],64)}]]),Qt=r({components:{VisitsSummary:Ht,InformationHeader:zt},setup(){const e=Z(),t=parseInt(e.params.patientId.toString())||0,a=D(),n=D(""),i=D([]),o=O((()=>!ne(a.value))),r=async()=>{if(t){const e=(await wt.findByID(t)).data;e&&(a.value=new wt(e))}},s=async()=>{i.value=await lt.getGuardianDetails(t)};return Pe.on(Oe.RELOAD_PATIENT_DATA,(async()=>{await r()})),Pe.on(Oe.RELOAD_GUARDIAN_DATA,(async()=>{await s()})),I((async()=>{var e;await r();const t=await(null===(e=a.value)||void 0===e?void 0:e.getARTStartDate());n.value=t?l.toStandardHisDisplayFormat(t):"N/A",await s()})),{patient:a,artStartDate:n,guardians:i,isReady:o,updateDemographics:async e=>{await ke.show(jt,{patientService:a.value,attribute:e})},updateGuardian:async()=>{await ke.show(Jt,{patientId:t,guardians:i.value})},updateARVNumber:async()=>{await ke.show(Yt,{patient:a.value})}}}});t("default",xe(Qt,[["render",function(e,t,a,n,i,l){const o=N("information-header"),r=N("ion-col"),s=N("ion-row"),u=N("visits-summary"),d=N("ion-grid");return e.isReady?(T(),E(d,{key:0,class:"ion-no-margin ion-no-padding"},{default:R((()=>[A(s,null,{default:R((()=>[A(r,{size:"12"},{default:R((()=>[e.patient?(T(),E(o,{key:0,patient:e.patient,guardians:e.guardians,artStartDate:e.artStartDate,onUpdateARVNumber:e.updateARVNumber,onUpdateGuardian:e.updateGuardian,onUpdatePatient:e.updateDemographics},null,8,["patient","guardians","artStartDate","onUpdateARVNumber","onUpdateGuardian","onUpdatePatient"])):x("",!0)])),_:1})])),_:1}),A(s,null,{default:R((()=>[A(r,null,{default:R((()=>[e.patient?(T(),E(u,{key:0,patient:e.patient,startDate:e.artStartDate},null,8,["patient","startDate"])):x("",!0)])),_:1})])),_:1})])),_:1})):x("",!0)}]]))}}}))}();
