System.register(["./index-legacy-e369fbcb.js","./his_date-legacy-a9d1dd77.js"],(function(e,n){"use strict";var a,l,o,t,r,u,i,s,d,m,g,c,v,p,b,k,w,y,U,f,h,x,_,V,I;return{setters:[e=>{a=e.d,l=e.J,o=e.B,t=e.ay,r=e.az,u=e.r,i=e.h,s=e.a6,d=e.i,m=e._,g=e.L,c=e.o,v=e.c,p=e.j,b=e.w,k=e.a,w=e.t,y=e.A,U=e.b,f=e.e,h=e.am,x=e.K,_=e.H,V=e.ap},e=>{I=e.a}],execute:function(){const n=a({name:"NumberInput",props:{modelValue:{type:Object,default:()=>({})},form:{type:Object,default:()=>({})},min:{type:Number,default:null},max:{type:Number,default:null},allowUnknown:{type:Boolean,default:!1}},components:{IonLabel:l,IonInput:o,IonNote:t,IonCheckbox:r},emits:["update:modelValue"],setup(e,{emit:n}){const a=u(!1),l=i({get:()=>e.modelValue,set:e=>n("update:modelValue",e)});return s(a,(e=>{e?(l.value.value="Unknown",l.value.error="",l.value.disabled=!0):(l.value.value="",l.value.disabled=!1)})),s(e.modelValue,(e=>{"Unknown"===e.value?a.value||(a.value=!0):a.value=!1})),d((()=>{"Unknown"!==l.value.value||a.value||(a.value=!0)})),{validate:async()=>{if(l.value.required&&!l.value.value)return l.value.error="This field is required";if(!e.allowUnknown&&"Unknown"===l.value.value||"N/A"===l.value.value)return l.value.error="Unknown is not allowed";if(l.value.validation){const n=await l.value.validation({label:l.value.value,value:l.value.value},e.form);if(n&&n.length)return l.value.error+=n.toString()}return l.value.error=""},model:l,isUnknown:a}}}),J={key:0,class:"text-danger"},R={key:1,class:"ion-float-right ion-margin-end checkbox-label"};e("N",m(n,[["render",function(e,n,a,l,o,t){const r=g("ion-checkbox"),u=g("ion-label"),i=g("ion-input"),s=g("ion-note");return c(),v(x,null,[e.model.label?(c(),p(u,{key:0,class:"ion-padding-bottom bold"},{default:b((()=>[k("span",null,w(e.model.label),1),e.model.required?(c(),v("span",J," *")):y("",!0),e.allowUnknown?(c(),v("span",R,[n[3]||(n[3]=U(" Unknown? ")),f(r,{modelValue:e.isUnknown,"onUpdate:modelValue":n[0]||(n[0]=n=>e.isUnknown=n)},null,8,["modelValue"])])):y("",!0)])),_:1})):y("",!0),f(i,{type:"number",class:h(["ion-margin-top",e.model.error?"box-input-error":"box-input"]),modelValue:e.model.value,"onUpdate:modelValue":n[1]||(n[1]=n=>e.model.value=n),placeholder:e.isUnknown?"Unknown":e.model.placeholder,disabled:e.model.disabled||e.isUnknown,onIonFocus:n[2]||(n[2]=n=>e.model.error=""),onIonBlur:e.validate,min:e.min,max:e.max},null,8,["class","modelValue","placeholder","disabled","onIonBlur","min","max"]),e.model.error?(c(),p(s,{key:1,color:"danger"},{default:b((()=>[U(w(e.model.error),1)])),_:1})):y("",!0)],64)}]]));const $={label:"Unkown",value:"Unkown",other:[{drug_id:1046,drug_name:"Unknown ARV",am:1,pm:0,units:"",frequency:"Daily (QOD)"}]};e("R",class{static getAllArvRegimens(){return _.getJson(`programs/${V}/all_arv_regimens`)}static getRegimens(e){return _.getJson(`programs/${V}/regimens`,{patient_id:e})}static async getRegimensByWeight(e,n=!1){const a=await _.getJson(`programs/${V}/regimens`,{weight:e,tb_dosage:n});return a.ok&&a.data?Object.keys(a.data).map((e=>({label:e,value:e,other:a.data[e]}))).concat($):[$]}static getCustomIngridients(){return _.getJson(`programs/${V}/custom_regimen_ingredients`)}static getCurrentRegimen(e,n=I()){return _.getJson(`programs/${V}/${e}`,{date:n})}static getRegimenExtras(e,n){return _.getJson(`programs/${V}/regimen_extras`,{name:e,weight:n})}})}}}));
