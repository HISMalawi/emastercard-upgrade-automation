import{d as I,J as h,z as _,d3 as $,ap as N,r as R,H as B,a6 as g,a2 as C,L as u,c as d,h as v,w as c,y as m,a as f,ag as D,K as J,o as s,f as A,t as b,b as w,G as l}from"./index-9d5e84a5.js";import{_ as S}from"./_plugin-vue_export-helper-c27b6911.js";import{P as r}from"./index-95d3a767.js";import{a as q}from"./his_date-68cf9d33.js";const O=I({name:"NumberInput",props:{modelValue:{type:Object,default:()=>({})},form:{type:Object,default:()=>({})},min:{type:Number,default:null},max:{type:Number,default:null},allowUnknown:{type:Boolean,default:!1}},components:{IonLabel:h,IonInput:_,IonNote:$,IonCheckbox:N},emits:["update:modelValue"],setup(e,{emit:a}){const o=R(!1),n=B({get:()=>e.modelValue,set:t=>a("update:modelValue",t)}),p=async()=>{if(n.value.required&&!n.value.value)return n.value.error="This field is required";if(!e.allowUnknown&&n.value.value==="Unknown"||n.value.value==="N/A")return n.value.error="Unknown is not allowed";if(n.value.validation){const t=await n.value.validation({label:n.value.value,value:n.value.value},e.form);if(t&&t.length)return n.value.error+=t.toString()}return n.value.error=""};return g(o,t=>{t?(n.value.value="Unknown",n.value.error="",n.value.disabled=!0):(n.value.value="",n.value.disabled=!1)}),g(e.modelValue,t=>{t.value==="Unknown"?o.value||(o.value=!0):o.value=!1}),C(()=>{n.value.value==="Unknown"&&!o.value&&(o.value=!0)}),{validate:p,model:n,isUnknown:o}}}),j={key:0,class:"text-danger"},z={key:1,class:"ion-float-right ion-margin-end checkbox-label"};function E(e,a,o,n,p,t){const k=u("ion-checkbox"),U=u("ion-label"),y=u("ion-input"),V=u("ion-note");return s(),d(J,null,[e.model.label?(s(),v(U,{key:0,class:"ion-padding-bottom bold"},{default:c(()=>[A("span",null,b(e.model.label),1),e.model.required?(s(),d("span",j," *")):m("",!0),e.allowUnknown?(s(),d("span",z,[w(" Unknown? "),f(k,{modelValue:e.isUnknown,"onUpdate:modelValue":a[0]||(a[0]=i=>e.isUnknown=i)},null,8,["modelValue"])])):m("",!0)]),_:1})):m("",!0),f(y,{type:"number",class:D(["ion-margin-top",e.model.error?"box-input-error":"box-input"]),modelValue:e.model.value,"onUpdate:modelValue":a[1]||(a[1]=i=>e.model.value=i),placeholder:e.isUnknown?"Unknown":e.model.placeholder,disabled:e.model.disabled||e.isUnknown,onIonFocus:a[2]||(a[2]=i=>e.model.error=""),onIonBlur:e.validate,min:e.min,max:e.max},null,8,["class","modelValue","placeholder","disabled","onIonBlur","min","max"]),e.model.error?(s(),v(V,{key:1,color:"danger"},{default:c(()=>[w(b(e.model.error),1)]),_:1})):m("",!0)],64)}const P=S(O,[["render",E]]);class T{static getAllArvRegimens(){return l.getJson("programs/".concat(r,"/all_arv_regimens"))}static getRegimens(a){return l.getJson("programs/".concat(r,"/regimens"),{patient_id:a})}static getRegimensByWeight(a,o=!1){return l.getJson("programs/".concat(r,"/regimens"),{weight:a,tb_dosage:o})}static getCustomIngridients(){return l.getJson("programs/".concat(r,"/custom_regimen_ingredients"))}static getCurrentRegimen(a,o=q()){return l.getJson("programs/".concat(r,"/").concat(a),{date:o})}static getRegimenExtras(a,o){return l.getJson("programs/".concat(r,"/regimen_extras"),{name:a,weight:o})}static async setSessionDate(a){const o=await this.getApiDate();if(o){sessionStorage.setItem("apiDate",o),sessionStorage.setItem("sessionDate",a);return}throw"Unable to set api date"}static async getApiDate(){const a=await(await l.getJson("current_time")).data;if(a)return a.date}}export{P as N,T as R};
