import{H as i,ap as a}from"./index-9908b3ca.js";class d{static create(t,e,r){return i.postJson("patient_identifiers",{identifier:r,identifier_type:e,patient_id:t})}static update(t,e){return i.putJson("patient_identifiers/".concat(t),{identifier:e})}async getIdentifierTypes(){const t=await i.getJson("types/patient_identifiers");if(t.ok&&t.data)return t.data;throw new Error(t.errorMessage||"Failed to fetch identifier types")}async getDuplicateIndentifiers(t){const e=await i.getJson("search/identifiers/duplicates",{type_id:t});if(e.ok&&e.data)return e.data;throw new Error(e.errorMessage||"Failed to fetch duplicate identifiers")}async getMultipleIdentifiers(t){const e=await i.getJson("search/identifiers/multiples",{type_id:t});if(e.ok&&e.data)return e.data;throw new Error(e.errorMessage||"Failed to fetch multiple identifiers")}async voidMultipleIdentifiers(t,e,r){const s=await i.void("void_multiple_identifiers",{identifiers:t,reason:e,identifier_type:r});if(!s.ok)throw new Error(s.errorMessage||"Failed to void the ID")}async reassignNPID(t){const e=await i.postJson("/patients/".concat(t,"/npid"),{program_id:a});if(!e.ok)throw new Error(e.errorMessage||"Failed to reassign NPID")}}export{d as P};
