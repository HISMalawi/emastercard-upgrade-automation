import{d as I,J as _,B as $,ay as h,az as R,r as B,h as C,a6 as g,i as J,_ as A,L as d,o as u,c as p,j as v,w as c,a as O,t as f,A as m,b,e as k,am as j,K as q,H as r,ap as s}from"./index-2ad1f2cc.js";import{a as D}from"./his_date-d43cc0fa.js";const E=I({name:"NumberInput",props:{modelValue:{type:Object,default:()=>({})},form:{type:Object,default:()=>({})},min:{type:Number,default:null},max:{type:Number,default:null},allowUnknown:{type:Boolean,default:!1}},components:{IonLabel:_,IonInput:$,IonNote:h,IonCheckbox:R},emits:["update:modelValue"],setup(e,{emit:a}){const o=B(!1),n=C({get:()=>e.modelValue,set:l=>a("update:modelValue",l)}),t=async()=>{if(n.value.required&&!n.value.value)return n.value.error="This field is required";if(!e.allowUnknown&&n.value.value==="Unknown"||n.value.value==="N/A")return n.value.error="Unknown is not allowed";if(n.value.validation){const l=await n.value.validation({label:n.value.value,value:n.value.value},e.form);if(l&&l.length)return n.value.error+=l.toString()}return n.value.error=""};return g(o,l=>{l?(n.value.value="Unknown",n.value.error="",n.value.disabled=!0):(n.value.value="",n.value.disabled=!1)}),g(e.modelValue,l=>{l.value==="Unknown"?o.value||(o.value=!0):o.value=!1}),J(()=>{n.value.value==="Unknown"&&!o.value&&(o.value=!0)}),{validate:t,model:n,isUnknown:o}}}),M={key:0,class:"text-danger"},S={key:1,class:"ion-float-right ion-margin-end checkbox-label"};function z(e,a,o,n,t,l){const U=d("ion-checkbox"),y=d("ion-label"),V=d("ion-input"),N=d("ion-note");return u(),p(q,null,[e.model.label?(u(),v(y,{key:0,class:"ion-padding-bottom bold"},{default:c(()=>[O("span",null,f(e.model.label),1),e.model.required?(u(),p("span",M," *")):m("",!0),e.allowUnknown?(u(),p("span",S,[a[3]||(a[3]=b(" Unknown? ")),k(U,{modelValue:e.isUnknown,"onUpdate:modelValue":a[0]||(a[0]=i=>e.isUnknown=i)},null,8,["modelValue"])])):m("",!0)]),_:1})):m("",!0),k(V,{type:"number",class:j(["ion-margin-top",e.model.error?"box-input-error":"box-input"]),modelValue:e.model.value,"onUpdate:modelValue":a[1]||(a[1]=i=>e.model.value=i),placeholder:e.isUnknown?"Unknown":e.model.placeholder,disabled:e.model.disabled||e.isUnknown,onIonFocus:a[2]||(a[2]=i=>e.model.error=""),onIonBlur:e.validate,min:e.min,max:e.max},null,8,["class","modelValue","placeholder","disabled","onIonBlur","min","max"]),e.model.error?(u(),v(N,{key:1,color:"danger"},{default:c(()=>[b(f(e.model.error),1)]),_:1})):m("",!0)],64)}const K=A(E,[["render",z]]),w={label:"Unkown",value:"Unkown",other:[{drug_id:1046,drug_name:"Unknown ARV",am:1,pm:0,units:"",frequency:"Daily (QOD)"}]};class L{static getAllArvRegimens(){return r.getJson("programs/".concat(s,"/all_arv_regimens"))}static getRegimens(a){return r.getJson("programs/".concat(s,"/regimens"),{patient_id:a})}static async getRegimensByWeight(a,o=!1){const n=await r.getJson("programs/".concat(s,"/regimens"),{weight:a,tb_dosage:o});return n.ok&&n.data?Object.keys(n.data).map(t=>({label:t,value:t,other:n.data[t]})).concat(w):[w]}static getCustomIngridients(){return r.getJson("programs/".concat(s,"/custom_regimen_ingredients"))}static getCurrentRegimen(a,o=D()){return r.getJson("programs/".concat(s,"/").concat(a),{date:o})}static getRegimenExtras(a,o){return r.getJson("programs/".concat(s,"/regimen_extras"),{name:a,weight:o})}}export{K as N,L as R};
